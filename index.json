{
  "api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html": {
    "href": "api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html",
    "title": "Class ApplicationBuilderExtensions | Strade Developer Documentation",
    "keywords": "Class ApplicationBuilderExtensions Inheritance Object ApplicationBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : Strade.Interactions.dll Syntax public static class ApplicationBuilderExtensions Methods | Improve this Doc View Source UseInteractions(IApplicationBuilder) Declaration public static IApplicationBuilder UseInteractions(this IApplicationBuilder applicationBuilder) Parameters Type Name Description IApplicationBuilder applicationBuilder Returns Type Description IApplicationBuilder"
  },
  "api/Microsoft.AspNetCore.Builder.html": {
    "href": "api/Microsoft.AspNetCore.Builder.html",
    "title": "Namespace Microsoft.AspNetCore.Builder | Strade Developer Documentation",
    "keywords": "Namespace Microsoft.AspNetCore.Builder Classes ApplicationBuilderExtensions"
  },
  "api/Microsoft.Extensions.DependencyInjection.AuthenticationBuilderExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.AuthenticationBuilderExtensions.html",
    "title": "Class AuthenticationBuilderExtensions | Strade Developer Documentation",
    "keywords": "Class AuthenticationBuilderExtensions A class that provides extension methods for the AuthenticationBuilder class for adding the DiscordOAuthHandler as an authentication service. Inheritance Object AuthenticationBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : Strade.OAuth2.dll Syntax public static class AuthenticationBuilderExtensions Methods | Improve this Doc View Source AddDiscord(AuthenticationBuilder, Action<DiscordOAuthOptions>) Adds the DiscordOAuthHandler for Oauth2 authentication to the specified authentication builder . Declaration public static AuthenticationBuilder AddDiscord(this AuthenticationBuilder builder, Action<DiscordOAuthOptions> configureOptions) Parameters Type Name Description AuthenticationBuilder builder the builder. Action < DiscordOAuthOptions > configureOptions the options callback used to configure the options. Returns Type Description AuthenticationBuilder the authentication builder instance (same as the passed builder ). | Improve this Doc View Source AddDiscord(AuthenticationBuilder, String, Action<DiscordOAuthOptions>) Adds the DiscordOAuthHandler for Oauth2 authentication to the specified authentication builder . Declaration public static AuthenticationBuilder AddDiscord(this AuthenticationBuilder builder, string displayName, Action<DiscordOAuthOptions> configureOptions) Parameters Type Name Description AuthenticationBuilder builder the builder. String displayName the authentication display name. Action < DiscordOAuthOptions > configureOptions the options callback used to configure the options. Returns Type Description AuthenticationBuilder the authentication builder instance (same as the passed builder )."
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection | Strade Developer Documentation",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes AuthenticationBuilderExtensions A class that provides extension methods for the AuthenticationBuilder class for adding the DiscordOAuthHandler as an authentication service. IServiceCollectionExtensions"
  },
  "api/Microsoft.Extensions.DependencyInjection.IServiceCollectionExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.IServiceCollectionExtensions.html",
    "title": "Class IServiceCollectionExtensions | Strade Developer Documentation",
    "keywords": "Class IServiceCollectionExtensions Inheritance Object IServiceCollectionExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : Strade.Interactions.dll Syntax public static class IServiceCollectionExtensions Methods | Improve this Doc View Source AddInteractions(IServiceCollection, InteractionsServerConfiguration) Declaration public static IServiceCollection AddInteractions(this IServiceCollection services, InteractionsServerConfiguration configuration) Parameters Type Name Description IServiceCollection services InteractionsServerConfiguration configuration Returns Type Description IServiceCollection | Improve this Doc View Source AddInteractions(IServiceCollection, Action<InteractionsServerConfiguration>) Declaration public static IServiceCollection AddInteractions(this IServiceCollection services, Action<InteractionsServerConfiguration> configure) Parameters Type Name Description IServiceCollection services Action < InteractionsServerConfiguration > configure Returns Type Description IServiceCollection"
  },
  "api/Strade.Addons.Cooldown.CooldownAttribute.html": {
    "href": "api/Strade.Addons.Cooldown.CooldownAttribute.html",
    "title": "Class CooldownAttribute | Strade Developer Documentation",
    "keywords": "Class CooldownAttribute An attribute used to limit the number of executions of this module / commands in a certain time. Inheritance Object CooldownAttribute Namespace : Strade.Addons.Cooldown Assembly : Strade.Addons.Cooldown.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = false, Inherited = true)] public class CooldownAttribute : PreconditionAttribute Constructors | Improve this Doc View Source CooldownAttribute(Int32) Initializes a new instance of the CooldownAttribute class. Declaration public CooldownAttribute(int seconds) Parameters Type Name Description Int32 seconds the number of seconds for the period. | Improve this Doc View Source CooldownAttribute(Int32, Int32, Int32, Int32, Int32) Initializes a new instance of the CooldownAttribute class. Declaration public CooldownAttribute(int milliseconds = 0, int seconds = 0, int minutes = 0, int hours = 0, int days = 0) Parameters Type Name Description Int32 milliseconds the number of milliseconds for the period. Int32 seconds the number of seconds for the period. Int32 minutes the number of minutes for the period. Int32 hours the number of hours for the period. Int32 days the number of days for the period. | Improve this Doc View Source CooldownAttribute(TimeSpan) Initializes a new instance of the CooldownAttribute class. Declaration public CooldownAttribute(TimeSpan period) Parameters Type Name Description TimeSpan period the period. Properties | Improve this Doc View Source AllowBypass Gets or sets a value indicating whether the cooldown allows to be bypassed. Declaration public bool AllowBypass { get; set; } Property Value Type Description Boolean a value indicating whether the cooldown allows to be bypassed. | Improve this Doc View Source Context Gets or sets the context the cooldown is valid for. Declaration public CooldownContext Context { get; set; } Property Value Type Description CooldownContext the context the cooldown is valid for. | Improve this Doc View Source Group Gets or sets the group to discriminate cooldowns to. Declaration public string Group { get; set; } Property Value Type Description String the group to discriminate cooldowns to. | Improve this Doc View Source Period Gets the period to limit executions for after the first execution. Declaration public TimeSpan Period { get; } Property Value Type Description TimeSpan the period to limit executions for after the first execution. | Improve this Doc View Source Scope Gets or sets the scope the cooldown limits executions to. Declaration public CooldownScope Scope { get; set; } Property Value Type Description CooldownScope the scope the cooldown limits executions to. Methods | Improve this Doc View Source CreatePrecondition() Declaration public override IPrecondition CreatePrecondition() Returns Type Description IPrecondition"
  },
  "api/Strade.Addons.Cooldown.CooldownContext.html": {
    "href": "api/Strade.Addons.Cooldown.CooldownContext.html",
    "title": "Enum CooldownContext | Strade Developer Documentation",
    "keywords": "Enum CooldownContext A set of different contexts cooldowns can be applied to. Namespace : Strade.Addons.Cooldown Assembly : Strade.Addons.Cooldown.dll Syntax public enum CooldownContext : byte Fields Name Description Command Denotes that the cooldown is command scoped. Global Denotes that the cooldown is globally scoped. Infer Denotes that the callee should infer which context to use. Module Denotes that the cooldown is module scoped. Extension Methods EnumExtensions.GetName<CooldownContext>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Addons.Cooldown.CooldownInformation.html": {
    "href": "api/Strade.Addons.Cooldown.CooldownInformation.html",
    "title": "Struct CooldownInformation | Strade Developer Documentation",
    "keywords": "Struct CooldownInformation Contains information about a cooldown. Implements IEquatable < CooldownInformation > Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Addons.Cooldown Assembly : Strade.Addons.Cooldown.dll Syntax public struct CooldownInformation : IEquatable<CooldownInformation> Constructors | Improve this Doc View Source CooldownInformation(ICommand, TimeSpan, CooldownScope, CooldownContext, Boolean, String) Initializes a new instance of the CooldownInformation struct. Declaration public CooldownInformation(ICommand command, TimeSpan period, CooldownScope scope, CooldownContext context, bool allowBypass = false, string group = null) Parameters Type Name Description ICommand command the command to be limit executions for. TimeSpan period the period after which new executions are allowed after the latest. CooldownScope scope the scope for the cooldown. CooldownContext context the target context for the cooldown. Boolean allowBypass a value indicating whether the cooldown allows to be bypassed. String group the group to discriminate cooldowns to. | Improve this Doc View Source CooldownInformation(IModule, TimeSpan, CooldownScope, CooldownContext, Boolean, String) Initializes a new instance of the CooldownInformation struct. Declaration public CooldownInformation(IModule module, TimeSpan period, CooldownScope scope, CooldownContext context, bool allowBypass = false, string group = null) Parameters Type Name Description IModule module the module to be limit executions for. TimeSpan period the period after which new executions are allowed after the latest. CooldownScope scope the scope for the cooldown. CooldownContext context the target context for the cooldown. Boolean allowBypass a value indicating whether the cooldown allows to be bypassed. String group the group to discriminate cooldowns to. Properties | Improve this Doc View Source AllowsBypass Gets a value indicating whether the cooldown allows to be bypassed. Declaration public bool AllowsBypass { get; } Property Value Type Description Boolean a value indicating whether the cooldown allows to be bypassed. | Improve this Doc View Source Command Gets the command that is targeted by the cooldown; or null if the cooldown does not target a command. Declaration public ICommand? Command { get; } Property Value Type Description Nullable < ICommand > the command that is targeted by the cooldown; or null if the cooldown does not target a command. | Improve this Doc View Source Context Gets the target context Object the cooldown is valid for. Declaration public object Context { get; } Property Value Type Description Object the target context Object the cooldown is valid for. | Improve this Doc View Source ContextType Gets the context the cooldown is valid for. Declaration public CooldownContext ContextType { get; } Property Value Type Description CooldownContext the context the cooldown is valid for. | Improve this Doc View Source Group Gets the group to discriminate cooldowns to. Declaration public string Group { get; } Property Value Type Description String the group to discriminate cooldowns to. | Improve this Doc View Source Module Gets the module that is targeted by the cooldown; or null if the cooldown does not target a module. Declaration public IModule? Module { get; } Property Value Type Description Nullable < IModule > the module that is targeted by the cooldown; or null if the cooldown does not target a module. | Improve this Doc View Source Period Gets the period after which new executions are allowed after the latest. Declaration public TimeSpan Period { get; } Property Value Type Description TimeSpan the period after which new executions are allowed after the latest. | Improve this Doc View Source Scope Gets the scope the cooldown limits executions to. Declaration public CooldownScope Scope { get; } Property Value Type Description CooldownScope the scope the cooldown limits executions to. Methods | Improve this Doc View Source Equals(CooldownInformation) Declaration public bool Equals(CooldownInformation other) Parameters Type Name Description CooldownInformation other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(CooldownInformation, CooldownInformation) Declaration public static bool operator ==(CooldownInformation left, CooldownInformation right) Parameters Type Name Description CooldownInformation left CooldownInformation right Returns Type Description Boolean | Improve this Doc View Source Inequality(CooldownInformation, CooldownInformation) Declaration public static bool operator !=(CooldownInformation left, CooldownInformation right) Parameters Type Name Description CooldownInformation left CooldownInformation right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Addons.Cooldown.CooldownPrecondition.html": {
    "href": "api/Strade.Addons.Cooldown.CooldownPrecondition.html",
    "title": "Class CooldownPrecondition | Strade Developer Documentation",
    "keywords": "Class CooldownPrecondition The precondition for cooldowns. Inheritance Object CooldownPrecondition Namespace : Strade.Addons.Cooldown Assembly : Strade.Addons.Cooldown.dll Syntax public class CooldownPrecondition : IPrecondition Remarks The precondition expects the module's service providers have a registration for the ICooldownService service. Constructors | Improve this Doc View Source CooldownPrecondition(TimeSpan, CooldownScope, CooldownContext, Boolean, String) Initializes a new instance of the CooldownPrecondition class. Declaration public CooldownPrecondition(TimeSpan period, CooldownScope scope, CooldownContext context, bool allowBypass = false, string group = null) Parameters Type Name Description TimeSpan period the period to limit executions for after the first execution. CooldownScope scope the scope the cooldown limits executions to. CooldownContext context the context the cooldown is valid for. Boolean allowBypass a value indicating whether the cooldown allows to be bypassed. String group the group to discriminate cooldowns to. Properties | Improve this Doc View Source AllowBypass Gets a value indicating whether the cooldown allows to be bypassed. Declaration public bool AllowBypass { get; } Property Value Type Description Boolean a value indicating whether the cooldown allows to be bypassed. | Improve this Doc View Source Context Gets the context the cooldown is valid for. Declaration public CooldownContext Context { get; } Property Value Type Description CooldownContext the context the cooldown is valid for. | Improve this Doc View Source Group Gets the group to discriminate cooldowns to. Declaration public string Group { get; } Property Value Type Description String the group to discriminate cooldowns to. | Improve this Doc View Source Period Gets the period to limit executions for after the first execution. Declaration public TimeSpan Period { get; } Property Value Type Description TimeSpan the period to limit executions for after the first execution. | Improve this Doc View Source Scope Gets the scope the cooldown limits executions to. Declaration public CooldownScope Scope { get; } Property Value Type Description CooldownScope the scope the cooldown limits executions to. Methods | Improve this Doc View Source CheckAsync(CommandContext, ICommand, CancellationToken) Declaration public ValueTask<PreconditionResult> CheckAsync(CommandContext commandContext, ICommand command, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext commandContext ICommand command CancellationToken cancellationToken Returns Type Description ValueTask < PreconditionResult >"
  },
  "api/Strade.Addons.Cooldown.CooldownResult.html": {
    "href": "api/Strade.Addons.Cooldown.CooldownResult.html",
    "title": "Struct CooldownResult | Strade Developer Documentation",
    "keywords": "Struct CooldownResult Represents a cooldown result. Implements IEquatable < CooldownResult > Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Addons.Cooldown Assembly : Strade.Addons.Cooldown.dll Syntax public struct CooldownResult : IEquatable<CooldownResult> Constructors | Improve this Doc View Source CooldownResult(Object, DateTimeOffset) Initializes a new instance of the CooldownResult struct. Declaration public CooldownResult(object context, DateTimeOffset until) Parameters Type Name Description Object context the context the cooldown was triggered for; or null if the cooldown was globally scoped or not triggered. DateTimeOffset until the date time until which the cooldown is valid; or null if the cooldown was not triggered. Properties | Improve this Doc View Source Context Gets the context the cooldown was triggered for; or null if the cooldown was globally scoped or not triggered. Declaration public object Context { get; } Property Value Type Description Object the context the cooldown was triggered for; or null if the cooldown was globally scoped or not triggered. | Improve this Doc View Source IsCooldowned Gets a value indicating whether the cooldown was triggered for the current Context . Declaration public bool IsCooldowned { get; } Property Value Type Description Boolean a value indicating whether the cooldown was triggered for the current Context . | Improve this Doc View Source Until Gets the date time until which the cooldown is valid; or null if the cooldown was not triggered. Declaration public DateTimeOffset? Until { get; } Property Value Type Description Nullable < DateTimeOffset > the date time until which the cooldown is valid; or null if the cooldown was not triggered. Methods | Improve this Doc View Source Equals(CooldownResult) Declaration public bool Equals(CooldownResult other) Parameters Type Name Description CooldownResult other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(CooldownResult, CooldownResult) Declaration public static bool operator ==(CooldownResult left, CooldownResult right) Parameters Type Name Description CooldownResult left CooldownResult right Returns Type Description Boolean | Improve this Doc View Source Inequality(CooldownResult, CooldownResult) Declaration public static bool operator !=(CooldownResult left, CooldownResult right) Parameters Type Name Description CooldownResult left CooldownResult right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Addons.Cooldown.CooldownScope.html": {
    "href": "api/Strade.Addons.Cooldown.CooldownScope.html",
    "title": "Enum CooldownScope | Strade Developer Documentation",
    "keywords": "Enum CooldownScope A set of scopes where a cooldown can be scoped to. Namespace : Strade.Addons.Cooldown Assembly : Strade.Addons.Cooldown.dll Syntax public enum CooldownScope : byte Fields Name Description Global Denotes that the cooldown is not scoped and is valid globally. Guild Denotes that the cooldown is scoped to the current guild. Member Denotes that the cooldown is scoped to the calling member, only allowed in guild contexts. MemberOrUser Denotes that the cooldown is scoped to either the member or the user, depending on the calling context. User Denotes that the cooldown is scoped to the calling user. Extension Methods EnumExtensions.GetName<CooldownScope>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Addons.Cooldown.CooldownService.html": {
    "href": "api/Strade.Addons.Cooldown.CooldownService.html",
    "title": "Class CooldownService | Strade Developer Documentation",
    "keywords": "Class CooldownService A service used to apply cooldowns to commands. Inheritance Object CooldownService Implements ICooldownService Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Addons.Cooldown Assembly : Strade.Addons.Cooldown.dll Syntax public class CooldownService : ICooldownService Constructors | Improve this Doc View Source CooldownService(Nullable<ILogger>) Initializes a new instance of the CooldownService class. Declaration public CooldownService(ILogger? logger = default(ILogger? )) Parameters Type Name Description Nullable < ILogger > logger the logger to use for logging; or null to disable logging. Methods | Improve this Doc View Source GetCooldown(CooldownInformation, Member, Boolean) Gets the cooldown result for the specified cooldownInformation and member . Declaration public CooldownResult GetCooldown(CooldownInformation cooldownInformation, Member member, bool affectState = true) Parameters Type Name Description CooldownInformation cooldownInformation the cooldown information. Member member the calling member. Boolean affectState a value indicating whether to advance the last execution time of the cooldown bucket, if true the state will be affected, if false then the state will not be affected and the method stays pure. Returns Type Description CooldownResult the cooldown result. | Improve this Doc View Source GetCooldown(CooldownInformation, User, Boolean) Gets the cooldown result for the specified cooldownInformation and user . Declaration public CooldownResult GetCooldown(CooldownInformation cooldownInformation, User user, bool affectState = true) Parameters Type Name Description CooldownInformation cooldownInformation the cooldown information. User user the calling user. Boolean affectState a value indicating whether to advance the last execution time of the cooldown bucket, if true the state will be affected, if false then the state will not be affected and the method stays pure. Returns Type Description CooldownResult the cooldown result. Explicit Interface Implementations | Improve this Doc View Source ICooldownService.GetCooldownAsync(CooldownInformation, Member, Boolean, CancellationToken) Declaration ValueTask<CooldownResult> ICooldownService.GetCooldownAsync(CooldownInformation cooldownInformation, Member member, bool affectState, CancellationToken cancellationToken) Parameters Type Name Description CooldownInformation cooldownInformation Member member Boolean affectState CancellationToken cancellationToken Returns Type Description ValueTask < CooldownResult > | Improve this Doc View Source ICooldownService.GetCooldownAsync(CooldownInformation, User, Boolean, CancellationToken) Declaration ValueTask<CooldownResult> ICooldownService.GetCooldownAsync(CooldownInformation cooldownInformation, User user, bool affectState, CancellationToken cancellationToken) Parameters Type Name Description CooldownInformation cooldownInformation User user Boolean affectState CancellationToken cancellationToken Returns Type Description ValueTask < CooldownResult > Implements ICooldownService"
  },
  "api/Strade.Addons.Cooldown.html": {
    "href": "api/Strade.Addons.Cooldown.html",
    "title": "Namespace Strade.Addons.Cooldown | Strade Developer Documentation",
    "keywords": "Namespace Strade.Addons.Cooldown Classes CooldownAttribute An attribute used to limit the number of executions of this module / commands in a certain time. CooldownPrecondition The precondition for cooldowns. CooldownService A service used to apply cooldowns to commands. Structs CooldownInformation Contains information about a cooldown. CooldownResult Represents a cooldown result. Interfaces ICooldownService A service used to apply cooldowns to commands. Enums CooldownContext A set of different contexts cooldowns can be applied to. CooldownScope A set of scopes where a cooldown can be scoped to."
  },
  "api/Strade.Addons.Cooldown.ICooldownService.html": {
    "href": "api/Strade.Addons.Cooldown.ICooldownService.html",
    "title": "Interface ICooldownService | Strade Developer Documentation",
    "keywords": "Interface ICooldownService A service used to apply cooldowns to commands. Namespace : Strade.Addons.Cooldown Assembly : Strade.Addons.Cooldown.dll Syntax public interface ICooldownService Methods | Improve this Doc View Source GetCooldownAsync(CooldownInformation, Member, Boolean, CancellationToken) Gets the cooldown result for the specified cooldownInformation and member asynchronously. Declaration ValueTask<CooldownResult> GetCooldownAsync(CooldownInformation cooldownInformation, Member member, bool affectState = true, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CooldownInformation cooldownInformation the cooldown information. Member member the calling member. Boolean affectState a value indicating whether to advance the last execution time of the cooldown bucket, if true the state will be affected, if false then the state will not be affected and the method stays pure. CancellationToken cancellationToken Returns Type Description ValueTask < CooldownResult > a task that represents the asynchronous operation. The task result is the cooldown result. | Improve this Doc View Source GetCooldownAsync(CooldownInformation, User, Boolean, CancellationToken) Gets the cooldown result for the specified cooldownInformation and user asynchronously. Declaration ValueTask<CooldownResult> GetCooldownAsync(CooldownInformation cooldownInformation, User user, bool affectState = true, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CooldownInformation cooldownInformation the cooldown information. User user the calling user. Boolean affectState a value indicating whether to advance the last execution time of the cooldown bucket, if true the state will be affected, if false then the state will not be affected and the method stays pure. CancellationToken cancellationToken Returns Type Description ValueTask < CooldownResult > a task that represents the asynchronous operation. The task result is the cooldown result."
  },
  "api/Strade.Addons.Emojis.SourceGenerator.EmojiSourceGenerator.html": {
    "href": "api/Strade.Addons.Emojis.SourceGenerator.EmojiSourceGenerator.html",
    "title": "Class EmojiSourceGenerator | Strade Developer Documentation",
    "keywords": "Class EmojiSourceGenerator Inheritance Object EmojiSourceGenerator Implements ISourceGenerator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Addons.Emojis.SourceGenerator Assembly : Strade.Addons.Emojis.SourceGenerator.dll Syntax [Generator] public sealed class EmojiSourceGenerator : ISourceGenerator Methods | Improve this Doc View Source Execute(GeneratorExecutionContext) Declaration public void Execute(GeneratorExecutionContext context) Parameters Type Name Description Microsoft.CodeAnalysis.GeneratorExecutionContext context | Improve this Doc View Source Initialize(GeneratorInitializationContext) Declaration public void Initialize(GeneratorInitializationContext context) Parameters Type Name Description Microsoft.CodeAnalysis.GeneratorInitializationContext context Implements Microsoft.CodeAnalysis.ISourceGenerator"
  },
  "api/Strade.Addons.Emojis.SourceGenerator.ExportedEmojiData.html": {
    "href": "api/Strade.Addons.Emojis.SourceGenerator.ExportedEmojiData.html",
    "title": "Class ExportedEmojiData | Strade Developer Documentation",
    "keywords": "Class ExportedEmojiData Inheritance Object ExportedEmojiData Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Addons.Emojis.SourceGenerator Assembly : Strade.Addons.Emojis.SourceGenerator.dll Syntax public sealed class ExportedEmojiData Properties | Improve this Doc View Source AssetFileName Declaration [JsonProperty(\"assetFileName\")] public string AssetFileName { get; set; } Property Value Type Description String | Improve this Doc View Source AssetFileUri Declaration [JsonProperty(\"assetFileUri\")] public string AssetFileUri { get; set; } Property Value Type Description String | Improve this Doc View Source Codepoints Declaration [JsonProperty(\"codepoints\")] public ImmutableArray<string> Codepoints { get; set; } Property Value Type Description ImmutableArray < String > | Improve this Doc View Source ColonNames Declaration [JsonProperty(\"colonNames\")] public ImmutableArray<string> ColonNames { get; set; } Property Value Type Description ImmutableArray < String > | Improve this Doc View Source Components Declaration [JsonProperty(\"components\")] public int Components { get; set; } Property Value Type Description Int32 | Improve this Doc View Source EntryName Declaration [JsonProperty(\"entryName\")] public string EntryName { get; set; } Property Value Type Description String | Improve this Doc View Source Group Declaration [JsonProperty(\"group\")] public string Group { get; set; } Property Value Type Description String | Improve this Doc View Source GroupOrdinal Declaration [JsonProperty(\"groupOrdinal\")] public int GroupOrdinal { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Hash Declaration [JsonProperty(\"hash\")] public string Hash { get; set; } Property Value Type Description String | Improve this Doc View Source IsMapped Declaration [JsonProperty(\"mapped\")] public bool IsMapped { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Length Declaration [JsonProperty(\"length\")] public int Length { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Names Declaration [JsonProperty(\"names\")] public ImmutableArray<string> Names { get; set; } Property Value Type Description ImmutableArray < String > | Improve this Doc View Source NativeName Declaration [JsonProperty(\"nativeName\")] public string NativeName { get; set; } Property Value Type Description String | Improve this Doc View Source Ordinal Declaration [JsonProperty(\"ordinal\")] public int Ordinal { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Surrogates Declaration [JsonProperty(\"surrogates\")] public string Surrogates { get; set; } Property Value Type Description String | Improve this Doc View Source UnicodeVersion Declaration [JsonProperty(\"unicodeVersion\")] public string UnicodeVersion { get; set; } Property Value Type Description String"
  },
  "api/Strade.Addons.Emojis.SourceGenerator.html": {
    "href": "api/Strade.Addons.Emojis.SourceGenerator.html",
    "title": "Namespace Strade.Addons.Emojis.SourceGenerator | Strade Developer Documentation",
    "keywords": "Namespace Strade.Addons.Emojis.SourceGenerator Classes EmojiSourceGenerator ExportedEmojiData"
  },
  "api/Strade.AuthenticationCredentials.html": {
    "href": "api/Strade.AuthenticationCredentials.html",
    "title": "Class AuthenticationCredentials | Strade Developer Documentation",
    "keywords": "Class AuthenticationCredentials An union representing authentication credentials for the Discord REST / Gateway interface. Inheritance Object AuthenticationCredentials Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade Assembly : Strade.Rest.dll Syntax public sealed class AuthenticationCredentials Constructors | Improve this Doc View Source AuthenticationCredentials(AuthenticationTokenType, String) Initializes a new instance of the AuthenticationCredentials class. Declaration public AuthenticationCredentials(AuthenticationTokenType type, string token) Parameters Type Name Description AuthenticationTokenType type the type of the token ( token ) passed. String token the token string. Exceptions Type Condition ArgumentException thrown if the specified token is null , empty or only consists of whitespaces. ArgumentOutOfRangeException thrown if the specified type is not defined in the AuthenticationTokenType enumeration. | Improve this Doc View Source AuthenticationCredentials(String) Initializes a new instance of the AuthenticationCredentials class with the DefaultTokenType . Declaration public AuthenticationCredentials(string token) Parameters Type Name Description String token the token string. Exceptions Type Condition ArgumentException thrown if the specified token is null , empty or only consists of whitespaces. Fields | Improve this Doc View Source AuthorizeEndpoint The endpoint (without slash at the end) of Discord's Oauth2 authorize endpoint. Declaration public const string AuthorizeEndpoint = \"https://discord.com/api/oauth2/authorize\" Field Value Type Description String | Improve this Doc View Source DefaultTokenType The default token type; if none is specified. Declaration public const AuthenticationTokenType DefaultTokenType = AuthenticationTokenType.Bot Field Value Type Description AuthenticationTokenType | Improve this Doc View Source OAuth2Endpoint The base endpoint (with slash at the end) of Discord's Oauth2 interface. Declaration public const string OAuth2Endpoint = \"https://discord.com/api/oauth2/\" Field Value Type Description String Properties | Improve this Doc View Source AuthorizationHeader Gets the authorization header value for the authentication credentials. Declaration public AuthenticationHeaderValue AuthorizationHeader { get; } Property Value Type Description AuthenticationHeaderValue the authorization header value for the authentication credentials. | Improve this Doc View Source Token Gets the token string. Declaration public string Token { get; } Property Value Type Description String the token string. | Improve this Doc View Source Type Gets the type of the token ( Token ) passed. Declaration public AuthenticationTokenType Type { get; } Property Value Type Description AuthenticationTokenType the type of the token ( Token ) passed. Methods | Improve this Doc View Source FromEnvironment(String, AuthenticationTokenType) Creates AuthenticationCredentials from an environment variable. Declaration public static AuthenticationCredentials FromEnvironment(string environmentVariable = \"BOT_TOKEN\", AuthenticationTokenType authenticationTokenType = AuthenticationTokenType.Bot) Parameters Type Name Description String environmentVariable the name of the environment variable where the token is stored in. AuthenticationTokenType authenticationTokenType the authentication token type to create. Returns Type Description AuthenticationCredentials the AuthenticationCredentials instance. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified authenticationTokenType is not defined in the AuthenticationTokenType enumeration. | Improve this Doc View Source FromHeader(String) Creates AuthenticationCredentials from the specified authorizationHeader . Declaration public static AuthenticationCredentials FromHeader(string authorizationHeader) Parameters Type Name Description String authorizationHeader the authorization header (in format: Bearer my_token ). Returns Type Description AuthenticationCredentials the AuthenticationCredentials instance. Exceptions Type Condition ArgumentNullException thrown if the specified authorizationHeader is null . ArgumentException thrown if an invalid authorization header ( authorizationHeader ) was passed. | Improve this Doc View Source GenerateAuthorizeUri(Snowflake, Uri, Permissions, IReadOnlyDictionary<String, String>, String[]) Generates an Oauth2 authorization Uri . Declaration public static Uri GenerateAuthorizeUri(Snowflake applicationId, Uri redirectUri = null, Permissions permission = Permissions.None, IReadOnlyDictionary<string, string> parameters = null, params string[] scopes) Parameters Type Name Description Snowflake applicationId the application snowflake identifier. Uri redirectUri the optional redirect Uri to redirect to after the Oauth2 authorization flow was made. Permissions permission the bot permissions. IReadOnlyDictionary < String , String > parameters additional query string parameters. String [] scopes the authentication scopes. Returns Type Description Uri the Oauth2 authorization Uri . Exceptions Type Condition InvalidOperationException thrown if a redirect Uri ( redirectUri ) is required for the specified scopes . | Improve this Doc View Source GenerateBotInviteUri(Snowflake, Nullable<Snowflake>, IReadOnlyDictionary<String, String>, Permissions, Boolean) Generates a bot invitation Uri . Declaration public static Uri GenerateBotInviteUri(Snowflake clientId, Snowflake? guildId = default(Snowflake? ), IReadOnlyDictionary<string, string> parameters = null, Permissions permission = Permissions.None, bool applicationCommands = true) Parameters Type Name Description Snowflake clientId the bot client snowflake identifier. Nullable < Snowflake > guildId if not null ; the guild identifier to join. IReadOnlyDictionary < String , String > parameters additional query string parameters. Permissions permission the bot permissions. Boolean applicationCommands Returns Type Description Uri the bot invitation Uri . Remarks When the bot is private then only the bot owner can add the bot to servers with this URI. | Improve this Doc View Source IsRedirectUriRequired(IEnumerable<String>) Gets a value indicating whether the a redirect URI is required for the specified scopes . Declaration public static bool IsRedirectUriRequired(IEnumerable<string> scopes) Parameters Type Name Description IEnumerable < String > scopes the read-only list containing the scopes to check. Returns Type Description Boolean a value indicating whether the a redirect URI is required for the specified scopes . Exceptions Type Condition ArgumentNullException thrown if the specified scopes list ( scopes ) is null ."
  },
  "api/Strade.AuthenticationTokenType.html": {
    "href": "api/Strade.AuthenticationTokenType.html",
    "title": "Enum AuthenticationTokenType | Strade Developer Documentation",
    "keywords": "Enum AuthenticationTokenType A set of different authentication token types. Namespace : Strade Assembly : Strade.Rest.dll Syntax public enum AuthenticationTokenType : byte Fields Name Description Bearer Denotes that the authentication token is a bearer token. Bot Denotes that the authentication token is for a bot application. None Denotes that a raw token is passed. Extension Methods EnumExtensions.GetName<AuthenticationTokenType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.BaseDiscordRestClient.html": {
    "href": "api/Strade.BaseDiscordRestClient.html",
    "title": "Class BaseDiscordRestClient | Strade Developer Documentation",
    "keywords": "Class BaseDiscordRestClient Base abstraction of an IDiscordRestClient . Inheritance Object BaseDiscordRestClient DiscordClient DiscordRestClient Implements IDiscordRestClient IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade Assembly : Strade.Rest.dll Syntax public abstract class BaseDiscordRestClient : IDiscordRestClient, IDisposable Properties | Improve this Doc View Source ApiClient Gets the underlying RESTful API client used. Declaration public abstract DiscordRestApiClient ApiClient { get; } Property Value Type Description DiscordRestApiClient the underlying RESTful API client used. Methods | Improve this Doc View Source CreateGuildAsync(GuildCreationProperties, CancellationToken) Declaration public virtual Task<IGuild> CreateGuildAsync(GuildCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GuildCreationProperties properties CancellationToken cancellationToken Returns Type Description Task < IGuild > | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Releases the unmanaged resources used by the instance and optionally releases the managed resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. | Improve this Doc View Source GetApplicationIdAsync(CancellationToken) Declaration public virtual ValueTask<Snowflake> GetApplicationIdAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask < Snowflake > | Improve this Doc View Source GetCategoryAsync(Snowflake, CacheBehavior, CancellationToken) Declaration public ValueTask<ICategory> GetCategoryAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < ICategory > | Improve this Doc View Source GetChannelAsync(Snowflake, CacheBehavior, CancellationToken) Declaration public virtual ValueTask<IChannel> GetChannelAsync(Snowflake channelId, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IChannel > | Improve this Doc View Source GetChannelAsync<TChannel>(Snowflake, CacheBehavior, CancellationToken) Declaration public ValueTask<TChannel> GetChannelAsync<TChannel>(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) where TChannel : IChannel Parameters Type Name Description Snowflake id CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask <TChannel> Type Parameters Name Description TChannel | Improve this Doc View Source GetCurrentApplicationAsync(CancellationToken) Declaration public virtual Task<ApplicationInformation> GetCurrentApplicationAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < ApplicationInformation > | Improve this Doc View Source GetCurrentUserAsync(CancellationToken) Declaration public virtual ValueTask<CurrentUser> GetCurrentUserAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask < CurrentUser > | Improve this Doc View Source GetGroupChannelAsync(Snowflake, CacheBehavior, CancellationToken) Declaration public ValueTask<IGroupChannel> GetGroupChannelAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IGroupChannel > | Improve this Doc View Source GetGuildAsync(Snowflake, CacheBehavior, CancellationToken) Declaration public virtual ValueTask<IGuild> GetGuildAsync(Snowflake guildId, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IGuild > | Improve this Doc View Source GetInviteAsync(String, CancellationToken) Declaration public virtual Task<Invite> GetInviteAsync(string code, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String code CancellationToken cancellationToken Returns Type Description Task < Invite > | Improve this Doc View Source GetMessageAsync(Snowflake, Snowflake, CancellationToken) Declaration public virtual ValueTask<IMessage> GetMessageAsync(Snowflake channelId, Snowflake messageId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId Snowflake messageId CancellationToken cancellationToken Returns Type Description ValueTask < IMessage > | Improve this Doc View Source GetNewsChannelAsync(Snowflake, CacheBehavior, CancellationToken) Declaration public ValueTask<INewsChannel> GetNewsChannelAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < INewsChannel > | Improve this Doc View Source GetOptimalVoiceRegionAsync(CancellationToken) Declaration public virtual Task<VoiceRegion> GetOptimalVoiceRegionAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < VoiceRegion > | Improve this Doc View Source GetPrivateChannelAsync(Snowflake, CacheBehavior, CancellationToken) Declaration public ValueTask<IPrivateChannel> GetPrivateChannelAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IPrivateChannel > | Improve this Doc View Source GetStoreChannelAsync(Snowflake, CacheBehavior, CancellationToken) Declaration public ValueTask<IStoreChannel> GetStoreChannelAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IStoreChannel > | Improve this Doc View Source GetTextChannelAsync(Snowflake, CacheBehavior, CancellationToken) Declaration public ValueTask<ITextChannel> GetTextChannelAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < ITextChannel > | Improve this Doc View Source GetUserAsync(Snowflake, CacheBehavior, CancellationToken) Declaration public virtual ValueTask<User> GetUserAsync(Snowflake userId, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake userId CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < User > | Improve this Doc View Source GetUserConnectionsAsync(CancellationToken) Declaration public virtual Task<IReadOnlyList<UserConnection>> GetUserConnectionsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < UserConnection >> | Improve this Doc View Source GetUserGuildsAsync(Int32) Declaration public IAsyncEnumerable<UserGuildInformation> GetUserGuildsAsync(int limit = 100) Parameters Type Name Description Int32 limit Returns Type Description IAsyncEnumerable < UserGuildInformation > | Improve this Doc View Source GetVoiceChannelAsync(Snowflake, CacheBehavior, CancellationToken) Declaration public ValueTask<IVoiceChannel> GetVoiceChannelAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IVoiceChannel > | Improve this Doc View Source GetVoiceRegionsAsync(CancellationToken) Declaration public virtual Task<IReadOnlyList<VoiceRegion>> GetVoiceRegionsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < VoiceRegion >> | Improve this Doc View Source GetWebhookAsync(Snowflake, CancellationToken) Declaration public virtual Task<Webhook> GetWebhookAsync(Snowflake webhookId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake webhookId CancellationToken cancellationToken Returns Type Description Task < Webhook > | Improve this Doc View Source OpenChannelAsync(GroupChannelCreationProperties, CancellationToken) Declaration public virtual ValueTask<IGroupChannel> OpenChannelAsync(GroupChannelCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GroupChannelCreationProperties properties CancellationToken cancellationToken Returns Type Description ValueTask < IGroupChannel > | Improve this Doc View Source OpenChannelAsync(PrivateChannelCreationProperties, CancellationToken) Declaration public virtual ValueTask<IPrivateChannel> OpenChannelAsync(PrivateChannelCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description PrivateChannelCreationProperties properties CancellationToken cancellationToken Returns Type Description ValueTask < IPrivateChannel > | Improve this Doc View Source OpenChannelAsync(Snowflake, CancellationToken) Declaration public virtual ValueTask<IPrivateChannel> OpenChannelAsync(Snowflake recipientId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake recipientId CancellationToken cancellationToken Returns Type Description ValueTask < IPrivateChannel > Implements IDiscordRestClient System.IDisposable"
  },
  "api/Strade.BaseRestApiClient.html": {
    "href": "api/Strade.BaseRestApiClient.html",
    "title": "Class BaseRestApiClient | Strade Developer Documentation",
    "keywords": "Class BaseRestApiClient Basic abstraction of a discord RESTful API client. Inheritance Object BaseRestApiClient DiscordRestApiClient Implements IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade Assembly : Strade.Rest.dll Syntax public abstract class BaseRestApiClient : IDisposable Constructors | Improve this Doc View Source BaseRestApiClient(BaseRestClientConfiguration, ILogger) Initializes a new instance of the BaseRestApiClient class. Declaration protected BaseRestApiClient(BaseRestClientConfiguration configuration, ILogger logger = null) Parameters Type Name Description BaseRestClientConfiguration configuration the client configuration. ILogger logger the logger to use for logging; or null to disable logging. Exceptions Type Condition ArgumentNullException thrown if the specified configuration is null . Properties | Improve this Doc View Source AdditionalRequestHeaders Gets a dictionary containing additional HTTP request headers used for requests. Declaration protected IDictionary<string, string> AdditionalRequestHeaders { get; } Property Value Type Description IDictionary < String , String > the HTTP request headers used for requests. Remarks These headers are explicitly not included when using the HttpClient instance. | Improve this Doc View Source BaseAddress Gets the API base address. Declaration public Uri BaseAddress { get; } Property Value Type Description Uri the API base address. | Improve this Doc View Source Boundary Gets the multi-part/form-data boundary for the REST client (a random stringified Guid ). Declaration protected string Boundary { get; } Property Value Type Description String the multi-part/form-data boundary for the REST client (a random stringified Guid ). | Improve this Doc View Source HttpClient Gets the HTTP client used to make requests to the discord RESTful API. Declaration public HttpClient HttpClient { get; } Property Value Type Description HttpClient the HTTP client used to make requests to the discord RESTful API. | Improve this Doc View Source Logger Gets the logger. Declaration public ILogger Logger { get; } Property Value Type Description ILogger the logger; or null if logging is disabled. | Improve this Doc View Source Patch Gets the HTTP patch method. Declaration protected static HttpMethod Patch { get; } Property Value Type Description HttpMethod the HTTP patch method. | Improve this Doc View Source RequestLimiter Gets the rate limiter used to avoid exceeding API rate limits. Declaration public RequestRateLimiter RequestLimiter { get; } Property Value Type Description RequestRateLimiter the rate limiter used to avoid exceeding API rate limits. | Improve this Doc View Source SerializerOptions Declaration public JsonSerializerOptions SerializerOptions { get; } Property Value Type Description JsonSerializerOptions Methods | Improve this Doc View Source CreateException(RestResponseStatus, String, Nullable<RateLimiterBucket>) Creates the unwrapped exception for the specified status . Declaration protected virtual RestRequestException CreateException(RestResponseStatus status, string innerMessage, RateLimiterBucket? bucket) Parameters Type Name Description RestResponseStatus status the REST status code returned. String innerMessage the inner error message. Nullable < RateLimiterBucket > bucket the rate limiter bucket. Returns Type Description RestRequestException the exception created. | Improve this Doc View Source DeleteAsync(String, Object[], Nullable<Snowflake>, HttpContent, CancellationToken) Sends a HTTP DELETE request to the specified endpoint with the specified args and the specified httpContent asynchronously. Declaration protected Task DeleteAsync(string endpoint, object[] args, Snowflake? scope, HttpContent httpContent = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String endpoint the REST endpoint (may contain placeholders, see args ). Object [] args the endpoint placeholders. Nullable < Snowflake > scope the scope used for rate limiting. HttpContent httpContent the HTTP content for the request; or null . CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition RestRequestException thrown if an error occurs during the REST operation. | Improve this Doc View Source DeleteAsync(String, Object[], Nullable<Snowflake>, Object, CancellationToken) Sends a HTTP DELETE request to the specified endpoint with the specified args and the specified jsonContent asynchronously. Declaration protected Task DeleteAsync(string endpoint, object[] args, Snowflake? scope, object jsonContent, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String endpoint the REST endpoint (may contain placeholders, see args ). Object [] args the endpoint placeholders. Nullable < Snowflake > scope the scope used for rate limiting. Object jsonContent the JSON content for the request. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition RestRequestException thrown if an error occurs during the REST operation. | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Releases the unmanaged resources used by the instance and optionally releases the managed resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. | Improve this Doc View Source GetAsync<T>(String, Object[], Nullable<Snowflake>, QueryParameterCollection, CancellationToken) Sends a HTTP GET request to the specified endpoint with the specified args asynchronously. Declaration protected Task<T> GetAsync<T>(string endpoint, object[] args, Snowflake? scope, QueryParameterCollection query = null, CancellationToken cancellationToken = default(CancellationToken)) where T : class, new() Parameters Type Name Description String endpoint the REST endpoint (may contain placeholders, see args ). Object [] args the endpoint placeholders. Nullable < Snowflake > scope the scope used for rate limiting. QueryParameterCollection query the query string; or null . CancellationToken cancellationToken Returns Type Description Task <T> a task that represents the asynchronous operation. Type Parameters Name Description T the type of the entity the request returns. Exceptions Type Condition RestRequestException thrown if an error occurs during the REST operation. | Improve this Doc View Source GetResponseBehavior(HttpMethod, HttpStatusCode, RestResponseStatus) Gets the REST response behavior for the specified responseStatus . Declaration protected virtual RestResponseBehavior GetResponseBehavior(HttpMethod method, HttpStatusCode statusCode, RestResponseStatus responseStatus) Parameters Type Name Description HttpMethod method the HTTP method. HttpStatusCode statusCode the HTTP status code. RestResponseStatus responseStatus the REST response status. Returns Type Description RestResponseBehavior the REST response behavior for the specified responseStatus . Exceptions Type Condition ArgumentNullException thrown if the specified method is null . | Improve this Doc View Source GetRouteType(HttpMethod) Gets the type of the route for the specified httpMethod . Declaration protected static RateLimiterRouteType GetRouteType(HttpMethod httpMethod) Parameters Type Name Description HttpMethod httpMethod the HTTP method. Returns Type Description RateLimiterRouteType the route type for the specified httpMethod . | Improve this Doc View Source PatchAsync(String, Object[], Nullable<Snowflake>, HttpContent, CancellationToken) Sends a HTTP PATCH request to the specified endpoint with the specified args and the specified httpContent asynchronously. Declaration protected Task PatchAsync(string endpoint, object[] args, Snowflake? scope, HttpContent httpContent = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String endpoint the REST endpoint (may contain placeholders, see args ). Object [] args the endpoint placeholders. Nullable < Snowflake > scope the scope used for rate limiting. HttpContent httpContent the HTTP content for the request; or null . CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition RestRequestException thrown if an error occurs during the REST operation. | Improve this Doc View Source PatchAsync(String, Object[], Nullable<Snowflake>, Object, CancellationToken) Sends a HTTP PATCH request to the specified endpoint with the specified args and the specified jsonContent asynchronously. Declaration protected Task PatchAsync(string endpoint, object[] args, Snowflake? scope, object jsonContent, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String endpoint the REST endpoint (may contain placeholders, see args ). Object [] args the endpoint placeholders. Nullable < Snowflake > scope the scope used for rate limiting. Object jsonContent the JSON content for the request. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition RestRequestException thrown if an error occurs during the REST operation. | Improve this Doc View Source PatchAsync<T>(String, Object[], Nullable<Snowflake>, HttpContent, CancellationToken) Sends a HTTP PATCH request to the specified endpoint with the specified args and the specified httpContent asynchronously. Declaration protected Task<T> PatchAsync<T>(string endpoint, object[] args, Snowflake? scope, HttpContent httpContent = null, CancellationToken cancellationToken = default(CancellationToken)) where T : class, new() Parameters Type Name Description String endpoint the REST endpoint (may contain placeholders, see args ). Object [] args the endpoint placeholders. Nullable < Snowflake > scope the scope used for rate limiting. HttpContent httpContent the HTTP content for the request; or null . CancellationToken cancellationToken Returns Type Description Task <T> a task that represents the asynchronous operation. Type Parameters Name Description T the type of the entity the request returns. Exceptions Type Condition RestRequestException thrown if an error occurs during the REST operation. | Improve this Doc View Source PatchAsync<T>(String, Object[], Nullable<Snowflake>, Object, CancellationToken) Sends a HTTP PATCH request to the specified endpoint with the specified args and the specified jsonContent asynchronously. Declaration protected Task<T> PatchAsync<T>(string endpoint, object[] args, Snowflake? scope, object jsonContent, CancellationToken cancellationToken = default(CancellationToken)) where T : class, new() Parameters Type Name Description String endpoint the REST endpoint (may contain placeholders, see args ). Object [] args the endpoint placeholders. Nullable < Snowflake > scope the scope used for rate limiting. Object jsonContent the JSON content for the request. CancellationToken cancellationToken Returns Type Description Task <T> a task that represents the asynchronous operation. Type Parameters Name Description T the type of the entity the request returns. Exceptions Type Condition RestRequestException thrown if an error occurs during the REST operation. | Improve this Doc View Source PostAsync(String, Object[], Nullable<Snowflake>, HttpContent, QueryParameterCollection, CancellationToken) Sends a HTTP POST request to the specified endpoint with the specified args and the specified httpContent asynchronously. Declaration protected Task PostAsync(string endpoint, object[] args, Snowflake? scope, HttpContent httpContent = null, QueryParameterCollection query = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String endpoint the REST endpoint (may contain placeholders, see args ). Object [] args the endpoint placeholders. Nullable < Snowflake > scope the scope used for rate limiting. HttpContent httpContent the HTTP content for the request; or null . QueryParameterCollection query the query string; or null . CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition RestRequestException thrown if an error occurs during the REST operation. | Improve this Doc View Source PostAsync(String, Object[], Nullable<Snowflake>, Object, QueryParameterCollection, CancellationToken) Sends a HTTP POST request to the specified endpoint with the specified args and the specified jsonContent asynchronously. Declaration protected Task PostAsync(string endpoint, object[] args, Snowflake? scope, object jsonContent, QueryParameterCollection query = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String endpoint the REST endpoint (may contain placeholders, see args ). Object [] args the endpoint placeholders. Nullable < Snowflake > scope the scope used for rate limiting. Object jsonContent the JSON content. QueryParameterCollection query the query string; or null . CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition RestRequestException thrown if an error occurs during the REST operation. | Improve this Doc View Source PostAsync<T>(String, Object[], Nullable<Snowflake>, HttpContent, QueryParameterCollection, CancellationToken) Sends a HTTP POST request to the specified endpoint with the specified args and the specified httpContent asynchronously. Declaration protected Task<T> PostAsync<T>(string endpoint, object[] args, Snowflake? scope, HttpContent httpContent = null, QueryParameterCollection query = null, CancellationToken cancellationToken = default(CancellationToken)) where T : class, new() Parameters Type Name Description String endpoint the REST endpoint (may contain placeholders, see args ). Object [] args the endpoint placeholders. Nullable < Snowflake > scope the scope used for rate limiting. HttpContent httpContent the HTTP content for the request; or null . QueryParameterCollection query the query string; or null . CancellationToken cancellationToken Returns Type Description Task <T> a task that represents the asynchronous operation. Type Parameters Name Description T the type of the entity the request returns. Exceptions Type Condition RestRequestException thrown if an error occurs during the REST operation. | Improve this Doc View Source PostAsync<T>(String, Object[], Nullable<Snowflake>, Object, QueryParameterCollection, CancellationToken) Sends a HTTP POST request to the specified endpoint with the specified args and the specified jsonContent asynchronously. Declaration protected Task<T> PostAsync<T>(string endpoint, object[] args, Snowflake? scope, object jsonContent, QueryParameterCollection query = null, CancellationToken cancellationToken = default(CancellationToken)) where T : class, new() Parameters Type Name Description String endpoint the REST endpoint (may contain placeholders, see args ). Object [] args the endpoint placeholders. Nullable < Snowflake > scope the scope used for rate limiting. Object jsonContent the JSON content. QueryParameterCollection query the query string; or null . CancellationToken cancellationToken Returns Type Description Task <T> a task that represents the asynchronous operation. Type Parameters Name Description T the type of the entity the request returns. Exceptions Type Condition RestRequestException thrown if an error occurs during the REST operation. | Improve this Doc View Source PutAsync(String, Object[], Nullable<Snowflake>, HttpContent, QueryParameterCollection, CancellationToken) Sends a HTTP PUT request to the specified endpoint with the specified args and the specified httpContent asynchronously. Declaration protected Task PutAsync(string endpoint, object[] args, Snowflake? scope, HttpContent httpContent = null, QueryParameterCollection query = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String endpoint the REST endpoint (may contain placeholders, see args ). Object [] args the endpoint placeholders. Nullable < Snowflake > scope the scope used for rate limiting. HttpContent httpContent the HTTP content for the request; or null . QueryParameterCollection query the query string; or null . CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition RestRequestException thrown if an error occurs during the REST operation. | Improve this Doc View Source PutAsync(String, Object[], Nullable<Snowflake>, Object, QueryParameterCollection, CancellationToken) Sends a HTTP PUT request to the specified endpoint with the specified args and the specified jsonContent asynchronously. Declaration protected Task PutAsync(string endpoint, object[] args, Snowflake? scope, object jsonContent, QueryParameterCollection query = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String endpoint the REST endpoint (may contain placeholders, see args ). Object [] args the endpoint placeholders. Nullable < Snowflake > scope the scope used for rate limiting. Object jsonContent the JSON content. QueryParameterCollection query the query string; or null . CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition RestRequestException thrown if an error occurs during the REST operation. | Improve this Doc View Source PutAsync<T>(String, Object[], Nullable<Snowflake>, HttpContent, QueryParameterCollection, CancellationToken) Sends a HTTP PUT request to the specified endpoint with the specified args and the specified httpContent asynchronously. Declaration protected Task<T> PutAsync<T>(string endpoint, object[] args, Snowflake? scope, HttpContent httpContent = null, QueryParameterCollection query = null, CancellationToken cancellationToken = default(CancellationToken)) where T : class, new() Parameters Type Name Description String endpoint the REST endpoint (may contain placeholders, see args ). Object [] args the endpoint placeholders. Nullable < Snowflake > scope the scope used for rate limiting. HttpContent httpContent the HTTP content for the request; or null . QueryParameterCollection query the query string; or null . CancellationToken cancellationToken Returns Type Description Task <T> a task that represents the asynchronous operation. Type Parameters Name Description T the type of the entity the request returns. Exceptions Type Condition RestRequestException thrown if an error occurs during the REST operation. | Improve this Doc View Source PutAsync<T>(String, Object[], Nullable<Snowflake>, Object, QueryParameterCollection, CancellationToken) Sends a HTTP PUT request to the specified endpoint with the specified args and the specified jsonContent asynchronously. Declaration protected Task<T> PutAsync<T>(string endpoint, object[] args, Snowflake? scope, object jsonContent, QueryParameterCollection query = null, CancellationToken cancellationToken = default(CancellationToken)) where T : class, new() Parameters Type Name Description String endpoint the REST endpoint (may contain placeholders, see args ). Object [] args the endpoint placeholders. Nullable < Snowflake > scope the scope used for rate limiting. Object jsonContent the JSON content. QueryParameterCollection query the query string; or null . CancellationToken cancellationToken Returns Type Description Task <T> a task that represents the asynchronous operation. Type Parameters Name Description T the type of the entity the request returns. Exceptions Type Condition RestRequestException thrown if an error occurs during the REST operation. Implements System.IDisposable"
  },
  "api/Strade.BaseRestClientConfiguration.html": {
    "href": "api/Strade.BaseRestClientConfiguration.html",
    "title": "Class BaseRestClientConfiguration | Strade Developer Documentation",
    "keywords": "Class BaseRestClientConfiguration Abstraction for RESTful HTTP client configurations. Inheritance Object BaseRestClientConfiguration RestClientConfiguration Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade Assembly : Strade.Rest.dll Syntax public abstract class BaseRestClientConfiguration Fields | Improve this Doc View Source DefaultBaseAddress The base address for requests to the discord RESTful API. Declaration public const string DefaultBaseAddress = \"https://discord.com/api/v8/\" Field Value Type Description String | Improve this Doc View Source UserAgent The user agent (header value) for requests to the discord RESTful API. Declaration public const string UserAgent = \"Strade (https://github.com/angelobreuer/Strade, 1.0.0)\" Field Value Type Description String Properties | Improve this Doc View Source BaseAddress Gets or sets the base address for requests to the discord RESTful API. Declaration public string BaseAddress { get; set; } Property Value Type Description String base address for requests to the discord RESTful API. | Improve this Doc View Source MaxRequestRetries Gets or sets the number of retries are made when a REST request fails. Declaration public int MaxRequestRetries { get; set; } Property Value Type Description Int32 the number of retries are made when a REST request fails. | Improve this Doc View Source TraceRequests Gets or sets a value indicating whether to trace RESTful API requests. Declaration public bool TraceRequests { get; set; } Property Value Type Description Boolean a value indicating whether to trace RESTful API requests."
  },
  "api/Strade.Cache.BaseCacheable-2.html": {
    "href": "api/Strade.Cache.BaseCacheable-2.html",
    "title": "Class BaseCacheable<TId, TEntity> | Strade Developer Documentation",
    "keywords": "Class BaseCacheable<TId, TEntity> Represents a lazy-fetched entity that can be retrieved either from cache or from the API. Inheritance Object BaseCacheable<TId, TEntity> ChannelCacheable GuildCacheable MemberCacheable MessageCacheable MessageChannelCacheable RestGuildCacheable UserCacheable Implements ICacheable <TId, TEntity> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Cache Assembly : Strade.Rest.dll Syntax public abstract class BaseCacheable<TId, TEntity> : ICacheable<TId, TEntity> where TEntity : IIdentifiable<TId> Type Parameters Name Description TId the type of the identifier of the entity to fetch. TEntity the type of the entity to fetch. Constructors | Improve this Doc View Source BaseCacheable(IDiscordRestClient, TId) Initializes a new instance of the BaseCacheable<TId, TEntity> class. Declaration protected BaseCacheable(IDiscordRestClient client, TId id) Parameters Type Name Description IDiscordRestClient client the discord client that owns the cacheable entity. TId id the identifier of the entity. Properties | Improve this Doc View Source Client Gets the discord client that owns the cacheable entity. Declaration public IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient the discord client that owns the cacheable entity. | Improve this Doc View Source Entity Declaration public TEntity Entity { get; } Property Value Type Description TEntity | Improve this Doc View Source Id Declaration public TId Id { get; } Property Value Type Description TId | Improve this Doc View Source IsPresent Declaration public bool IsPresent { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source FetchAsync(IDiscordRestClient, TId, CancellationToken) Fetches the entity from the API asynchronously. Declaration protected abstract ValueTask<TEntity> FetchAsync(IDiscordRestClient client, TId id, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IDiscordRestClient client the discord client that owns the cacheable entity. TId id the identifier of the entity. CancellationToken cancellationToken Returns Type Description ValueTask <TEntity> a task that represents the asynchronous operation. The task result is the entity fetched from API. | Improve this Doc View Source GetAsync(CacheBehavior, CancellationToken) Declaration public ValueTask<TEntity> GetAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask <TEntity> | Improve this Doc View Source TryFetchCached(IDiscordRestClient, TId, out TEntity) Tries to retrieve the entity from the cache. Declaration protected abstract bool TryFetchCached(IDiscordRestClient client, TId id, out TEntity entity) Parameters Type Name Description IDiscordRestClient client the discord client that owns the cacheable entity. TId id the identifier of the entity. TEntity entity ( out ) the entity fetched from cache; or null if the entity could not be fetched from cache. Returns Type Description Boolean a value indicating whether the entity was fetched from cache. Implements ICacheable<TId, TEntity>"
  },
  "api/Strade.Cache.CacheAccessor-2.html": {
    "href": "api/Strade.Cache.CacheAccessor-2.html",
    "title": "Struct CacheAccessor<TEntity, TModel> | Strade Developer Documentation",
    "keywords": "Struct CacheAccessor<TEntity, TModel> Represents a structure used to access, modify, create and update entries within a cache bucket with a specific scope. Implements IEnumerable <TEntity> IEnumerable IEquatable < CacheAccessor <TEntity, TModel>> Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Cache Assembly : Strade.Rest.dll Syntax public struct CacheAccessor<TEntity, TModel> : IEnumerable<TEntity>, IEnumerable, IEquatable<CacheAccessor<TEntity, TModel>> where TEntity : IUpdateable<TModel>, IIdentifiable<Snowflake> where TModel : class, IIdentifiable<Snowflake>, new() Type Parameters Name Description TEntity the type of the entity stored in the cache. TModel the type of the entity model used to update the entity. Constructors | Improve this Doc View Source CacheAccessor(ICacheBucket<TEntity, TModel>, Nullable<Snowflake>) Initializes a new instance of the CacheAccessor<TEntity, TModel> struct. Declaration public CacheAccessor(ICacheBucket<TEntity, TModel> bucket, Snowflake? scope = default(Snowflake? )) Parameters Type Name Description ICacheBucket <TEntity, TModel> bucket the underlying bucket used to access the cache. Nullable < Snowflake > scope the local scope for the accessor. Exceptions Type Condition ArgumentNullException thrown if the specified bucket is null . ArgumentException thrown if the specified scope is invalid. Properties | Improve this Doc View Source IsAvailable Gets a value indicating whether access to the cache is available. Declaration public bool IsAvailable { get; } Property Value Type Description Boolean a value indicating whether access to the cache is available. | Improve this Doc View Source IsScoped Gets a value indicating whether the accessor is scoped. Declaration public bool IsScoped { get; } Property Value Type Description Boolean a value indicating whether the accessor is scoped. | Improve this Doc View Source Scope Gets the scope of the accessor; or null if the accessor is not scoped. Declaration public Snowflake? Scope { get; } Property Value Type Description Nullable < Snowflake > the scope of the accessor; or null if the accessor is not scoped. Methods | Improve this Doc View Source Add(TEntity) Adds the specified entity to the cache. Declaration public void Add(TEntity entity) Parameters Type Name Description TEntity entity the entity to add to the cache. Exceptions Type Condition ArgumentException thrown if an entity with the same key is already in cache. ArgumentNullException thrown if the specified entity is null . | Improve this Doc View Source AddOrUpdate(TModel, EntityFactory<TModel, TEntity>) Checks whether an entity that matches to the specified model is in cache, if so then the entity is updated using the specified model , if not the entity is created using the specified factory . Declaration public TEntity AddOrUpdate(TModel model, EntityFactory<TModel, TEntity> factory) Parameters Type Name Description TModel model the model that represents the data of the entity. EntityFactory <TModel, TEntity> factory the factory used to create the entity from a model. Returns Type Description TEntity the entity that was created or updated. Exceptions Type Condition ArgumentException thrown if an entity with the same key is already in cache. ArgumentNullException thrown if the specified model is null . ArgumentNullException thrown if the specified factory is null . | Improve this Doc View Source AddOrUpdateAll(IEnumerable<TModel>, EntityFactory<TModel, TEntity>) Checks whether the models specified in the specified models enumerable match to an entity already present in cache, if the entity matches then it is updated according the model, if not the entity is created from the supplied model using the specified entity factory . Declaration public List<TEntity> AddOrUpdateAll(IEnumerable<TModel> models, EntityFactory<TModel, TEntity> factory) Parameters Type Name Description IEnumerable <TModel> models an enumerable ( IEnumerable<T> ) that yields through the models that represents the data of the entities. EntityFactory <TModel, TEntity> factory the factory used to create the entity from a model. Returns Type Description List <TEntity> a list of the entities modified or added to the cache. Exceptions Type Condition ArgumentException thrown if an entity with the same key is already in cache. ArgumentNullException thrown if the specified models enumerable is null . ArgumentNullException thrown if the specified factory is null . | Improve this Doc View Source AddOrUpdateIndexed(IReadOnlyCollection<TModel>, EntityFactory<TModel, TEntity>) Checks whether the models specified in the specified models enumerable match to an entity already present in cache, if the entity matches then it is updated according the model, if not the entity is created from the supplied model using the specified entity factory . Declaration public Dictionary<Snowflake, TEntity> AddOrUpdateIndexed(IReadOnlyCollection<TModel> models, EntityFactory<TModel, TEntity> factory) Parameters Type Name Description IReadOnlyCollection <TModel> models an enumerable ( IEnumerable<T> ) that yields through the models that represents the data of the entities. EntityFactory <TModel, TEntity> factory the factory used to create the entity from a model. Returns Type Description Dictionary < Snowflake , TEntity> a dictionary that maps the entity id to the entity. Exceptions Type Condition ArgumentException thrown if an entity with the same key is already in cache. ArgumentNullException thrown if the specified models enumerable is null . ArgumentNullException thrown if the specified factory is null . | Improve this Doc View Source AddOrUpdateIndexed<TKey>(IReadOnlyCollection<TModel>, EntityFactory<TModel, TEntity>, Func<TEntity, TKey>) Checks whether the models specified in the specified models enumerable match to an entity already present in cache, if the entity matches then it is updated according the model, if not the entity is created from the supplied model using the specified entity factory . Declaration public Dictionary<TKey, TEntity> AddOrUpdateIndexed<TKey>(IReadOnlyCollection<TModel> models, EntityFactory<TModel, TEntity> factory, Func<TEntity, TKey> keySelector) Parameters Type Name Description IReadOnlyCollection <TModel> models an enumerable ( IEnumerable<T> ) that yields through the models that represents the data of the entities. EntityFactory <TModel, TEntity> factory the factory used to create the entity from a model. Func <TEntity, TKey> keySelector a function used to select a key from the entity used to map the model in the resulting dictionary. Returns Type Description Dictionary <TKey, TEntity> a dictionary that maps the entity key to the entity. Type Parameters Name Description TKey the type of the key. Exceptions Type Condition ArgumentException thrown if an entity with the same key is already in cache. ArgumentNullException thrown if the specified models enumerable is null . ArgumentNullException thrown if the specified factory is null . ArgumentNullException thrown if the specified keySelector is null . | Improve this Doc View Source CacheAsync(Snowflake, Func<Snowflake, CancellationToken, Task<TModel>>, EntityFactory<TModel, TEntity>, CacheBehavior, CancellationToken) Caches an entity with the specified id according to the specified behavior ( cacheBehavior ) asynchronously. Declaration public ValueTask<TEntity> CacheAsync(Snowflake id, Func<Snowflake, CancellationToken, Task<TModel>> downloadFunction, EntityFactory<TModel, TEntity> factory, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id the identifier of the entity. Func < Snowflake , CancellationToken , Task <TModel>> downloadFunction a function used to download the entity. The first parameter is the id of the entity. The second parameter is the cancellation token supplied by cancellationToken . The function result is a task that represents an asynchronous operation. The task result is the entity downloaded. EntityFactory <TModel, TEntity> factory a factory used to create an entity from a supplied model. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask <TEntity> a task that represents the asynchronous operation. The task result is the entity. | Improve this Doc View Source Equals(CacheAccessor<TEntity, TModel>) Declaration public bool Equals(CacheAccessor<TEntity, TModel> other) Parameters Type Name Description CacheAccessor <TEntity, TModel> other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetEntity(Snowflake) Tries to retrieve an entity with the specified id from the cache. Declaration public TEntity GetEntity(Snowflake id) Parameters Type Name Description Snowflake id the snowflake identifier of the entity to retrieve. Returns Type Description TEntity the entity retrieved; or null if the entity could not be retrieved. | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<TEntity> GetEnumerator() Returns Type Description IEnumerator <TEntity> | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source Remove(Snowflake) Removes an entity by the specified id from the cache. Declaration public bool Remove(Snowflake id) Parameters Type Name Description Snowflake id the snowflake identifier of the entity to remove. Returns Type Description Boolean a value indicating whether the entity was removed from the cache; true indicates that the entity was found and removed from the cache, false indicates that no entity was found by the specified id . | Improve this Doc View Source Remove(Snowflake, out TEntity) Removes an entity by the specified id from the cache. Declaration public bool Remove(Snowflake id, out TEntity entity) Parameters Type Name Description Snowflake id the snowflake identifier of the entity to remove. TEntity entity ( out ) the entity removed from cache; or null if no entity was found in cache to remove. Returns Type Description Boolean a value indicating whether the entity was removed from the cache; true indicates that the entity was found and removed from the cache, false indicates that no entity was found by the specified id . | Improve this Doc View Source RemoveWhere(Func<TEntity, Boolean>) Removes all entities that match the specified predicate from the cache. Declaration public int RemoveWhere(Func<TEntity, bool> predicate) Parameters Type Name Description Func <TEntity, Boolean > predicate the predicate. Returns Type Description Int32 the number of total entities removed from cache. Exceptions Type Condition ArgumentNullException thrown if the specified predicate is null . | Improve this Doc View Source ToEnumerable() Collects all entities from the cache and maps them to an enumerable. Declaration public IEnumerable<TEntity> ToEnumerable() Returns Type Description IEnumerable <TEntity> an enumerable that yields through all entities in the cache. | Improve this Doc View Source TryGetEntity(Snowflake, out TEntity) Tries to retrieve an entity with the specified id from the cache. Declaration public bool TryGetEntity(Snowflake id, out TEntity entity) Parameters Type Name Description Snowflake id the snowflake identifier of the entity to retrieve. TEntity entity ( out ) the entity retrieved; or null if the entity could not be retrieved. Returns Type Description Boolean a value indicating whether the entity could be retrieved from cache. Operators | Improve this Doc View Source Equality(CacheAccessor<TEntity, TModel>, CacheAccessor<TEntity, TModel>) Declaration public static bool operator ==(CacheAccessor<TEntity, TModel> left, CacheAccessor<TEntity, TModel> right) Parameters Type Name Description CacheAccessor <TEntity, TModel> left CacheAccessor <TEntity, TModel> right Returns Type Description Boolean | Improve this Doc View Source Inequality(CacheAccessor<TEntity, TModel>, CacheAccessor<TEntity, TModel>) Declaration public static bool operator !=(CacheAccessor<TEntity, TModel> left, CacheAccessor<TEntity, TModel> right) Parameters Type Name Description CacheAccessor <TEntity, TModel> left CacheAccessor <TEntity, TModel> right Returns Type Description Boolean Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IEquatable<T>"
  },
  "api/Strade.Cache.CacheBehavior.html": {
    "href": "api/Strade.Cache.CacheBehavior.html",
    "title": "Enum CacheBehavior | Strade Developer Documentation",
    "keywords": "Enum CacheBehavior A set of caching behaviors. Namespace : Strade.Cache Assembly : Strade.Rest.dll Syntax public enum CacheBehavior : byte Fields Name Description AllowDownload Denotes that the entity should be returned from cache if available; otherwise the entity is downloaded and cached for the next request. CacheOnly Denotes that the entity should be retrieved from cache; if the requested entity is not in cache then an exception is thrown. IgnoreCache Denotes that the entity should be downloaded regardless whether the entity is in cache. If the entity is in cache the entity is updated and returned, if the entity is not in cache a new entity is created and put in cache. Lazy Denotes that the entity should be returned from the cache if available; otherwise the default value for the entity type is returned. Extension Methods EnumExtensions.GetName<CacheBehavior>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Cache.CacheBucket-2.html": {
    "href": "api/Strade.Cache.CacheBucket-2.html",
    "title": "Class CacheBucket<TEntity, TModel> | Strade Developer Documentation",
    "keywords": "Class CacheBucket<TEntity, TModel> Represents a bucket that contains the cache for a specific entity type. Inheritance Object CacheBucket<TEntity, TModel> Implements ICacheBucket <TEntity, TModel> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Cache Assembly : Strade.Rest.dll Syntax public sealed class CacheBucket<TEntity, TModel> : ICacheBucket<TEntity, TModel>, _ICacheBucket where TEntity : IUpdateable<TModel>, IIdentifiable<Snowflake> where TModel : class, IIdentifiable<Snowflake>, new() Type Parameters Name Description TEntity the type of the entity stored in the cache. TModel the type of the entity model used to update the entity. Constructors | Improve this Doc View Source CacheBucket(EntityType, ICachePolicy) Initializes a new instance of the CacheBucket<TEntity, TModel> class. Declaration public CacheBucket(EntityType entityType, ICachePolicy policy) Parameters Type Name Description EntityType entityType the type of the entity the bucket caches. ICachePolicy policy the cache policy for the entity. Exceptions Type Condition ArgumentNullException thrown if the specified policy is null . Properties | Improve this Doc View Source EntityType Gets the type of the entity the bucket caches. Declaration public EntityType EntityType { get; } Property Value Type Description EntityType the type of the entity the bucket caches. | Improve this Doc View Source Entries Gets the dictionary that contains the entries cached within the bucket. Declaration public Dictionary<ScopedSnowflake, CacheEntry> Entries { get; } Property Value Type Description Dictionary < ScopedSnowflake , CacheEntry > the dictionary that contains the entries cached within the bucket. | Improve this Doc View Source EntryCount Declaration public int EntryCount { get; } Property Value Type Description Int32 | Improve this Doc View Source Lock Gets a reader-writer lock that synchronizes write and read requests to the Entries contained within the bucket. Declaration public ReaderWriterLockSlim Lock { get; } Property Value Type Description ReaderWriterLockSlim a reader-writer lock that synchronizes write and read requests to the Entries contained within the bucket. | Improve this Doc View Source Policy Gets the cache policy for the entity. Declaration public ICachePolicy Policy { get; } Property Value Type Description ICachePolicy the cache policy for the entity. Methods | Improve this Doc View Source Add(Snowflake, TEntity) Declaration public void Add(Snowflake scope, TEntity entity) Parameters Type Name Description Snowflake scope TEntity entity | Improve this Doc View Source AddOrUpdate(Snowflake, TModel, EntityFactory<TModel, TEntity>) Declaration public TEntity AddOrUpdate(Snowflake scope, TModel model, EntityFactory<TModel, TEntity> factory) Parameters Type Name Description Snowflake scope TModel model EntityFactory <TModel, TEntity> factory Returns Type Description TEntity | Improve this Doc View Source AddOrUpdateAll(Snowflake, IEnumerable<TModel>, EntityFactory<TModel, TEntity>) Declaration public List<TEntity> AddOrUpdateAll(Snowflake scope, IEnumerable<TModel> models, EntityFactory<TModel, TEntity> factory) Parameters Type Name Description Snowflake scope IEnumerable <TModel> models EntityFactory <TModel, TEntity> factory Returns Type Description List <TEntity> | Improve this Doc View Source AddOrUpdateIndexed(Snowflake, IReadOnlyCollection<TModel>, EntityFactory<TModel, TEntity>) Declaration public Dictionary<Snowflake, TEntity> AddOrUpdateIndexed(Snowflake scope, IReadOnlyCollection<TModel> models, EntityFactory<TModel, TEntity> factory) Parameters Type Name Description Snowflake scope IReadOnlyCollection <TModel> models EntityFactory <TModel, TEntity> factory Returns Type Description Dictionary < Snowflake , TEntity> | Improve this Doc View Source AddOrUpdateIndexed<TKey>(Snowflake, IReadOnlyCollection<TModel>, EntityFactory<TModel, TEntity>, Func<TEntity, TKey>) Declaration public Dictionary<TKey, TEntity> AddOrUpdateIndexed<TKey>(Snowflake scope, IReadOnlyCollection<TModel> models, EntityFactory<TModel, TEntity> factory, Func<TEntity, TKey> keySelector) Parameters Type Name Description Snowflake scope IReadOnlyCollection <TModel> models EntityFactory <TModel, TEntity> factory Func <TEntity, TKey> keySelector Returns Type Description Dictionary <TKey, TEntity> Type Parameters Name Description TKey | Improve this Doc View Source CacheAsync(Snowflake, Snowflake, Func<Snowflake, CancellationToken, Task<TModel>>, EntityFactory<TModel, TEntity>, CacheBehavior, CancellationToken) Declaration public ValueTask<TEntity> CacheAsync(Snowflake scope, Snowflake id, Func<Snowflake, CancellationToken, Task<TModel>> downloadFunction, EntityFactory<TModel, TEntity> factory, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake scope Snowflake id Func < Snowflake , CancellationToken , Task <TModel>> downloadFunction EntityFactory <TModel, TEntity> factory CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask <TEntity> | Improve this Doc View Source CreateEntry(Object, Boolean) Creates an entry for the specified target . Declaration public CacheEntry CreateEntry(object target, bool skipPolicyValidation = false) Parameters Type Name Description Object target the target entity to cache. Boolean skipPolicyValidation a value indicating whether the specified target should be validated against the bucket's Policy , if enabled the method will throw an InvalidOperationException if the entity should not be cached. Returns Type Description CacheEntry the cache entry for the specified target . Exceptions Type Condition ArgumentNullException thrown if the specified target is null . InvalidOperationException thrown if bucket's Policy determines that the specified target should not be cached and if skipPolicyValidation is false . | Improve this Doc View Source GetEntity(Snowflake, Snowflake) Declaration public TEntity GetEntity(Snowflake scope, Snowflake id) Parameters Type Name Description Snowflake scope Snowflake id Returns Type Description TEntity | Improve this Doc View Source Remove(Snowflake, Snowflake) Declaration public bool Remove(Snowflake scope, Snowflake id) Parameters Type Name Description Snowflake scope Snowflake id Returns Type Description Boolean | Improve this Doc View Source Remove(Snowflake, Snowflake, out TEntity) Declaration public bool Remove(Snowflake scope, Snowflake id, out TEntity entity) Parameters Type Name Description Snowflake scope Snowflake id TEntity entity Returns Type Description Boolean | Improve this Doc View Source RemoveWhere(Snowflake, Func<TEntity, Boolean>) Declaration public int RemoveWhere(Snowflake scope, Func<TEntity, bool> predicate) Parameters Type Name Description Snowflake scope Func <TEntity, Boolean > predicate Returns Type Description Int32 | Improve this Doc View Source ToEnumerable(Snowflake) Declaration public IEnumerable<TEntity> ToEnumerable(Snowflake scope) Parameters Type Name Description Snowflake scope Returns Type Description IEnumerable <TEntity> | Improve this Doc View Source Trim() Trims the cache bucket. Declaration public void Trim() | Improve this Doc View Source TryGetEntity(Snowflake, Snowflake, out TEntity) Declaration public bool TryGetEntity(Snowflake scope, Snowflake id, out TEntity entity) Parameters Type Name Description Snowflake scope Snowflake id TEntity entity Returns Type Description Boolean Implements ICacheBucket<TEntity, TModel>"
  },
  "api/Strade.Cache.CacheEntry.html": {
    "href": "api/Strade.Cache.CacheEntry.html",
    "title": "Class CacheEntry | Strade Developer Documentation",
    "keywords": "Class CacheEntry Represents a cache entry. Inheritance Object CacheEntry Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Cache Assembly : Strade.Rest.dll Syntax public class CacheEntry Constructors | Improve this Doc View Source CacheEntry(Object, Nullable<TimeSpan>, CacheReferenceType) Initializes a new instance of the CacheEntry class. Declaration public CacheEntry(object target, TimeSpan? guranteedLifetime = default(TimeSpan? ), CacheReferenceType referenceType = CacheReferenceType.Strong) Parameters Type Name Description Object target the target entity to hold a reference to. Nullable < TimeSpan > guranteedLifetime the guaranteed lifetime for the cache entry; if null the entry will never expire. CacheReferenceType referenceType the type of the reference for the cache. None Denotes that the entry should not be cached. Strong Denotes that the entry holds a strong reference to the cached value. Tracking Denotes that the entry is hold until the guaranteed lifetime expires, after this the cache entry will become a weak reference to the strong value handle. Weak Denotes that the entry holds a weak reference to the cached value. Exceptions Type Condition ArgumentNullException thrown if the specified target is null . ArgumentOutOfRangeException thrown if the specified referenceType is invalid. Properties | Improve this Doc View Source IsWeak Gets a value indicating whether the underlying entity is weakly-referenced. Declaration public bool IsWeak { get; } Property Value Type Description Boolean a value indicating whether the underlying entity is weakly-referenced. | Improve this Doc View Source ReferenceType Gets the original type of the reference to the entity. Declaration public CacheReferenceType ReferenceType { get; } Property Value Type Description CacheReferenceType the original type of the reference to the entity. Methods | Improve this Doc View Source Poll() Polls the entry and upgrades references as needed. Declaration protected virtual bool Poll() Returns Type Description Boolean a value indicating whether the entry is no longer alive; if true then the entry is no longer valid and should be removed from the cache, if false then the entry is still valid. | Improve this Doc View Source TryGetValue(out Object) Tries to retrieve the value hold by the entry. Declaration public bool TryGetValue(out object value) Parameters Type Name Description Object value ( out ) the value; or null if the entry's value expired. Returns Type Description Boolean a value indicating whether the value could be retrieved from the entry."
  },
  "api/Strade.Cache.ChannelCacheable.html": {
    "href": "api/Strade.Cache.ChannelCacheable.html",
    "title": "Class ChannelCacheable | Strade Developer Documentation",
    "keywords": "Class ChannelCacheable Inheritance Object BaseCacheable < Snowflake , IChannel > ChannelCacheable Implements ICacheable < Snowflake , IChannel > Inherited Members BaseCacheable<Snowflake, IChannel>.Client BaseCacheable<Snowflake, IChannel>.Entity BaseCacheable<Snowflake, IChannel>.Id BaseCacheable<Snowflake, IChannel>.IsPresent BaseCacheable<Snowflake, IChannel>.GetAsync(CacheBehavior, CancellationToken) BaseCacheable<Snowflake, IChannel>.FetchAsync(IDiscordRestClient, Snowflake, CancellationToken) BaseCacheable<Snowflake, IChannel>.TryFetchCached(IDiscordRestClient, Snowflake, IChannel) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Cache Assembly : Strade.Rest.dll Syntax public sealed class ChannelCacheable : BaseCacheable<Snowflake, IChannel>, ICacheable<Snowflake, IChannel> Constructors | Improve this Doc View Source ChannelCacheable(IDiscordRestClient, Snowflake) Declaration public ChannelCacheable(IDiscordRestClient client, Snowflake id) Parameters Type Name Description IDiscordRestClient client Snowflake id Methods | Improve this Doc View Source FetchAsync(IDiscordRestClient, Snowflake, CancellationToken) Declaration protected override ValueTask<IChannel> FetchAsync(IDiscordRestClient client, Snowflake id, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IDiscordRestClient client Snowflake id CancellationToken cancellationToken Returns Type Description ValueTask < IChannel > Overrides Strade.Cache.BaseCacheable<Strade.Entities.Snowflake, Strade.Entities.IChannel>.FetchAsync(Strade.IDiscordRestClient, Strade.Entities.Snowflake, System.Threading.CancellationToken) | Improve this Doc View Source TryFetchCached(IDiscordRestClient, Snowflake, out IChannel) Declaration protected override bool TryFetchCached(IDiscordRestClient client, Snowflake id, out IChannel entity) Parameters Type Name Description IDiscordRestClient client Snowflake id IChannel entity Returns Type Description Boolean Overrides Strade.Cache.BaseCacheable<Strade.Entities.Snowflake, Strade.Entities.IChannel>.TryFetchCached(Strade.IDiscordRestClient, Strade.Entities.Snowflake, Strade.Entities.IChannel) Implements ICacheable<TId, TEntity>"
  },
  "api/Strade.Cache.DeletedEntity-2.html": {
    "href": "api/Strade.Cache.DeletedEntity-2.html",
    "title": "Struct DeletedEntity<TId, TEntity> | Strade Developer Documentation",
    "keywords": "Struct DeletedEntity<TId, TEntity> Implements IEquatable < DeletedEntity <TId, TEntity>> Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Cache Assembly : Strade.Rest.dll Syntax public struct DeletedEntity<TId, TEntity> : IEquatable<DeletedEntity<TId, TEntity>> where TEntity : IIdentifiable<TId> Type Parameters Name Description TId TEntity Constructors | Improve this Doc View Source DeletedEntity(TId) Declaration public DeletedEntity(TId id) Parameters Type Name Description TId id | Improve this Doc View Source DeletedEntity(TEntity) Declaration public DeletedEntity(TEntity entity) Parameters Type Name Description TEntity entity Properties | Improve this Doc View Source Entity Declaration public TEntity Entity { get; } Property Value Type Description TEntity | Improve this Doc View Source Id Declaration public TId Id { get; } Property Value Type Description TId Methods | Improve this Doc View Source Create(TId, TEntity) Declaration public static DeletedEntity<TId, TEntity> Create(TId id, TEntity entity) Parameters Type Name Description TId id TEntity entity Returns Type Description DeletedEntity <TId, TEntity> | Improve this Doc View Source Equals(DeletedEntity<TId, TEntity>) Declaration public bool Equals(DeletedEntity<TId, TEntity> other) Parameters Type Name Description DeletedEntity <TId, TEntity> other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(DeletedEntity<TId, TEntity>, DeletedEntity<TId, TEntity>) Declaration public static bool operator ==(DeletedEntity<TId, TEntity> left, DeletedEntity<TId, TEntity> right) Parameters Type Name Description DeletedEntity <TId, TEntity> left DeletedEntity <TId, TEntity> right Returns Type Description Boolean | Improve this Doc View Source Inequality(DeletedEntity<TId, TEntity>, DeletedEntity<TId, TEntity>) Declaration public static bool operator !=(DeletedEntity<TId, TEntity> left, DeletedEntity<TId, TEntity> right) Parameters Type Name Description DeletedEntity <TId, TEntity> left DeletedEntity <TId, TEntity> right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Cache.EntityCache.html": {
    "href": "api/Strade.Cache.EntityCache.html",
    "title": "Class EntityCache | Strade Developer Documentation",
    "keywords": "Class EntityCache Represents a centralized entity cache that can cache entities with multiple types, scopes and ids. Inheritance Object EntityCache Implements IEntityCache IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Cache Assembly : Strade.Rest.dll Syntax public class EntityCache : IEntityCache, IDisposable Constructors | Improve this Doc View Source EntityCache(EntityCacheOptions) Initializes a new instance of the EntityCache class. Declaration public EntityCache(EntityCacheOptions options) Parameters Type Name Description EntityCacheOptions options the options for the cache. Exceptions Type Condition ArgumentNullException thrown if the specified options are null . Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source Options Gets the options for the cache. Declaration public EntityCacheOptions Options { get; } Property Value Type Description EntityCacheOptions the options for the cache. Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Releases the unmanaged resources used by the instance and optionally releases the managed resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. | Improve this Doc View Source GetAccessor<TEntity, TModel>(EntityType, Nullable<Snowflake>) Declaration public CacheAccessor<TEntity, TModel> GetAccessor<TEntity, TModel>(EntityType type, Snowflake? scope = default(Snowflake? )) where TEntity : IUpdateable<TModel>, IIdentifiable<Snowflake> where TModel : class, IIdentifiable<Snowflake>, new() Parameters Type Name Description EntityType type Nullable < Snowflake > scope Returns Type Description CacheAccessor <TEntity, TModel> Type Parameters Name Description TEntity TModel Implements IEntityCache System.IDisposable"
  },
  "api/Strade.Cache.EntityCacheOptions.html": {
    "href": "api/Strade.Cache.EntityCacheOptions.html",
    "title": "Class EntityCacheOptions | Strade Developer Documentation",
    "keywords": "Class EntityCacheOptions The options for the EntityCache class. Inheritance Object EntityCacheOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Cache Assembly : Strade.Rest.dll Syntax public sealed class EntityCacheOptions Constructors | Improve this Doc View Source EntityCacheOptions() Initializes a new instance of the EntityCacheOptions class. Declaration public EntityCacheOptions() Properties | Improve this Doc View Source PollFrequency Gets or sets the interval in which the cache timer should poll the cache to free references, etc; or null to disable polling. Declaration public TimeSpan? PollFrequency { get; set; } Property Value Type Description Nullable < TimeSpan > the interval in which the cache timer should poll the cache to free references, etc; or null to disable polling. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified poll interval is zero or negative. Methods | Improve this Doc View Source AddPolicy(EntityType, CacheReferenceType, Nullable<TimeSpan>, CachePolicyOverrideBehavior) Adds a cache policy for the specified entity type and configures caching to use the specified referenceType and lifetime . Declaration public void AddPolicy(EntityType type, CacheReferenceType referenceType = CacheReferenceType.Strong, TimeSpan? lifetime = default(TimeSpan? ), CachePolicyOverrideBehavior overrideBehavior = CachePolicyOverrideBehavior.Replace) Parameters Type Name Description EntityType type the entity type. CacheReferenceType referenceType the type of the reference for the cache. None Denotes that the entry should not be cached. Strong Denotes that the entry holds a strong reference to the cached value. Tracking Denotes that the entry is hold until the guaranteed lifetime expires, after this the cache entry will become a weak reference to the strong value handle. Weak Denotes that the entry holds a weak reference to the cached value. Nullable < TimeSpan > lifetime the guaranteed lifetime for the cache entry; if null the entry will never expire. CachePolicyOverrideBehavior overrideBehavior the behavior when a policy already exists for the entity type. Throw Denotes that an exception should be thrown in a cache policy already exists for the entity type. Replace Denotes that the existing cache policy should be replaced regardless of whether a cache policy already exists for the entity type. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified overrideBehavior is invalid. | Improve this Doc View Source AddPolicy(EntityType, ICachePolicy, CachePolicyOverrideBehavior) Adds a cache policy for the specified entity type and configures caching to use the specified cachePolicy . Declaration public void AddPolicy(EntityType type, ICachePolicy cachePolicy, CachePolicyOverrideBehavior overrideBehavior = CachePolicyOverrideBehavior.Replace) Parameters Type Name Description EntityType type the entity type. ICachePolicy cachePolicy the cache policy to use. CachePolicyOverrideBehavior overrideBehavior the behavior when a policy already exists for the entity type. Throw Denotes that an exception should be thrown in a cache policy already exists for the entity type. Replace Denotes that the existing cache policy should be replaced regardless of whether a cache policy already exists for the entity type. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified overrideBehavior is invalid. | Improve this Doc View Source GetDefaultCachePolicy(EntityType) Gets the default cache policy for the specified entity type . Declaration public static ICachePolicy GetDefaultCachePolicy(EntityType type) Parameters Type Name Description EntityType type the type of the entity. Returns Type Description ICachePolicy the default cache policy for the specified entity type . | Improve this Doc View Source GetPolicy(EntityType) Gets the cache policy for the specified entityType . Declaration public ICachePolicy GetPolicy(EntityType entityType) Parameters Type Name Description EntityType entityType the type of the entity. Returns Type Description ICachePolicy the cache policy for the specified entityType . Remarks If no explicit policy is set for the specified entityType then the default cache policy is used ( GetDefaultCachePolicy(EntityType) )."
  },
  "api/Strade.Cache.EntityFactory-2.html": {
    "href": "api/Strade.Cache.EntityFactory-2.html",
    "title": "Delegate EntityFactory<TModel, TEntity> | Strade Developer Documentation",
    "keywords": "Delegate EntityFactory<TModel, TEntity> Represents a delegate that can create entities based on models representing their data. Namespace : Strade.Cache Assembly : Strade.Rest.dll Syntax public delegate TEntity EntityFactory<in TModel, out TEntity>(TModel model); Parameters Type Name Description TModel model the model that contains the entity data. Returns Type Description TEntity the entity created based on the specified model . Type Parameters Name Description TModel the type of the model. TEntity the type of the entity."
  },
  "api/Strade.Cache.EntityType.html": {
    "href": "api/Strade.Cache.EntityType.html",
    "title": "Enum EntityType | Strade Developer Documentation",
    "keywords": "Enum EntityType A set of cacheable entity types. Namespace : Strade.Cache Assembly : Strade.Rest.dll Syntax public enum EntityType : byte Fields Name Description Channel Denotes that the type of the entity is a channel. Emote Denotes that the type of the entity is an emote. Guild Denotes that the type of the entity is a guild. Member Denotes that the type of the entity is a (guild) member. Message Denotes that the type of the entity is a message. Role Denotes that the type of the entity is a (guild) role. User Denotes that the type of the entity is an user. Webhook Denotes that the type of the entity is a webhook. Extension Methods EnumExtensions.GetName<EntityType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Cache.GuildCacheable.html": {
    "href": "api/Strade.Cache.GuildCacheable.html",
    "title": "Class GuildCacheable | Strade Developer Documentation",
    "keywords": "Class GuildCacheable Inheritance Object BaseCacheable < Snowflake , Guild > GuildCacheable Implements ICacheable < Snowflake , Guild > Inherited Members BaseCacheable<Snowflake, Guild>.Client BaseCacheable<Snowflake, Guild>.Entity BaseCacheable<Snowflake, Guild>.Id BaseCacheable<Snowflake, Guild>.IsPresent BaseCacheable<Snowflake, Guild>.GetAsync(CacheBehavior, CancellationToken) BaseCacheable<Snowflake, Guild>.FetchAsync(IDiscordRestClient, Snowflake, CancellationToken) BaseCacheable<Snowflake, Guild>.TryFetchCached(IDiscordRestClient, Snowflake, Guild) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Cache Assembly : Strade.dll Syntax public sealed class GuildCacheable : BaseCacheable<Snowflake, Guild>, ICacheable<Snowflake, Guild> Constructors | Improve this Doc View Source GuildCacheable(DiscordClient, Snowflake) Declaration public GuildCacheable(DiscordClient client, Snowflake id) Parameters Type Name Description DiscordClient client Snowflake id Methods | Improve this Doc View Source FetchAsync(IDiscordRestClient, Snowflake, CancellationToken) Declaration protected override ValueTask<Guild> FetchAsync(IDiscordRestClient client, Snowflake id, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IDiscordRestClient client Snowflake id CancellationToken cancellationToken Returns Type Description ValueTask < Guild > Overrides Strade.Cache.BaseCacheable<Strade.Entities.Snowflake, Strade.Entities.Guild>.FetchAsync(Strade.IDiscordRestClient, Strade.Entities.Snowflake, System.Threading.CancellationToken) | Improve this Doc View Source TryFetchCached(IDiscordRestClient, Snowflake, out Guild) Declaration protected override bool TryFetchCached(IDiscordRestClient client, Snowflake id, out Guild entity) Parameters Type Name Description IDiscordRestClient client Snowflake id Guild entity Returns Type Description Boolean Overrides Strade.Cache.BaseCacheable<Strade.Entities.Snowflake, Strade.Entities.Guild>.TryFetchCached(Strade.IDiscordRestClient, Strade.Entities.Snowflake, Strade.Entities.Guild) Implements ICacheable<TId, TEntity>"
  },
  "api/Strade.Cache.html": {
    "href": "api/Strade.Cache.html",
    "title": "Namespace Strade.Cache | Strade Developer Documentation",
    "keywords": "Namespace Strade.Cache Classes BaseCacheable<TId, TEntity> Represents a lazy-fetched entity that can be retrieved either from cache or from the API. CacheBucket<TEntity, TModel> Represents a bucket that contains the cache for a specific entity type. CacheEntry Represents a cache entry. ChannelCacheable EntityCache Represents a centralized entity cache that can cache entities with multiple types, scopes and ids. EntityCacheOptions The options for the EntityCache class. GuildCacheable MemberCacheable MessageCacheable MessageChannelCacheable PrefetchedCacheable<TId, TEntity> RestGuildCacheable UserCacheable Structs CacheAccessor<TEntity, TModel> Represents a structure used to access, modify, create and update entries within a cache bucket with a specific scope. DeletedEntity<TId, TEntity> ScopedSnowflake A structure that consists of a snowflake and a snowflake representing the scope. Interfaces ICacheable<TId, TEntity> ICacheBucket<TEntity, TModel> IEntityCache IIdentifiable<TIdentifier> Interface for identifiable objects. Enums CacheBehavior A set of caching behaviors. EntityType A set of cacheable entity types. Delegates EntityFactory<TModel, TEntity> Represents a delegate that can create entities based on models representing their data."
  },
  "api/Strade.Cache.ICacheable-2.html": {
    "href": "api/Strade.Cache.ICacheable-2.html",
    "title": "Interface ICacheable<TId, TEntity> | Strade Developer Documentation",
    "keywords": "Interface ICacheable<TId, TEntity> Namespace : Strade.Cache Assembly : Strade.Rest.dll Syntax public interface ICacheable<TId, TEntity> where TEntity : IIdentifiable<TId> Type Parameters Name Description TId TEntity Properties | Improve this Doc View Source Entity Gets the entity, or default if not present. Declaration TEntity Entity { get; } Property Value Type Description TEntity the entity, or default if not present. | Improve this Doc View Source Id Gets the identifier of the target entity. Declaration TId Id { get; } Property Value Type Description TId the identifier of the target entity. | Improve this Doc View Source IsPresent Gets a value indicating whether the entity is present. Declaration bool IsPresent { get; } Property Value Type Description Boolean a value indicating whether the entity is present. Methods | Improve this Doc View Source GetAsync(CacheBehavior, CancellationToken) Gets the entity asynchronously. Declaration ValueTask<TEntity> GetAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask <TEntity> a task that represents the asynchronous operation. The task result is the entity."
  },
  "api/Strade.Cache.ICacheBucket-2.html": {
    "href": "api/Strade.Cache.ICacheBucket-2.html",
    "title": "Interface ICacheBucket<TEntity, TModel> | Strade Developer Documentation",
    "keywords": "Interface ICacheBucket<TEntity, TModel> Namespace : Strade.Cache Assembly : Strade.Rest.dll Syntax public interface ICacheBucket<TEntity, TModel> where TEntity : IUpdateable<TModel> where TModel : class, new() Type Parameters Name Description TEntity TModel Properties | Improve this Doc View Source EntityType Declaration EntityType EntityType { get; } Property Value Type Description EntityType | Improve this Doc View Source Policy Declaration ICachePolicy Policy { get; } Property Value Type Description ICachePolicy Methods | Improve this Doc View Source Add(Snowflake, TEntity) Adds the specified entity to the cache. Declaration void Add(Snowflake scope, TEntity entity) Parameters Type Name Description Snowflake scope TEntity entity the entity to add to the cache. Exceptions Type Condition ArgumentException thrown if an entity with the same key is already in cache. ArgumentNullException thrown if the specified entity is null . | Improve this Doc View Source AddOrUpdate(Snowflake, TModel, EntityFactory<TModel, TEntity>) Checks whether an entity that matches to the specified model is in cache, if so then the entity is updated using the specified model , if not the entity is created using the specified factory . Declaration TEntity AddOrUpdate(Snowflake scope, TModel model, EntityFactory<TModel, TEntity> factory) Parameters Type Name Description Snowflake scope TModel model the model that represents the data of the entity. EntityFactory <TModel, TEntity> factory the factory used to create the entity from a model. Returns Type Description TEntity the entity that was created or updated. Exceptions Type Condition ArgumentException thrown if an entity with the same key is already in cache. ArgumentNullException thrown if the specified model is null . ArgumentNullException thrown if the specified factory is null . | Improve this Doc View Source AddOrUpdateAll(Snowflake, IEnumerable<TModel>, EntityFactory<TModel, TEntity>) Checks whether the models specified in the specified models enumerable match to an entity already present in cache, if the entity matches then it is updated according the model, if not the entity is created from the supplied model using the specified entity factory . Declaration List<TEntity> AddOrUpdateAll(Snowflake scope, IEnumerable<TModel> models, EntityFactory<TModel, TEntity> factory) Parameters Type Name Description Snowflake scope IEnumerable <TModel> models an enumerable ( IEnumerable<T> ) that yields through the models that represents the data of the entities. EntityFactory <TModel, TEntity> factory the factory used to create the entity from a model. Returns Type Description List <TEntity> a list of the entities modified or added to the cache. Exceptions Type Condition ArgumentException thrown if an entity with the same key is already in cache. ArgumentNullException thrown if the specified models enumerable is null . ArgumentNullException thrown if the specified factory is null . | Improve this Doc View Source AddOrUpdateIndexed(Snowflake, IReadOnlyCollection<TModel>, EntityFactory<TModel, TEntity>) Checks whether the models specified in the specified models enumerable match to an entity already present in cache, if the entity matches then it is updated according the model, if not the entity is created from the supplied model using the specified entity factory . Declaration Dictionary<Snowflake, TEntity> AddOrUpdateIndexed(Snowflake scope, IReadOnlyCollection<TModel> models, EntityFactory<TModel, TEntity> factory) Parameters Type Name Description Snowflake scope IReadOnlyCollection <TModel> models an enumerable ( IEnumerable<T> ) that yields through the models that represents the data of the entities. EntityFactory <TModel, TEntity> factory the factory used to create the entity from a model. Returns Type Description Dictionary < Snowflake , TEntity> a dictionary that maps the entity id to the entity. Exceptions Type Condition ArgumentException thrown if an entity with the same key is already in cache. ArgumentNullException thrown if the specified models enumerable is null . ArgumentNullException thrown if the specified factory is null . | Improve this Doc View Source AddOrUpdateIndexed<TKey>(Snowflake, IReadOnlyCollection<TModel>, EntityFactory<TModel, TEntity>, Func<TEntity, TKey>) Checks whether the models specified in the specified models enumerable match to an entity already present in cache, if the entity matches then it is updated according the model, if not the entity is created from the supplied model using the specified entity factory . Declaration Dictionary<TKey, TEntity> AddOrUpdateIndexed<TKey>(Snowflake scope, IReadOnlyCollection<TModel> models, EntityFactory<TModel, TEntity> factory, Func<TEntity, TKey> keySelector) Parameters Type Name Description Snowflake scope IReadOnlyCollection <TModel> models an enumerable ( IEnumerable<T> ) that yields through the models that represents the data of the entities. EntityFactory <TModel, TEntity> factory the factory used to create the entity from a model. Func <TEntity, TKey> keySelector a function used to select a key from the entity used to map the model in the resulting dictionary. Returns Type Description Dictionary <TKey, TEntity> a dictionary that maps the entity key to the entity. Type Parameters Name Description TKey the type of the key. Exceptions Type Condition ArgumentException thrown if an entity with the same key is already in cache. ArgumentNullException thrown if the specified models enumerable is null . ArgumentNullException thrown if the specified factory is null . ArgumentNullException thrown if the specified keySelector is null . | Improve this Doc View Source CacheAsync(Snowflake, Snowflake, Func<Snowflake, CancellationToken, Task<TModel>>, EntityFactory<TModel, TEntity>, CacheBehavior, CancellationToken) Caches an entity with the specified id according to the specified behavior ( cacheBehavior ) asynchronously. Declaration ValueTask<TEntity> CacheAsync(Snowflake scope, Snowflake id, Func<Snowflake, CancellationToken, Task<TModel>> downloadFunction, EntityFactory<TModel, TEntity> factory, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake scope Snowflake id the identifier of the entity. Func < Snowflake , CancellationToken , Task <TModel>> downloadFunction a function used to download the entity. The first parameter is the id of the entity. The second parameter is the cancellation token supplied by cancellationToken . The function result is a task that represents an asynchronous operation. The task result is the entity downloaded. EntityFactory <TModel, TEntity> factory a factory used to create an entity from a supplied model. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask <TEntity> a task that represents the asynchronous operation. The task result is the entity. | Improve this Doc View Source CreateEntry(Object, Boolean) Declaration CacheEntry CreateEntry(object target, bool skipPolicyValidation = false) Parameters Type Name Description Object target Boolean skipPolicyValidation Returns Type Description CacheEntry | Improve this Doc View Source GetEntity(Snowflake, Snowflake) Tries to retrieve an entity with the specified id from the cache. Declaration TEntity GetEntity(Snowflake scope, Snowflake id) Parameters Type Name Description Snowflake scope Snowflake id the snowflake identifier of the entity to retrieve. Returns Type Description TEntity the entity retrieved; or null if the entity could not be retrieved. | Improve this Doc View Source Remove(Snowflake, Snowflake) Removes an entity by the specified id from the cache. Declaration bool Remove(Snowflake scope, Snowflake id) Parameters Type Name Description Snowflake scope Snowflake id the snowflake identifier of the entity to remove. Returns Type Description Boolean a value indicating whether the entity was removed from the cache; true indicates that the entity was found and removed from the cache, false indicates that no entity was found by the specified id . | Improve this Doc View Source Remove(Snowflake, Snowflake, out TEntity) Removes an entity by the specified id from the cache. Declaration bool Remove(Snowflake scope, Snowflake id, out TEntity entity) Parameters Type Name Description Snowflake scope Snowflake id the snowflake identifier of the entity to remove. TEntity entity ( out ) the entity removed from cache; or null if no entity was found in cache to remove. Returns Type Description Boolean a value indicating whether the entity was removed from the cache; true indicates that the entity was found and removed from the cache, false indicates that no entity was found by the specified id . | Improve this Doc View Source RemoveWhere(Snowflake, Func<TEntity, Boolean>) Removes all entities that match the specified predicate from the cache. Declaration int RemoveWhere(Snowflake scope, Func<TEntity, bool> predicate) Parameters Type Name Description Snowflake scope Func <TEntity, Boolean > predicate the predicate. Returns Type Description Int32 the number of total entities removed from cache. Exceptions Type Condition ArgumentNullException thrown if the specified predicate is null . | Improve this Doc View Source ToEnumerable(Snowflake) Collects all entities from the cache and maps them to an enumerable. Declaration IEnumerable<TEntity> ToEnumerable(Snowflake scope) Parameters Type Name Description Snowflake scope Returns Type Description IEnumerable <TEntity> an enumerable that yields through all entities in the cache. | Improve this Doc View Source Trim() Declaration void Trim() | Improve this Doc View Source TryGetEntity(Snowflake, Snowflake, out TEntity) Tries to retrieve an entity with the specified id from the cache. Declaration bool TryGetEntity(Snowflake scope, Snowflake id, out TEntity entity) Parameters Type Name Description Snowflake scope Snowflake id the snowflake identifier of the entity to retrieve. TEntity entity ( out ) the entity retrieved; or null if the entity could not be retrieved. Returns Type Description Boolean a value indicating whether the entity could be retrieved from cache."
  },
  "api/Strade.Cache.IEntityCache.html": {
    "href": "api/Strade.Cache.IEntityCache.html",
    "title": "Interface IEntityCache | Strade Developer Documentation",
    "keywords": "Interface IEntityCache Inherited Members IDisposable.Dispose() Namespace : Strade.Cache Assembly : Strade.Rest.dll Syntax public interface IEntityCache : IDisposable Properties | Improve this Doc View Source Count Gets the total number of items in the cache. Declaration int Count { get; } Property Value Type Description Int32 the total number of items in the cache. Exceptions Type Condition ObjectDisposedException thrown if the IEntityCache instance is disposed. Methods | Improve this Doc View Source GetAccessor<TEntity, TModel>(EntityType, Nullable<Snowflake>) Gets a structure that allows access to inner contents of the cache to perform basic write and read operations for entities from the specified type and optionally a scope . Declaration CacheAccessor<TEntity, TModel> GetAccessor<TEntity, TModel>(EntityType type, Snowflake? scope = default(Snowflake? )) where TEntity : IUpdateable<TModel>, IIdentifiable<Snowflake> where TModel : class, IIdentifiable<Snowflake>, new() Parameters Type Name Description EntityType type the type of the entities to access. Nullable < Snowflake > scope the scope of the accessor; or null to use no scope. Returns Type Description CacheAccessor <TEntity, TModel> a structure that allows access to inner contents of the cache to perform basic write and read operations for entities from the specified type and optionally a scope . Type Parameters Name Description TEntity the type of the entities being accessed. TModel the type of the entity model. Exceptions Type Condition ObjectDisposedException thrown if the IEntityCache instance is disposed."
  },
  "api/Strade.Cache.IIdentifiable-1.html": {
    "href": "api/Strade.Cache.IIdentifiable-1.html",
    "title": "Interface IIdentifiable<TIdentifier> | Strade Developer Documentation",
    "keywords": "Interface IIdentifiable<TIdentifier> Interface for identifiable objects. Namespace : Strade.Cache Assembly : Strade.Rest.dll Syntax public interface IIdentifiable<TIdentifier> Type Parameters Name Description TIdentifier the type of the identifier. Properties | Improve this Doc View Source Id Gets the entity identifier. Declaration TIdentifier Id { get; } Property Value Type Description TIdentifier the entity identifier."
  },
  "api/Strade.Cache.MemberCacheable.html": {
    "href": "api/Strade.Cache.MemberCacheable.html",
    "title": "Class MemberCacheable | Strade Developer Documentation",
    "keywords": "Class MemberCacheable Inheritance Object BaseCacheable < Snowflake , Member > MemberCacheable Implements ICacheable < Snowflake , Member > Inherited Members BaseCacheable<Snowflake, Member>.Client BaseCacheable<Snowflake, Member>.Entity BaseCacheable<Snowflake, Member>.Id BaseCacheable<Snowflake, Member>.IsPresent BaseCacheable<Snowflake, Member>.GetAsync(CacheBehavior, CancellationToken) BaseCacheable<Snowflake, Member>.FetchAsync(IDiscordRestClient, Snowflake, CancellationToken) BaseCacheable<Snowflake, Member>.TryFetchCached(IDiscordRestClient, Snowflake, Member) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Cache Assembly : Strade.Rest.dll Syntax public sealed class MemberCacheable : BaseCacheable<Snowflake, Member>, ICacheable<Snowflake, Member> Constructors | Improve this Doc View Source MemberCacheable(IDiscordRestClient, Snowflake, Snowflake) Declaration public MemberCacheable(IDiscordRestClient client, Snowflake guildId, Snowflake id) Parameters Type Name Description IDiscordRestClient client Snowflake guildId Snowflake id Methods | Improve this Doc View Source FetchAsync(IDiscordRestClient, Snowflake, CancellationToken) Declaration protected override ValueTask<Member> FetchAsync(IDiscordRestClient client, Snowflake id, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IDiscordRestClient client Snowflake id CancellationToken cancellationToken Returns Type Description ValueTask < Member > Overrides Strade.Cache.BaseCacheable<Strade.Entities.Snowflake, Strade.Entities.Member>.FetchAsync(Strade.IDiscordRestClient, Strade.Entities.Snowflake, System.Threading.CancellationToken) | Improve this Doc View Source TryFetchCached(IDiscordRestClient, Snowflake, out Member) Declaration protected override bool TryFetchCached(IDiscordRestClient client, Snowflake id, out Member entity) Parameters Type Name Description IDiscordRestClient client Snowflake id Member entity Returns Type Description Boolean Overrides Strade.Cache.BaseCacheable<Strade.Entities.Snowflake, Strade.Entities.Member>.TryFetchCached(Strade.IDiscordRestClient, Strade.Entities.Snowflake, Strade.Entities.Member) Implements ICacheable<TId, TEntity>"
  },
  "api/Strade.Cache.MessageCacheable.html": {
    "href": "api/Strade.Cache.MessageCacheable.html",
    "title": "Class MessageCacheable | Strade Developer Documentation",
    "keywords": "Class MessageCacheable Inheritance Object BaseCacheable < Snowflake , IMessage > MessageCacheable Implements ICacheable < Snowflake , IMessage > Inherited Members BaseCacheable<Snowflake, IMessage>.Client BaseCacheable<Snowflake, IMessage>.Entity BaseCacheable<Snowflake, IMessage>.Id BaseCacheable<Snowflake, IMessage>.IsPresent BaseCacheable<Snowflake, IMessage>.GetAsync(CacheBehavior, CancellationToken) BaseCacheable<Snowflake, IMessage>.FetchAsync(IDiscordRestClient, Snowflake, CancellationToken) BaseCacheable<Snowflake, IMessage>.TryFetchCached(IDiscordRestClient, Snowflake, IMessage) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Cache Assembly : Strade.Rest.dll Syntax public sealed class MessageCacheable : BaseCacheable<Snowflake, IMessage>, ICacheable<Snowflake, IMessage> Constructors | Improve this Doc View Source MessageCacheable(IDiscordRestClient, Snowflake, Snowflake) Declaration public MessageCacheable(IDiscordRestClient client, Snowflake channelId, Snowflake id) Parameters Type Name Description IDiscordRestClient client Snowflake channelId Snowflake id Methods | Improve this Doc View Source FetchAsync(IDiscordRestClient, Snowflake, CancellationToken) Declaration protected override ValueTask<IMessage> FetchAsync(IDiscordRestClient client, Snowflake id, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IDiscordRestClient client Snowflake id CancellationToken cancellationToken Returns Type Description ValueTask < IMessage > Overrides Strade.Cache.BaseCacheable<Strade.Entities.Snowflake, Strade.Entities.IMessage>.FetchAsync(Strade.IDiscordRestClient, Strade.Entities.Snowflake, System.Threading.CancellationToken) | Improve this Doc View Source TryFetchCached(IDiscordRestClient, Snowflake, out IMessage) Declaration protected override bool TryFetchCached(IDiscordRestClient client, Snowflake id, out IMessage entity) Parameters Type Name Description IDiscordRestClient client Snowflake id IMessage entity Returns Type Description Boolean Overrides Strade.Cache.BaseCacheable<Strade.Entities.Snowflake, Strade.Entities.IMessage>.TryFetchCached(Strade.IDiscordRestClient, Strade.Entities.Snowflake, Strade.Entities.IMessage) Implements ICacheable<TId, TEntity>"
  },
  "api/Strade.Cache.MessageChannelCacheable.html": {
    "href": "api/Strade.Cache.MessageChannelCacheable.html",
    "title": "Class MessageChannelCacheable | Strade Developer Documentation",
    "keywords": "Class MessageChannelCacheable Inheritance Object BaseCacheable < Snowflake , IMessageChannel > MessageChannelCacheable Implements ICacheable < Snowflake , IMessageChannel > Inherited Members BaseCacheable<Snowflake, IMessageChannel>.Client BaseCacheable<Snowflake, IMessageChannel>.Entity BaseCacheable<Snowflake, IMessageChannel>.Id BaseCacheable<Snowflake, IMessageChannel>.IsPresent BaseCacheable<Snowflake, IMessageChannel>.GetAsync(CacheBehavior, CancellationToken) BaseCacheable<Snowflake, IMessageChannel>.FetchAsync(IDiscordRestClient, Snowflake, CancellationToken) BaseCacheable<Snowflake, IMessageChannel>.TryFetchCached(IDiscordRestClient, Snowflake, IMessageChannel) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Cache Assembly : Strade.Rest.dll Syntax public sealed class MessageChannelCacheable : BaseCacheable<Snowflake, IMessageChannel>, ICacheable<Snowflake, IMessageChannel> Constructors | Improve this Doc View Source MessageChannelCacheable(IDiscordRestClient, Snowflake) Declaration public MessageChannelCacheable(IDiscordRestClient client, Snowflake id) Parameters Type Name Description IDiscordRestClient client Snowflake id Methods | Improve this Doc View Source FetchAsync(IDiscordRestClient, Snowflake, CancellationToken) Declaration protected override ValueTask<IMessageChannel> FetchAsync(IDiscordRestClient client, Snowflake id, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IDiscordRestClient client Snowflake id CancellationToken cancellationToken Returns Type Description ValueTask < IMessageChannel > Overrides Strade.Cache.BaseCacheable<Strade.Entities.Snowflake, Strade.Entities.IMessageChannel>.FetchAsync(Strade.IDiscordRestClient, Strade.Entities.Snowflake, System.Threading.CancellationToken) | Improve this Doc View Source TryFetchCached(IDiscordRestClient, Snowflake, out IMessageChannel) Declaration protected override bool TryFetchCached(IDiscordRestClient client, Snowflake id, out IMessageChannel entity) Parameters Type Name Description IDiscordRestClient client Snowflake id IMessageChannel entity Returns Type Description Boolean Overrides Strade.Cache.BaseCacheable<Strade.Entities.Snowflake, Strade.Entities.IMessageChannel>.TryFetchCached(Strade.IDiscordRestClient, Strade.Entities.Snowflake, Strade.Entities.IMessageChannel) Implements ICacheable<TId, TEntity>"
  },
  "api/Strade.Cache.Policy.CachePolicy.html": {
    "href": "api/Strade.Cache.Policy.CachePolicy.html",
    "title": "Class CachePolicy | Strade Developer Documentation",
    "keywords": "Class CachePolicy The base implementation of an ICachePolicy . Inheritance Object CachePolicy Implements ICachePolicy Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Cache.Policy Assembly : Strade.Rest.dll Syntax public class CachePolicy : ICachePolicy Constructors | Improve this Doc View Source CachePolicy(CacheReferenceType, Nullable<TimeSpan>) Initializes a new instance of the CachePolicy class. Declaration public CachePolicy(CacheReferenceType referenceType = CacheReferenceType.Strong, TimeSpan? lifetime = default(TimeSpan? )) Parameters Type Name Description CacheReferenceType referenceType the type of the reference for the cache. None Denotes that the entry should not be cached. Strong Denotes that the entry holds a strong reference to the cached value. Tracking Denotes that the entry is hold until the guaranteed lifetime expires, after this the cache entry will become a weak reference to the strong value handle. Weak Denotes that the entry holds a weak reference to the cached value. Nullable < TimeSpan > lifetime the guaranteed lifetime for the cache entry; if null the entry will never expire. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified referenceType is unsupported. ArgumentOutOfRangeException thrown if the specified lifetime is negative. ArgumentException thrown if the specified referenceType is None and lifetime is set (not null ). Properties | Improve this Doc View Source Lifetime Declaration public TimeSpan? Lifetime { get; } Property Value Type Description Nullable < TimeSpan > | Improve this Doc View Source ReferenceType Declaration public CacheReferenceType ReferenceType { get; } Property Value Type Description CacheReferenceType Methods | Improve this Doc View Source ShouldCache(EntityType, Object) Declaration public virtual bool ShouldCache(EntityType type, object entity) Parameters Type Name Description EntityType type Object entity Returns Type Description Boolean Implements ICachePolicy"
  },
  "api/Strade.Cache.Policy.CachePolicyOverrideBehavior.html": {
    "href": "api/Strade.Cache.Policy.CachePolicyOverrideBehavior.html",
    "title": "Enum CachePolicyOverrideBehavior | Strade Developer Documentation",
    "keywords": "Enum CachePolicyOverrideBehavior A set of override behaviors used to override existing cache policies. Namespace : Strade.Cache.Policy Assembly : Strade.Rest.dll Syntax public enum CachePolicyOverrideBehavior : byte Fields Name Description Replace Denotes that the existing cache policy should be replaced regardless of whether a cache policy already exists for the entity type. Throw Denotes that an exception should be thrown in a cache policy already exists for the entity type. Extension Methods EnumExtensions.GetName<CachePolicyOverrideBehavior>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Cache.Policy.CacheReferenceType.html": {
    "href": "api/Strade.Cache.Policy.CacheReferenceType.html",
    "title": "Enum CacheReferenceType | Strade Developer Documentation",
    "keywords": "Enum CacheReferenceType A set of types of references that can be hold to cached entities. Namespace : Strade.Cache.Policy Assembly : Strade.Rest.dll Syntax public enum CacheReferenceType : byte Fields Name Description None Denotes that the entry should not be cached. Strong Denotes that the entry holds a strong reference to the cached value. Tracking Denotes that the entry is hold until the guaranteed lifetime expires, after this the cache entry will become a weak reference to the strong value handle. Weak Denotes that the entry holds a weak reference to the cached value. Extension Methods EnumExtensions.GetName<CacheReferenceType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Cache.Policy.html": {
    "href": "api/Strade.Cache.Policy.html",
    "title": "Namespace Strade.Cache.Policy | Strade Developer Documentation",
    "keywords": "Namespace Strade.Cache.Policy Classes CachePolicy The base implementation of an ICachePolicy . Interfaces ICachePolicy An interface used to create cache policies that specify how entities should be cached. Enums CachePolicyOverrideBehavior A set of override behaviors used to override existing cache policies. CacheReferenceType A set of types of references that can be hold to cached entities."
  },
  "api/Strade.Cache.Policy.ICachePolicy.html": {
    "href": "api/Strade.Cache.Policy.ICachePolicy.html",
    "title": "Interface ICachePolicy | Strade Developer Documentation",
    "keywords": "Interface ICachePolicy An interface used to create cache policies that specify how entities should be cached. Namespace : Strade.Cache.Policy Assembly : Strade.Rest.dll Syntax public interface ICachePolicy Properties | Improve this Doc View Source Lifetime Gets the guaranteed lifetime for the cache entry; if null the entry will never expire. Declaration TimeSpan? Lifetime { get; } Property Value Type Description Nullable < TimeSpan > the guaranteed lifetime for the cache entry; if null the entry will never expire. | Improve this Doc View Source ReferenceType Gets the type of the reference for the cache. Declaration CacheReferenceType ReferenceType { get; } Property Value Type Description CacheReferenceType the type of the reference for the cache. None Denotes that the entry should not be cached. Strong Denotes that the entry holds a strong reference to the cached value. Tracking Denotes that the entry is hold until the guaranteed lifetime expires, after this the cache entry will become a weak reference to the strong value handle. Weak Denotes that the entry holds a weak reference to the cached value. Methods | Improve this Doc View Source ShouldCache(EntityType, Object) Gets a value indicating whether the specified entity should be put in cache. Declaration bool ShouldCache(EntityType type, object entity) Parameters Type Name Description EntityType type the type of the entity. Object entity the entity. Returns Type Description Boolean a value indicating whether the specified entity should be put in cache."
  },
  "api/Strade.Cache.PrefetchedCacheable-2.html": {
    "href": "api/Strade.Cache.PrefetchedCacheable-2.html",
    "title": "Class PrefetchedCacheable<TId, TEntity> | Strade Developer Documentation",
    "keywords": "Class PrefetchedCacheable<TId, TEntity> Inheritance Object PrefetchedCacheable<TId, TEntity> Implements ICacheable <TId, TEntity> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Cache Assembly : Strade.Rest.dll Syntax public sealed class PrefetchedCacheable<TId, TEntity> : ICacheable<TId, TEntity> where TEntity : IIdentifiable<TId> Type Parameters Name Description TId TEntity Constructors | Improve this Doc View Source PrefetchedCacheable(TEntity) Declaration public PrefetchedCacheable(TEntity entity) Parameters Type Name Description TEntity entity Properties | Improve this Doc View Source Entity Declaration public TEntity Entity { get; } Property Value Type Description TEntity | Improve this Doc View Source Id Declaration public TId Id { get; } Property Value Type Description TId | Improve this Doc View Source IsPresent Declaration public bool IsPresent { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source GetAsync(CacheBehavior, CancellationToken) Declaration public ValueTask<TEntity> GetAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask <TEntity> Implements ICacheable<TId, TEntity>"
  },
  "api/Strade.Cache.RestGuildCacheable.html": {
    "href": "api/Strade.Cache.RestGuildCacheable.html",
    "title": "Class RestGuildCacheable | Strade Developer Documentation",
    "keywords": "Class RestGuildCacheable Inheritance Object BaseCacheable < Snowflake , IGuild > RestGuildCacheable Implements ICacheable < Snowflake , IGuild > Inherited Members BaseCacheable<Snowflake, IGuild>.Client BaseCacheable<Snowflake, IGuild>.Entity BaseCacheable<Snowflake, IGuild>.Id BaseCacheable<Snowflake, IGuild>.IsPresent BaseCacheable<Snowflake, IGuild>.GetAsync(CacheBehavior, CancellationToken) BaseCacheable<Snowflake, IGuild>.FetchAsync(IDiscordRestClient, Snowflake, CancellationToken) BaseCacheable<Snowflake, IGuild>.TryFetchCached(IDiscordRestClient, Snowflake, IGuild) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Cache Assembly : Strade.Rest.dll Syntax public sealed class RestGuildCacheable : BaseCacheable<Snowflake, IGuild>, ICacheable<Snowflake, IGuild> Constructors | Improve this Doc View Source RestGuildCacheable(IDiscordRestClient, Snowflake) Declaration public RestGuildCacheable(IDiscordRestClient client, Snowflake id) Parameters Type Name Description IDiscordRestClient client Snowflake id Methods | Improve this Doc View Source FetchAsync(IDiscordRestClient, Snowflake, CancellationToken) Declaration protected override ValueTask<IGuild> FetchAsync(IDiscordRestClient client, Snowflake id, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IDiscordRestClient client Snowflake id CancellationToken cancellationToken Returns Type Description ValueTask < IGuild > Overrides Strade.Cache.BaseCacheable<Strade.Entities.Snowflake, Strade.Entities.IGuild>.FetchAsync(Strade.IDiscordRestClient, Strade.Entities.Snowflake, System.Threading.CancellationToken) | Improve this Doc View Source TryFetchCached(IDiscordRestClient, Snowflake, out IGuild) Declaration protected override bool TryFetchCached(IDiscordRestClient client, Snowflake id, out IGuild entity) Parameters Type Name Description IDiscordRestClient client Snowflake id IGuild entity Returns Type Description Boolean Overrides Strade.Cache.BaseCacheable<Strade.Entities.Snowflake, Strade.Entities.IGuild>.TryFetchCached(Strade.IDiscordRestClient, Strade.Entities.Snowflake, Strade.Entities.IGuild) Implements ICacheable<TId, TEntity>"
  },
  "api/Strade.Cache.ScopedSnowflake.html": {
    "href": "api/Strade.Cache.ScopedSnowflake.html",
    "title": "Struct ScopedSnowflake | Strade Developer Documentation",
    "keywords": "Struct ScopedSnowflake A structure that consists of a snowflake and a snowflake representing the scope. Implements IEquatable < ScopedSnowflake > Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Cache Assembly : Strade.Rest.dll Syntax public struct ScopedSnowflake : IEquatable<ScopedSnowflake> Constructors | Improve this Doc View Source ScopedSnowflake(Snowflake, Snowflake) Initializes a new instance of the ScopedSnowflake struct. Declaration public ScopedSnowflake(Snowflake scope, Snowflake id) Parameters Type Name Description Snowflake scope the scope value. Snowflake id the identifier value. Properties | Improve this Doc View Source Id Gets the identifier value. Declaration public Snowflake Id { get; } Property Value Type Description Snowflake the identifier value. | Improve this Doc View Source Scope Gets the scope value. Declaration public Snowflake Scope { get; } Property Value Type Description Snowflake the scope value. Methods | Improve this Doc View Source Equals(ScopedSnowflake) Declaration public bool Equals(ScopedSnowflake other) Parameters Type Name Description ScopedSnowflake other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(ScopedSnowflake, ScopedSnowflake) Declaration public static bool operator ==(ScopedSnowflake left, ScopedSnowflake right) Parameters Type Name Description ScopedSnowflake left ScopedSnowflake right Returns Type Description Boolean | Improve this Doc View Source Inequality(ScopedSnowflake, ScopedSnowflake) Declaration public static bool operator !=(ScopedSnowflake left, ScopedSnowflake right) Parameters Type Name Description ScopedSnowflake left ScopedSnowflake right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Cache.UserCacheable.html": {
    "href": "api/Strade.Cache.UserCacheable.html",
    "title": "Class UserCacheable | Strade Developer Documentation",
    "keywords": "Class UserCacheable Inheritance Object BaseCacheable < Snowflake , User > UserCacheable Implements ICacheable < Snowflake , User > Inherited Members BaseCacheable<Snowflake, User>.Client BaseCacheable<Snowflake, User>.Entity BaseCacheable<Snowflake, User>.Id BaseCacheable<Snowflake, User>.IsPresent BaseCacheable<Snowflake, User>.GetAsync(CacheBehavior, CancellationToken) BaseCacheable<Snowflake, User>.FetchAsync(IDiscordRestClient, Snowflake, CancellationToken) BaseCacheable<Snowflake, User>.TryFetchCached(IDiscordRestClient, Snowflake, User) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Cache Assembly : Strade.Rest.dll Syntax public sealed class UserCacheable : BaseCacheable<Snowflake, User>, ICacheable<Snowflake, User> Constructors | Improve this Doc View Source UserCacheable(IDiscordRestClient, Snowflake) Declaration public UserCacheable(IDiscordRestClient client, Snowflake id) Parameters Type Name Description IDiscordRestClient client Snowflake id Methods | Improve this Doc View Source FetchAsync(IDiscordRestClient, Snowflake, CancellationToken) Declaration protected override ValueTask<User> FetchAsync(IDiscordRestClient client, Snowflake id, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IDiscordRestClient client Snowflake id CancellationToken cancellationToken Returns Type Description ValueTask < User > Overrides Strade.Cache.BaseCacheable<Strade.Entities.Snowflake, Strade.Entities.User>.FetchAsync(Strade.IDiscordRestClient, Strade.Entities.Snowflake, System.Threading.CancellationToken) | Improve this Doc View Source TryFetchCached(IDiscordRestClient, Snowflake, out User) Declaration protected override bool TryFetchCached(IDiscordRestClient client, Snowflake id, out User entity) Parameters Type Name Description IDiscordRestClient client Snowflake id User entity Returns Type Description Boolean Overrides Strade.Cache.BaseCacheable<Strade.Entities.Snowflake, Strade.Entities.User>.TryFetchCached(Strade.IDiscordRestClient, Strade.Entities.Snowflake, Strade.Entities.User) Implements ICacheable<TId, TEntity>"
  },
  "api/Strade.Commands.Attributes.AliasesAttribute.html": {
    "href": "api/Strade.Commands.Attributes.AliasesAttribute.html",
    "title": "Class AliasesAttribute | Strade Developer Documentation",
    "keywords": "Class AliasesAttribute An attribute used to add aliases to a command. If applied multiple all specified aliases from all attributes are used. Inheritance Object Attribute AliasesAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Attributes Assembly : Strade.Commands.dll Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = true, Inherited = true)] public sealed class AliasesAttribute : Attribute Constructors | Improve this Doc View Source AliasesAttribute(IEnumerable<String>) Initializes a new instance of the AliasesAttribute class. Declaration public AliasesAttribute(IEnumerable<string> aliases) Parameters Type Name Description IEnumerable < String > aliases an enumerable that enumerates through the command aliases. Exceptions Type Condition ArgumentNullException thrown if the specified aliases parameter is null . | Improve this Doc View Source AliasesAttribute(String[]) Initializes a new instance of the AliasesAttribute class. Declaration public AliasesAttribute(params string[] aliases) Parameters Type Name Description String [] aliases the command aliases. Exceptions Type Condition ArgumentNullException thrown if the specified aliases parameter is null . Properties | Improve this Doc View Source Aliases Gets an enumerable that enumerates through the command aliases. Declaration public IEnumerable<string> Aliases { get; } Property Value Type Description IEnumerable < String > an enumerable that enumerates through the command aliases."
  },
  "api/Strade.Commands.Attributes.AutoInjectAttribute.html": {
    "href": "api/Strade.Commands.Attributes.AutoInjectAttribute.html",
    "title": "Class AutoInjectAttribute | Strade Developer Documentation",
    "keywords": "Class AutoInjectAttribute An attribute used to auto inject properties. Inheritance Object Attribute AutoInjectAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Attributes Assembly : Strade.Commands.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false, Inherited = true)] public sealed class AutoInjectAttribute : Attribute"
  },
  "api/Strade.Commands.Attributes.CommandAttribute.html": {
    "href": "api/Strade.Commands.Attributes.CommandAttribute.html",
    "title": "Class CommandAttribute | Strade Developer Documentation",
    "keywords": "Class CommandAttribute An Attribute for methods that defines a command. Inheritance Object Attribute CommandAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Attributes Assembly : Strade.Commands.dll Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = false, Inherited = true)] public sealed class CommandAttribute : Attribute Constructors | Improve this Doc View Source CommandAttribute() Initializes a new instance of the CommandAttribute class. Declaration public CommandAttribute() | Improve this Doc View Source CommandAttribute(String) Initializes a new instance of the CommandAttribute class. Declaration public CommandAttribute(string name) Parameters Type Name Description String name the name of the command. Exceptions Type Condition ArgumentException thrown if the specified command name is null . Properties | Improve this Doc View Source IsAsync Gets or sets a value indicating whether gets a value indicating the command should be executed asynchronously from the gateway / event queue thread. Declaration public bool IsAsync { get; set; } Property Value Type Description Boolean a value indicating the command should be executed asynchronously from the gateway / event queue thread. | Improve this Doc View Source Name Gets the name of the command. Declaration public string Name { get; } Property Value Type Description String or sets the name of the command; or null if the command name will be taken from the method name)."
  },
  "api/Strade.Commands.Attributes.CommandResponseTypeAttribute.html": {
    "href": "api/Strade.Commands.Attributes.CommandResponseTypeAttribute.html",
    "title": "Class CommandResponseTypeAttribute | Strade Developer Documentation",
    "keywords": "Class CommandResponseTypeAttribute Inheritance Object Attribute CommandResponseTypeAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Attributes Assembly : Strade.Commands.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = false, Inherited = false)] public sealed class CommandResponseTypeAttribute : Attribute Constructors | Improve this Doc View Source CommandResponseTypeAttribute(CommandResponseType) Initializes a new instance of the CommandResponseTypeAttribute class. Declaration public CommandResponseTypeAttribute(CommandResponseType responseType) Parameters Type Name Description CommandResponseType responseType the command response type. Properties | Improve this Doc View Source ResponseType Declaration public CommandResponseType ResponseType { get; } Property Value Type Description CommandResponseType"
  },
  "api/Strade.Commands.Attributes.DescriptionAttribute.html": {
    "href": "api/Strade.Commands.Attributes.DescriptionAttribute.html",
    "title": "Class DescriptionAttribute | Strade Developer Documentation",
    "keywords": "Class DescriptionAttribute An attribute used to describe elements. Inheritance Object Attribute DescriptionAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Attributes Assembly : Strade.Commands.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method | AttributeTargets.Parameter, AllowMultiple = false, Inherited = false)] public sealed class DescriptionAttribute : Attribute Constructors | Improve this Doc View Source DescriptionAttribute(String, Type) Initializes a new instance of the DescriptionAttribute class. Declaration public DescriptionAttribute(string description, Type resourceManagerType = null) Parameters Type Name Description String description the description. Type resourceManagerType the resource manager to use. Properties | Improve this Doc View Source Description Gets the description. Declaration public string Description { get; } Property Value Type Description String the description. | Improve this Doc View Source ResourceManager Gets the resource manager to use. Declaration public Type ResourceManager { get; } Property Value Type Description Type the resource manager to use."
  },
  "api/Strade.Commands.Attributes.GroupAttribute.html": {
    "href": "api/Strade.Commands.Attributes.GroupAttribute.html",
    "title": "Class GroupAttribute | Strade Developer Documentation",
    "keywords": "Class GroupAttribute An attribute used to group commands. Inheritance Object Attribute GroupAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Attributes Assembly : Strade.Commands.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = false, Inherited = true)] public sealed class GroupAttribute : Attribute Constructors | Improve this Doc View Source GroupAttribute(String) Initializes a new instance of the GroupAttribute class. Declaration public GroupAttribute(string group) Parameters Type Name Description String group the group name. Properties | Improve this Doc View Source Group Gets the group name. Declaration public string Group { get; } Property Value Type Description String the group name."
  },
  "api/Strade.Commands.Attributes.HiddenAttribute.html": {
    "href": "api/Strade.Commands.Attributes.HiddenAttribute.html",
    "title": "Class HiddenAttribute | Strade Developer Documentation",
    "keywords": "Class HiddenAttribute Inheritance Object Attribute HiddenAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Attributes Assembly : Strade.Commands.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = false, Inherited = true)] public sealed class HiddenAttribute : Attribute"
  },
  "api/Strade.Commands.Attributes.html": {
    "href": "api/Strade.Commands.Attributes.html",
    "title": "Namespace Strade.Commands.Attributes | Strade Developer Documentation",
    "keywords": "Namespace Strade.Commands.Attributes Classes AliasesAttribute An attribute used to add aliases to a command. If applied multiple all specified aliases from all attributes are used. AutoInjectAttribute An attribute used to auto inject properties. CommandAttribute An Attribute for methods that defines a command. CommandResponseTypeAttribute DescriptionAttribute An attribute used to describe elements. GroupAttribute An attribute used to group commands. HiddenAttribute NameAttribute An attribute used to name modules. ParameterAttribute An attribute used to specify basic information for command parameters. PreconditionAttribute An attribute used to add preconditions to commands. RemainderAttribute An attribute for command parameter that specifies the remainder behavior. RemoteAttribute An attribute used to enable parameter remoting. TagAttribute An attribute used to add tags to a command. If applied multiple all specified tags from all attributes are used."
  },
  "api/Strade.Commands.Attributes.NameAttribute.html": {
    "href": "api/Strade.Commands.Attributes.NameAttribute.html",
    "title": "Class NameAttribute | Strade Developer Documentation",
    "keywords": "Class NameAttribute An attribute used to name modules. Inheritance Object Attribute NameAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Attributes Assembly : Strade.Commands.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = true)] public sealed class NameAttribute : Attribute Constructors | Improve this Doc View Source NameAttribute(String) Initializes a new instance of the NameAttribute class. Declaration public NameAttribute(string name) Parameters Type Name Description String name the name of the module. Properties | Improve this Doc View Source Name Gets or sets the name of the module. Declaration public string Name { get; set; } Property Value Type Description String the name of the module."
  },
  "api/Strade.Commands.Attributes.ParameterAttribute.html": {
    "href": "api/Strade.Commands.Attributes.ParameterAttribute.html",
    "title": "Class ParameterAttribute | Strade Developer Documentation",
    "keywords": "Class ParameterAttribute An attribute used to specify basic information for command parameters. Inheritance Object Attribute ParameterAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Attributes Assembly : Strade.Commands.dll Syntax [AttributeUsage(AttributeTargets.Parameter, AllowMultiple = false, Inherited = true)] public sealed class ParameterAttribute : Attribute Constructors | Improve this Doc View Source ParameterAttribute() Initializes a new instance of the ParameterAttribute class. Declaration public ParameterAttribute() | Improve this Doc View Source ParameterAttribute(String) Initializes a new instance of the ParameterAttribute class. Declaration public ParameterAttribute(string name) Parameters Type Name Description String name the parameter name. Exceptions Type Condition ArgumentException thrown if the specified name is blank. Properties | Improve this Doc View Source Name Gets the name of the parameter. Declaration public string Name { get; } Property Value Type Description String the name of the parameter; if null taken from the parameter name."
  },
  "api/Strade.Commands.Attributes.PreconditionAttribute.html": {
    "href": "api/Strade.Commands.Attributes.PreconditionAttribute.html",
    "title": "Class PreconditionAttribute | Strade Developer Documentation",
    "keywords": "Class PreconditionAttribute An attribute used to add preconditions to commands. Inheritance Object Attribute PreconditionAttribute RequireAdministratorAttribute RequireBotPermissionAttribute RequireGuildAttribute RequireNsfwAttribute RequireOwnerAttribute RequirePreconditionAttribute RequirePrivateAttribute RequireUserAttribute RequireUserPermissionAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Attributes Assembly : Strade.Commands.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = true, Inherited = true)] public abstract class PreconditionAttribute : Attribute Methods | Improve this Doc View Source CreatePrecondition() Creates the precondition. Declaration public abstract IPrecondition CreatePrecondition() Returns Type Description IPrecondition the precondition instance."
  },
  "api/Strade.Commands.Attributes.Preconditions.html": {
    "href": "api/Strade.Commands.Attributes.Preconditions.html",
    "title": "Namespace Strade.Commands.Attributes.Preconditions | Strade Developer Documentation",
    "keywords": "Namespace Strade.Commands.Attributes.Preconditions Classes RequireAdministratorAttribute A precondition used to enforce administrator permissions to execute the command. RequireBotPermissionAttribute A precondition used to enforce that the current bot has a specific permission. RequireGuildAttribute A precondition that ensures that the user is in a guild (channel) context. RequireNsfwAttribute An attribute which adds a precondition used to check whether a channel has NSFW (Not-Safe-For-Work Content) enabled on it. RequireOwnerAttribute An attribute which adds a precondition used to check whether the calling user is the current application owner. RequirePreconditionAttribute An attribute used to add preconditions to a command. RequirePrivateAttribute A precondition that ensures that the user is in a private (channel) context. RequireUserAttribute An attribute which adds a precondition which ensures that a user is executing the command (not a bot). RequireUserPermissionAttribute A precondition used to enforce that the executing user has a specific permission."
  },
  "api/Strade.Commands.Attributes.Preconditions.RequireAdministratorAttribute.html": {
    "href": "api/Strade.Commands.Attributes.Preconditions.RequireAdministratorAttribute.html",
    "title": "Class RequireAdministratorAttribute | Strade Developer Documentation",
    "keywords": "Class RequireAdministratorAttribute A precondition used to enforce administrator permissions to execute the command. Inheritance Object Attribute PreconditionAttribute RequireAdministratorAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Attributes.Preconditions Assembly : Strade.Commands.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = false, Inherited = true)] public sealed class RequireAdministratorAttribute : PreconditionAttribute Methods | Improve this Doc View Source CreatePrecondition() Declaration public override IPrecondition CreatePrecondition() Returns Type Description IPrecondition Overrides PreconditionAttribute.CreatePrecondition()"
  },
  "api/Strade.Commands.Attributes.Preconditions.RequireBotPermissionAttribute.html": {
    "href": "api/Strade.Commands.Attributes.Preconditions.RequireBotPermissionAttribute.html",
    "title": "Class RequireBotPermissionAttribute | Strade Developer Documentation",
    "keywords": "Class RequireBotPermissionAttribute A precondition used to enforce that the current bot has a specific permission. Inheritance Object Attribute PreconditionAttribute RequireBotPermissionAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Attributes.Preconditions Assembly : Strade.Commands.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = false, Inherited = true)] public class RequireBotPermissionAttribute : PreconditionAttribute Constructors | Improve this Doc View Source RequireBotPermissionAttribute(Permissions) Initializes a new instance of the RequireBotPermissionAttribute class. Declaration public RequireBotPermissionAttribute(Permissions permission) Parameters Type Name Description Permissions permission the permissions required. Properties | Improve this Doc View Source Permission Gets the permissions required. Declaration public Permissions Permission { get; } Property Value Type Description Permissions the permissions required. Methods | Improve this Doc View Source CreatePrecondition() Declaration public override IPrecondition CreatePrecondition() Returns Type Description IPrecondition Overrides PreconditionAttribute.CreatePrecondition()"
  },
  "api/Strade.Commands.Attributes.Preconditions.RequireGuildAttribute.html": {
    "href": "api/Strade.Commands.Attributes.Preconditions.RequireGuildAttribute.html",
    "title": "Class RequireGuildAttribute | Strade Developer Documentation",
    "keywords": "Class RequireGuildAttribute A precondition that ensures that the user is in a guild (channel) context. Inheritance Object Attribute PreconditionAttribute RequireGuildAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Attributes.Preconditions Assembly : Strade.Commands.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = false, Inherited = true)] public sealed class RequireGuildAttribute : PreconditionAttribute Methods | Improve this Doc View Source CreatePrecondition() Declaration public override IPrecondition CreatePrecondition() Returns Type Description IPrecondition Overrides PreconditionAttribute.CreatePrecondition()"
  },
  "api/Strade.Commands.Attributes.Preconditions.RequireNsfwAttribute.html": {
    "href": "api/Strade.Commands.Attributes.Preconditions.RequireNsfwAttribute.html",
    "title": "Class RequireNsfwAttribute | Strade Developer Documentation",
    "keywords": "Class RequireNsfwAttribute An attribute which adds a precondition used to check whether a channel has NSFW (Not-Safe-For-Work Content) enabled on it. Inheritance Object Attribute PreconditionAttribute RequireNsfwAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Attributes.Preconditions Assembly : Strade.Commands.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = false, Inherited = true)] public sealed class RequireNsfwAttribute : PreconditionAttribute Methods | Improve this Doc View Source CreatePrecondition() Declaration public override IPrecondition CreatePrecondition() Returns Type Description IPrecondition Overrides PreconditionAttribute.CreatePrecondition()"
  },
  "api/Strade.Commands.Attributes.Preconditions.RequireOwnerAttribute.html": {
    "href": "api/Strade.Commands.Attributes.Preconditions.RequireOwnerAttribute.html",
    "title": "Class RequireOwnerAttribute | Strade Developer Documentation",
    "keywords": "Class RequireOwnerAttribute An attribute which adds a precondition used to check whether the calling user is the current application owner. Inheritance Object Attribute PreconditionAttribute RequireOwnerAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Attributes.Preconditions Assembly : Strade.Commands.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = false, Inherited = true)] public sealed class RequireOwnerAttribute : PreconditionAttribute Methods | Improve this Doc View Source CreatePrecondition() Declaration public override IPrecondition CreatePrecondition() Returns Type Description IPrecondition Overrides PreconditionAttribute.CreatePrecondition()"
  },
  "api/Strade.Commands.Attributes.Preconditions.RequirePreconditionAttribute.html": {
    "href": "api/Strade.Commands.Attributes.Preconditions.RequirePreconditionAttribute.html",
    "title": "Class RequirePreconditionAttribute | Strade Developer Documentation",
    "keywords": "Class RequirePreconditionAttribute An attribute used to add preconditions to a command. Inheritance Object Attribute PreconditionAttribute RequirePreconditionAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Attributes.Preconditions Assembly : Strade.Commands.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = false, Inherited = true)] public sealed class RequirePreconditionAttribute : PreconditionAttribute Constructors | Improve this Doc View Source RequirePreconditionAttribute(Type, Object[]) Initializes a new instance of the RequirePreconditionAttribute class. Declaration public RequirePreconditionAttribute(Type preconditionType, params object[] arguments) Parameters Type Name Description Type preconditionType the type of the precondition class. Object [] arguments the instantiation arguments for the type constructor. Exceptions Type Condition ArgumentNullException thrown if the preconditionType is null . ArgumentNullException thrown if the arguments is null . Methods | Improve this Doc View Source CreatePrecondition() Declaration public override IPrecondition CreatePrecondition() Returns Type Description IPrecondition Overrides PreconditionAttribute.CreatePrecondition()"
  },
  "api/Strade.Commands.Attributes.Preconditions.RequirePrivateAttribute.html": {
    "href": "api/Strade.Commands.Attributes.Preconditions.RequirePrivateAttribute.html",
    "title": "Class RequirePrivateAttribute | Strade Developer Documentation",
    "keywords": "Class RequirePrivateAttribute A precondition that ensures that the user is in a private (channel) context. Inheritance Object Attribute PreconditionAttribute RequirePrivateAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Attributes.Preconditions Assembly : Strade.Commands.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = false, Inherited = true)] public sealed class RequirePrivateAttribute : PreconditionAttribute Methods | Improve this Doc View Source CreatePrecondition() Declaration public override IPrecondition CreatePrecondition() Returns Type Description IPrecondition Overrides PreconditionAttribute.CreatePrecondition()"
  },
  "api/Strade.Commands.Attributes.Preconditions.RequireUserAttribute.html": {
    "href": "api/Strade.Commands.Attributes.Preconditions.RequireUserAttribute.html",
    "title": "Class RequireUserAttribute | Strade Developer Documentation",
    "keywords": "Class RequireUserAttribute An attribute which adds a precondition which ensures that a user is executing the command (not a bot). Inheritance Object Attribute PreconditionAttribute RequireUserAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Attributes.Preconditions Assembly : Strade.Commands.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = false, Inherited = true)] public sealed class RequireUserAttribute : PreconditionAttribute Methods | Improve this Doc View Source CreatePrecondition() Declaration public override IPrecondition CreatePrecondition() Returns Type Description IPrecondition Overrides PreconditionAttribute.CreatePrecondition()"
  },
  "api/Strade.Commands.Attributes.Preconditions.RequireUserPermissionAttribute.html": {
    "href": "api/Strade.Commands.Attributes.Preconditions.RequireUserPermissionAttribute.html",
    "title": "Class RequireUserPermissionAttribute | Strade Developer Documentation",
    "keywords": "Class RequireUserPermissionAttribute A precondition used to enforce that the executing user has a specific permission. Inheritance Object Attribute PreconditionAttribute RequireUserPermissionAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Attributes.Preconditions Assembly : Strade.Commands.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = false, Inherited = true)] public class RequireUserPermissionAttribute : PreconditionAttribute Constructors | Improve this Doc View Source RequireUserPermissionAttribute(Permissions) Initializes a new instance of the RequireUserPermissionAttribute class. Declaration public RequireUserPermissionAttribute(Permissions permission) Parameters Type Name Description Permissions permission the permissions required. Properties | Improve this Doc View Source Permission Gets the permissions required. Declaration public Permissions Permission { get; } Property Value Type Description Permissions the permissions required. Methods | Improve this Doc View Source CreatePrecondition() Declaration public override IPrecondition CreatePrecondition() Returns Type Description IPrecondition Overrides PreconditionAttribute.CreatePrecondition()"
  },
  "api/Strade.Commands.Attributes.RemainderAttribute.html": {
    "href": "api/Strade.Commands.Attributes.RemainderAttribute.html",
    "title": "Class RemainderAttribute | Strade Developer Documentation",
    "keywords": "Class RemainderAttribute An attribute for command parameter that specifies the remainder behavior. Inheritance Object Attribute RemainderAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Attributes Assembly : Strade.Commands.dll Syntax [AttributeUsage(AttributeTargets.Parameter, AllowMultiple = false, Inherited = true)] public sealed class RemainderAttribute : Attribute Constructors | Improve this Doc View Source RemainderAttribute(Boolean) Initializes a new instance of the RemainderAttribute class. Declaration public RemainderAttribute(bool remainder = true) Parameters Type Name Description Boolean remainder a value indicating whether the parameter applied on is a remainder parameter (remainder parameters consume all remaining arguments). Properties | Improve this Doc View Source IsRemainder Gets or sets a value indicating whether the parameter applied on is a remainder parameter (remainder parameters consume all remaining arguments). Declaration public bool IsRemainder { get; set; } Property Value Type Description Boolean a value indicating whether the parameter applied on is a remainder parameter (remainder parameters consume all remaining arguments)."
  },
  "api/Strade.Commands.Attributes.RemoteAttribute.html": {
    "href": "api/Strade.Commands.Attributes.RemoteAttribute.html",
    "title": "Class RemoteAttribute | Strade Developer Documentation",
    "keywords": "Class RemoteAttribute An attribute used to enable parameter remoting. Inheritance Object Attribute RemoteAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Attributes Assembly : Strade.Commands.dll Syntax [AttributeUsage(AttributeTargets.Parameter, AllowMultiple = false, Inherited = true)] public sealed class RemoteAttribute : Attribute Constructors | Improve this Doc View Source RemoteAttribute(Boolean) Initializes a new instance of the RemoteAttribute class. Declaration public RemoteAttribute(bool allowRemote = true) Parameters Type Name Description Boolean allowRemote a value indicating whether the parameter applied on is a remote parameter (remote parameters allow parses to return inaccessible entities for the requesting user). Properties | Improve this Doc View Source AllowRemote Gets or sets a value indicating whether the parameter applied on is a remote parameter (remote parameters allow parses to return inaccessible entities for the requesting user). Declaration public bool AllowRemote { get; set; } Property Value Type Description Boolean a value indicating whether the parameter applied on is a remote parameter (remote parameters allow parses to return inaccessible entities for the requesting user)."
  },
  "api/Strade.Commands.Attributes.TagAttribute.html": {
    "href": "api/Strade.Commands.Attributes.TagAttribute.html",
    "title": "Class TagAttribute | Strade Developer Documentation",
    "keywords": "Class TagAttribute An attribute used to add tags to a command. If applied multiple all specified tags from all attributes are used. Inheritance Object Attribute TagAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Attributes Assembly : Strade.Commands.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = true, Inherited = true)] public sealed class TagAttribute : Attribute Constructors | Improve this Doc View Source TagAttribute(IEnumerable<String>) Initializes a new instance of the TagAttribute class. Declaration public TagAttribute(IEnumerable<string> tags) Parameters Type Name Description IEnumerable < String > tags an enumerable that enumerates through the command tags. Exceptions Type Condition ArgumentNullException thrown if the specified tags parameter is null . | Improve this Doc View Source TagAttribute(String[]) Initializes a new instance of the TagAttribute class. Declaration public TagAttribute(params string[] tags) Parameters Type Name Description String [] tags the command tags. Exceptions Type Condition ArgumentNullException thrown if the specified tags parameter is null . Properties | Improve this Doc View Source Tags Gets an enumerable that enumerates through the command tags. Declaration public IEnumerable<string> Tags { get; } Property Value Type Description IEnumerable < String >"
  },
  "api/Strade.Commands.Builders.CommandBuilder.html": {
    "href": "api/Strade.Commands.Builders.CommandBuilder.html",
    "title": "Class CommandBuilder | Strade Developer Documentation",
    "keywords": "Class CommandBuilder A class used to build a command. Inheritance Object CommandBuilder Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Builders Assembly : Strade.Commands.dll Syntax public sealed class CommandBuilder Constructors | Improve this Doc View Source CommandBuilder() Initializes a new instance of the CommandBuilder class. Declaration public CommandBuilder() | Improve this Doc View Source CommandBuilder(String) Initializes a new instance of the CommandBuilder class. Declaration public CommandBuilder(string name) Parameters Type Name Description String name the name of the command. Properties | Improve this Doc View Source Aliases Gets or sets the aliases of the command. Declaration public IReadOnlyList<string> Aliases { get; set; } Property Value Type Description IReadOnlyList < String > | Improve this Doc View Source CustomAttributes Gets or sets the custom attributes of the command. Declaration public IReadOnlyList<Attribute> CustomAttributes { get; set; } Property Value Type Description IReadOnlyList < Attribute > | Improve this Doc View Source Description Gets or sets the description of the command. Declaration public LocalizableString Description { get; set; } Property Value Type Description LocalizableString the description of the command. | Improve this Doc View Source Group Gets or sets the sub-group name of the command. Declaration public string Group { get; set; } Property Value Type Description String the sub-group name of the command. | Improve this Doc View Source IsAsync Gets or sets a value indicating whether gets a value indicating the command should be executed asynchronously from the gateway / event queue thread. Declaration public bool IsAsync { get; set; } Property Value Type Description Boolean a value indicating the command should be executed asynchronously from the gateway / event queue thread. | Improve this Doc View Source IsHidden Gets or sets a value indicating whether the command should be hidden. Declaration public bool IsHidden { get; set; } Property Value Type Description Boolean a value indicating whether the command should be hidden. | Improve this Doc View Source Name Gets or sets the name of the command. Declaration public string Name { get; set; } Property Value Type Description String the name of the command. | Improve this Doc View Source Parameters Gets or sets the parameters of the command. Declaration public IReadOnlyList<ICommandParameter> Parameters { get; set; } Property Value Type Description IReadOnlyList < ICommandParameter > | Improve this Doc View Source Preconditions Gets or sets the preconditions of the command. Declaration public IReadOnlyList<IPrecondition> Preconditions { get; set; } Property Value Type Description IReadOnlyList < IPrecondition > | Improve this Doc View Source ResponseType Gets or sets the response type for the command. Declaration public CommandResponseType ResponseType { get; set; } Property Value Type Description CommandResponseType the response type for the command. | Improve this Doc View Source Tags Gets or sets the tags of the command. Declaration public IReadOnlyList<string> Tags { get; set; } Property Value Type Description IReadOnlyList < String > Methods | Improve this Doc View Source AsAsync(Boolean) Declaration public CommandBuilder AsAsync(bool async = true) Parameters Type Name Description Boolean async Returns Type Description CommandBuilder | Improve this Doc View Source Build(IInstanceProvider, MethodInfo) Builds the instance. Declaration public ICommand Build(IInstanceProvider instanceProvider, MethodInfo invocationMethod) Parameters Type Name Description IInstanceProvider instanceProvider MethodInfo invocationMethod Returns Type Description ICommand the instance built. | Improve this Doc View Source Build(Delegate) Builds the instance. Declaration public ICommand Build(Delegate delegate) Parameters Type Name Description Delegate delegate Returns Type Description ICommand the instance built. | Improve this Doc View Source ClearAliases() Declaration public CommandBuilder ClearAliases() Returns Type Description CommandBuilder | Improve this Doc View Source ClearCustomAttributes() Declaration public CommandBuilder ClearCustomAttributes() Returns Type Description CommandBuilder | Improve this Doc View Source ClearParameters() Declaration public CommandBuilder ClearParameters() Returns Type Description CommandBuilder | Improve this Doc View Source ClearPreconditions() Declaration public CommandBuilder ClearPreconditions() Returns Type Description CommandBuilder | Improve this Doc View Source ClearTags() Declaration public CommandBuilder ClearTags() Returns Type Description CommandBuilder | Improve this Doc View Source Hidden(Boolean) Declaration public CommandBuilder Hidden(bool hidden = true) Parameters Type Name Description Boolean hidden Returns Type Description CommandBuilder | Improve this Doc View Source Validate() Validates the builder options. Declaration public void Validate() | Improve this Doc View Source WithAlias(String) Declaration public CommandBuilder WithAlias(string alias) Parameters Type Name Description String alias Returns Type Description CommandBuilder | Improve this Doc View Source WithAliases(IEnumerable<String>) Declaration public CommandBuilder WithAliases(IEnumerable<string> aliases) Parameters Type Name Description IEnumerable < String > aliases Returns Type Description CommandBuilder | Improve this Doc View Source WithAliases(String[]) Declaration public CommandBuilder WithAliases(params string[] aliases) Parameters Type Name Description String [] aliases Returns Type Description CommandBuilder | Improve this Doc View Source WithCustomAttribute(Attribute) Declaration public CommandBuilder WithCustomAttribute(Attribute customAttribute) Parameters Type Name Description Attribute customAttribute Returns Type Description CommandBuilder | Improve this Doc View Source WithCustomAttributes(Attribute[]) Declaration public CommandBuilder WithCustomAttributes(params Attribute[] customAttributes) Parameters Type Name Description Attribute [] customAttributes Returns Type Description CommandBuilder | Improve this Doc View Source WithCustomAttributes(IEnumerable<Attribute>) Declaration public CommandBuilder WithCustomAttributes(IEnumerable<Attribute> customAttributes) Parameters Type Name Description IEnumerable < Attribute > customAttributes Returns Type Description CommandBuilder | Improve this Doc View Source WithDescription(LocalizableString) Sets the command description to the specified description . Declaration public CommandBuilder WithDescription(LocalizableString description) Parameters Type Name Description LocalizableString description the command description. Returns Type Description CommandBuilder the CommandBuilder instance. | Improve this Doc View Source WithGroup(String) Sets the command group ( Group ) to the specified group . Declaration public CommandBuilder WithGroup(string group) Parameters Type Name Description String group the command group. Returns Type Description CommandBuilder the CommandBuilder instance. | Improve this Doc View Source WithName(String) Sets the command name to the specified name . Declaration public CommandBuilder WithName(string name) Parameters Type Name Description String name the command description. Returns Type Description CommandBuilder the CommandBuilder instance. | Improve this Doc View Source WithParameter(ICommandParameter) Declaration public CommandBuilder WithParameter(ICommandParameter parameter) Parameters Type Name Description ICommandParameter parameter Returns Type Description CommandBuilder | Improve this Doc View Source WithParameters(ICommandParameter[]) Declaration public CommandBuilder WithParameters(params ICommandParameter[] parameters) Parameters Type Name Description ICommandParameter [] parameters Returns Type Description CommandBuilder | Improve this Doc View Source WithParameters(IEnumerable<ICommandParameter>) Declaration public CommandBuilder WithParameters(IEnumerable<ICommandParameter> parameters) Parameters Type Name Description IEnumerable < ICommandParameter > parameters Returns Type Description CommandBuilder | Improve this Doc View Source WithPrecondition(IPrecondition) Declaration public CommandBuilder WithPrecondition(IPrecondition precondition) Parameters Type Name Description IPrecondition precondition Returns Type Description CommandBuilder | Improve this Doc View Source WithPreconditions(IPrecondition[]) Declaration public CommandBuilder WithPreconditions(params IPrecondition[] preconditions) Parameters Type Name Description IPrecondition [] preconditions Returns Type Description CommandBuilder | Improve this Doc View Source WithPreconditions(IEnumerable<IPrecondition>) Declaration public CommandBuilder WithPreconditions(IEnumerable<IPrecondition> preconditions) Parameters Type Name Description IEnumerable < IPrecondition > preconditions Returns Type Description CommandBuilder | Improve this Doc View Source WithResponseType(CommandResponseType) Declaration public CommandBuilder WithResponseType(CommandResponseType responseType) Parameters Type Name Description CommandResponseType responseType Returns Type Description CommandBuilder | Improve this Doc View Source WithTag(String) Declaration public CommandBuilder WithTag(string tag) Parameters Type Name Description String tag Returns Type Description CommandBuilder | Improve this Doc View Source WithTags(IEnumerable<String>) Declaration public CommandBuilder WithTags(IEnumerable<string> tags) Parameters Type Name Description IEnumerable < String > tags Returns Type Description CommandBuilder | Improve this Doc View Source WithTags(String[]) Declaration public CommandBuilder WithTags(params string[] tags) Parameters Type Name Description String [] tags Returns Type Description CommandBuilder Extension Methods CommandBuilderExtensions.RequireNsfw(CommandBuilder) CommandBuilderExtensions.RequireOwner(CommandBuilder) CommandBuilderExtensions.RequireUser(CommandBuilder)"
  },
  "api/Strade.Commands.Builders.CommandBuilderExtensions.html": {
    "href": "api/Strade.Commands.Builders.CommandBuilderExtensions.html",
    "title": "Class CommandBuilderExtensions | Strade Developer Documentation",
    "keywords": "Class CommandBuilderExtensions Provides extension methods for the CommandBuilder class. Inheritance Object CommandBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Builders Assembly : Strade.Commands.dll Syntax public static class CommandBuilderExtensions Methods | Improve this Doc View Source RequireNsfw(CommandBuilder) Adds a precondition that requires the channel where the command was invoked to be a NSFW (Not-Safe-For-Work Content) channel. Declaration public static CommandBuilder RequireNsfw(this CommandBuilder builder) Parameters Type Name Description CommandBuilder builder the CommandBuilder instance. Returns Type Description CommandBuilder the CommandBuilder instance. Exceptions Type Condition ArgumentNullException thrown if the specified builder is null . | Improve this Doc View Source RequireOwner(CommandBuilder) Adds a precondition that requires the command is executed by the current application owner. Declaration public static CommandBuilder RequireOwner(this CommandBuilder builder) Parameters Type Name Description CommandBuilder builder the CommandBuilder instance. Returns Type Description CommandBuilder the CommandBuilder instance. Exceptions Type Condition ArgumentNullException thrown if the specified builder is null . | Improve this Doc View Source RequireUser(CommandBuilder) Adds a precondition that requires the command to be executed by a user (not a bot). Declaration public static CommandBuilder RequireUser(this CommandBuilder builder) Parameters Type Name Description CommandBuilder builder the CommandBuilder instance. Returns Type Description CommandBuilder the CommandBuilder instance. Exceptions Type Condition ArgumentNullException thrown if the specified builder is null ."
  },
  "api/Strade.Commands.Builders.html": {
    "href": "api/Strade.Commands.Builders.html",
    "title": "Namespace Strade.Commands.Builders | Strade Developer Documentation",
    "keywords": "Namespace Strade.Commands.Builders Classes CommandBuilder A class used to build a command. CommandBuilderExtensions Provides extension methods for the CommandBuilder class. ModuleBuilder A builder class for modules. ParameterBuilder A builder for command parameters."
  },
  "api/Strade.Commands.Builders.ModuleBuilder.html": {
    "href": "api/Strade.Commands.Builders.ModuleBuilder.html",
    "title": "Class ModuleBuilder | Strade Developer Documentation",
    "keywords": "Class ModuleBuilder A builder class for modules. Inheritance Object ModuleBuilder Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Builders Assembly : Strade.Commands.dll Syntax public sealed class ModuleBuilder Constructors | Improve this Doc View Source ModuleBuilder(Type) Declaration public ModuleBuilder(Type declaringType = null) Parameters Type Name Description Type declaringType Properties | Improve this Doc View Source Commands Gets or sets the commands of the module. Declaration public IReadOnlyList<ICommand> Commands { get; set; } Property Value Type Description IReadOnlyList < ICommand > | Improve this Doc View Source CustomAttributes Gets or sets the custom attributes of the module. Declaration public IReadOnlyList<Attribute> CustomAttributes { get; set; } Property Value Type Description IReadOnlyList < Attribute > the custom attributes of the module. | Improve this Doc View Source DeclaringType Gets the type that declares the module. Declaration public Type DeclaringType { get; } Property Value Type Description Type the type that declares the module. | Improve this Doc View Source Description Gets or sets the description of the module. Declaration public LocalizableString Description { get; set; } Property Value Type Description LocalizableString the description of the module. | Improve this Doc View Source Group Gets or sets the group of the module. Declaration public string Group { get; set; } Property Value Type Description String the group of the module. | Improve this Doc View Source IsHidden Gets or sets a value indicating whether the module should be hidden. Declaration public bool IsHidden { get; set; } Property Value Type Description Boolean a value indicating whether the command module be hidden. | Improve this Doc View Source Name Gets or sets the name of the module. Declaration public string Name { get; set; } Property Value Type Description String the name of the module. | Improve this Doc View Source ServiceProvider Gets or sets the service provider used to create instances of the module. Declaration public IServiceProvider ServiceProvider { get; set; } Property Value Type Description IServiceProvider the service provider used to create instances of the module. | Improve this Doc View Source Tags Gets or sets the tags of the module. Declaration public IReadOnlyList<string> Tags { get; set; } Property Value Type Description IReadOnlyList < String > the tags of the module. Methods | Improve this Doc View Source Build() Builds the module. Declaration public IModule Build() Returns Type Description IModule the module instance. | Improve this Doc View Source ClearCommands() Declaration public ModuleBuilder ClearCommands() Returns Type Description ModuleBuilder | Improve this Doc View Source ClearCustomAttributes() Declaration public ModuleBuilder ClearCustomAttributes() Returns Type Description ModuleBuilder | Improve this Doc View Source ClearTags() Declaration public ModuleBuilder ClearTags() Returns Type Description ModuleBuilder | Improve this Doc View Source Hidden(Boolean) Declaration public ModuleBuilder Hidden(bool hidden = true) Parameters Type Name Description Boolean hidden Returns Type Description ModuleBuilder | Improve this Doc View Source Validate() Declaration public void Validate() | Improve this Doc View Source WithCommand(ICommand) Declaration public ModuleBuilder WithCommand(ICommand command) Parameters Type Name Description ICommand command Returns Type Description ModuleBuilder | Improve this Doc View Source WithCommands(ICommand[]) Declaration public ModuleBuilder WithCommands(params ICommand[] commands) Parameters Type Name Description ICommand [] commands Returns Type Description ModuleBuilder | Improve this Doc View Source WithCommands(IEnumerable<ICommand>) Declaration public ModuleBuilder WithCommands(IEnumerable<ICommand> commands) Parameters Type Name Description IEnumerable < ICommand > commands Returns Type Description ModuleBuilder | Improve this Doc View Source WithCustomAttribute(Attribute) Declaration public ModuleBuilder WithCustomAttribute(Attribute customAttribute) Parameters Type Name Description Attribute customAttribute Returns Type Description ModuleBuilder | Improve this Doc View Source WithCustomAttributes(Attribute[]) Declaration public ModuleBuilder WithCustomAttributes(params Attribute[] customAttributes) Parameters Type Name Description Attribute [] customAttributes Returns Type Description ModuleBuilder | Improve this Doc View Source WithCustomAttributes(IEnumerable<Attribute>) Declaration public ModuleBuilder WithCustomAttributes(IEnumerable<Attribute> customAttributes) Parameters Type Name Description IEnumerable < Attribute > customAttributes Returns Type Description ModuleBuilder | Improve this Doc View Source WithDescription(LocalizableString) Declaration public ModuleBuilder WithDescription(LocalizableString description) Parameters Type Name Description LocalizableString description Returns Type Description ModuleBuilder | Improve this Doc View Source WithGroup(String) Declaration public ModuleBuilder WithGroup(string group) Parameters Type Name Description String group Returns Type Description ModuleBuilder | Improve this Doc View Source WithName(String) Declaration public ModuleBuilder WithName(string name) Parameters Type Name Description String name Returns Type Description ModuleBuilder | Improve this Doc View Source WithServiceProvider(IServiceProvider) Declaration public ModuleBuilder WithServiceProvider(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Returns Type Description ModuleBuilder | Improve this Doc View Source WithTag(String) Declaration public ModuleBuilder WithTag(string tag) Parameters Type Name Description String tag Returns Type Description ModuleBuilder | Improve this Doc View Source WithTags(IEnumerable<String>) Declaration public ModuleBuilder WithTags(IEnumerable<string> tags) Parameters Type Name Description IEnumerable < String > tags Returns Type Description ModuleBuilder | Improve this Doc View Source WithTags(String[]) Declaration public ModuleBuilder WithTags(params string[] tags) Parameters Type Name Description String [] tags Returns Type Description ModuleBuilder"
  },
  "api/Strade.Commands.Builders.ParameterBuilder.html": {
    "href": "api/Strade.Commands.Builders.ParameterBuilder.html",
    "title": "Class ParameterBuilder | Strade Developer Documentation",
    "keywords": "Class ParameterBuilder A builder for command parameters. Inheritance Object ParameterBuilder Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Builders Assembly : Strade.Commands.dll Syntax public sealed class ParameterBuilder Constructors | Improve this Doc View Source ParameterBuilder(Type) Declaration public ParameterBuilder(Type parameterType) Parameters Type Name Description Type parameterType Properties | Improve this Doc View Source AllowsRemoting Declaration public bool AllowsRemoting { get; set; } Property Value Type Description Boolean | Improve this Doc View Source CustomAttributes Gets or sets the custom attributes of the parameter. Declaration public IReadOnlyList<Attribute> CustomAttributes { get; set; } Property Value Type Description IReadOnlyList < Attribute > | Improve this Doc View Source DefaultValue Gets or sets the default value for the parameter (used if the parameter is optional). Declaration public object DefaultValue { get; set; } Property Value Type Description Object the default value for the parameter (used if the parameter is optional). | Improve this Doc View Source Description Gets or sets the description of the parameter. Declaration public LocalizableString Description { get; set; } Property Value Type Description LocalizableString the description of the parameter. | Improve this Doc View Source IsOptional Declaration public bool IsOptional { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsParams Declaration public bool IsParams { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsRemainder Declaration public bool IsRemainder { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsRequired Declaration public bool IsRequired { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Name Gets or sets the name of the parameter. Declaration public string Name { get; set; } Property Value Type Description String the name of the parameter. | Improve this Doc View Source Options Gets or sets the parameter options. Declaration public ParameterOptions Options { get; set; } Property Value Type Description ParameterOptions the parameter options. | Improve this Doc View Source ParameterType Declaration public Type ParameterType { get; } Property Value Type Description Type Methods | Improve this Doc View Source AsOptional(Object) Marks the parameter as optional. Declaration public ParameterBuilder AsOptional(object defaultValue = null) Parameters Type Name Description Object defaultValue the default value for the parameter to use if the parameter is not specified. Returns Type Description ParameterBuilder the ParameterBuilder instance. | Improve this Doc View Source AsParams(Boolean) Sets whether the command parameter is a params parameter ( true ) or not ( false ). Declaration public ParameterBuilder AsParams(bool params = true) Parameters Type Name Description Boolean params a value indicating whether the command params is a remainder parameter ( true ) or not ( false ). Returns Type Description ParameterBuilder the ParameterBuilder instance. | Improve this Doc View Source AsRemainder(Boolean) Sets whether the command parameter is a remainder parameter ( true ) or not ( false ). Declaration public ParameterBuilder AsRemainder(bool remainder = true) Parameters Type Name Description Boolean remainder a value indicating whether the command parameter is a remainder parameter ( true ) or not ( false ). Returns Type Description ParameterBuilder the ParameterBuilder instance. | Improve this Doc View Source AsRemote(Boolean) Sets whether the command parameter allows remote entities ( true ) or not ( false ). Declaration public ParameterBuilder AsRemote(bool allowRemote = true) Parameters Type Name Description Boolean allowRemote a value indicating whether the command parameter allows remote entities ( true ) or not ( false ). Returns Type Description ParameterBuilder the ParameterBuilder instance. | Improve this Doc View Source AsRequired() Marks the parameter as required. Declaration public ParameterBuilder AsRequired() Returns Type Description ParameterBuilder the ParameterBuilder instance. | Improve this Doc View Source Build() Builds the ICommandParameter instance. Declaration public ICommandParameter Build() Returns Type Description ICommandParameter the ICommandParameter instance. | Improve this Doc View Source ClearCustomAttributes() Declaration public ParameterBuilder ClearCustomAttributes() Returns Type Description ParameterBuilder | Improve this Doc View Source Validate() Validates the builder options. Declaration public void Validate() | Improve this Doc View Source WithCustomAttribute(Attribute) Declaration public ParameterBuilder WithCustomAttribute(Attribute customAttribute) Parameters Type Name Description Attribute customAttribute Returns Type Description ParameterBuilder | Improve this Doc View Source WithCustomAttributes(Attribute[]) Declaration public ParameterBuilder WithCustomAttributes(params Attribute[] customAttributes) Parameters Type Name Description Attribute [] customAttributes Returns Type Description ParameterBuilder | Improve this Doc View Source WithCustomAttributes(IEnumerable<Attribute>) Declaration public ParameterBuilder WithCustomAttributes(IEnumerable<Attribute> customAttributes) Parameters Type Name Description IEnumerable < Attribute > customAttributes Returns Type Description ParameterBuilder | Improve this Doc View Source WithDefautValue(Object) Declaration public ParameterBuilder WithDefautValue(object defaultValue = null) Parameters Type Name Description Object defaultValue Returns Type Description ParameterBuilder | Improve this Doc View Source WithDescription(LocalizableString) Declaration public ParameterBuilder WithDescription(LocalizableString description) Parameters Type Name Description LocalizableString description Returns Type Description ParameterBuilder | Improve this Doc View Source WithName(String) Declaration public ParameterBuilder WithName(string name) Parameters Type Name Description String name Returns Type Description ParameterBuilder | Improve this Doc View Source WithOptions(ParameterOptions) Declaration public ParameterBuilder WithOptions(ParameterOptions options) Parameters Type Name Description ParameterOptions options Returns Type Description ParameterBuilder"
  },
  "api/Strade.Commands.CommandContext.html": {
    "href": "api/Strade.Commands.CommandContext.html",
    "title": "Class CommandContext | Strade Developer Documentation",
    "keywords": "Class CommandContext Represents a structure that holds basic information commonly used during command execution. Inheritance Object CommandContext Implements IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands Assembly : Strade.Commands.dll Syntax public class CommandContext : IDisposable Constructors | Improve this Doc View Source CommandContext(CommandInterface, IMessage, ICacheable<Snowflake, IMessageChannel>, CultureInfo, ICacheable<Snowflake, IGuild>, Member, ICommandExecutionInformation, CancellationToken) Initializes a new instance of the CommandContext class. Declaration public CommandContext(CommandInterface commandInterface, IMessage message, ICacheable<Snowflake, IMessageChannel> channelCacheable, CultureInfo cultureInfo, ICacheable<Snowflake, IGuild> guildCacheable, Member member, ICommandExecutionInformation executionInformation = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandInterface commandInterface IMessage message the message that invoked the command. ICacheable < Snowflake , IMessageChannel > channelCacheable the channel where the command was dispatched in. CultureInfo cultureInfo the culture information for the command. ICacheable < Snowflake , IGuild > guildCacheable the guild; if command was executed in a guild channel. Member member the guild member; if command was executed in a guild channel. ICommandExecutionInformation executionInformation CancellationToken cancellationToken Exceptions Type Condition ArgumentNullException thrown if the specified commandService is null . ArgumentNullException thrown if the specified message is null . ArgumentNullException thrown if the specified channelCacheable is null . ArgumentNullException thrown if the specified prefix is null . ArgumentNullException thrown if the specified cultureInfo is null . Properties | Improve this Doc View Source CancellationToken Gets a cancellation token used to propagate notification that the command execution should be canceled. Declaration public virtual CancellationToken CancellationToken { get; } Property Value Type Description CancellationToken a cancellation token used to propagate notification that the command execution should be canceled. | Improve this Doc View Source Channel Gets the channel where the command was dispatched in. Declaration public virtual ICacheable<Snowflake, IMessageChannel> Channel { get; } Property Value Type Description ICacheable < Snowflake , IMessageChannel > the channel where the command was dispatched in. | Improve this Doc View Source Client Gets the client bound to. Declaration public virtual IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient the client bound to. | Improve this Doc View Source Command Gets the current executing command, if present. Declaration public ICommand Command { get; } Property Value Type Description ICommand the current executing command, if present. | Improve this Doc View Source CommandService Gets the calling command service. Declaration public CommandService CommandService { get; } Property Value Type Description CommandService the calling command service. | Improve this Doc View Source CultureInfo Gets the culture information for the execution. Declaration public virtual CultureInfo CultureInfo { get; set; } Property Value Type Description CultureInfo the culture information for the execution. | Improve this Doc View Source ExecutionInformation Declaration public ICommandExecutionInformation ExecutionInformation { get; } Property Value Type Description ICommandExecutionInformation | Improve this Doc View Source Guild Gets the guild. Declaration public virtual ICacheable<Snowflake, IGuild> Guild { get; } Property Value Type Description ICacheable < Snowflake , IGuild > the guild; or null if IsGuild is false . | Improve this Doc View Source Handler Gets the handler associated for the command. Declaration public virtual CommandHandler Handler { get; } Property Value Type Description CommandHandler the handler associated for the command. | Improve this Doc View Source Interface Declaration public CommandInterface Interface { get; } Property Value Type Description CommandInterface | Improve this Doc View Source IsGuild Gets a value indicating whether the context was invoked in a guild. Declaration public bool IsGuild { get; } Property Value Type Description Boolean a value indicating whether the context was invoked in a guild. | Improve this Doc View Source Member Gets the associated guild member information. Declaration public virtual Member Member { get; } Property Value Type Description Member the associated guild member information; or null if IsGuild is false . | Improve this Doc View Source Message Gets the message that invoked the command. Declaration public virtual IMessage Message { get; } Property Value Type Description IMessage the message that invoked the command. | Improve this Doc View Source Module Declaration public IModule Module { get; } Property Value Type Description IModule | Improve this Doc View Source ResponseChannel Declaration public IMessageChannel ResponseChannel { get; set; } Property Value Type Description IMessageChannel | Improve this Doc View Source ResponseType Declaration public virtual CommandResponseType ResponseType { get; } Property Value Type Description CommandResponseType | Improve this Doc View Source User Gets the user that dispatched the command. Declaration public User User { get; } Property Value Type Description User the user that dispatched the command. Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source DoesBotHavePermissionAsync(Permissions, CancellationToken) Declaration public ValueTask<bool> DoesBotHavePermissionAsync(Permissions permission, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Permissions permission CancellationToken cancellationToken Returns Type Description ValueTask < Boolean > | Improve this Doc View Source DoesUserHavePermissionAsync(Permissions, CancellationToken) Declaration public ValueTask<bool> DoesUserHavePermissionAsync(Permissions permission, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Permissions permission CancellationToken cancellationToken Returns Type Description ValueTask < Boolean > | Improve this Doc View Source GetBotPermissionsAsync(CancellationToken) Declaration public ValueTask<PermissionSet> GetBotPermissionsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask < PermissionSet > | Improve this Doc View Source GetResponseChannelAsync(CancellationToken) Declaration public ValueTask<IMessageChannel> GetResponseChannelAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask < IMessageChannel > | Improve this Doc View Source GetUserPermissionsAsync(CancellationToken) Declaration public ValueTask<PermissionSet> GetUserPermissionsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask < PermissionSet > | Improve this Doc View Source ReplyAsync(EmbedMessage, Boolean, CancellationToken) Sends a reply asynchronously. Declaration public Task<IMessage> ReplyAsync(EmbedMessage embed, bool textToSpeech = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description EmbedMessage embed the attached message embed. Boolean textToSpeech a value indicating whether the message should be a TTS (Text-To-Speech) message. CancellationToken cancellationToken Returns Type Description Task < IMessage > a task that represents the asynchronous operation. The task result is the message send. | Improve this Doc View Source ReplyAsync(MessageCreationProperties, CancellationToken) Sends a reply asynchronously. Declaration public Task<IMessage> ReplyAsync(MessageCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description MessageCreationProperties properties the response. CancellationToken cancellationToken Returns Type Description Task < IMessage > a task that represents the asynchronous operation. The task result is the message send. | Improve this Doc View Source ReplyAsync(String, EmbedMessage, Boolean, CancellationToken) Sends a reply asynchronously. Declaration public Task<IMessage> ReplyAsync(string content, EmbedMessage embed = null, bool textToSpeech = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String content the message content. EmbedMessage embed the attached message embed. Boolean textToSpeech a value indicating whether the message should be a TTS (Text-To-Speech) message. CancellationToken cancellationToken Returns Type Description Task < IMessage > a task that represents the asynchronous operation. The task result is the message send. | Improve this Doc View Source ReplyWithFileAsync(ArraySegment<Byte>, String, String, EmbedMessage, Boolean, CancellationToken) Sends a reply with a file attachment asynchronously. Declaration public Task<IMessage> ReplyWithFileAsync(ArraySegment<byte> data, string filename, string content = null, EmbedMessage embed = null, bool textToSpeech = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description ArraySegment < Byte > data the file data. String filename the filename for the file. String content the message content. EmbedMessage embed the attached message embed. Boolean textToSpeech a value indicating whether the message should be a TTS (Text-To-Speech) message. CancellationToken cancellationToken Returns Type Description Task < IMessage > a task that represents the asynchronous operation. The task result is the message send. | Improve this Doc View Source ReplyWithFileAsync(FileInfo, String, String, EmbedMessage, Boolean, CancellationToken) Sends a reply with a file attachment asynchronously. Declaration public Task<IMessage> ReplyWithFileAsync(FileInfo fileInfo, string filename = null, string content = null, EmbedMessage embed = null, bool textToSpeech = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description FileInfo fileInfo the file to send. String filename the filename for the file, if null is specified then the file name of the specified fileInfo is used. String content the message content. EmbedMessage embed the attached message embed. Boolean textToSpeech a value indicating whether the message should be a TTS (Text-To-Speech) message. CancellationToken cancellationToken Returns Type Description Task < IMessage > a task that represents the asynchronous operation. The task result is the message send. | Improve this Doc View Source ReplyWithFileAsync(Stream, String, String, EmbedMessage, Boolean, Boolean, CancellationToken) Sends a reply with a file attachment asynchronously. Declaration public Task<IMessage> ReplyWithFileAsync(Stream stream, string filename, string content = null, EmbedMessage embed = null, bool textToSpeech = false, bool leaveOpen = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Stream stream the stream to read the file data from to send. String filename the filename for the file. String content the message content. EmbedMessage embed the attached message embed. Boolean textToSpeech a value indicating whether the message should be a TTS (Text-To-Speech) message. Boolean leaveOpen a value indicating whether the specified stream should be left open after the file was send. CancellationToken cancellationToken Returns Type Description Task < IMessage > a task that represents the asynchronous operation. The task result is the message send. | Improve this Doc View Source ReplyWithFileAsync(String, String, String, EmbedMessage, Boolean, CancellationToken) Sends a reply with a file attachment asynchronously. Declaration public Task<IMessage> ReplyWithFileAsync(string path, string filename = null, string content = null, EmbedMessage embed = null, bool textToSpeech = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String path the path to the file to send. String filename the filename for the file, if null is specified then the file name of the specified path is used. String content the message content. EmbedMessage embed the attached message embed. Boolean textToSpeech a value indicating whether the message should be a TTS (Text-To-Speech) message. CancellationToken cancellationToken Returns Type Description Task < IMessage > a task that represents the asynchronous operation. The task result is the message send. | Improve this Doc View Source StartTypingAsync(CancellationToken) Creates a typing indicator for the channel. Declaration public Task<ITypingIndicator> StartTypingAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < ITypingIndicator > the typing indicator instance; stops triggering when disposed. | Improve this Doc View Source StartTypingAsync(TimeSpan, CancellationToken) Creates a typing indicator for the channel. Declaration public Task<ITypingIndicator> StartTypingAsync(TimeSpan interval, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TimeSpan interval the trigger interval. CancellationToken cancellationToken Returns Type Description Task < ITypingIndicator > the typing indicator instance; stops triggering when disposed. | Improve this Doc View Source TriggerTypingAsync(CancellationToken) Triggers the typing indicator in the channel asynchronously. Declaration public Task TriggerTypingAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Implements System.IDisposable Extension Methods CommandContextExtensions.ReplyAsync(CommandContext, InteractionsMessageCreationProperties, CancellationToken)"
  },
  "api/Strade.Commands.CommandContextExtensions.html": {
    "href": "api/Strade.Commands.CommandContextExtensions.html",
    "title": "Class CommandContextExtensions | Strade Developer Documentation",
    "keywords": "Class CommandContextExtensions Inheritance Object CommandContextExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands Assembly : Strade.Commands.Interactions.dll Syntax public static class CommandContextExtensions Methods | Improve this Doc View Source ReplyAsync(CommandContext, InteractionsMessageCreationProperties, CancellationToken) Declaration public static Task ReplyAsync(this CommandContext context, InteractionsMessageCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext context InteractionsMessageCreationProperties properties CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/Strade.Commands.CommandHandler.html": {
    "href": "api/Strade.Commands.CommandHandler.html",
    "title": "Class CommandHandler | Strade Developer Documentation",
    "keywords": "Class CommandHandler Inheritance Object CommandHandler Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands Assembly : Strade.Commands.dll Syntax public class CommandHandler Properties | Improve this Doc View Source Default Gets the default instance of the CommandHandler class. Declaration public static CommandHandler Default { get; } Property Value Type Description CommandHandler the default instance of the CommandHandler class. | Improve this Doc View Source VerifyContextHandler Declaration protected virtual bool VerifyContextHandler { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source ExecuteAsync(CommandContext, ICommand, IReadOnlyList<Object>, CancellationToken) Executes the specified context asynchronously. Declaration public Task<CommandResult> ExecuteAsync(CommandContext context, ICommand command, IReadOnlyList<object> parameters, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext context the context to execute. ICommand command the command to execute. IReadOnlyList < Object > parameters the parameters used to run the command. CancellationToken cancellationToken Returns Type Description Task < CommandResult > a task that represents the asynchronously operation. Exceptions Type Condition ArgumentNullException thrown if the specified context is null . ArgumentNullException thrown if the specified command is null . ArgumentNullException thrown if the specified parameters list is null . | Improve this Doc View Source InvokeCommandAsync(CommandContext, ICommand, IReadOnlyList<Object>) Declaration protected virtual Task<CommandResult> InvokeCommandAsync(CommandContext context, ICommand command, IReadOnlyList<object> parameters) Parameters Type Name Description CommandContext context ICommand command IReadOnlyList < Object > parameters Returns Type Description Task < CommandResult > | Improve this Doc View Source ProcessResultAsync(CommandContext, Object, CancellationToken) Declaration protected virtual Task ProcessResultAsync(CommandContext context, object result, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext context Object result CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source UnwrapException(Exception) Declaration protected virtual Exception UnwrapException(Exception exception) Parameters Type Name Description Exception exception Returns Type Description Exception"
  },
  "api/Strade.Commands.CommandInterface.html": {
    "href": "api/Strade.Commands.CommandInterface.html",
    "title": "Class CommandInterface | Strade Developer Documentation",
    "keywords": "Class CommandInterface Inheritance Object CommandInterface InteractionsCommandInterface LegacyCommandInterface Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands Assembly : Strade.Commands.dll Syntax public abstract class CommandInterface Constructors | Improve this Doc View Source CommandInterface(CommandService) Declaration protected CommandInterface(CommandService commandService) Parameters Type Name Description CommandService commandService Properties | Improve this Doc View Source CommandService Declaration public CommandService CommandService { get; } Property Value Type Description CommandService Methods | Improve this Doc View Source GetResponseChannelAsync(CommandContext, CancellationToken) Declaration protected virtual ValueTask<IMessageChannel> GetResponseChannelAsync(CommandContext commandContext, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext commandContext CancellationToken cancellationToken Returns Type Description ValueTask < IMessageChannel > | Improve this Doc View Source LookupCommandAsync(CommandContext, CancellationToken) Declaration protected abstract ValueTask<MatchResult> LookupCommandAsync(CommandContext commandContext, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext commandContext CancellationToken cancellationToken Returns Type Description ValueTask < MatchResult > | Improve this Doc View Source Register() Declaration public virtual void Register() | Improve this Doc View Source Unregister() Declaration public virtual void Unregister()"
  },
  "api/Strade.Commands.CommandResponseType.html": {
    "href": "api/Strade.Commands.CommandResponseType.html",
    "title": "Enum CommandResponseType | Strade Developer Documentation",
    "keywords": "Enum CommandResponseType A set of possible command response types. Namespace : Strade.Commands Assembly : Strade.Commands.dll Syntax public enum CommandResponseType : byte Fields Name Description CurrentContext Denotes that the response type depends on the context type. First the calling command interface's custom response channel is queried; if the interface did not return a response channel and the current context is a guild context ( IsGuild ) then Guild is used; otherwise PrivateChannel is used. Custom Denotes that a custom command response channel was set. Guild Denotes that the response message should be in the guild. If the current context is NOT a guild context ( IsGuild ) then an InvalidContextException is thrown. Interactions Denotes that interactions should be used to respond. Interface Denotes that the command interface should be queried for a response channel, if the interface did not return a response channel, then CurrentContext is used. PrivateChannel Denotes that the command response should be sent to the private channel for the user. Extension Methods EnumExtensions.GetName<CommandResponseType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Commands.CommandService.html": {
    "href": "api/Strade.Commands.CommandService.html",
    "title": "Class CommandService | Strade Developer Documentation",
    "keywords": "Class CommandService A service that handles / dispatches commands. Inheritance Object CommandService Implements IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands Assembly : Strade.Commands.dll Syntax public class CommandService : IDisposable Constructors | Improve this Doc View Source CommandService(DiscordClient, CommandServiceOptions, ILogger) Initializes a new instance of the CommandService class. Declaration public CommandService(DiscordClient client, CommandServiceOptions options = null, ILogger logger = null) Parameters Type Name Description DiscordClient client the client bound to. CommandServiceOptions options the options for the command service. ILogger logger the logger used for logging; or null to disable logging. Exceptions Type Condition ArgumentNullException thrown if the specified client is null . | Improve this Doc View Source CommandService(IDiscordRestClient, CommandServiceOptions, ILogger) Initializes a new instance of the CommandService class. Declaration public CommandService(IDiscordRestClient client, CommandServiceOptions options = null, ILogger logger = null) Parameters Type Name Description IDiscordRestClient client the client bound to. CommandServiceOptions options the options for the command service. ILogger logger the logger used for logging; or null to disable logging. Exceptions Type Condition ArgumentNullException thrown if the specified client is null . Properties | Improve this Doc View Source Client Gets the discord client bound to. Declaration public IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient the discord client bound to. | Improve this Doc View Source Commands Declaration public CommandTree Commands { get; } Property Value Type Description CommandTree | Improve this Doc View Source Converters Declaration public IImmutableSet<IArgumentConverter> Converters { get; } Property Value Type Description IImmutableSet < IArgumentConverter > | Improve this Doc View Source DefaultConverters Gets the default converters. Declaration public static IEnumerable<IArgumentConverter> DefaultConverters { get; } Property Value Type Description IEnumerable < IArgumentConverter > | Improve this Doc View Source Handler Declaration public CommandHandler Handler { get; } Property Value Type Description CommandHandler | Improve this Doc View Source Interfaces Declaration public IImmutableSet<CommandInterface> Interfaces { get; } Property Value Type Description IImmutableSet < CommandInterface > | Improve this Doc View Source Logger Declaration public ILogger Logger { get; } Property Value Type Description ILogger | Improve this Doc View Source Modules Gets all registered modules (all providers that inherit from the IModule interface). Declaration public IEnumerable<IModule> Modules { get; } Property Value Type Description IEnumerable < IModule > all registered modules (all providers that inherit from the IModule interface). | Improve this Doc View Source Options Gets the options used to configure the service. Declaration public CommandServiceOptions Options { get; } Property Value Type Description CommandServiceOptions the options used to configure the service. Methods | Improve this Doc View Source AddInterface(CommandInterface) Declaration public void AddInterface(CommandInterface commandInterface) Parameters Type Name Description CommandInterface commandInterface | Improve this Doc View Source CreateContextAsync(CommandInterface, IMessage, ICacheable<Snowflake, IMessageChannel>, CultureInfo, ICacheable<Snowflake, IGuild>, Member, ICommandExecutionInformation, CancellationToken) Declaration public virtual ValueTask<CommandContext> CreateContextAsync(CommandInterface commandInterface, IMessage message, ICacheable<Snowflake, IMessageChannel> channelCacheable, CultureInfo cultureInfo, ICacheable<Snowflake, IGuild> guildCacheable, Member member, ICommandExecutionInformation executionInformation = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandInterface commandInterface IMessage message ICacheable < Snowflake , IMessageChannel > channelCacheable CultureInfo cultureInfo ICacheable < Snowflake , IGuild > guildCacheable Member member ICommandExecutionInformation executionInformation CancellationToken cancellationToken Returns Type Description ValueTask < CommandContext > | Improve this Doc View Source DispatchAsync(MatchResult, Boolean, CancellationToken) Declaration public Task<IResult> DispatchAsync(MatchResult matchResult, bool enforceSync = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description MatchResult matchResult Boolean enforceSync CancellationToken cancellationToken Returns Type Description Task < IResult > | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing a value indicating whether to release managed resources. | Improve this Doc View Source GetConverter(Type) Finds the IArgumentConverter for the specified targetType . Declaration public IArgumentConverter GetConverter(Type targetType) Parameters Type Name Description Type targetType the type to convert to. Returns Type Description IArgumentConverter the IArgumentConverter . Exceptions Type Condition InvalidOperationException thrown if no converter was found. ArgumentNullException thrown if the specified targetType is null . | Improve this Doc View Source GetExecutableCommandsAsync(CommandContext, CancellationToken) Gets all commands that are executable for the specified commandContext asynchronously. Declaration public IAsyncEnumerable<ICommand> GetExecutableCommandsAsync(CommandContext commandContext, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext commandContext the command context. CancellationToken cancellationToken Returns Type Description IAsyncEnumerable < ICommand > an enumerable that enumerates through all commands that are executable for the specified commandContext . | Improve this Doc View Source OnCommandExecutedAsync(CommandExecutedEventArgs) Dispatches the CommandExecuted event asynchronously. Declaration protected virtual Task OnCommandExecutedAsync(CommandExecutedEventArgs eventArgs) Parameters Type Name Description CommandExecutedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnCommandExecutingAsync(CommandExecutingEventArgs) Dispatches the CommandExecuting event asynchronously. Declaration protected virtual Task OnCommandExecutingAsync(CommandExecutingEventArgs eventArgs) Parameters Type Name Description CommandExecutingEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnCommandFailedAsync(CommandFailedEventArgs) Dispatches the CommandFailed event asynchronously. Declaration protected virtual Task OnCommandFailedAsync(CommandFailedEventArgs eventArgs) Parameters Type Name Description CommandFailedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnUnknownCommandAsync(UnknownCommandEventArgs) Dispatches the UnknownCommand event asynchronously. Declaration protected virtual Task OnUnknownCommandAsync(UnknownCommandEventArgs eventArgs) Parameters Type Name Description UnknownCommandEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source RegisterAll(IServiceProvider, IResourceManager, Boolean) Registers all modules from the calling assembly. Declaration public IEnumerable<IModule> RegisterAll(IServiceProvider serviceProvider = null, IResourceManager resourceManager = null, bool exportedOnly = true) Parameters Type Name Description IServiceProvider serviceProvider the service provider used for modules; or null to use an empty service provider. IResourceManager resourceManager Boolean exportedOnly a value indicating whether only exported types (types that are visible outside of the assembly [e.g. non-internal]) should be included in the search; otherwise false . Returns Type Description IEnumerable < IModule > an enumerable that enumerates through the modules registered. | Improve this Doc View Source RegisterAll(Assembly, IServiceProvider, IResourceManager, Boolean) Registers all modules from the specified assembly . Declaration public IEnumerable<IModule> RegisterAll(Assembly assembly, IServiceProvider serviceProvider = null, IResourceManager resourceManager = null, bool exportedOnly = true) Parameters Type Name Description Assembly assembly the assembly containing the modules. IServiceProvider serviceProvider the service provider used for modules; or null to use an empty service provider. IResourceManager resourceManager Boolean exportedOnly a value indicating whether only exported types (types that are visible outside of the assembly [e.g. non-internal]) should be included in the search; otherwise false . Returns Type Description IEnumerable < IModule > an enumerable that enumerates through the modules registered. Exceptions Type Condition ArgumentNullException thrown if the specified assembly is null . | Improve this Doc View Source RegisterCommand(ICommand) Registers the specified command . Declaration public CommandRegistrationInformation RegisterCommand(ICommand command) Parameters Type Name Description ICommand command the command to register. Returns Type Description CommandRegistrationInformation Exceptions Type Condition ArgumentNullException thrown if the specified command is null . | Improve this Doc View Source RegisterConverter(IArgumentConverter) Registers the specified converter . Declaration public void RegisterConverter(IArgumentConverter converter) Parameters Type Name Description IArgumentConverter converter the command converter. | Improve this Doc View Source RegisterDefaultConverters() Registers the default converters. Declaration public virtual void RegisterDefaultConverters() | Improve this Doc View Source RegisterModule(IModule) Declaration public void RegisterModule(IModule module) Parameters Type Name Description IModule module | Improve this Doc View Source RegisterModule(Type, IServiceProvider, IResourceManager) Registers a module of the specified moduleType . Declaration public IModule RegisterModule(Type moduleType, IServiceProvider serviceProvider = null, IResourceManager resourceManager = null) Parameters Type Name Description Type moduleType the module type. IServiceProvider serviceProvider the service provider used for modules; or null to use an empty service provider. IResourceManager resourceManager Returns Type Description IModule the module. Exceptions Type Condition ArgumentNullException thrown if the specified moduleType is null . | Improve this Doc View Source RegisterModule<TModule>(IServiceProvider) Registers a module of the specified TModule type. Declaration public IModule RegisterModule<TModule>(IServiceProvider serviceProvider = null) where TModule : IModuleBase Parameters Type Name Description IServiceProvider serviceProvider the service provider used for modules; or null to use an empty service provider. Returns Type Description IModule the module. Type Parameters Name Description TModule the type of the module. | Improve this Doc View Source RemoveInterface(CommandInterface) Declaration public void RemoveInterface(CommandInterface commandInterface) Parameters Type Name Description CommandInterface commandInterface | Improve this Doc View Source UnregisterAll(Assembly) Unregisters all modules from the specified assembly . Declaration public int UnregisterAll(Assembly assembly) Parameters Type Name Description Assembly assembly the assembly containing the modules. Returns Type Description Int32 the number of modules unregistered. Exceptions Type Condition ArgumentNullException thrown if the specified assembly is null . | Improve this Doc View Source UnregisterConverter(IArgumentConverter) Unregisters the specified converter . Declaration public bool UnregisterConverter(IArgumentConverter converter) Parameters Type Name Description IArgumentConverter converter the command converter. Returns Type Description Boolean | Improve this Doc View Source UnregisterModule(IModule) Declaration public bool UnregisterModule(IModule module) Parameters Type Name Description IModule module Returns Type Description Boolean Events | Improve this Doc View Source CommandExecuted Asynchronous event which is dispatched when a command was executed successfully. Declaration public event AsyncEventHandler<CommandExecutedEventArgs> CommandExecuted Event Type Type Description AsyncEventHandler < CommandExecutedEventArgs > | Improve this Doc View Source CommandExecuting Asynchronous event which is dispatched when a command is before being executed. Declaration public event AsyncEventHandler<CommandExecutingEventArgs> CommandExecuting Event Type Type Description AsyncEventHandler < CommandExecutingEventArgs > | Improve this Doc View Source CommandFailed Asynchronous event which is dispatched when a command failed. Declaration public event AsyncEventHandler<CommandFailedEventArgs> CommandFailed Event Type Type Description AsyncEventHandler < CommandFailedEventArgs > | Improve this Doc View Source UnknownCommand Asynchronous event which is dispatched when an unknown command was executed. Declaration public event AsyncEventHandler<UnknownCommandEventArgs> UnknownCommand Event Type Type Description AsyncEventHandler < UnknownCommandEventArgs > Implements System.IDisposable Extension Methods CommandServiceExtensions.AddInteractions(CommandService, InteractionsCommandOptions) CommandServiceExtensions.AddInteractions(CommandService, Action<InteractionsCommandOptions>) CommandServiceExtensions.AddInteractions(CommandService) Strade.Commands.CommandServiceExtensions.AddLegacy(Strade.Commands.CommandService, Strade.Commands.Legacy.LegacyCommandInterfaceOptions) Strade.Commands.CommandServiceExtensions.AddLegacy(Strade.Commands.CommandService, System.Action<Strade.Commands.Legacy.LegacyCommandInterfaceOptions>)"
  },
  "api/Strade.Commands.CommandServiceExtensions.html": {
    "href": "api/Strade.Commands.CommandServiceExtensions.html",
    "title": "Class CommandServiceExtensions | Strade Developer Documentation",
    "keywords": "Class CommandServiceExtensions Inheritance Object CommandServiceExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands Assembly : Strade.Commands.Interactions.dll Syntax public static class CommandServiceExtensions Methods | Improve this Doc View Source AddInteractions(CommandService) Declaration public static InteractionsCommandInterface AddInteractions(this CommandService commandService) Parameters Type Name Description CommandService commandService Returns Type Description InteractionsCommandInterface | Improve this Doc View Source AddInteractions(CommandService, InteractionsCommandOptions) Declaration public static InteractionsCommandInterface AddInteractions(this CommandService commandService, InteractionsCommandOptions options) Parameters Type Name Description CommandService commandService InteractionsCommandOptions options Returns Type Description InteractionsCommandInterface | Improve this Doc View Source AddInteractions(CommandService, Action<InteractionsCommandOptions>) Declaration public static InteractionsCommandInterface AddInteractions(this CommandService commandService, Action<InteractionsCommandOptions> configure) Parameters Type Name Description CommandService commandService Action < InteractionsCommandOptions > configure Returns Type Description InteractionsCommandInterface"
  },
  "api/Strade.Commands.CommandServiceOptions.html": {
    "href": "api/Strade.Commands.CommandServiceOptions.html",
    "title": "Class CommandServiceOptions | Strade Developer Documentation",
    "keywords": "Class CommandServiceOptions Options for the CommandService class. Inheritance Object CommandServiceOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands Assembly : Strade.Commands.dll Syntax public sealed class CommandServiceOptions Properties | Improve this Doc View Source AllowBots Gets or sets a value indicating whether messages from bots dispatches events. Declaration public bool AllowBots { get; set; } Property Value Type Description Boolean a value indicating whether messages from bots dispatches events. Remarks This property defaults to false . | Improve this Doc View Source AllowTextToSpeech Gets or sets a value indicating whether text-to-speech (TTS) messages are processed. Declaration public bool AllowTextToSpeech { get; set; } Property Value Type Description Boolean a value indicating whether text-to-speech (TTS) messages are processed. Remarks This property defaults to true . | Improve this Doc View Source AsyncDispatch Gets or sets a value indicating whether commands should be dispatched asynchronously regardless of whether the IsAsync is set. Declaration public bool AsyncDispatch { get; set; } Property Value Type Description Boolean a value indicating whether commands should be dispatched asynchronously regardless of whether the IsAsync is set. Remarks This property defaults to false . | Improve this Doc View Source CommandHandler Gets or sets the command executor to use. Declaration public CommandHandler CommandHandler { get; set; } Property Value Type Description CommandHandler the command executor to use (if null then Default is used). | Improve this Doc View Source DefaultResourceManager Declaration public IResourceManager DefaultResourceManager { get; set; } Property Value Type Description IResourceManager | Improve this Doc View Source ModuleResolver Declaration public IModuleResolver ModuleResolver { get; set; } Property Value Type Description IModuleResolver | Improve this Doc View Source TreatPrivateChannelsAsNsfw Gets or sets a value indicating whether private channels should be treated as NSFW channels. Declaration public bool TreatPrivateChannelsAsNsfw { get; set; } Property Value Type Description Boolean a value indicating whether private channels should be treated as NSFW channels. Remarks This property defaults to true . | Improve this Doc View Source UseDefaultConverters Gets or sets a value indicating whether the default converters should be registered. Declaration public bool UseDefaultConverters { get; set; } Property Value Type Description Boolean a value indicating whether the default converters should be registered. Remarks This property defaults to true ."
  },
  "api/Strade.Commands.Converters.BaseArgumentConverter-1.html": {
    "href": "api/Strade.Commands.Converters.BaseArgumentConverter-1.html",
    "title": "Class BaseArgumentConverter<T> | Strade Developer Documentation",
    "keywords": "Class BaseArgumentConverter<T> Abstraction of an IArgumentConverter used to implement single type argument converters. Inheritance Object BaseArgumentConverter<T> BaseEntityArgumentConverter<TEntity> Implements IArgumentConverter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Converters Assembly : Strade.Commands.dll Syntax public abstract class BaseArgumentConverter<T> : IArgumentConverter Type Parameters Name Description T the type of the argument the converter converts. Methods | Improve this Doc View Source CanConvert(Type) Gets a value indicating whether the argument converter can convert to the specified targetType . Declaration public virtual bool CanConvert(Type targetType) Parameters Type Name Description Type targetType the target type. Returns Type Description Boolean a value indicating whether the argument converter can convert to the specified targetType . | Improve this Doc View Source ConvertAsync(CommandContext, ICommandParameter, String, Type, CancellationToken) Converts the specified value to the specified targetType for the specified parameter . Declaration public abstract ValueTask<ArgumentResult> ConvertAsync(CommandContext context, ICommandParameter parameter, string value, Type targetType, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext context the current context. ICommandParameter parameter the calling parameter. String value the input value. Type targetType the type to convert to. CancellationToken cancellationToken Returns Type Description ValueTask < ArgumentResult > the parse result. Implements IArgumentConverter"
  },
  "api/Strade.Commands.Converters.BaseEntityArgumentConverter-1.html": {
    "href": "api/Strade.Commands.Converters.BaseEntityArgumentConverter-1.html",
    "title": "Class BaseEntityArgumentConverter<TEntity> | Strade Developer Documentation",
    "keywords": "Class BaseEntityArgumentConverter<TEntity> Inheritance Object BaseArgumentConverter <TEntity> BaseEntityArgumentConverter<TEntity> ChannelArgumentConverter MemberArgumentConverter RoleArgumentConverter UserArgumentConverter Implements IArgumentConverter Inherited Members BaseArgumentConverter<TEntity>.CanConvert(Type) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Converters Assembly : Strade.Commands.dll Syntax public abstract class BaseEntityArgumentConverter<TEntity> : BaseArgumentConverter<TEntity>, IArgumentConverter where TEntity : ISnowflakeEntity Type Parameters Name Description TEntity Properties | Improve this Doc View Source IsGuildEntity Gets a value indicating whether the entity is a guild-scope entity. Declaration public virtual bool IsGuildEntity { get; } Property Value Type Description Boolean a value indicating whether the entity is a guild-scope entity. Methods | Improve this Doc View Source ConvertAsync(CommandContext, ICommandParameter, String, Type, CancellationToken) Declaration public override ValueTask<ArgumentResult> ConvertAsync(CommandContext context, ICommandParameter parameter, string value, Type targetType, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext context ICommandParameter parameter String value Type targetType CancellationToken cancellationToken Returns Type Description ValueTask < ArgumentResult > Overrides Strade.Commands.Converters.BaseArgumentConverter<TEntity>.ConvertAsync(Strade.Commands.CommandContext, Strade.Commands.ICommandParameter, System.String, System.Type, System.Threading.CancellationToken) | Improve this Doc View Source IsAccessibleAsync(CommandContext, TEntity, CancellationToken) Gets a value indicating whether the specified entity is accessible from the specified context asynchronously. Declaration protected virtual ValueTask<bool> IsAccessibleAsync(CommandContext context, TEntity entity, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext context the calling command context. TEntity entity the entity. CancellationToken cancellationToken Returns Type Description ValueTask < Boolean > a task that represents the asynchronous operation. The task result is a value indicating whether the specified entity is accessible from the specified context . | Improve this Doc View Source ResolveAsync(CommandContext, ICommandParameter, String, CancellationToken) Resolves an entity for the specified parameter using the specified value asynchronously. Declaration protected abstract ValueTask<TEntity> ResolveAsync(CommandContext context, ICommandParameter parameter, string value, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext context the command context. ICommandParameter parameter the command parameter. String value the value. CancellationToken cancellationToken Returns Type Description ValueTask <TEntity> a task that represents the asynchronous operation. The task result is the resolved entity; or default if the entity could not be resolved. Implements IArgumentConverter"
  },
  "api/Strade.Commands.Converters.ChannelArgumentConverter.html": {
    "href": "api/Strade.Commands.Converters.ChannelArgumentConverter.html",
    "title": "Class ChannelArgumentConverter | Strade Developer Documentation",
    "keywords": "Class ChannelArgumentConverter An argument converter ( IArgumentConverter ) used for converting command parameters to IChannel instances. Inheritance Object BaseArgumentConverter < IChannel > BaseEntityArgumentConverter < IChannel > ChannelArgumentConverter Implements IArgumentConverter Inherited Members BaseEntityArgumentConverter<IChannel>.IsGuildEntity BaseEntityArgumentConverter<IChannel>.ConvertAsync(CommandContext, ICommandParameter, String, Type, CancellationToken) BaseArgumentConverter<IChannel>.CanConvert(Type) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Converters Assembly : Strade.Commands.dll Syntax public sealed class ChannelArgumentConverter : BaseEntityArgumentConverter<IChannel>, IArgumentConverter Properties | Improve this Doc View Source Instance Gets a shared instance of the ChannelArgumentConverter class. Declaration public static ChannelArgumentConverter Instance { get; } Property Value Type Description ChannelArgumentConverter a shared instance of the ChannelArgumentConverter class. Methods | Improve this Doc View Source IsAccessibleAsync(CommandContext, IChannel, CancellationToken) Declaration protected override ValueTask<bool> IsAccessibleAsync(CommandContext context, IChannel entity, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext context IChannel entity CancellationToken cancellationToken Returns Type Description ValueTask < Boolean > Overrides Strade.Commands.Converters.BaseEntityArgumentConverter<Strade.Entities.IChannel>.IsAccessibleAsync(Strade.Commands.CommandContext, Strade.Entities.IChannel, System.Threading.CancellationToken) | Improve this Doc View Source ResolveAsync(CommandContext, ICommandParameter, String, CancellationToken) Declaration protected override ValueTask<IChannel> ResolveAsync(CommandContext context, ICommandParameter parameter, string value, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext context ICommandParameter parameter String value CancellationToken cancellationToken Returns Type Description ValueTask < IChannel > Overrides Strade.Commands.Converters.BaseEntityArgumentConverter<Strade.Entities.IChannel>.ResolveAsync(Strade.Commands.CommandContext, Strade.Commands.ICommandParameter, System.String, System.Threading.CancellationToken) Implements IArgumentConverter"
  },
  "api/Strade.Commands.Converters.ColorArgumentConverter.html": {
    "href": "api/Strade.Commands.Converters.ColorArgumentConverter.html",
    "title": "Class ColorArgumentConverter | Strade Developer Documentation",
    "keywords": "Class ColorArgumentConverter An argument converter ( IArgumentConverter ) used for converting command parameters to Color instances. Inheritance Object ColorArgumentConverter Implements IArgumentConverter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Converters Assembly : Strade.Commands.dll Syntax public sealed class ColorArgumentConverter : IArgumentConverter Properties | Improve this Doc View Source Instance Gets a shared instance of the ColorArgumentConverter class. Declaration public static ColorArgumentConverter Instance { get; } Property Value Type Description ColorArgumentConverter a shared instance of the ColorArgumentConverter class. Methods | Improve this Doc View Source CanConvert(Type) Declaration public bool CanConvert(Type targetType) Parameters Type Name Description Type targetType Returns Type Description Boolean | Improve this Doc View Source ConvertAsync(CommandContext, ICommandParameter, String, Type, CancellationToken) Declaration public ValueTask<ArgumentResult> ConvertAsync(CommandContext context, ICommandParameter parameter, string value, Type targetType, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext context ICommandParameter parameter String value Type targetType CancellationToken cancellationToken Returns Type Description ValueTask < ArgumentResult > Implements IArgumentConverter"
  },
  "api/Strade.Commands.Converters.EnumArgumentConverter.html": {
    "href": "api/Strade.Commands.Converters.EnumArgumentConverter.html",
    "title": "Class EnumArgumentConverter | Strade Developer Documentation",
    "keywords": "Class EnumArgumentConverter An IArgumentConverter which parses enumeration values from strings. Inheritance Object EnumArgumentConverter Implements IArgumentConverter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Converters Assembly : Strade.Commands.dll Syntax public sealed class EnumArgumentConverter : IArgumentConverter Properties | Improve this Doc View Source Instance Gets a shared instance of the EnumArgumentConverter class. Declaration public static EnumArgumentConverter Instance { get; } Property Value Type Description EnumArgumentConverter a shared instance of the EnumArgumentConverter class. Methods | Improve this Doc View Source CanConvert(Type) Declaration public bool CanConvert(Type targetType) Parameters Type Name Description Type targetType Returns Type Description Boolean | Improve this Doc View Source ConvertAsync(CommandContext, ICommandParameter, String, Type, CancellationToken) Declaration public ValueTask<ArgumentResult> ConvertAsync(CommandContext context, ICommandParameter parameter, string value, Type targetType, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext context ICommandParameter parameter String value Type targetType CancellationToken cancellationToken Returns Type Description ValueTask < ArgumentResult > Implements IArgumentConverter"
  },
  "api/Strade.Commands.Converters.GuidArgumentConverter.html": {
    "href": "api/Strade.Commands.Converters.GuidArgumentConverter.html",
    "title": "Class GuidArgumentConverter | Strade Developer Documentation",
    "keywords": "Class GuidArgumentConverter An argument converter ( IArgumentConverter ) used for converting command parameters to Guid instances. Inheritance Object GuidArgumentConverter Implements IArgumentConverter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Converters Assembly : Strade.Commands.dll Syntax public sealed class GuidArgumentConverter : IArgumentConverter Properties | Improve this Doc View Source Instance Gets a shared instance of the GuidArgumentConverter class. Declaration public static GuidArgumentConverter Instance { get; } Property Value Type Description GuidArgumentConverter Methods | Improve this Doc View Source CanConvert(Type) Declaration public bool CanConvert(Type targetType) Parameters Type Name Description Type targetType Returns Type Description Boolean | Improve this Doc View Source ConvertAsync(CommandContext, ICommandParameter, String, Type, CancellationToken) Declaration public ValueTask<ArgumentResult> ConvertAsync(CommandContext context, ICommandParameter parameter, string value, Type targetType, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext context ICommandParameter parameter String value Type targetType CancellationToken cancellationToken Returns Type Description ValueTask < ArgumentResult > Implements IArgumentConverter"
  },
  "api/Strade.Commands.Converters.html": {
    "href": "api/Strade.Commands.Converters.html",
    "title": "Namespace Strade.Commands.Converters | Strade Developer Documentation",
    "keywords": "Namespace Strade.Commands.Converters Classes BaseArgumentConverter<T> Abstraction of an IArgumentConverter used to implement single type argument converters. BaseEntityArgumentConverter<TEntity> ChannelArgumentConverter An argument converter ( IArgumentConverter ) used for converting command parameters to IChannel instances. ColorArgumentConverter An argument converter ( IArgumentConverter ) used for converting command parameters to Color instances. EnumArgumentConverter An IArgumentConverter which parses enumeration values from strings. GuidArgumentConverter An argument converter ( IArgumentConverter ) used for converting command parameters to Guid instances. MemberArgumentConverter An argument converter ( IArgumentConverter ) used for converting command parameters to Member instances. PrimitiveArgumentConverter Primitive arguments converter that converts primitive types ( Int32 , UInt32 , Int64 , etc.) and strings. RoleArgumentConverter An argument converter ( IArgumentConverter ) used for converting command parameters to IRole instances. UserArgumentConverter VersionArgumentConverter An argument converter ( IArgumentConverter ) used for converting command parameters to Version instances. Interfaces IArgumentConverter Interface for argument converters."
  },
  "api/Strade.Commands.Converters.IArgumentConverter.html": {
    "href": "api/Strade.Commands.Converters.IArgumentConverter.html",
    "title": "Interface IArgumentConverter | Strade Developer Documentation",
    "keywords": "Interface IArgumentConverter Interface for argument converters. Namespace : Strade.Commands.Converters Assembly : Strade.Commands.dll Syntax public interface IArgumentConverter Methods | Improve this Doc View Source CanConvert(Type) Gets a value indicating whether the argument converter can convert to the specified targetType . Declaration bool CanConvert(Type targetType) Parameters Type Name Description Type targetType the target type. Returns Type Description Boolean a value indicating whether the argument converter can convert to the specified targetType . | Improve this Doc View Source ConvertAsync(CommandContext, ICommandParameter, String, Type, CancellationToken) Converts the specified value to the specified targetType for the specified parameter . Declaration ValueTask<ArgumentResult> ConvertAsync(CommandContext context, ICommandParameter parameter, string value, Type targetType, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext context the current context. ICommandParameter parameter the calling parameter. String value the input value. Type targetType the type to convert to. CancellationToken cancellationToken Returns Type Description ValueTask < ArgumentResult > a task that represents the asynchronous operation. The task result is the parse result."
  },
  "api/Strade.Commands.Converters.MemberArgumentConverter.html": {
    "href": "api/Strade.Commands.Converters.MemberArgumentConverter.html",
    "title": "Class MemberArgumentConverter | Strade Developer Documentation",
    "keywords": "Class MemberArgumentConverter An argument converter ( IArgumentConverter ) used for converting command parameters to Member instances. Inheritance Object BaseArgumentConverter < Member > BaseEntityArgumentConverter < Member > MemberArgumentConverter Implements IArgumentConverter Inherited Members BaseEntityArgumentConverter<Member>.ConvertAsync(CommandContext, ICommandParameter, String, Type, CancellationToken) BaseEntityArgumentConverter<Member>.IsAccessibleAsync(CommandContext, Member, CancellationToken) BaseArgumentConverter<Member>.CanConvert(Type) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Converters Assembly : Strade.Commands.dll Syntax public sealed class MemberArgumentConverter : BaseEntityArgumentConverter<Member>, IArgumentConverter Properties | Improve this Doc View Source Instance Gets a shared instance of the MemberArgumentConverter class. Declaration public static MemberArgumentConverter Instance { get; } Property Value Type Description MemberArgumentConverter a shared instance of the MemberArgumentConverter class. | Improve this Doc View Source IsGuildEntity Declaration public override bool IsGuildEntity { get; } Property Value Type Description Boolean Overrides Strade.Commands.Converters.BaseEntityArgumentConverter<Strade.Entities.Member>.IsGuildEntity Methods | Improve this Doc View Source ResolveAsync(CommandContext, ICommandParameter, String, CancellationToken) Declaration protected override ValueTask<Member> ResolveAsync(CommandContext context, ICommandParameter parameter, string value, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext context ICommandParameter parameter String value CancellationToken cancellationToken Returns Type Description ValueTask < Member > Overrides Strade.Commands.Converters.BaseEntityArgumentConverter<Strade.Entities.Member>.ResolveAsync(Strade.Commands.CommandContext, Strade.Commands.ICommandParameter, System.String, System.Threading.CancellationToken) Implements IArgumentConverter"
  },
  "api/Strade.Commands.Converters.PrimitiveArgumentConverter.html": {
    "href": "api/Strade.Commands.Converters.PrimitiveArgumentConverter.html",
    "title": "Class PrimitiveArgumentConverter | Strade Developer Documentation",
    "keywords": "Class PrimitiveArgumentConverter Primitive arguments converter that converts primitive types ( Int32 , UInt32 , Int64 , etc.) and strings. Inheritance Object PrimitiveArgumentConverter Implements IArgumentConverter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Converters Assembly : Strade.Commands.dll Syntax public sealed class PrimitiveArgumentConverter : IArgumentConverter Properties | Improve this Doc View Source Instance Gets a shared instance of the PrimitiveArgumentConverter class. Declaration public static PrimitiveArgumentConverter Instance { get; } Property Value Type Description PrimitiveArgumentConverter a shared instance of the PrimitiveArgumentConverter class. Methods | Improve this Doc View Source CanConvert(Type) Gets a value indicating whether the argument converter can convert to the specified targetType . Declaration public bool CanConvert(Type targetType) Parameters Type Name Description Type targetType the target type. Returns Type Description Boolean a value indicating whether the argument converter can convert to the specified targetType . | Improve this Doc View Source ConvertAsync(CommandContext, ICommandParameter, String, Type, CancellationToken) Declaration public ValueTask<ArgumentResult> ConvertAsync(CommandContext context, ICommandParameter parameter, string value, Type targetType, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext context ICommandParameter parameter String value Type targetType CancellationToken cancellationToken Returns Type Description ValueTask < ArgumentResult > Implements IArgumentConverter"
  },
  "api/Strade.Commands.Converters.RoleArgumentConverter.html": {
    "href": "api/Strade.Commands.Converters.RoleArgumentConverter.html",
    "title": "Class RoleArgumentConverter | Strade Developer Documentation",
    "keywords": "Class RoleArgumentConverter An argument converter ( IArgumentConverter ) used for converting command parameters to IRole instances. Inheritance Object BaseArgumentConverter < IRole > BaseEntityArgumentConverter < IRole > RoleArgumentConverter Implements IArgumentConverter Inherited Members BaseEntityArgumentConverter<IRole>.ConvertAsync(CommandContext, ICommandParameter, String, Type, CancellationToken) BaseEntityArgumentConverter<IRole>.IsAccessibleAsync(CommandContext, IRole, CancellationToken) BaseArgumentConverter<IRole>.CanConvert(Type) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Converters Assembly : Strade.Commands.dll Syntax public sealed class RoleArgumentConverter : BaseEntityArgumentConverter<IRole>, IArgumentConverter Properties | Improve this Doc View Source Instance Gets a shared instance of the RoleArgumentConverter class. Declaration public static RoleArgumentConverter Instance { get; } Property Value Type Description RoleArgumentConverter a shared instance of the RoleArgumentConverter class. | Improve this Doc View Source IsGuildEntity Declaration public override bool IsGuildEntity { get; } Property Value Type Description Boolean Overrides Strade.Commands.Converters.BaseEntityArgumentConverter<Strade.Entities.IRole>.IsGuildEntity Methods | Improve this Doc View Source ResolveAsync(CommandContext, ICommandParameter, String, CancellationToken) Declaration protected override ValueTask<IRole> ResolveAsync(CommandContext context, ICommandParameter parameter, string value, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext context ICommandParameter parameter String value CancellationToken cancellationToken Returns Type Description ValueTask < IRole > Overrides Strade.Commands.Converters.BaseEntityArgumentConverter<Strade.Entities.IRole>.ResolveAsync(Strade.Commands.CommandContext, Strade.Commands.ICommandParameter, System.String, System.Threading.CancellationToken) Implements IArgumentConverter"
  },
  "api/Strade.Commands.Converters.UserArgumentConverter.html": {
    "href": "api/Strade.Commands.Converters.UserArgumentConverter.html",
    "title": "Class UserArgumentConverter | Strade Developer Documentation",
    "keywords": "Class UserArgumentConverter Inheritance Object BaseArgumentConverter < User > BaseEntityArgumentConverter < User > UserArgumentConverter Implements IArgumentConverter Inherited Members BaseEntityArgumentConverter<User>.IsGuildEntity BaseEntityArgumentConverter<User>.ConvertAsync(CommandContext, ICommandParameter, String, Type, CancellationToken) BaseArgumentConverter<User>.CanConvert(Type) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Converters Assembly : Strade.Commands.dll Syntax public sealed class UserArgumentConverter : BaseEntityArgumentConverter<User>, IArgumentConverter Properties | Improve this Doc View Source Instance Gets a shared instance of the UserArgumentConverter class. Declaration public static UserArgumentConverter Instance { get; } Property Value Type Description UserArgumentConverter a shared instance of the UserArgumentConverter class. Methods | Improve this Doc View Source IsAccessibleAsync(CommandContext, User, CancellationToken) Declaration protected override ValueTask<bool> IsAccessibleAsync(CommandContext context, User entity, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext context User entity CancellationToken cancellationToken Returns Type Description ValueTask < Boolean > Overrides Strade.Commands.Converters.BaseEntityArgumentConverter<Strade.Entities.User>.IsAccessibleAsync(Strade.Commands.CommandContext, Strade.Entities.User, System.Threading.CancellationToken) | Improve this Doc View Source ResolveAsync(CommandContext, ICommandParameter, String, CancellationToken) Declaration protected override ValueTask<User> ResolveAsync(CommandContext context, ICommandParameter parameter, string value, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext context ICommandParameter parameter String value CancellationToken cancellationToken Returns Type Description ValueTask < User > Overrides Strade.Commands.Converters.BaseEntityArgumentConverter<Strade.Entities.User>.ResolveAsync(Strade.Commands.CommandContext, Strade.Commands.ICommandParameter, System.String, System.Threading.CancellationToken) Implements IArgumentConverter"
  },
  "api/Strade.Commands.Converters.VersionArgumentConverter.html": {
    "href": "api/Strade.Commands.Converters.VersionArgumentConverter.html",
    "title": "Class VersionArgumentConverter | Strade Developer Documentation",
    "keywords": "Class VersionArgumentConverter An argument converter ( IArgumentConverter ) used for converting command parameters to Version instances. Inheritance Object VersionArgumentConverter Implements IArgumentConverter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Converters Assembly : Strade.Commands.dll Syntax public sealed class VersionArgumentConverter : IArgumentConverter Properties | Improve this Doc View Source Instance Gets a shared instance of the VersionArgumentConverter class. Declaration public static VersionArgumentConverter Instance { get; } Property Value Type Description VersionArgumentConverter a shared instance of the VersionArgumentConverter class. Methods | Improve this Doc View Source CanConvert(Type) Declaration public bool CanConvert(Type targetType) Parameters Type Name Description Type targetType Returns Type Description Boolean | Improve this Doc View Source ConvertAsync(CommandContext, ICommandParameter, String, Type, CancellationToken) Declaration public ValueTask<ArgumentResult> ConvertAsync(CommandContext context, ICommandParameter parameter, string value, Type targetType, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext context ICommandParameter parameter String value Type targetType CancellationToken cancellationToken Returns Type Description ValueTask < ArgumentResult > Implements IArgumentConverter"
  },
  "api/Strade.Commands.Events.CommandEventArgs.html": {
    "href": "api/Strade.Commands.Events.CommandEventArgs.html",
    "title": "Class CommandEventArgs | Strade Developer Documentation",
    "keywords": "Class CommandEventArgs Inheritance Object EventArgs CommandEventArgs CommandExecutedEventArgs CommandExecutingEventArgs CommandFailedEventArgs UnknownCommandEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Events Assembly : Strade.Commands.dll Syntax public abstract class CommandEventArgs : EventArgs Constructors | Improve this Doc View Source CommandEventArgs(CommandContext) Initializes a new instance of the CommandEventArgs class. Declaration protected CommandEventArgs(CommandContext context) Parameters Type Name Description CommandContext context the associated command context. Exceptions Type Condition ArgumentNullException thrown if the specified context is null . Properties | Improve this Doc View Source Context Gets the associated command context. Declaration public CommandContext Context { get; } Property Value Type Description CommandContext the associated command context."
  },
  "api/Strade.Commands.Events.CommandExecutedEventArgs.html": {
    "href": "api/Strade.Commands.Events.CommandExecutedEventArgs.html",
    "title": "Class CommandExecutedEventArgs | Strade Developer Documentation",
    "keywords": "Class CommandExecutedEventArgs Inheritance Object EventArgs CommandEventArgs CommandExecutedEventArgs Inherited Members CommandEventArgs.Context EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Events Assembly : Strade.Commands.dll Syntax public sealed class CommandExecutedEventArgs : CommandEventArgs Constructors | Improve this Doc View Source CommandExecutedEventArgs(CommandContext, ICommand, IResult) Declaration public CommandExecutedEventArgs(CommandContext context, ICommand command, IResult result) Parameters Type Name Description CommandContext context ICommand command IResult result Properties | Improve this Doc View Source Command Gets the command that was executed. Declaration public ICommand Command { get; } Property Value Type Description ICommand the command that was executed. | Improve this Doc View Source Result Gets the command result. Declaration public IResult Result { get; } Property Value Type Description IResult"
  },
  "api/Strade.Commands.Events.CommandExecutingEventArgs.html": {
    "href": "api/Strade.Commands.Events.CommandExecutingEventArgs.html",
    "title": "Class CommandExecutingEventArgs | Strade Developer Documentation",
    "keywords": "Class CommandExecutingEventArgs Inheritance Object EventArgs CommandEventArgs CommandExecutingEventArgs Inherited Members CommandEventArgs.Context EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Events Assembly : Strade.Commands.dll Syntax public sealed class CommandExecutingEventArgs : CommandEventArgs Constructors | Improve this Doc View Source CommandExecutingEventArgs(CommandContext, ICommand) Declaration public CommandExecutingEventArgs(CommandContext context, ICommand command) Parameters Type Name Description CommandContext context ICommand command Properties | Improve this Doc View Source Command Gets the command that was executed. Declaration public ICommand Command { get; } Property Value Type Description ICommand the command that was executed. | Improve this Doc View Source ShouldExecute Gets or sets a value indicating whether the command should be executed. Declaration public bool ShouldExecute { get; set; } Property Value Type Description Boolean a value indicating whether the command should be executed."
  },
  "api/Strade.Commands.Events.CommandFailedEventArgs.html": {
    "href": "api/Strade.Commands.Events.CommandFailedEventArgs.html",
    "title": "Class CommandFailedEventArgs | Strade Developer Documentation",
    "keywords": "Class CommandFailedEventArgs Inheritance Object EventArgs CommandEventArgs CommandFailedEventArgs Inherited Members CommandEventArgs.Context EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Events Assembly : Strade.Commands.dll Syntax public sealed class CommandFailedEventArgs : CommandEventArgs Constructors | Improve this Doc View Source CommandFailedEventArgs(CommandContext, ICommand, IResult) Declaration public CommandFailedEventArgs(CommandContext context, ICommand command, IResult result) Parameters Type Name Description CommandContext context ICommand command IResult result Properties | Improve this Doc View Source Command Gets the command that was executed. Declaration public ICommand Command { get; } Property Value Type Description ICommand the command that was executed. | Improve this Doc View Source Result Gets the command result. Declaration public IResult Result { get; } Property Value Type Description IResult the command result."
  },
  "api/Strade.Commands.Events.html": {
    "href": "api/Strade.Commands.Events.html",
    "title": "Namespace Strade.Commands.Events | Strade Developer Documentation",
    "keywords": "Namespace Strade.Commands.Events Classes CommandEventArgs CommandExecutedEventArgs CommandExecutingEventArgs CommandFailedEventArgs UnknownCommandEventArgs The event arguments for the UnknownCommand event."
  },
  "api/Strade.Commands.Events.UnknownCommandEventArgs.html": {
    "href": "api/Strade.Commands.Events.UnknownCommandEventArgs.html",
    "title": "Class UnknownCommandEventArgs | Strade Developer Documentation",
    "keywords": "Class UnknownCommandEventArgs The event arguments for the UnknownCommand event. Inheritance Object EventArgs CommandEventArgs UnknownCommandEventArgs Inherited Members CommandEventArgs.Context EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Events Assembly : Strade.Commands.dll Syntax public sealed class UnknownCommandEventArgs : CommandEventArgs Constructors | Improve this Doc View Source UnknownCommandEventArgs(CommandContext) Initializes a new instance of the UnknownCommandEventArgs class. Declaration public UnknownCommandEventArgs(CommandContext context) Parameters Type Name Description CommandContext context the associated command context. Exceptions Type Condition ArgumentNullException thrown if the specified context is null ."
  },
  "api/Strade.Commands.Exceptions.html": {
    "href": "api/Strade.Commands.Exceptions.html",
    "title": "Namespace Strade.Commands.Exceptions | Strade Developer Documentation",
    "keywords": "Namespace Strade.Commands.Exceptions Classes InvalidContextException"
  },
  "api/Strade.Commands.Exceptions.InvalidContextException.html": {
    "href": "api/Strade.Commands.Exceptions.InvalidContextException.html",
    "title": "Class InvalidContextException | Strade Developer Documentation",
    "keywords": "Class InvalidContextException Inheritance Object Exception SystemException InvalidOperationException InvalidContextException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Commands.Exceptions Assembly : Strade.Commands.dll Syntax public class InvalidContextException : InvalidOperationException, ISerializable Constructors | Improve this Doc View Source InvalidContextException() Declaration public InvalidContextException() | Improve this Doc View Source InvalidContextException(String) Declaration public InvalidContextException(string message) Parameters Type Name Description String message | Improve this Doc View Source InvalidContextException(String, Exception) Declaration public InvalidContextException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Implements System.Runtime.Serialization.ISerializable"
  },
  "api/Strade.Commands.html": {
    "href": "api/Strade.Commands.html",
    "title": "Namespace Strade.Commands | Strade Developer Documentation",
    "keywords": "Namespace Strade.Commands Classes CommandContext Represents a structure that holds basic information commonly used during command execution. CommandContextExtensions CommandHandler CommandInterface CommandService A service that handles / dispatches commands. CommandServiceExtensions CommandServiceOptions Options for the CommandService class. Interfaces ICommand Interface for command implementations. ICommandExecutionInformation Represents an interface for types defined by the command interface used to link information to the command context. ICommandParameter Interface for command parameters. IDescribable Interface for describable elements. IInstanceProvider Enums CommandResponseType A set of possible command response types. ParameterOptions A set of applicable parameter options."
  },
  "api/Strade.Commands.ICommand.html": {
    "href": "api/Strade.Commands.ICommand.html",
    "title": "Interface ICommand | Strade Developer Documentation",
    "keywords": "Interface ICommand Interface for command implementations. Inherited Members IDescribable.Description Namespace : Strade.Commands Assembly : Strade.Commands.dll Syntax public interface ICommand : IDescribable Properties | Improve this Doc View Source Aliases Gets a list of sub-aliases of the command. Declaration IReadOnlyList<string> Aliases { get; } Property Value Type Description IReadOnlyList < String > a list of sub-aliases of the command. | Improve this Doc View Source CustomAttributes Gets a list of user-defined attributes. Declaration IReadOnlyList<Attribute> CustomAttributes { get; } Property Value Type Description IReadOnlyList < Attribute > a list of user-defined attributes. | Improve this Doc View Source Group Gets the sub-group name of the command. Declaration string Group { get; } Property Value Type Description String the sub-group name of the command. | Improve this Doc View Source IsAsync Gets a value indicating whether gets a value indicating the command should be executed asynchronously from the gateway thread. Declaration bool IsAsync { get; } Property Value Type Description Boolean a value indicating the command should be executed asynchronously from the gateway thread. | Improve this Doc View Source IsHidden Gets a value indicating whether the command is hidden. Declaration bool IsHidden { get; } Property Value Type Description Boolean a value indicating whether the command is hidden. | Improve this Doc View Source Module Gets the module the command is in; or null if not provided by an module. Declaration IModule Module { get; } Property Value Type Description IModule the module the command is in; or null if not provided by an module. | Improve this Doc View Source Name Gets the name of the command. Declaration string Name { get; } Property Value Type Description String the name of the command. | Improve this Doc View Source Parameters Gets the command parameters. Declaration IReadOnlyList<ICommandParameter> Parameters { get; } Property Value Type Description IReadOnlyList < ICommandParameter > the command parameters. | Improve this Doc View Source Preconditions Gets the command preconditions. Declaration IReadOnlyList<IPrecondition> Preconditions { get; } Property Value Type Description IReadOnlyList < IPrecondition > the command preconditions. | Improve this Doc View Source ResponseType Gets the response type for the command. Declaration CommandResponseType ResponseType { get; } Property Value Type Description CommandResponseType the response type for the command. | Improve this Doc View Source Tags Gets a list of tags for the command. Declaration IReadOnlyList<string> Tags { get; } Property Value Type Description IReadOnlyList < String > a list of tags for the command. Methods | Improve this Doc View Source CanBeExecutedAsync(CommandContext, CancellationToken) Declaration ValueTask<bool> CanBeExecutedAsync(CommandContext context, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext context CancellationToken cancellationToken Returns Type Description ValueTask < Boolean > | Improve this Doc View Source CheckPreconditionsAsync(CommandContext, CancellationToken) Checks all specified preconditions asynchronously. Declaration ValueTask<PreconditionResult> CheckPreconditionsAsync(CommandContext context, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext context the command context. CancellationToken cancellationToken Returns Type Description ValueTask < PreconditionResult > a task that represents the asynchronous operation. The task result is the precondition failed; or null if all preconditions are met. Exceptions Type Condition ArgumentNullException thrown if the specified context is null . | Improve this Doc View Source GetUsage(CommandUsageStyle) Declaration string GetUsage(CommandUsageStyle usageStyle = null) Parameters Type Name Description CommandUsageStyle usageStyle Returns Type Description String | Improve this Doc View Source GetUsage(String, CommandUsageStyle) Declaration string GetUsage(string prefix, CommandUsageStyle usageStyle = null) Parameters Type Name Description String prefix CommandUsageStyle usageStyle Returns Type Description String | Improve this Doc View Source Invoke(CommandContext, IReadOnlyList<Object>) Invokes the command. Declaration object Invoke(CommandContext context, IReadOnlyList<object> parameters) Parameters Type Name Description CommandContext context the command context. IReadOnlyList < Object > parameters the command parameters. Returns Type Description Object the raw command result."
  },
  "api/Strade.Commands.ICommandExecutionInformation.html": {
    "href": "api/Strade.Commands.ICommandExecutionInformation.html",
    "title": "Interface ICommandExecutionInformation | Strade Developer Documentation",
    "keywords": "Interface ICommandExecutionInformation Represents an interface for types defined by the command interface used to link information to the command context. Namespace : Strade.Commands Assembly : Strade.Commands.dll Syntax public interface ICommandExecutionInformation"
  },
  "api/Strade.Commands.ICommandParameter.html": {
    "href": "api/Strade.Commands.ICommandParameter.html",
    "title": "Interface ICommandParameter | Strade Developer Documentation",
    "keywords": "Interface ICommandParameter Interface for command parameters. Inherited Members IDescribable.Description Namespace : Strade.Commands Assembly : Strade.Commands.dll Syntax public interface ICommandParameter : IDescribable Properties | Improve this Doc View Source AllowRemote Gets a value indicating whether remote entities are allowed (e.g. channels that are not part of the guild). Declaration bool AllowRemote { get; } Property Value Type Description Boolean a value indicating whether remote entities are allowed (e.g. channels that are not part of the guild). | Improve this Doc View Source CustomAttributes Gets a list of user-defined attributes. Declaration IReadOnlyList<Attribute> CustomAttributes { get; } Property Value Type Description IReadOnlyList < Attribute > a list of user-defined attributes. | Improve this Doc View Source DefaultValue Gets the default value for the command. Declaration object DefaultValue { get; } Property Value Type Description Object the default value for the command; if IsOptional is true . | Improve this Doc View Source IsOptional Gets a value indicating whether the command is optional. Declaration bool IsOptional { get; } Property Value Type Description Boolean a value indicating whether the command is optional. | Improve this Doc View Source IsParams Gets a value indicating whether the parameter accepts multiple parameters. Declaration bool IsParams { get; } Property Value Type Description Boolean a value indicating whether the parameter accepts multiple parameters. | Improve this Doc View Source IsRemainder Gets a value indicating whether the parameter is a remainder parameter (remainder parameters consume all remaining arguments). Declaration bool IsRemainder { get; } Property Value Type Description Boolean a value indicating whether the parameter is a remainder parameter (remainder parameters consume all remaining arguments). | Improve this Doc View Source Name Gets the name of the parameter. Declaration string Name { get; } Property Value Type Description String the name of the parameter. | Improve this Doc View Source Options Gets the options applied to the parameter. Declaration ParameterOptions Options { get; } Property Value Type Description ParameterOptions the options applied to the parameter. | Improve this Doc View Source ParameterType Gets the type of the parameter. Declaration Type ParameterType { get; } Property Value Type Description Type the type of the parameter."
  },
  "api/Strade.Commands.IDescribable.html": {
    "href": "api/Strade.Commands.IDescribable.html",
    "title": "Interface IDescribable | Strade Developer Documentation",
    "keywords": "Interface IDescribable Interface for describable elements. Namespace : Strade.Commands Assembly : Strade.Commands.dll Syntax public interface IDescribable Properties | Improve this Doc View Source Description Gets the description. Declaration LocalizableString Description { get; } Property Value Type Description LocalizableString the description."
  },
  "api/Strade.Commands.IInstanceProvider.html": {
    "href": "api/Strade.Commands.IInstanceProvider.html",
    "title": "Interface IInstanceProvider | Strade Developer Documentation",
    "keywords": "Interface IInstanceProvider Namespace : Strade.Commands Assembly : Strade.Commands.dll Syntax public interface IInstanceProvider Methods | Improve this Doc View Source Provide(CommandContext, ICommand) Declaration object Provide(CommandContext commandContext, ICommand command) Parameters Type Name Description CommandContext commandContext ICommand command Returns Type Description Object"
  },
  "api/Strade.Commands.Interactions.html": {
    "href": "api/Strade.Commands.Interactions.html",
    "title": "Namespace Strade.Commands.Interactions | Strade Developer Documentation",
    "keywords": "Namespace Strade.Commands.Interactions Classes InteractionsCommandExecutionInformation InteractionsCommandInterface InteractionsCommandOptions InteractionsMessageCreationProperties Structs SyncInteractionsResponseContext"
  },
  "api/Strade.Commands.Interactions.InteractionsCommandExecutionInformation.html": {
    "href": "api/Strade.Commands.Interactions.InteractionsCommandExecutionInformation.html",
    "title": "Class InteractionsCommandExecutionInformation | Strade Developer Documentation",
    "keywords": "Class InteractionsCommandExecutionInformation Inheritance Object InteractionsCommandExecutionInformation Implements ICommandExecutionInformation Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Interactions Assembly : Strade.Commands.Interactions.dll Syntax public sealed class InteractionsCommandExecutionInformation : ICommandExecutionInformation Constructors | Improve this Doc View Source InteractionsCommandExecutionInformation(Interaction, SyncInteractionsResponseContext) Declaration public InteractionsCommandExecutionInformation(Interaction interaction, SyncInteractionsResponseContext responseContext) Parameters Type Name Description Interaction interaction SyncInteractionsResponseContext responseContext Properties | Improve this Doc View Source Interaction Declaration public Interaction Interaction { get; } Property Value Type Description Interaction | Improve this Doc View Source ResponseContext Declaration public SyncInteractionsResponseContext ResponseContext { get; } Property Value Type Description SyncInteractionsResponseContext Implements ICommandExecutionInformation"
  },
  "api/Strade.Commands.Interactions.InteractionsCommandInterface.html": {
    "href": "api/Strade.Commands.Interactions.InteractionsCommandInterface.html",
    "title": "Class InteractionsCommandInterface | Strade Developer Documentation",
    "keywords": "Class InteractionsCommandInterface Inheritance Object CommandInterface InteractionsCommandInterface Implements IInteractionsHandler Inherited Members CommandInterface.CommandService Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Interactions Assembly : Strade.Commands.Interactions.dll Syntax public class InteractionsCommandInterface : CommandInterface, IInteractionsHandler Constructors | Improve this Doc View Source InteractionsCommandInterface(CommandService, InteractionsCommandOptions) Declaration public InteractionsCommandInterface(CommandService commandService, InteractionsCommandOptions options) Parameters Type Name Description CommandService commandService InteractionsCommandOptions options Methods | Improve this Doc View Source DispatchAsync(Interaction, SyncInteractionsResponseContext, Boolean, CancellationToken) Declaration public Task<IResult> DispatchAsync(Interaction interaction, SyncInteractionsResponseContext responseContext = default(SyncInteractionsResponseContext), bool enforceSync = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Interaction interaction SyncInteractionsResponseContext responseContext Boolean enforceSync CancellationToken cancellationToken Returns Type Description Task < IResult > | Improve this Doc View Source GetResponseChannelAsync(CommandContext, CancellationToken) Declaration protected override ValueTask<IMessageChannel> GetResponseChannelAsync(CommandContext commandContext, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext commandContext CancellationToken cancellationToken Returns Type Description ValueTask < IMessageChannel > Overrides CommandInterface.GetResponseChannelAsync(CommandContext, CancellationToken) | Improve this Doc View Source LookupCommandAsync(CommandContext, CancellationToken) Declaration protected override ValueTask<MatchResult> LookupCommandAsync(CommandContext context, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext context CancellationToken cancellationToken Returns Type Description ValueTask < MatchResult > Overrides CommandInterface.LookupCommandAsync(CommandContext, CancellationToken) | Improve this Doc View Source Register() Declaration public override void Register() Overrides CommandInterface.Register() | Improve this Doc View Source Unregister() Declaration public override void Unregister() Overrides CommandInterface.Unregister() Explicit Interface Implementations | Improve this Doc View Source IInteractionsHandler.HandleAsync(InteractionModel, InteractionResponseCreationProperties, CancellationToken) Declaration ValueTask IInteractionsHandler.HandleAsync(InteractionModel data, InteractionResponseCreationProperties properties, CancellationToken cancellationToken) Parameters Type Name Description InteractionModel data InteractionResponseCreationProperties properties CancellationToken cancellationToken Returns Type Description ValueTask Implements IInteractionsHandler"
  },
  "api/Strade.Commands.Interactions.InteractionsCommandOptions.html": {
    "href": "api/Strade.Commands.Interactions.InteractionsCommandOptions.html",
    "title": "Class InteractionsCommandOptions | Strade Developer Documentation",
    "keywords": "Class InteractionsCommandOptions Inheritance Object InteractionsCommandOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Interactions Assembly : Strade.Commands.Interactions.dll Syntax public class InteractionsCommandOptions Properties | Improve this Doc View Source AlwaysUseCustomConverters Gets or sets a value indicating whether to force the use of custom converters. Declaration public bool AlwaysUseCustomConverters { get; set; } Property Value Type Description Boolean a value indicating whether to force the use of custom converters. Remarks If set to false, then the command interface is allowed to shortcut natively supported types ( String ), Boolean and Integer ) to their respective types ( String , Boolean , Byte , SByte , Char , Decimal , Double , Single , Int32 , UInt32 , Int64 , UInt64 , Int16 and UInt16 ). If the remote parameter type is incompatible with the local parameter type then a custom converter is enforced to convert the value (e.g. the local type is of type Boolean and the remote type is of type String )."
  },
  "api/Strade.Commands.Interactions.InteractionsMessageCreationProperties.html": {
    "href": "api/Strade.Commands.Interactions.InteractionsMessageCreationProperties.html",
    "title": "Class InteractionsMessageCreationProperties | Strade Developer Documentation",
    "keywords": "Class InteractionsMessageCreationProperties Inheritance Object MessageCreationProperties InteractionsMessageCreationProperties Implements ICreationProperties Inherited Members MessageCreationProperties.Attachments MessageCreationProperties.Content MessageCreationProperties.File MessageCreationProperties.Mentions MessageCreationProperties.Nonce MessageCreationProperties.ReferencedMessage MessageCreationProperties.TextToSpeech MessageCreationProperties.Validate() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Interactions Assembly : Strade.Commands.Interactions.dll Syntax public sealed class InteractionsMessageCreationProperties : MessageCreationProperties, ICreationProperties Properties | Improve this Doc View Source Embed Declaration public override Optional<EmbedMessage> Embed { get; set; } Property Value Type Description Optional < EmbedMessage > Overrides MessageCreationProperties.Embed Implements ICreationProperties"
  },
  "api/Strade.Commands.Interactions.Synchronization.CommandFilter.html": {
    "href": "api/Strade.Commands.Interactions.Synchronization.CommandFilter.html",
    "title": "Delegate CommandFilter | Strade Developer Documentation",
    "keywords": "Delegate CommandFilter Namespace : Strade.Commands.Interactions.Synchronization Assembly : Strade.Commands.Interactions.dll Syntax public delegate bool CommandFilter(ICommand command); Parameters Type Name Description ICommand command Returns Type Description Boolean"
  },
  "api/Strade.Commands.Interactions.Synchronization.CommandRoot.html": {
    "href": "api/Strade.Commands.Interactions.Synchronization.CommandRoot.html",
    "title": "Class CommandRoot | Strade Developer Documentation",
    "keywords": "Class CommandRoot Inheritance Object CommandRoot Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Interactions.Synchronization Assembly : Strade.Commands.Interactions.dll Syntax public class CommandRoot Constructors | Improve this Doc View Source CommandRoot(String, CommandNode, ApplicationCommandModel) Declaration public CommandRoot(string name, CommandNode command, ApplicationCommandModel model) Parameters Type Name Description String name CommandNode command ApplicationCommandModel model Properties | Improve this Doc View Source Command Declaration public CommandNode Command { get; } Property Value Type Description CommandNode | Improve this Doc View Source Model Declaration public ApplicationCommandModel Model { get; } Property Value Type Description ApplicationCommandModel | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String"
  },
  "api/Strade.Commands.Interactions.Synchronization.CommandSynchronizationOptions.html": {
    "href": "api/Strade.Commands.Interactions.Synchronization.CommandSynchronizationOptions.html",
    "title": "Class CommandSynchronizationOptions | Strade Developer Documentation",
    "keywords": "Class CommandSynchronizationOptions Inheritance Object CommandSynchronizationOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Interactions.Synchronization Assembly : Strade.Commands.Interactions.dll Syntax public sealed class CommandSynchronizationOptions Properties | Improve this Doc View Source Filter Declaration public CommandFilter Filter { get; set; } Property Value Type Description CommandFilter | Improve this Doc View Source GuildId Declaration public Snowflake? GuildId { get; set; } Property Value Type Description Nullable < Snowflake > | Improve this Doc View Source IncludeAliases Declaration public bool IncludeAliases { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IncludeHidden Declaration public bool IncludeHidden { get; set; } Property Value Type Description Boolean"
  },
  "api/Strade.Commands.Interactions.Synchronization.CommandSynchronizationState.html": {
    "href": "api/Strade.Commands.Interactions.Synchronization.CommandSynchronizationState.html",
    "title": "Class CommandSynchronizationState | Strade Developer Documentation",
    "keywords": "Class CommandSynchronizationState Inheritance Object CommandSynchronizationState Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Interactions.Synchronization Assembly : Strade.Commands.Interactions.dll Syntax public class CommandSynchronizationState Constructors | Improve this Doc View Source CommandSynchronizationState(Snowflake, IReadOnlyList<CommandRoot>, IReadOnlyList<ApplicationCommandModel>, IReadOnlyList<CommandRoot>, IReadOnlyList<CommandRoot>, IReadOnlyList<ApplicationCommandModel>) Declaration public CommandSynchronizationState(Snowflake applicationId, IReadOnlyList<CommandRoot> localCommands, IReadOnlyList<ApplicationCommandModel> remoteCommands, IReadOnlyList<CommandRoot> addedRoots, IReadOnlyList<CommandRoot> updatedRoots, IReadOnlyList<ApplicationCommandModel> deletedRoots) Parameters Type Name Description Snowflake applicationId IReadOnlyList < CommandRoot > localCommands IReadOnlyList < ApplicationCommandModel > remoteCommands IReadOnlyList < CommandRoot > addedRoots IReadOnlyList < CommandRoot > updatedRoots IReadOnlyList < ApplicationCommandModel > deletedRoots Properties | Improve this Doc View Source AddedRoots Declaration public IReadOnlyList<CommandRoot> AddedRoots { get; } Property Value Type Description IReadOnlyList < CommandRoot > | Improve this Doc View Source ApplicationId Declaration public Snowflake ApplicationId { get; } Property Value Type Description Snowflake | Improve this Doc View Source DeletedRoots Declaration public IReadOnlyList<ApplicationCommandModel> DeletedRoots { get; } Property Value Type Description IReadOnlyList < ApplicationCommandModel > | Improve this Doc View Source LocalCommands Declaration public IReadOnlyList<CommandRoot> LocalCommands { get; } Property Value Type Description IReadOnlyList < CommandRoot > | Improve this Doc View Source RemoteCommands Declaration public IReadOnlyList<ApplicationCommandModel> RemoteCommands { get; } Property Value Type Description IReadOnlyList < ApplicationCommandModel > | Improve this Doc View Source UpdatedRoots Declaration public IReadOnlyList<CommandRoot> UpdatedRoots { get; } Property Value Type Description IReadOnlyList < CommandRoot >"
  },
  "api/Strade.Commands.Interactions.Synchronization.html": {
    "href": "api/Strade.Commands.Interactions.Synchronization.html",
    "title": "Namespace Strade.Commands.Interactions.Synchronization | Strade Developer Documentation",
    "keywords": "Namespace Strade.Commands.Interactions.Synchronization Classes CommandRoot CommandSynchronizationOptions CommandSynchronizationState SynchronizationClient Delegates CommandFilter"
  },
  "api/Strade.Commands.Interactions.Synchronization.SynchronizationClient.html": {
    "href": "api/Strade.Commands.Interactions.Synchronization.SynchronizationClient.html",
    "title": "Class SynchronizationClient | Strade Developer Documentation",
    "keywords": "Class SynchronizationClient Inheritance Object SynchronizationClient Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Interactions.Synchronization Assembly : Strade.Commands.Interactions.dll Syntax public class SynchronizationClient Constructors | Improve this Doc View Source SynchronizationClient(IDiscordRestClient, CommandTree, CommandSynchronizationOptions, ILogger) Declaration public SynchronizationClient(IDiscordRestClient client, CommandTree commands, CommandSynchronizationOptions options, ILogger logger = null) Parameters Type Name Description IDiscordRestClient client CommandTree commands CommandSynchronizationOptions options ILogger logger Properties | Improve this Doc View Source Client Declaration public IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient | Improve this Doc View Source Options Declaration public CommandSynchronizationOptions Options { get; } Property Value Type Description CommandSynchronizationOptions | Improve this Doc View Source Tree Declaration public CommandTree Tree { get; } Property Value Type Description CommandTree Methods | Improve this Doc View Source FetchRemoteCommandsAsync(CancellationToken) Declaration public Task<IReadOnlyList<ApplicationCommandModel>> FetchRemoteCommandsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < ApplicationCommandModel >> | Improve this Doc View Source FetchSynchronizationStateAsync(CancellationToken) Declaration public Task<CommandSynchronizationState> FetchSynchronizationStateAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < CommandSynchronizationState > | Improve this Doc View Source PerformSynchronizationAsync(CommandSynchronizationState, CancellationToken) Declaration public Task PerformSynchronizationAsync(CommandSynchronizationState synchronizationState, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandSynchronizationState synchronizationState CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ShouldIncludeNode(String, CommandNode) Declaration protected virtual bool ShouldIncludeNode(string name, CommandNode node) Parameters Type Name Description String name CommandNode node Returns Type Description Boolean | Improve this Doc View Source SynchronizeAsync(CancellationToken) Declaration public Task SynchronizeAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/Strade.Commands.Interactions.SyncInteractionsResponseContext.html": {
    "href": "api/Strade.Commands.Interactions.SyncInteractionsResponseContext.html",
    "title": "Struct SyncInteractionsResponseContext | Strade Developer Documentation",
    "keywords": "Struct SyncInteractionsResponseContext Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Commands.Interactions Assembly : Strade.Commands.Interactions.dll Syntax public struct SyncInteractionsResponseContext Constructors | Improve this Doc View Source SyncInteractionsResponseContext(InteractionResponseCreationProperties, TaskCompletionSource<Object>) Declaration public SyncInteractionsResponseContext(InteractionResponseCreationProperties creationProperties, TaskCompletionSource<object> taskCompletionSource) Parameters Type Name Description InteractionResponseCreationProperties creationProperties TaskCompletionSource < Object > taskCompletionSource Properties | Improve this Doc View Source IsValid Declaration public bool IsValid { get; } Property Value Type Description Boolean | Improve this Doc View Source ResponseCommitted Declaration public bool ResponseCommitted { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source AwaitCompletionAsync() Declaration public Task AwaitCompletionAsync() Returns Type Description Task | Improve this Doc View Source SendResponse(InteractionResponseCreationProperties) Declaration public void SendResponse(InteractionResponseCreationProperties properties) Parameters Type Name Description InteractionResponseCreationProperties properties"
  },
  "api/Strade.Commands.Legacy.html": {
    "href": "api/Strade.Commands.Legacy.html",
    "title": "Namespace Strade.Commands.Legacy | Strade Developer Documentation",
    "keywords": "Namespace Strade.Commands.Legacy Classes LegacyCommandExecutionInformation LegacyCommandInterface LegacyCommandInterfaceOptions Structs QuotationMark A pair of quotation marks."
  },
  "api/Strade.Commands.Legacy.LegacyCommandExecutionInformation.html": {
    "href": "api/Strade.Commands.Legacy.LegacyCommandExecutionInformation.html",
    "title": "Class LegacyCommandExecutionInformation | Strade Developer Documentation",
    "keywords": "Class LegacyCommandExecutionInformation Inheritance Object LegacyCommandExecutionInformation Implements ICommandExecutionInformation Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Legacy Assembly : Strade.Commands.Legacy.dll Syntax public class LegacyCommandExecutionInformation : ICommandExecutionInformation Constructors | Improve this Doc View Source LegacyCommandExecutionInformation(String, String) Declaration public LegacyCommandExecutionInformation(string query, string prefix) Parameters Type Name Description String query String prefix Properties | Improve this Doc View Source Prefix Declaration public string Prefix { get; } Property Value Type Description String | Improve this Doc View Source Query Declaration public string Query { get; } Property Value Type Description String Implements ICommandExecutionInformation"
  },
  "api/Strade.Commands.Legacy.LegacyCommandInterface.html": {
    "href": "api/Strade.Commands.Legacy.LegacyCommandInterface.html",
    "title": "Class LegacyCommandInterface | Strade Developer Documentation",
    "keywords": "Class LegacyCommandInterface Inheritance Object CommandInterface LegacyCommandInterface Inherited Members CommandInterface.CommandService CommandInterface.GetResponseChannelAsync(CommandContext, CancellationToken) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Legacy Assembly : Strade.Commands.Legacy.dll Syntax public class LegacyCommandInterface : CommandInterface Constructors | Improve this Doc View Source LegacyCommandInterface(CommandService, LegacyCommandInterfaceOptions) Declaration public LegacyCommandInterface(CommandService commandService, LegacyCommandInterfaceOptions options) Parameters Type Name Description CommandService commandService LegacyCommandInterfaceOptions options Methods | Improve this Doc View Source CheckPrefixAsync(IMessage, CancellationToken) Checks whether the specified message has the command prefix. Declaration public virtual ValueTask<PrefixValidationResult> CheckPrefixAsync(IMessage message, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessage message the message. CancellationToken cancellationToken Returns Type Description ValueTask < PrefixValidationResult > a value indicating whether the command started with the prefix ( true ); otherwise false . | Improve this Doc View Source DispatchAsync(IMessage, User, Boolean, Boolean, CancellationToken) Dispatches the specified message asynchronously. Declaration public virtual Task<IResult> DispatchAsync(IMessage message, User user = null, bool skipValidation = false, bool enforceSync = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessage message the message to dispatch. User user the user to run the command as; or null the run the command as the user that invoked the command. Boolean skipValidation a value indicating whether to skip the command pre-validation; if true the command is executed regardless of the validation result. Boolean enforceSync a value indicating whether to enforce running the command synchronously to return the command result. CancellationToken cancellationToken Returns Type Description Task < IResult > a task that represents the asynchronous operation. The task result is the result; or null if the command ran asynchronously. Exceptions Type Condition ArgumentNullException thrown if the specified message is null . | Improve this Doc View Source LookupCommandAsync(CommandContext, CancellationToken) Declaration protected override ValueTask<MatchResult> LookupCommandAsync(CommandContext commandContext, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext commandContext CancellationToken cancellationToken Returns Type Description ValueTask < MatchResult > Overrides CommandInterface.LookupCommandAsync(CommandContext, CancellationToken) | Improve this Doc View Source Register() Declaration public override void Register() Overrides CommandInterface.Register() | Improve this Doc View Source SearchCommand(String) Searches all commands from all registered providers with the specified query . Declaration public CommandMatch? SearchCommand(string query) Parameters Type Name Description String query the query to search commands for (excluding the command prefix). Returns Type Description Nullable < CommandMatch > an enumerable of the command matches. Exceptions Type Condition ArgumentNullException thrown if the specified query is null . | Improve this Doc View Source Unregister() Declaration public override void Unregister() Overrides CommandInterface.Unregister() | Improve this Doc View Source ValidateCommandAsync(IMessage, CancellationToken) Pre-validates the specified message asynchronously. Declaration public virtual Task<bool> ValidateCommandAsync(IMessage message, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessage message the message to check. CancellationToken cancellationToken Returns Type Description Task < Boolean > a task that represents the asynchronous operation. The task result is a value indicating whether the command should be executed ( true ); otherwise false . Exceptions Type Condition ArgumentNullException thrown if the specified message is null ."
  },
  "api/Strade.Commands.Legacy.LegacyCommandInterfaceOptions.html": {
    "href": "api/Strade.Commands.Legacy.LegacyCommandInterfaceOptions.html",
    "title": "Class LegacyCommandInterfaceOptions | Strade Developer Documentation",
    "keywords": "Class LegacyCommandInterfaceOptions Inheritance Object LegacyCommandInterfaceOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Legacy Assembly : Strade.Commands.Legacy.dll Syntax public sealed class LegacyCommandInterfaceOptions Fields | Improve this Doc View Source DefaultCommandMatchingType The default StringComparison type for the CommandMatchingType property. Declaration public const StringComparison DefaultCommandMatchingType = StringComparison.InvariantCultureIgnoreCase Field Value Type Description StringComparison Properties | Improve this Doc View Source CommandMatchingType Gets or sets the StringComparison type used to compare command labels. Declaration public StringComparison CommandMatchingType { get; set; } Property Value Type Description StringComparison the StringComparison type used to compare command labels. Remarks This property defaults to DefaultCommandMatchingType . | Improve this Doc View Source DefaultQuotationMarks Gets the default quotation marks for QuotationMarks . Declaration public static IReadOnlyList<QuotationMark> DefaultQuotationMarks { get; } Property Value Type Description IReadOnlyList < QuotationMark > | Improve this Doc View Source Listen Gets or sets a value indicating whether the command service should listen for incoming commands ( true ). If false , the user must handle command dispatching itself. Declaration public bool Listen { get; set; } Property Value Type Description Boolean a value indicating whether the command service should listen for incoming commands ( true ). If false , the user must handle command dispatching itself. Remarks This property defaults to true . | Improve this Doc View Source Prefix Gets or sets the CommandPrefixValidator used to check whether a message is prefixed with a command prefix. Declaration public CommandPrefixValidator Prefix { get; set; } Property Value Type Description CommandPrefixValidator the CommandPrefixValidator used to check whether a message is prefixed with a command prefix. Remarks This property defaults to Mention . | Improve this Doc View Source QuotationMarks Gets or sets a list of quotation marks used to parser arguments. Declaration public IReadOnlyList<QuotationMark> QuotationMarks { get; set; } Property Value Type Description IReadOnlyList < QuotationMark > a list of quotation marks used to parser arguments."
  },
  "api/Strade.Commands.Legacy.Parser.CommandParser.html": {
    "href": "api/Strade.Commands.Legacy.Parser.CommandParser.html",
    "title": "Class CommandParser | Strade Developer Documentation",
    "keywords": "Class CommandParser Inheritance Object CommandParser Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Legacy.Parser Assembly : Strade.Commands.Legacy.dll Syntax public static class CommandParser Methods | Improve this Doc View Source ParseArguments(String, IReadOnlyList<QuotationMark>, Boolean) Parses the arguments from the specified line . Declaration public static IEnumerable<string> ParseArguments(string line, IReadOnlyList<QuotationMark> quotationMarks, bool trim = true) Parameters Type Name Description String line the command line. IReadOnlyList < QuotationMark > quotationMarks the quotation marks list. Boolean trim a value indicating whether to trim the specified line . Returns Type Description IEnumerable < String > an enumerable that enumerates through the parsed arguments. Exceptions Type Condition ArgumentNullException thrown if the specified line is null . ArgumentNullException thrown if the specified quotationMarks list is null ."
  },
  "api/Strade.Commands.Legacy.Parser.html": {
    "href": "api/Strade.Commands.Legacy.Parser.html",
    "title": "Namespace Strade.Commands.Legacy.Parser | Strade Developer Documentation",
    "keywords": "Namespace Strade.Commands.Legacy.Parser Classes CommandParser"
  },
  "api/Strade.Commands.Legacy.Prefix.CommandPrefix.html": {
    "href": "api/Strade.Commands.Legacy.Prefix.CommandPrefix.html",
    "title": "Class CommandPrefix | Strade Developer Documentation",
    "keywords": "Class CommandPrefix A class that provides CommandPrefixValidator creations. Inheritance Object CommandPrefix Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Legacy.Prefix Assembly : Strade.Commands.Legacy.dll Syntax public static class CommandPrefix Properties | Improve this Doc View Source Mention Gets a CommandPrefixValidator that handles the command when the bot user is mentioned. Declaration public static CommandPrefixValidator Mention { get; } Property Value Type Description CommandPrefixValidator | Improve this Doc View Source None Gets a CommandPrefixValidator that handles all incoming messages as a command. Declaration public static CommandPrefixValidator None { get; } Property Value Type Description CommandPrefixValidator Methods | Improve this Doc View Source CheckPrefix(IMessage, String, StringComparison) Checks whether the specified message starts with the specified value using the specified stringComparison . Declaration public static PrefixValidationResult CheckPrefix(IMessage message, string value, StringComparison stringComparison = StringComparison.InvariantCultureIgnoreCase) Parameters Type Name Description IMessage message the message. String value the message prefix. StringComparison stringComparison the string comparison mode to use. Returns Type Description PrefixValidationResult a value whether the specified message starts with the specified value . | Improve this Doc View Source Combine(IEnumerable<CommandPrefixValidator>) Creates a CommandPrefixValidator out of the specified prefixes . Declaration public static CommandPrefixValidator Combine(IEnumerable<CommandPrefixValidator> prefixes) Parameters Type Name Description IEnumerable < CommandPrefixValidator > prefixes the prefixes to combine. Returns Type Description CommandPrefixValidator a CommandPrefixValidator out of the specified prefixes . Exceptions Type Condition ArgumentNullException thrown if the specified prefixes enumerable is null . | Improve this Doc View Source FromPrefix(String, StringComparison) Creates a CommandPrefixValidator that uses the specified value and compares the command message with the specified stringComparison . Declaration public static CommandPrefixValidator FromPrefix(string value, StringComparison stringComparison = StringComparison.InvariantCultureIgnoreCase) Parameters Type Name Description String value the command prefix. StringComparison stringComparison the string comparison to use to compare the command message with the specified command prefix ( value ). Returns Type Description CommandPrefixValidator the CommandPrefixValidator . Exceptions Type Condition ArgumentException thrown if the specified value is blank. ArgumentOutOfRangeException thrown if the specified stringComparison type is not defined in the StringComparison enumeration."
  },
  "api/Strade.Commands.Legacy.Prefix.CommandPrefixValidator.html": {
    "href": "api/Strade.Commands.Legacy.Prefix.CommandPrefixValidator.html",
    "title": "Delegate CommandPrefixValidator | Strade Developer Documentation",
    "keywords": "Delegate CommandPrefixValidator Validates the prefix from the specified content. Namespace : Strade.Commands.Legacy.Prefix Assembly : Strade.Commands.Legacy.dll Syntax public delegate ValueTask<PrefixValidationResult> CommandPrefixValidator(CommandService service, IMessage message, CancellationToken cancellationToken = default(CancellationToken)); Parameters Type Name Description CommandService service the command service bound to. IMessage message the message. CancellationToken cancellationToken Returns Type Description ValueTask < PrefixValidationResult > a value indicating whether the command started with the prefix ( true ); otherwise false ."
  },
  "api/Strade.Commands.Legacy.Prefix.html": {
    "href": "api/Strade.Commands.Legacy.Prefix.html",
    "title": "Namespace Strade.Commands.Legacy.Prefix | Strade Developer Documentation",
    "keywords": "Namespace Strade.Commands.Legacy.Prefix Classes CommandPrefix A class that provides CommandPrefixValidator creations. Structs PrefixValidationResult Delegates CommandPrefixValidator Validates the prefix from the specified content."
  },
  "api/Strade.Commands.Legacy.Prefix.PrefixValidationResult.html": {
    "href": "api/Strade.Commands.Legacy.Prefix.PrefixValidationResult.html",
    "title": "Struct PrefixValidationResult | Strade Developer Documentation",
    "keywords": "Struct PrefixValidationResult Implements IResult IEquatable < PrefixValidationResult > Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Commands.Legacy.Prefix Assembly : Strade.Commands.Legacy.dll Syntax public struct PrefixValidationResult : IResult, IEquatable<PrefixValidationResult> Constructors | Improve this Doc View Source PrefixValidationResult(Int32) Declaration public PrefixValidationResult(int position) Parameters Type Name Description Int32 position Properties | Improve this Doc View Source Error Declaration public CommandError Error { get; } Property Value Type Description CommandError | Improve this Doc View Source ErrorMessage Declaration public LocalizableString? ErrorMessage { get; } Property Value Type Description Nullable < LocalizableString > | Improve this Doc View Source IsSuccess Declaration public bool IsSuccess { get; } Property Value Type Description Boolean | Improve this Doc View Source Position Declaration public int Position { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Equals(PrefixValidationResult) Declaration public bool Equals(PrefixValidationResult other) Parameters Type Name Description PrefixValidationResult other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(PrefixValidationResult, PrefixValidationResult) Declaration public static bool operator ==(PrefixValidationResult left, PrefixValidationResult right) Parameters Type Name Description PrefixValidationResult left PrefixValidationResult right Returns Type Description Boolean | Improve this Doc View Source Inequality(PrefixValidationResult, PrefixValidationResult) Declaration public static bool operator !=(PrefixValidationResult left, PrefixValidationResult right) Parameters Type Name Description PrefixValidationResult left PrefixValidationResult right Returns Type Description Boolean Implements IResult System.IEquatable<T>"
  },
  "api/Strade.Commands.Legacy.QuotationMark.html": {
    "href": "api/Strade.Commands.Legacy.QuotationMark.html",
    "title": "Struct QuotationMark | Strade Developer Documentation",
    "keywords": "Struct QuotationMark A pair of quotation marks. Implements IEquatable < QuotationMark > Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Commands.Legacy Assembly : Strade.Commands.Legacy.dll Syntax public struct QuotationMark : IEquatable<QuotationMark> Constructors | Improve this Doc View Source QuotationMark(Char) Initializes a new instance of the QuotationMark struct. Declaration public QuotationMark(char c) Parameters Type Name Description Char c the char used to open/close the quotation. | Improve this Doc View Source QuotationMark(Char, Char) Initializes a new instance of the QuotationMark struct. Declaration public QuotationMark(char openChar, char closeChar) Parameters Type Name Description Char openChar the char used to open the quotation. Char closeChar the char used to close the quotation. Properties | Improve this Doc View Source CloseChar Gets the char used to close the quotation. Declaration public char CloseChar { get; } Property Value Type Description Char the char used to close the quotation. | Improve this Doc View Source OpenChar Gets the char used to open the quotation. Declaration public char OpenChar { get; } Property Value Type Description Char the char used to open the quotation. Methods | Improve this Doc View Source Equals(QuotationMark) Declaration public bool Equals(QuotationMark other) Parameters Type Name Description QuotationMark other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(QuotationMark, QuotationMark) Declaration public static bool operator ==(QuotationMark left, QuotationMark right) Parameters Type Name Description QuotationMark left QuotationMark right Returns Type Description Boolean | Improve this Doc View Source Inequality(QuotationMark, QuotationMark) Declaration public static bool operator !=(QuotationMark left, QuotationMark right) Parameters Type Name Description QuotationMark left QuotationMark right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Commands.Localization.html": {
    "href": "api/Strade.Commands.Localization.html",
    "title": "Namespace Strade.Commands.Localization | Strade Developer Documentation",
    "keywords": "Namespace Strade.Commands.Localization Classes InternalResourceStrings ResxResourceManager Structs LocalizableString Interfaces IResourceManager"
  },
  "api/Strade.Commands.Localization.InternalResourceStrings.html": {
    "href": "api/Strade.Commands.Localization.InternalResourceStrings.html",
    "title": "Class InternalResourceStrings | Strade Developer Documentation",
    "keywords": "Class InternalResourceStrings Inheritance Object InternalResourceStrings Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Localization Assembly : Strade.Commands.dll Syntax public static class InternalResourceStrings Fields | Improve this Doc View Source BotHasInsufficientPermissions Declaration public const string BotHasInsufficientPermissions = \"BotHasInsufficientPermissions\" Field Value Type Description String | Improve this Doc View Source CommandCanOnlyBeExecutedByBotOwner Declaration public const string CommandCanOnlyBeExecutedByBotOwner = \"CommandCanOnlyBeExecutedByBotOwner\" Field Value Type Description String | Improve this Doc View Source CouldNotParseColor Declaration public const string CouldNotParseColor = \"CouldNotParseColor\" Field Value Type Description String | Improve this Doc View Source EntityNotAccessible Declaration public const string EntityNotAccessible = \"EntityNotAccessible\" Field Value Type Description String | Improve this Doc View Source EntityNotFound Declaration public const string EntityNotFound = \"EntityNotFound\" Field Value Type Description String | Improve this Doc View Source EnumValueUndefined Declaration public const string EnumValueUndefined = \"EnumValueUndefined\" Field Value Type Description String | Improve this Doc View Source GuidCouldNotBeParsed Declaration public const string GuidCouldNotBeParsed = \"GuidCouldNotBeParsed\" Field Value Type Description String | Improve this Doc View Source NotInAGuildContext Declaration public const string NotInAGuildContext = \"NotInAGuildContext\" Field Value Type Description String | Improve this Doc View Source NsfwOnlyCommand Declaration public const string NsfwOnlyCommand = \"NsfwOnlyCommand\" Field Value Type Description String | Improve this Doc View Source PrimitiveValueCouldNotBeConverted Declaration public const string PrimitiveValueCouldNotBeConverted = \"PrimitiveValueCouldNotBeConverted\" Field Value Type Description String | Improve this Doc View Source PrivateContextRequired Declaration public const string PrivateContextRequired = \"PrivateContextRequired\" Field Value Type Description String | Improve this Doc View Source UserHasInsufficientPermissions Declaration public const string UserHasInsufficientPermissions = \"UserHasInsufficientPermissions\" Field Value Type Description String | Improve this Doc View Source UserOnlyCommand Declaration public const string UserOnlyCommand = \"UserOnlyCommand\" Field Value Type Description String | Improve this Doc View Source VersionCouldNotBeParsed Declaration public const string VersionCouldNotBeParsed = \"VersionCouldNotBeParsed\" Field Value Type Description String Properties | Improve this Doc View Source ResourceManager Declaration public static IResourceManager ResourceManager { get; set; } Property Value Type Description IResourceManager Methods | Improve this Doc View Source CreateString(String) Declaration public static LocalizableString CreateString(string name) Parameters Type Name Description String name Returns Type Description LocalizableString"
  },
  "api/Strade.Commands.Localization.IResourceManager.html": {
    "href": "api/Strade.Commands.Localization.IResourceManager.html",
    "title": "Interface IResourceManager | Strade Developer Documentation",
    "keywords": "Interface IResourceManager Namespace : Strade.Commands.Localization Assembly : Strade.Commands.dll Syntax public interface IResourceManager Methods | Improve this Doc View Source GetString(String) Declaration string GetString(string path) Parameters Type Name Description String path Returns Type Description String | Improve this Doc View Source GetString(String, CultureInfo) Declaration string GetString(string path, CultureInfo cultureInfo) Parameters Type Name Description String path CultureInfo cultureInfo Returns Type Description String"
  },
  "api/Strade.Commands.Localization.LocalizableString.html": {
    "href": "api/Strade.Commands.Localization.LocalizableString.html",
    "title": "Struct LocalizableString | Strade Developer Documentation",
    "keywords": "Struct LocalizableString Implements IEquatable < LocalizableString > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Commands.Localization Assembly : Strade.Commands.dll Syntax public struct LocalizableString : IEquatable<LocalizableString> Constructors | Improve this Doc View Source LocalizableString(String) Declaration public LocalizableString(string content) Parameters Type Name Description String content | Improve this Doc View Source LocalizableString(String, IResourceManager) Declaration public LocalizableString(string path, IResourceManager resourceManager) Parameters Type Name Description String path IResourceManager resourceManager Properties | Improve this Doc View Source IsDefault Declaration public bool IsDefault { get; } Property Value Type Description Boolean | Improve this Doc View Source IsLocalized Declaration public bool IsLocalized { get; } Property Value Type Description Boolean | Improve this Doc View Source Path Declaration public string Path { get; } Property Value Type Description String | Improve this Doc View Source ResourceManager Declaration public IResourceManager ResourceManager { get; } Property Value Type Description IResourceManager Methods | Improve this Doc View Source Equals(LocalizableString) Declaration public bool Equals(LocalizableString other) Parameters Type Name Description LocalizableString other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source Get() Declaration public string Get() Returns Type Description String | Improve this Doc View Source Get(CultureInfo) Declaration public string Get(CultureInfo cultureInfo) Parameters Type Name Description CultureInfo cultureInfo Returns Type Description String | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(LocalizableString, LocalizableString) Declaration public static bool operator ==(LocalizableString left, LocalizableString right) Parameters Type Name Description LocalizableString left LocalizableString right Returns Type Description Boolean | Improve this Doc View Source Implicit(LocalizableString to String) Declaration public static implicit operator string (LocalizableString str) Parameters Type Name Description LocalizableString str Returns Type Description String | Improve this Doc View Source Implicit(String to LocalizableString) Declaration public static implicit operator LocalizableString(string str) Parameters Type Name Description String str Returns Type Description LocalizableString | Improve this Doc View Source Inequality(LocalizableString, LocalizableString) Declaration public static bool operator !=(LocalizableString left, LocalizableString right) Parameters Type Name Description LocalizableString left LocalizableString right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Commands.Localization.ResxResourceManager.html": {
    "href": "api/Strade.Commands.Localization.ResxResourceManager.html",
    "title": "Class ResxResourceManager | Strade Developer Documentation",
    "keywords": "Class ResxResourceManager Inheritance Object ResxResourceManager Implements IResourceManager Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Localization Assembly : Strade.Commands.dll Syntax public sealed class ResxResourceManager : IResourceManager Constructors | Improve this Doc View Source ResxResourceManager(ResourceManager) Declaration public ResxResourceManager(ResourceManager resourceManager) Parameters Type Name Description ResourceManager resourceManager Methods | Improve this Doc View Source GetString(String) Declaration public string GetString(string path) Parameters Type Name Description String path Returns Type Description String | Improve this Doc View Source GetString(String, CultureInfo) Declaration public string GetString(string path, CultureInfo cultureInfo) Parameters Type Name Description String path CultureInfo cultureInfo Returns Type Description String Implements IResourceManager"
  },
  "api/Strade.Commands.Modules.DefaultModuleResolver.html": {
    "href": "api/Strade.Commands.Modules.DefaultModuleResolver.html",
    "title": "Class DefaultModuleResolver | Strade Developer Documentation",
    "keywords": "Class DefaultModuleResolver Inheritance Object DefaultModuleResolver Implements IModuleResolver Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Modules Assembly : Strade.Commands.dll Syntax public class DefaultModuleResolver : IModuleResolver Methods | Improve this Doc View Source IncludeCustomAttribute(Attribute) Declaration protected virtual bool IncludeCustomAttribute(Attribute attribute) Parameters Type Name Description Attribute attribute Returns Type Description Boolean | Improve this Doc View Source ResolveCommand(MethodInfo, CommandBuilder, IResourceManager) Declaration protected virtual void ResolveCommand(MethodInfo methodInfo, CommandBuilder builder, IResourceManager resourceManager = null) Parameters Type Name Description MethodInfo methodInfo CommandBuilder builder IResourceManager resourceManager | Improve this Doc View Source ResolveCommand(MethodInfo, ModuleInstanceProvider, IResourceManager) Declaration protected ICommand ResolveCommand(MethodInfo methodInfo, ModuleInstanceProvider instanceProvider = null, IResourceManager resourceManager = null) Parameters Type Name Description MethodInfo methodInfo ModuleInstanceProvider instanceProvider IResourceManager resourceManager Returns Type Description ICommand | Improve this Doc View Source ResolveModule(Type, ModuleBuilder, IServiceProvider, IResourceManager) Declaration protected virtual void ResolveModule(Type declaringType, ModuleBuilder builder, IServiceProvider serviceProvider, IResourceManager resourceManager = null) Parameters Type Name Description Type declaringType ModuleBuilder builder IServiceProvider serviceProvider IResourceManager resourceManager | Improve this Doc View Source ResolveModule(Type, IServiceProvider, IResourceManager) Declaration public IModule ResolveModule(Type declaringType, IServiceProvider serviceProvider, IResourceManager resourceManager = null) Parameters Type Name Description Type declaringType IServiceProvider serviceProvider IResourceManager resourceManager Returns Type Description IModule | Improve this Doc View Source ResolveModule(Type, IServiceProvider, Boolean, IResourceManager) Declaration public IModule ResolveModule(Type declaringType, IServiceProvider serviceProvider, bool resolveSubmodules, IResourceManager resourceManager = null) Parameters Type Name Description Type declaringType IServiceProvider serviceProvider Boolean resolveSubmodules IResourceManager resourceManager Returns Type Description IModule | Improve this Doc View Source ResolveParameter(ParameterInfo, ParameterBuilder, IResourceManager) Declaration protected virtual void ResolveParameter(ParameterInfo parameterInfo, ParameterBuilder parameterBuilder, IResourceManager resourceManager = null) Parameters Type Name Description ParameterInfo parameterInfo ParameterBuilder parameterBuilder IResourceManager resourceManager | Improve this Doc View Source ResolveParameters(MethodInfo, CommandBuilder, IResourceManager) Declaration protected void ResolveParameters(MethodInfo methodInfo, CommandBuilder builder, IResourceManager resourceManager = null) Parameters Type Name Description MethodInfo methodInfo CommandBuilder builder IResourceManager resourceManager Implements IModuleResolver"
  },
  "api/Strade.Commands.Modules.html": {
    "href": "api/Strade.Commands.Modules.html",
    "title": "Namespace Strade.Commands.Modules | Strade Developer Documentation",
    "keywords": "Namespace Strade.Commands.Modules Classes DefaultModuleResolver ModuleBase The base module class. ModuleBase<TContext> The base module class. ModuleInstanceProvider Interfaces IModule Interface for module implementations. IModuleBase The base module interface. IModuleBase<TCommandContext> The base module interface. IModuleResolver"
  },
  "api/Strade.Commands.Modules.IModule.html": {
    "href": "api/Strade.Commands.Modules.IModule.html",
    "title": "Interface IModule | Strade Developer Documentation",
    "keywords": "Interface IModule Interface for module implementations. Namespace : Strade.Commands.Modules Assembly : Strade.Commands.dll Syntax public interface IModule Properties | Improve this Doc View Source Commands Declaration IReadOnlyList<ICommand> Commands { get; } Property Value Type Description IReadOnlyList < ICommand > | Improve this Doc View Source CustomAttributes Gets a list of user-defined attributes. Declaration IReadOnlyList<Attribute> CustomAttributes { get; } Property Value Type Description IReadOnlyList < Attribute > a list of user-defined attributes. | Improve this Doc View Source DeclaringType Gets the type that declares the module. Declaration Type DeclaringType { get; } Property Value Type Description Type the type that declares the module. | Improve this Doc View Source Description Gets the module description. Declaration LocalizableString Description { get; } Property Value Type Description LocalizableString the module description. | Improve this Doc View Source Group Gets the group of the module (used to group commands). Declaration string Group { get; } Property Value Type Description String the group of the module (used to group commands). | Improve this Doc View Source IsHidden Gets a value indicating whether the module is hidden. Declaration bool IsHidden { get; } Property Value Type Description Boolean a value indicating whether the command module is hidden. | Improve this Doc View Source Name Gets the name of the module. Declaration string Name { get; } Property Value Type Description String the name of the module. | Improve this Doc View Source ServiceProvider Gets the service provider. Declaration IServiceProvider ServiceProvider { get; } Property Value Type Description IServiceProvider the service provider. | Improve this Doc View Source Tags Gets a list of tags associated to the module. Declaration IReadOnlyList<string> Tags { get; } Property Value Type Description IReadOnlyList < String > a list of tags associated to the module."
  },
  "api/Strade.Commands.Modules.IModuleBase.html": {
    "href": "api/Strade.Commands.Modules.IModuleBase.html",
    "title": "Interface IModuleBase | Strade Developer Documentation",
    "keywords": "Interface IModuleBase The base module interface. Namespace : Strade.Commands.Modules Assembly : Strade.Commands.dll Syntax public interface IModuleBase Properties | Improve this Doc View Source Context Gets or sets the underlying command context. Declaration CommandContext Context { get; set; } Property Value Type Description CommandContext the underlying command context."
  },
  "api/Strade.Commands.Modules.IModuleBase-1.html": {
    "href": "api/Strade.Commands.Modules.IModuleBase-1.html",
    "title": "Interface IModuleBase<TCommandContext> | Strade Developer Documentation",
    "keywords": "Interface IModuleBase<TCommandContext> The base module interface. Namespace : Strade.Commands.Modules Assembly : Strade.Commands.dll Syntax public interface IModuleBase<TCommandContext> : IModuleBase where TCommandContext : CommandContext Type Parameters Name Description TCommandContext Properties | Improve this Doc View Source Context Gets or sets the underlying command context. Declaration TCommandContext Context { get; set; } Property Value Type Description TCommandContext the underlying command context."
  },
  "api/Strade.Commands.Modules.IModuleResolver.html": {
    "href": "api/Strade.Commands.Modules.IModuleResolver.html",
    "title": "Interface IModuleResolver | Strade Developer Documentation",
    "keywords": "Interface IModuleResolver Namespace : Strade.Commands.Modules Assembly : Strade.Commands.dll Syntax public interface IModuleResolver Methods | Improve this Doc View Source ResolveModule(Type, IServiceProvider, IResourceManager) Declaration IModule ResolveModule(Type declaringType, IServiceProvider serviceProvider, IResourceManager resourceManager = null) Parameters Type Name Description Type declaringType IServiceProvider serviceProvider IResourceManager resourceManager Returns Type Description IModule"
  },
  "api/Strade.Commands.Modules.ModuleBase.html": {
    "href": "api/Strade.Commands.Modules.ModuleBase.html",
    "title": "Class ModuleBase | Strade Developer Documentation",
    "keywords": "Class ModuleBase The base module class. Inheritance Object ModuleBase ModuleBase<TContext> Implements IModuleBase Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Modules Assembly : Strade.Commands.dll Syntax public abstract class ModuleBase : IModuleBase Properties | Improve this Doc View Source Context Declaration public CommandContext Context { get; set; } Property Value Type Description CommandContext Implements IModuleBase"
  },
  "api/Strade.Commands.Modules.ModuleBase-1.html": {
    "href": "api/Strade.Commands.Modules.ModuleBase-1.html",
    "title": "Class ModuleBase<TContext> | Strade Developer Documentation",
    "keywords": "Class ModuleBase<TContext> The base module class. Inheritance Object ModuleBase ModuleBase<TContext> Implements IModuleBase <TContext> IModuleBase Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Modules Assembly : Strade.Commands.dll Syntax public abstract class ModuleBase<TContext> : ModuleBase, IModuleBase<TContext>, IModuleBase where TContext : CommandContext Type Parameters Name Description TContext the type of the underlying context. Properties | Improve this Doc View Source Context Declaration public TContext Context { get; set; } Property Value Type Description TContext Implements IModuleBase<TCommandContext> IModuleBase"
  },
  "api/Strade.Commands.Modules.ModuleInstanceProvider.html": {
    "href": "api/Strade.Commands.Modules.ModuleInstanceProvider.html",
    "title": "Class ModuleInstanceProvider | Strade Developer Documentation",
    "keywords": "Class ModuleInstanceProvider Inheritance Object ModuleInstanceProvider Implements IInstanceProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Modules Assembly : Strade.Commands.dll Syntax public sealed class ModuleInstanceProvider : IInstanceProvider Constructors | Improve this Doc View Source ModuleInstanceProvider(Type, IServiceProvider) Declaration public ModuleInstanceProvider(Type moduleType, IServiceProvider serviceProvider) Parameters Type Name Description Type moduleType IServiceProvider serviceProvider Methods | Improve this Doc View Source Provide(CommandContext) Declaration public IModuleBase Provide(CommandContext commandContext) Parameters Type Name Description CommandContext commandContext Returns Type Description IModuleBase Explicit Interface Implementations | Improve this Doc View Source IInstanceProvider.Provide(CommandContext, ICommand) Declaration object IInstanceProvider.Provide(CommandContext commandContext, ICommand command) Parameters Type Name Description CommandContext commandContext ICommand command Returns Type Description Object Implements IInstanceProvider"
  },
  "api/Strade.Commands.ParameterOptions.html": {
    "href": "api/Strade.Commands.ParameterOptions.html",
    "title": "Enum ParameterOptions | Strade Developer Documentation",
    "keywords": "Enum ParameterOptions A set of applicable parameter options. Namespace : Strade.Commands Assembly : Strade.Commands.dll Syntax [Flags] public enum ParameterOptions : byte Fields Name Description AllowRemoting Denotes that the parameter allows remoting (accessibility of channels the invoking user has no access to). None Denotes that no options are specified. Optional Denotes that the parameter is optional and its default value is used if the parameter is not present. Params Denotes that the parameter accepts multiple parameters. Remainder Denotes that the parameter consumes all remaining arguments. Extension Methods EnumExtensions.GetName<ParameterOptions>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Commands.Preconditions.BotPermissionPrecondition.html": {
    "href": "api/Strade.Commands.Preconditions.BotPermissionPrecondition.html",
    "title": "Class BotPermissionPrecondition | Strade Developer Documentation",
    "keywords": "Class BotPermissionPrecondition A precondition used to check whether the client has a specific permission. Inheritance Object BotPermissionPrecondition Implements IPrecondition Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Preconditions Assembly : Strade.Commands.dll Syntax public sealed class BotPermissionPrecondition : IPrecondition Constructors | Improve this Doc View Source BotPermissionPrecondition(Permissions) Initializes a new instance of the BotPermissionPrecondition class. Declaration public BotPermissionPrecondition(Permissions permission) Parameters Type Name Description Permissions permission the permission required. Properties | Improve this Doc View Source Permission Gets the permission required. Declaration public Permissions Permission { get; } Property Value Type Description Permissions the permission required. Methods | Improve this Doc View Source CheckAsync(CommandContext, ICommand, CancellationToken) Declaration public ValueTask<PreconditionResult> CheckAsync(CommandContext commandContext, ICommand command, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext commandContext ICommand command CancellationToken cancellationToken Returns Type Description ValueTask < PreconditionResult > Implements IPrecondition"
  },
  "api/Strade.Commands.Preconditions.CombinedPrecondition.html": {
    "href": "api/Strade.Commands.Preconditions.CombinedPrecondition.html",
    "title": "Class CombinedPrecondition | Strade Developer Documentation",
    "keywords": "Class CombinedPrecondition A chained precondition. Inheritance Object CombinedPrecondition Implements IPrecondition Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Preconditions Assembly : Strade.Commands.dll Syntax public sealed class CombinedPrecondition : IPrecondition Constructors | Improve this Doc View Source CombinedPrecondition(IEnumerable<IPrecondition>) Initializes a new instance of the CombinedPrecondition class. Declaration public CombinedPrecondition(IEnumerable<IPrecondition> preconditions) Parameters Type Name Description IEnumerable < IPrecondition > preconditions an enumerable that enumerates through the preconditions combined in this precondition. Exceptions Type Condition ArgumentNullException thrown if the specified preconditions enumerable is null . Properties | Improve this Doc View Source Preconditions Gets an enumerable that enumerates through the preconditions combined in this precondition. Declaration public IEnumerable<IPrecondition> Preconditions { get; } Property Value Type Description IEnumerable < IPrecondition > an enumerable that enumerates through the preconditions combined in this precondition. Methods | Improve this Doc View Source CheckAsync(CommandContext, ICommand, CancellationToken) Declaration public ValueTask<PreconditionResult> CheckAsync(CommandContext commandContext, ICommand command, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext commandContext ICommand command CancellationToken cancellationToken Returns Type Description ValueTask < PreconditionResult > Implements IPrecondition"
  },
  "api/Strade.Commands.Preconditions.GuildPrecondition.html": {
    "href": "api/Strade.Commands.Preconditions.GuildPrecondition.html",
    "title": "Class GuildPrecondition | Strade Developer Documentation",
    "keywords": "Class GuildPrecondition A precondition that ensures that the user is in a guild (channel) context. Inheritance Object GuildPrecondition Implements IPrecondition Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Preconditions Assembly : Strade.Commands.dll Syntax public sealed class GuildPrecondition : IPrecondition Properties | Improve this Doc View Source Instance Gets a shared instance of the GuildPrecondition class. Declaration public static GuildPrecondition Instance { get; } Property Value Type Description GuildPrecondition a shared instance of the GuildPrecondition class. Methods | Improve this Doc View Source CheckAsync(CommandContext, ICommand, CancellationToken) Declaration public ValueTask<PreconditionResult> CheckAsync(CommandContext commandContext, ICommand command, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext commandContext ICommand command CancellationToken cancellationToken Returns Type Description ValueTask < PreconditionResult > Implements IPrecondition"
  },
  "api/Strade.Commands.Preconditions.html": {
    "href": "api/Strade.Commands.Preconditions.html",
    "title": "Namespace Strade.Commands.Preconditions | Strade Developer Documentation",
    "keywords": "Namespace Strade.Commands.Preconditions Classes BotPermissionPrecondition A precondition used to check whether the client has a specific permission. CombinedPrecondition A chained precondition. GuildPrecondition A precondition that ensures that the user is in a guild (channel) context. NsfwPrecondition A precondition used to check whether a channel has NSFW (Not-Safe-For-Work Content) enabled on it. OwnerPrecondition A precondition used to ensure the calling user is the current application owner. PrivatePrecondition A precondition that ensures that the user is in a private (channel) context. UserPermissionPrecondition A precondition used to check whether the user has a specific permission. UserPrecondition A precondition that ensures that the invoker is a user (not a bot). Interfaces IPrecondition Interface for preconditions."
  },
  "api/Strade.Commands.Preconditions.IPrecondition.html": {
    "href": "api/Strade.Commands.Preconditions.IPrecondition.html",
    "title": "Interface IPrecondition | Strade Developer Documentation",
    "keywords": "Interface IPrecondition Interface for preconditions. Namespace : Strade.Commands.Preconditions Assembly : Strade.Commands.dll Syntax public interface IPrecondition Methods | Improve this Doc View Source CheckAsync(CommandContext, ICommand, CancellationToken) Checks whether the precondition is met using the specified commandContext asynchronously. Declaration ValueTask<PreconditionResult> CheckAsync(CommandContext commandContext, ICommand command, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext commandContext the command context. ICommand command CancellationToken cancellationToken Returns Type Description ValueTask < PreconditionResult > a task that represents the asynchronous operation. The task result is a precondition result indicating the result of the precondition check."
  },
  "api/Strade.Commands.Preconditions.NsfwPrecondition.html": {
    "href": "api/Strade.Commands.Preconditions.NsfwPrecondition.html",
    "title": "Class NsfwPrecondition | Strade Developer Documentation",
    "keywords": "Class NsfwPrecondition A precondition used to check whether a channel has NSFW (Not-Safe-For-Work Content) enabled on it. Inheritance Object NsfwPrecondition Implements IPrecondition Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Preconditions Assembly : Strade.Commands.dll Syntax public sealed class NsfwPrecondition : IPrecondition Properties | Improve this Doc View Source Instance Gets a shared instance of the NsfwPrecondition class. Declaration public static NsfwPrecondition Instance { get; } Property Value Type Description NsfwPrecondition a shared instance of the NsfwPrecondition class. Methods | Improve this Doc View Source CheckAsync(CommandContext, ICommand, CancellationToken) Declaration public ValueTask<PreconditionResult> CheckAsync(CommandContext commandContext, ICommand command, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext commandContext ICommand command CancellationToken cancellationToken Returns Type Description ValueTask < PreconditionResult > Implements IPrecondition"
  },
  "api/Strade.Commands.Preconditions.OwnerPrecondition.html": {
    "href": "api/Strade.Commands.Preconditions.OwnerPrecondition.html",
    "title": "Class OwnerPrecondition | Strade Developer Documentation",
    "keywords": "Class OwnerPrecondition A precondition used to ensure the calling user is the current application owner. Inheritance Object OwnerPrecondition Implements IPrecondition Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Preconditions Assembly : Strade.Commands.dll Syntax public sealed class OwnerPrecondition : IPrecondition Properties | Improve this Doc View Source Instance Gets a shared instance of the OwnerPrecondition class. Declaration public static OwnerPrecondition Instance { get; } Property Value Type Description OwnerPrecondition a shared instance of the OwnerPrecondition class. Methods | Improve this Doc View Source CheckAsync(CommandContext, ICommand, CancellationToken) Declaration public ValueTask<PreconditionResult> CheckAsync(CommandContext commandContext, ICommand command, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext commandContext ICommand command CancellationToken cancellationToken Returns Type Description ValueTask < PreconditionResult > Implements IPrecondition"
  },
  "api/Strade.Commands.Preconditions.PrivatePrecondition.html": {
    "href": "api/Strade.Commands.Preconditions.PrivatePrecondition.html",
    "title": "Class PrivatePrecondition | Strade Developer Documentation",
    "keywords": "Class PrivatePrecondition A precondition that ensures that the user is in a private (channel) context. Inheritance Object PrivatePrecondition Implements IPrecondition Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Preconditions Assembly : Strade.Commands.dll Syntax public sealed class PrivatePrecondition : IPrecondition Properties | Improve this Doc View Source Instance Gets a shared instance of the PrivatePrecondition class. Declaration public static PrivatePrecondition Instance { get; } Property Value Type Description PrivatePrecondition a shared instance of the PrivatePrecondition class. Methods | Improve this Doc View Source CheckAsync(CommandContext, ICommand, CancellationToken) Declaration public ValueTask<PreconditionResult> CheckAsync(CommandContext commandContext, ICommand command, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext commandContext ICommand command CancellationToken cancellationToken Returns Type Description ValueTask < PreconditionResult > Implements IPrecondition"
  },
  "api/Strade.Commands.Preconditions.UserPermissionPrecondition.html": {
    "href": "api/Strade.Commands.Preconditions.UserPermissionPrecondition.html",
    "title": "Class UserPermissionPrecondition | Strade Developer Documentation",
    "keywords": "Class UserPermissionPrecondition A precondition used to check whether the user has a specific permission. Inheritance Object UserPermissionPrecondition Implements IPrecondition Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Preconditions Assembly : Strade.Commands.dll Syntax public sealed class UserPermissionPrecondition : IPrecondition Constructors | Improve this Doc View Source UserPermissionPrecondition(Permissions) Initializes a new instance of the UserPermissionPrecondition class. Declaration public UserPermissionPrecondition(Permissions permission) Parameters Type Name Description Permissions permission the permission required. Properties | Improve this Doc View Source Permission Gets the permission required. Declaration public Permissions Permission { get; } Property Value Type Description Permissions the permission required. Methods | Improve this Doc View Source CheckAsync(CommandContext, ICommand, CancellationToken) Declaration public ValueTask<PreconditionResult> CheckAsync(CommandContext commandContext, ICommand command, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext commandContext ICommand command CancellationToken cancellationToken Returns Type Description ValueTask < PreconditionResult > Implements IPrecondition"
  },
  "api/Strade.Commands.Preconditions.UserPrecondition.html": {
    "href": "api/Strade.Commands.Preconditions.UserPrecondition.html",
    "title": "Class UserPrecondition | Strade Developer Documentation",
    "keywords": "Class UserPrecondition A precondition that ensures that the invoker is a user (not a bot). Inheritance Object UserPrecondition Implements IPrecondition Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Preconditions Assembly : Strade.Commands.dll Syntax public sealed class UserPrecondition : IPrecondition Properties | Improve this Doc View Source Instance Gets a shared instance of the UserPrecondition class. Declaration public static UserPrecondition Instance { get; } Property Value Type Description UserPrecondition a shared instance of the UserPrecondition class. Methods | Improve this Doc View Source CheckAsync(CommandContext, ICommand, CancellationToken) Declaration public ValueTask<PreconditionResult> CheckAsync(CommandContext commandContext, ICommand command, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CommandContext commandContext ICommand command CancellationToken cancellationToken Returns Type Description ValueTask < PreconditionResult > Implements IPrecondition"
  },
  "api/Strade.Commands.Results.ArgumentResult.html": {
    "href": "api/Strade.Commands.Results.ArgumentResult.html",
    "title": "Class ArgumentResult | Strade Developer Documentation",
    "keywords": "Class ArgumentResult The result for argument conversion results. Inheritance Object ArgumentResult Implements IResult Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Results Assembly : Strade.Commands.dll Syntax public sealed class ArgumentResult : IResult Properties | Improve this Doc View Source Error Declaration public CommandError Error { get; } Property Value Type Description CommandError | Improve this Doc View Source ErrorMessage Declaration public LocalizableString? ErrorMessage { get; } Property Value Type Description Nullable < LocalizableString > | Improve this Doc View Source IsSuccess Declaration public bool IsSuccess { get; } Property Value Type Description Boolean | Improve this Doc View Source Value Gets the argument value. Declaration public object Value { get; } Property Value Type Description Object the argument value. Methods | Improve this Doc View Source FromError(LocalizableString) Creates an ArgumentResult from the specified message . Declaration public static ArgumentResult FromError(LocalizableString message) Parameters Type Name Description LocalizableString message the error message. Returns Type Description ArgumentResult the ArgumentResult . | Improve this Doc View Source FromValue(Object) Creates an ArgumentResult from the specified value . Declaration public static ArgumentResult FromValue(object value) Parameters Type Name Description Object value the converted value. Returns Type Description ArgumentResult the ArgumentResult . Implements IResult"
  },
  "api/Strade.Commands.Results.CommandError.html": {
    "href": "api/Strade.Commands.Results.CommandError.html",
    "title": "Enum CommandError | Strade Developer Documentation",
    "keywords": "Enum CommandError A list of possible errors that can occur during command execution. Namespace : Strade.Commands.Results Assembly : Strade.Commands.dll Syntax public enum CommandError : byte Fields Name Description ArgumentMissing Denotes that one or more arguments were missing while parsing the command. CanceledByEvent Denotes that the command execution was canceled by the CommandExecuting event. ExecutionError Denotes that an exception occurred while executing the command. MissingConverter Denotes that an IArgumentConverter was found. NoContent Denotes that the command message was empty. ParsingFailed Denotes that the argument parsing failed. PreconditionFailed Denotes that a required precondition failed. PrefixMissing Denotes that matching the prefix failed. PreValidationFailed Denotes that the command pre-validation failed. Success Denotes that the command execution succeed. TooManyArguments Denotes that too many arguments were passed. UnknownCommand Denotes that the dispatched command could not be found. Extension Methods EnumExtensions.GetName<CommandError>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Commands.Results.CommandResult.html": {
    "href": "api/Strade.Commands.Results.CommandResult.html",
    "title": "Class CommandResult | Strade Developer Documentation",
    "keywords": "Class CommandResult The result for a command execution. Inheritance Object CommandResult Implements IResult Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Results Assembly : Strade.Commands.dll Syntax public sealed class CommandResult : IResult Properties | Improve this Doc View Source Error Declaration public CommandError Error { get; } Property Value Type Description CommandError | Improve this Doc View Source ErrorMessage Declaration public LocalizableString? ErrorMessage { get; } Property Value Type Description Nullable < LocalizableString > | Improve this Doc View Source Exception Gets the attached exception. Declaration public Exception Exception { get; } Property Value Type Description Exception | Improve this Doc View Source IsSuccess Declaration public bool IsSuccess { get; } Property Value Type Description Boolean | Improve this Doc View Source Value Gets the command result. Declaration public object Value { get; } Property Value Type Description Object Methods | Improve this Doc View Source FromError(CommandError, String, Exception) Creates an instance of the CommandResult class from the specified error , message and exception . Declaration public static CommandResult FromError(CommandError error, string message, Exception exception = null) Parameters Type Name Description CommandError error the execution error that occurred. String message the error message. Exception exception the exception (or null if not available). Returns Type Description CommandResult the created CommandResult . | Improve this Doc View Source FromValue(Object) Creates an instance of the CommandResult class from the specified value . Declaration public static CommandResult FromValue(object value) Parameters Type Name Description Object value the command result. Returns Type Description CommandResult the created CommandResult . Implements IResult"
  },
  "api/Strade.Commands.Results.ConvertResult.html": {
    "href": "api/Strade.Commands.Results.ConvertResult.html",
    "title": "Class ConvertResult | Strade Developer Documentation",
    "keywords": "Class ConvertResult Represents the result for an argument conversion. Inheritance Object ConvertResult Implements IResult Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Results Assembly : Strade.Commands.dll Syntax public sealed class ConvertResult : IResult Properties | Improve this Doc View Source Error Declaration public CommandError Error { get; } Property Value Type Description CommandError | Improve this Doc View Source ErrorMessage Declaration public LocalizableString? ErrorMessage { get; } Property Value Type Description Nullable < LocalizableString > | Improve this Doc View Source IsSuccess Declaration public bool IsSuccess { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source FromError(CommandError, String) Creates a ConvertResult from the specified error and the specified message . Declaration public static ConvertResult FromError(CommandError error, string message = null) Parameters Type Name Description CommandError error the error status. String message the error message. Returns Type Description ConvertResult the ConvertResult instance. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified error is not defined in the CommandError enumeration. ArgumentOutOfRangeException thrown if the specified error is Success . | Improve this Doc View Source FromSuccess() Creates a ConvertResult with a success result. Declaration public static ConvertResult FromSuccess() Returns Type Description ConvertResult the ConvertResult instance. Implements IResult"
  },
  "api/Strade.Commands.Results.html": {
    "href": "api/Strade.Commands.Results.html",
    "title": "Namespace Strade.Commands.Results | Strade Developer Documentation",
    "keywords": "Namespace Strade.Commands.Results Classes ArgumentResult The result for argument conversion results. CommandResult The result for a command execution. ConvertResult Represents the result for an argument conversion. MatchResult An IResult returned when matching commands. PreconditionResult The IResult for precondition checks. Interfaces IResult Interface for command-related results. Enums CommandError A list of possible errors that can occur during command execution."
  },
  "api/Strade.Commands.Results.IResult.html": {
    "href": "api/Strade.Commands.Results.IResult.html",
    "title": "Interface IResult | Strade Developer Documentation",
    "keywords": "Interface IResult Interface for command-related results. Namespace : Strade.Commands.Results Assembly : Strade.Commands.dll Syntax public interface IResult Properties | Improve this Doc View Source Error Gets the result error. Declaration CommandError Error { get; } Property Value Type Description CommandError the result error; if Success if there is not error. | Improve this Doc View Source ErrorMessage Gets the error message. Declaration LocalizableString? ErrorMessage { get; } Property Value Type Description Nullable < LocalizableString > the error message; or null if there is no error. | Improve this Doc View Source IsSuccess Gets a value indicating whether the action was successful. Declaration bool IsSuccess { get; } Property Value Type Description Boolean a value indicating whether the action was successful."
  },
  "api/Strade.Commands.Results.MatchResult.html": {
    "href": "api/Strade.Commands.Results.MatchResult.html",
    "title": "Class MatchResult | Strade Developer Documentation",
    "keywords": "Class MatchResult An IResult returned when matching commands. Inheritance Object MatchResult Implements IResult Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Results Assembly : Strade.Commands.dll Syntax public sealed class MatchResult : IResult Constructors | Improve this Doc View Source MatchResult(CommandContext, ICommand, IResult) Initializes a new instance of the MatchResult class. Declaration public MatchResult(CommandContext context, ICommand command, IResult result) Parameters Type Name Description CommandContext context the command context. ICommand command the associated command; or null if no command could be matched. IResult result the parent result. Exceptions Type Condition ArgumentNullException thrown if the specified context is null . ArgumentNullException thrown if the specified command is null . ArgumentNullException thrown if the specified result is null . | Improve this Doc View Source MatchResult(CommandContext, ICommand, IReadOnlyList<Object>) Initializes a new instance of the MatchResult class. Declaration public MatchResult(CommandContext context, ICommand command, IReadOnlyList<object> parameters) Parameters Type Name Description CommandContext context the command context. ICommand command the associated command. IReadOnlyList < Object > parameters the parameters for the command. Exceptions Type Condition ArgumentNullException thrown if the specified context is null . ArgumentNullException thrown if the specified command is null . ArgumentNullException thrown if the specified parameters is null . | Improve this Doc View Source MatchResult(CommandContext, CommandError) Initializes a new instance of the MatchResult class. Declaration public MatchResult(CommandContext context, CommandError error) Parameters Type Name Description CommandContext context CommandError error the command error. Properties | Improve this Doc View Source Command Gets the associated command; or null if no command could be matched. Declaration public ICommand Command { get; } Property Value Type Description ICommand the associated command; or null if no command could be matched. | Improve this Doc View Source Context Gets the associated command context, or null if not available. Declaration public CommandContext Context { get; } Property Value Type Description CommandContext the associated command context, or null if not available. | Improve this Doc View Source Error Declaration public CommandError Error { get; } Property Value Type Description CommandError | Improve this Doc View Source ErrorMessage Declaration public LocalizableString? ErrorMessage { get; } Property Value Type Description Nullable < LocalizableString > | Improve this Doc View Source IsSuccess Declaration public bool IsSuccess { get; } Property Value Type Description Boolean | Improve this Doc View Source Parameters Gets the converted command parameters (if present). Declaration public IReadOnlyList<object> Parameters { get; } Property Value Type Description IReadOnlyList < Object > | Improve this Doc View Source Result Gets the parent result (if present). Declaration public IResult Result { get; } Property Value Type Description IResult Implements IResult"
  },
  "api/Strade.Commands.Results.PreconditionResult.html": {
    "href": "api/Strade.Commands.Results.PreconditionResult.html",
    "title": "Class PreconditionResult | Strade Developer Documentation",
    "keywords": "Class PreconditionResult The IResult for precondition checks. Inheritance Object PreconditionResult Implements IResult Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Results Assembly : Strade.Commands.dll Syntax public sealed class PreconditionResult : IResult Properties | Improve this Doc View Source Error Declaration public CommandError Error { get; } Property Value Type Description CommandError | Improve this Doc View Source ErrorMessage Declaration public LocalizableString? ErrorMessage { get; } Property Value Type Description Nullable < LocalizableString > | Improve this Doc View Source IsSuccess Declaration public bool IsSuccess { get; } Property Value Type Description Boolean | Improve this Doc View Source Precondition Gets the precondition the result is for. Declaration public IPrecondition Precondition { get; } Property Value Type Description IPrecondition Methods | Improve this Doc View Source FromError(IPrecondition, LocalizableString) Creates a PreconditionResult using the specified errorMessage . Declaration public static PreconditionResult FromError(IPrecondition precondition, LocalizableString errorMessage) Parameters Type Name Description IPrecondition precondition the precondition the result is for. LocalizableString errorMessage an error message describing why the precondition failed; if null the result succeed. Returns Type Description PreconditionResult the PreconditionResult instance. Exceptions Type Condition ArgumentNullException thrown if the specified precondition is null . ArgumentNullException thrown if the specified errorMessage is null . | Improve this Doc View Source FromSuccess(IPrecondition) Creates a PreconditionResult . Declaration public static PreconditionResult FromSuccess(IPrecondition precondition) Parameters Type Name Description IPrecondition precondition the precondition the result is for. Returns Type Description PreconditionResult the PreconditionResult instance. Exceptions Type Condition ArgumentNullException thrown if the specified precondition is null . Implements IResult"
  },
  "api/Strade.Commands.Tree.CommandConflictException.html": {
    "href": "api/Strade.Commands.Tree.CommandConflictException.html",
    "title": "Class CommandConflictException | Strade Developer Documentation",
    "keywords": "Class CommandConflictException Inheritance Object Exception SystemException InvalidOperationException CommandConflictException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Commands.Tree Assembly : Strade.Commands.dll Syntax public sealed class CommandConflictException : InvalidOperationException, ISerializable Constructors | Improve this Doc View Source CommandConflictException(String, CommandNode) Declaration public CommandConflictException(string name, CommandNode node) Parameters Type Name Description String name CommandNode node Properties | Improve this Doc View Source Message Declaration public override string Message { get; } Property Value Type Description String Overrides Exception.Message | Improve this Doc View Source Node Declaration public CommandNode Node { get; } Property Value Type Description CommandNode | Improve this Doc View Source Path Declaration public Stack<string> Path { get; } Property Value Type Description Stack < String > Implements System.Runtime.Serialization.ISerializable"
  },
  "api/Strade.Commands.Tree.CommandNode.html": {
    "href": "api/Strade.Commands.Tree.CommandNode.html",
    "title": "Struct CommandNode | Strade Developer Documentation",
    "keywords": "Struct CommandNode Implements IEnumerable < ICommand > IEnumerable Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Commands.Tree Assembly : Strade.Commands.dll Syntax public struct CommandNode : IEnumerable<ICommand>, IEnumerable Constructors | Improve this Doc View Source CommandNode(ICommand) Declaration public CommandNode(ICommand command) Parameters Type Name Description ICommand command | Improve this Doc View Source CommandNode(IEnumerable<KeyValuePair<String, CommandNode>>) Declaration public CommandNode(IEnumerable<KeyValuePair<string, CommandNode>> commands) Parameters Type Name Description IEnumerable < KeyValuePair < String , CommandNode >> commands | Improve this Doc View Source CommandNode(IReadOnlyDictionary<String, CommandNode>) Declaration public CommandNode(IReadOnlyDictionary<string, CommandNode> commands) Parameters Type Name Description IReadOnlyDictionary < String , CommandNode > commands Properties | Improve this Doc View Source Command Declaration public ICommand Command { get; } Property Value Type Description ICommand | Improve this Doc View Source Commands Declaration public IReadOnlyDictionary<string, CommandNode> Commands { get; } Property Value Type Description IReadOnlyDictionary < String , CommandNode > | Improve this Doc View Source IsCommand Declaration public bool IsCommand { get; } Property Value Type Description Boolean | Improve this Doc View Source IsGroup Declaration public bool IsGroup { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Add(ReadOnlySpan<String>, ICommand) Declaration public CommandNode Add(ReadOnlySpan<string> relativePath, ICommand command) Parameters Type Name Description ReadOnlySpan < String > relativePath ICommand command Returns Type Description CommandNode | Improve this Doc View Source Add(String, CommandNode) Declaration public void Add(string name, CommandNode node) Parameters Type Name Description String name CommandNode node | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<ICommand> GetEnumerator() Returns Type Description IEnumerator < ICommand > | Improve this Doc View Source GetNode(String) Declaration public CommandNode? GetNode(string name) Parameters Type Name Description String name Returns Type Description Nullable < CommandNode > | Improve this Doc View Source Remove(String) Declaration public bool Remove(string name) Parameters Type Name Description String name Returns Type Description Boolean | Improve this Doc View Source Resolve(ReadOnlySpan<String>) Declaration public ICommand Resolve(ReadOnlySpan<string> relativeQuery) Parameters Type Name Description ReadOnlySpan < String > relativeQuery Returns Type Description ICommand | Improve this Doc View Source TryGetNode(String, out CommandNode) Declaration public bool TryGetNode(string name, out CommandNode node) Parameters Type Name Description String name CommandNode node Returns Type Description Boolean | Improve this Doc View Source TryResolve(ReadOnlySpan<String>, out ICommand) Declaration public bool TryResolve(ReadOnlySpan<string> relativeQuery, out ICommand command) Parameters Type Name Description ReadOnlySpan < String > relativeQuery ICommand command Returns Type Description Boolean Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/Strade.Commands.Tree.CommandRegistrationInformation.html": {
    "href": "api/Strade.Commands.Tree.CommandRegistrationInformation.html",
    "title": "Struct CommandRegistrationInformation | Strade Developer Documentation",
    "keywords": "Struct CommandRegistrationInformation Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Commands.Tree Assembly : Strade.Commands.dll Syntax public struct CommandRegistrationInformation Methods | Improve this Doc View Source Unregister() Declaration public void Unregister()"
  },
  "api/Strade.Commands.Tree.CommandTree.html": {
    "href": "api/Strade.Commands.Tree.CommandTree.html",
    "title": "Class CommandTree | Strade Developer Documentation",
    "keywords": "Class CommandTree Inheritance Object CommandTree Implements IEnumerable < ICommand > IEnumerable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Tree Assembly : Strade.Commands.dll Syntax public sealed class CommandTree : IEnumerable<ICommand>, IEnumerable Constructors | Improve this Doc View Source CommandTree() Declaration public CommandTree() Properties | Improve this Doc View Source Root Declaration public CommandNode Root { get; } Property Value Type Description CommandNode Methods | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<ICommand> GetEnumerator() Returns Type Description IEnumerator < ICommand > | Improve this Doc View Source Register(ICommand) Declaration public CommandRegistrationInformation Register(ICommand command) Parameters Type Name Description ICommand command Returns Type Description CommandRegistrationInformation | Improve this Doc View Source Register(IModule) Declaration public ModuleRegistrationInformation Register(IModule module) Parameters Type Name Description IModule module Returns Type Description ModuleRegistrationInformation | Improve this Doc View Source Resolve(ReadOnlySpan<String>) Declaration public ICommand Resolve(ReadOnlySpan<string> query) Parameters Type Name Description ReadOnlySpan < String > query Returns Type Description ICommand | Improve this Doc View Source TryResolve(ReadOnlySpan<String>, out ICommand) Declaration public bool TryResolve(ReadOnlySpan<string> query, out ICommand command) Parameters Type Name Description ReadOnlySpan < String > query ICommand command Returns Type Description Boolean Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/Strade.Commands.Tree.html": {
    "href": "api/Strade.Commands.Tree.html",
    "title": "Namespace Strade.Commands.Tree | Strade Developer Documentation",
    "keywords": "Namespace Strade.Commands.Tree Classes CommandConflictException CommandTree Structs CommandNode CommandRegistrationInformation ModuleRegistrationInformation"
  },
  "api/Strade.Commands.Tree.ModuleRegistrationInformation.html": {
    "href": "api/Strade.Commands.Tree.ModuleRegistrationInformation.html",
    "title": "Struct ModuleRegistrationInformation | Strade Developer Documentation",
    "keywords": "Struct ModuleRegistrationInformation Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Commands.Tree Assembly : Strade.Commands.dll Syntax public struct ModuleRegistrationInformation Methods | Improve this Doc View Source Unregister() Declaration public void Unregister()"
  },
  "api/Strade.Commands.Util.BracketStyle.html": {
    "href": "api/Strade.Commands.Util.BracketStyle.html",
    "title": "Struct BracketStyle | Strade Developer Documentation",
    "keywords": "Struct BracketStyle Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Commands.Util Assembly : Strade.Commands.dll Syntax public struct BracketStyle Constructors | Improve this Doc View Source BracketStyle(Char, Char) Declaration public BracketStyle(char openBracket, char closeBracket) Parameters Type Name Description Char openBracket Char closeBracket Fields | Improve this Doc View Source Angle Declaration public static readonly BracketStyle Angle Field Value Type Description BracketStyle | Improve this Doc View Source Curly Declaration public static readonly BracketStyle Curly Field Value Type Description BracketStyle | Improve this Doc View Source Round Declaration public static readonly BracketStyle Round Field Value Type Description BracketStyle | Improve this Doc View Source Square Declaration public static readonly BracketStyle Square Field Value Type Description BracketStyle Properties | Improve this Doc View Source CloseBracket Declaration public char CloseBracket { get; } Property Value Type Description Char | Improve this Doc View Source OpenBracket Declaration public char OpenBracket { get; } Property Value Type Description Char"
  },
  "api/Strade.Commands.Util.CommandMatch.html": {
    "href": "api/Strade.Commands.Util.CommandMatch.html",
    "title": "Struct CommandMatch | Strade Developer Documentation",
    "keywords": "Struct CommandMatch Implements IEquatable < CommandMatch > Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Commands.Util Assembly : Strade.Commands.dll Syntax public struct CommandMatch : IEquatable<CommandMatch> Constructors | Improve this Doc View Source CommandMatch(ICommand, String) Declaration public CommandMatch(ICommand command, string arguments) Parameters Type Name Description ICommand command String arguments Properties | Improve this Doc View Source Arguments Declaration public string Arguments { get; } Property Value Type Description String | Improve this Doc View Source Command Declaration public ICommand Command { get; } Property Value Type Description ICommand Methods | Improve this Doc View Source Equals(CommandMatch) Declaration public bool Equals(CommandMatch other) Parameters Type Name Description CommandMatch other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(CommandMatch, CommandMatch) Declaration public static bool operator ==(CommandMatch left, CommandMatch right) Parameters Type Name Description CommandMatch left CommandMatch right Returns Type Description Boolean | Improve this Doc View Source Inequality(CommandMatch, CommandMatch) Declaration public static bool operator !=(CommandMatch left, CommandMatch right) Parameters Type Name Description CommandMatch left CommandMatch right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Commands.Util.CommandUsageStyle.html": {
    "href": "api/Strade.Commands.Util.CommandUsageStyle.html",
    "title": "Class CommandUsageStyle | Strade Developer Documentation",
    "keywords": "Class CommandUsageStyle Inheritance Object CommandUsageStyle Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Util Assembly : Strade.Commands.dll Syntax public sealed class CommandUsageStyle Constructors | Improve this Doc View Source CommandUsageStyle(Nullable<BracketStyle>, Nullable<BracketStyle>, String, String, Boolean, ComponentStyles, ComponentStyles, Int32) Declaration public CommandUsageStyle(BracketStyle? optionalIndicator = default(BracketStyle? ), BracketStyle? requiredIndicator = default(BracketStyle? ), string paramsIndicator = \"...\", string remoteIndicator = \"@\", bool showOptionalValue = false, ComponentStyles groupStyle = ComponentStyles.Bold, ComponentStyles commandStyle = ComponentStyles.Bold, int margin = 1) Parameters Type Name Description Nullable < BracketStyle > optionalIndicator Nullable < BracketStyle > requiredIndicator String paramsIndicator String remoteIndicator Boolean showOptionalValue ComponentStyles groupStyle ComponentStyles commandStyle Int32 margin Fields | Improve this Doc View Source Default Declaration public static readonly CommandUsageStyle Default Field Value Type Description CommandUsageStyle Properties | Improve this Doc View Source CommandStyle Declaration public ComponentStyles CommandStyle { get; } Property Value Type Description ComponentStyles | Improve this Doc View Source GroupStyle Declaration public ComponentStyles GroupStyle { get; } Property Value Type Description ComponentStyles | Improve this Doc View Source Margin Declaration public int Margin { get; } Property Value Type Description Int32 | Improve this Doc View Source OptionalIndicator Declaration public BracketStyle OptionalIndicator { get; } Property Value Type Description BracketStyle | Improve this Doc View Source ParamsIndicator Declaration public string ParamsIndicator { get; } Property Value Type Description String | Improve this Doc View Source RemoteIndicator Declaration public string RemoteIndicator { get; } Property Value Type Description String | Improve this Doc View Source RequiredIndicator Declaration public BracketStyle RequiredIndicator { get; } Property Value Type Description BracketStyle | Improve this Doc View Source ShowOptionalValue Declaration public bool ShowOptionalValue { get; } Property Value Type Description Boolean"
  },
  "api/Strade.Commands.Util.DependencyInjectionUtil.html": {
    "href": "api/Strade.Commands.Util.DependencyInjectionUtil.html",
    "title": "Class DependencyInjectionUtil | Strade Developer Documentation",
    "keywords": "Class DependencyInjectionUtil An utility that helps with creating classes and injection properties with the help of a service provider. Inheritance Object DependencyInjectionUtil Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Util Assembly : Strade.Commands.dll Syntax public static class DependencyInjectionUtil Methods | Improve this Doc View Source InjectProperties(Object, IDictionary<Type, Object>, IServiceProvider) Injects the properties for the specified instance using the specified serviceProvider . Declaration public static void InjectProperties(object instance, IDictionary<Type, object> serviceCache, IServiceProvider serviceProvider) Parameters Type Name Description Object instance the instance to inject properties on. IDictionary < Type , Object > serviceCache a dictionary containing key-value pairs where the key is the cached service type and the value the instance of the service. IServiceProvider serviceProvider the service provider. Remarks Only properties with the AutoInjectAttribute are injected. Exceptions Type Condition ArgumentNullException thrown if the specified instance is null . ArgumentNullException thrown if the specified serviceCache is null . ArgumentNullException thrown if the specified serviceProvider is null . | Improve this Doc View Source InjectProperties(Object, IServiceProvider) Injects the properties for the specified instance using the specified serviceProvider . Declaration public static void InjectProperties(object instance, IServiceProvider serviceProvider) Parameters Type Name Description Object instance the instance to inject properties on. IServiceProvider serviceProvider the service provider. Remarks Only properties with the AutoInjectAttribute are injected. Exceptions Type Condition ArgumentNullException thrown if the specified instance is null . ArgumentNullException thrown if the specified serviceProvider is null . | Improve this Doc View Source TryCreate(ConstructorInfo, IDictionary<Type, Object>, IServiceProvider, out Object) Creates a new instance using the specified constructor and the specified serviceProvider . Declaration public static bool TryCreate(ConstructorInfo constructor, IDictionary<Type, object> serviceCache, IServiceProvider serviceProvider, out object result) Parameters Type Name Description ConstructorInfo constructor the constructor to use when creating the instance. IDictionary < Type , Object > serviceCache a dictionary containing key-value pairs where the key is the cached service type and the value the instance of the service. IServiceProvider serviceProvider the service provider. Object result the created instance. Returns Type Description Boolean a value indicating whether the instance creation succeed ( true ); otherwise false . Remarks Only properties with the AutoInjectAttribute are injected. Exceptions Type Condition ArgumentNullException thrown if the specified constructor is null . ArgumentNullException thrown if the specified serviceCache is null . ArgumentNullException thrown if the specified serviceProvider is null . | Improve this Doc View Source TryCreate(Type, IDictionary<Type, Object>, IServiceProvider, out Object, Boolean) Creates a new instance from the specified type using the specified serviceProvider . Declaration public static bool TryCreate(Type type, IDictionary<Type, object> serviceCache, IServiceProvider serviceProvider, out object result, bool injectProperties = true) Parameters Type Name Description Type type the type to create the instance from. IDictionary < Type , Object > serviceCache a dictionary containing key-value pairs where the key is the cached service type and the value the instance of the service. IServiceProvider serviceProvider the service provider. Object result the created instance. Boolean injectProperties a value indicating whether properties should be injected. Returns Type Description Boolean a value indicating whether the instance creation succeed ( true ); otherwise false . Remarks Only properties with the AutoInjectAttribute are injected. Exceptions Type Condition ArgumentNullException thrown if the specified type is null . ArgumentNullException thrown if the specified serviceCache is null . ArgumentNullException thrown if the specified serviceProvider is null . | Improve this Doc View Source TryCreate(Type, IServiceProvider, out Object) Creates a new instance from the specified type using the specified serviceProvider . Declaration public static bool TryCreate(Type type, IServiceProvider serviceProvider, out object result) Parameters Type Name Description Type type the type to create the instance from. IServiceProvider serviceProvider the service provider. Object result the created instance. Returns Type Description Boolean a value indicating whether the instance creation succeed ( true ); otherwise false . Remarks Only properties with the AutoInjectAttribute are injected. Exceptions Type Condition ArgumentNullException thrown if the specified type is null . ArgumentNullException thrown if the specified serviceProvider is null . | Improve this Doc View Source TryResolve(Type, IDictionary<Type, Object>, IServiceProvider, out Object) Tries to resolve a service of the specified type from the specified serviceProvider using the specified serviceCache . Declaration public static bool TryResolve(Type type, IDictionary<Type, object> serviceCache, IServiceProvider serviceProvider, out object service) Parameters Type Name Description Type type the service type. IDictionary < Type , Object > serviceCache a dictionary containing key-value pairs where the key is the cached service type and the value the instance of the service. IServiceProvider serviceProvider the service provider. Object service the service instance. Returns Type Description Boolean a value indicating whether the instance creation succeed ( true ); otherwise false . Remarks Only properties with the AutoInjectAttribute are injected. Exceptions Type Condition ArgumentNullException thrown if the specified type is null . ArgumentNullException thrown if the specified serviceCache is null . ArgumentNullException thrown if the specified serviceProvider is null . | Improve this Doc View Source TryResolve(Type, IServiceProvider, out Object) Tries to resolve a service of the specified type from the specified serviceProvider . Declaration public static bool TryResolve(Type type, IServiceProvider serviceProvider, out object service) Parameters Type Name Description Type type the service type. IServiceProvider serviceProvider the service provider. Object service the service instance. Returns Type Description Boolean a value indicating whether the instance creation succeed ( true ); otherwise false . Remarks Only properties with the AutoInjectAttribute are injected. Exceptions Type Condition ArgumentNullException thrown if the specified type is null . ArgumentNullException thrown if the specified serviceProvider is null ."
  },
  "api/Strade.Commands.Util.html": {
    "href": "api/Strade.Commands.Util.html",
    "title": "Namespace Strade.Commands.Util | Strade Developer Documentation",
    "keywords": "Namespace Strade.Commands.Util Classes CommandUsageStyle DependencyInjectionUtil An utility that helps with creating classes and injection properties with the help of a service provider. NullServiceProvider An empty service provider. Structs BracketStyle CommandMatch Interfaces IAwaiter<T>"
  },
  "api/Strade.Commands.Util.IAwaiter-1.html": {
    "href": "api/Strade.Commands.Util.IAwaiter-1.html",
    "title": "Interface IAwaiter<T> | Strade Developer Documentation",
    "keywords": "Interface IAwaiter<T> Inherited Members ICriticalNotifyCompletion.UnsafeOnCompleted(Action) INotifyCompletion.OnCompleted(Action) Namespace : Strade.Commands.Util Assembly : Strade.Commands.dll Syntax public interface IAwaiter<out T> : ICriticalNotifyCompletion, INotifyCompletion Type Parameters Name Description T Properties | Improve this Doc View Source IsCompleted Declaration bool IsCompleted { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source GetAwaiter() Declaration IAwaiter<T> GetAwaiter() Returns Type Description IAwaiter <T> | Improve this Doc View Source GetResult() Declaration T GetResult() Returns Type Description T"
  },
  "api/Strade.Commands.Util.NullServiceProvider.html": {
    "href": "api/Strade.Commands.Util.NullServiceProvider.html",
    "title": "Class NullServiceProvider | Strade Developer Documentation",
    "keywords": "Class NullServiceProvider An empty service provider. Inheritance Object NullServiceProvider Implements IServiceProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Commands.Util Assembly : Strade.Commands.dll Syntax public sealed class NullServiceProvider : IServiceProvider Properties | Improve this Doc View Source Instance Gets a shared instance of the NullServiceProvider class. Declaration public static NullServiceProvider Instance { get; } Property Value Type Description NullServiceProvider a shared instance of the NullServiceProvider class. Methods | Improve this Doc View Source GetService(Type) Provides a service of the specified serviceType . Declaration public object GetService(Type serviceType) Parameters Type Name Description Type serviceType the type of the service. Returns Type Description Object the service instance; or null if there is no registration for the specified serviceType . Implements System.IServiceProvider"
  },
  "api/Strade.Converters.AuditLogChangeJsonConverter.html": {
    "href": "api/Strade.Converters.AuditLogChangeJsonConverter.html",
    "title": "Class AuditLogChangeJsonConverter | Strade Developer Documentation",
    "keywords": "Class AuditLogChangeJsonConverter Inheritance Object JsonConverter JsonConverter < AuditLogChange > AuditLogChangeJsonConverter Inherited Members JsonConverter<AuditLogChange>.CanConvert(Type) JsonConverter<AuditLogChange>.HandleNull Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Converters Assembly : Strade.Rest.dll Syntax public sealed class AuditLogChangeJsonConverter : JsonConverter<AuditLogChange> Methods | Improve this Doc View Source Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Declaration public override AuditLogChange Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters Type Name Description Utf8JsonReader reader Type typeToConvert JsonSerializerOptions options Returns Type Description AuditLogChange Overrides System.Text.Json.Serialization.JsonConverter<Strade.Entities.AuditLogChange>.Read(System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions) | Improve this Doc View Source Write(Utf8JsonWriter, AuditLogChange, JsonSerializerOptions) Declaration public override void Write(Utf8JsonWriter writer, AuditLogChange value, JsonSerializerOptions options) Parameters Type Name Description Utf8JsonWriter writer AuditLogChange value JsonSerializerOptions options Overrides System.Text.Json.Serialization.JsonConverter<Strade.Entities.AuditLogChange>.Write(System.Text.Json.Utf8JsonWriter, Strade.Entities.AuditLogChange, System.Text.Json.JsonSerializerOptions)"
  },
  "api/Strade.Converters.html": {
    "href": "api/Strade.Converters.html",
    "title": "Namespace Strade.Converters | Strade Developer Documentation",
    "keywords": "Namespace Strade.Converters Classes AuditLogChangeJsonConverter OptionalJsonConverterFactory UnixDateTimeOffsetJsonConverter A JsonConverter used to convert between UNIX times in milliseconds and DateTimeOffset s."
  },
  "api/Strade.Converters.OptionalJsonConverterFactory.html": {
    "href": "api/Strade.Converters.OptionalJsonConverterFactory.html",
    "title": "Class OptionalJsonConverterFactory | Strade Developer Documentation",
    "keywords": "Class OptionalJsonConverterFactory Inheritance Object JsonConverter JsonConverterFactory OptionalJsonConverterFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Converters Assembly : Strade.Rest.dll Syntax public sealed class OptionalJsonConverterFactory : JsonConverterFactory Methods | Improve this Doc View Source CanConvert(Type) Declaration public override bool CanConvert(Type typeToConvert) Parameters Type Name Description Type typeToConvert Returns Type Description Boolean Overrides JsonConverter.CanConvert(Type) | Improve this Doc View Source CreateConverter(Type, JsonSerializerOptions) Declaration public override JsonConverter CreateConverter(Type typeToConvert, JsonSerializerOptions options) Parameters Type Name Description Type typeToConvert JsonSerializerOptions options Returns Type Description JsonConverter Overrides JsonConverterFactory.CreateConverter(Type, JsonSerializerOptions)"
  },
  "api/Strade.Converters.UnixDateTimeOffsetJsonConverter.html": {
    "href": "api/Strade.Converters.UnixDateTimeOffsetJsonConverter.html",
    "title": "Class UnixDateTimeOffsetJsonConverter | Strade Developer Documentation",
    "keywords": "Class UnixDateTimeOffsetJsonConverter A JsonConverter used to convert between UNIX times in milliseconds and DateTimeOffset s. Inheritance Object JsonConverter JsonConverter < DateTimeOffset > UnixDateTimeOffsetJsonConverter Inherited Members JsonConverter<DateTimeOffset>.CanConvert(Type) JsonConverter<DateTimeOffset>.HandleNull Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Converters Assembly : Strade.Rest.dll Syntax public sealed class UnixDateTimeOffsetJsonConverter : JsonConverter<DateTimeOffset> Methods | Improve this Doc View Source Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Declaration public override DateTimeOffset Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters Type Name Description Utf8JsonReader reader Type typeToConvert JsonSerializerOptions options Returns Type Description DateTimeOffset Overrides System.Text.Json.Serialization.JsonConverter<System.DateTimeOffset>.Read(System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions) | Improve this Doc View Source Write(Utf8JsonWriter, DateTimeOffset, JsonSerializerOptions) Declaration public override void Write(Utf8JsonWriter writer, DateTimeOffset value, JsonSerializerOptions options) Parameters Type Name Description Utf8JsonWriter writer DateTimeOffset value JsonSerializerOptions options Overrides System.Text.Json.Serialization.JsonConverter<System.DateTimeOffset>.Write(System.Text.Json.Utf8JsonWriter, System.DateTimeOffset, System.Text.Json.JsonSerializerOptions)"
  },
  "api/Strade.DiscordClient.html": {
    "href": "api/Strade.DiscordClient.html",
    "title": "Class DiscordClient | Strade Developer Documentation",
    "keywords": "Class DiscordClient A discord client that manages connections, sharding, caching and handling of connection events. Inheritance Object BaseDiscordRestClient DiscordClient Implements IDiscordRestClient IDisposable IAsyncDisposable Inherited Members BaseDiscordRestClient.CreateGuildAsync(GuildCreationProperties, CancellationToken) BaseDiscordRestClient.Dispose() BaseDiscordRestClient.GetNewsChannelAsync(Snowflake, CacheBehavior, CancellationToken) BaseDiscordRestClient.GetApplicationIdAsync(CancellationToken) BaseDiscordRestClient.GetCategoryAsync(Snowflake, CacheBehavior, CancellationToken) BaseDiscordRestClient.GetChannelAsync(Snowflake, CacheBehavior, CancellationToken) BaseDiscordRestClient.GetChannelAsync<TChannel>(Snowflake, CacheBehavior, CancellationToken) BaseDiscordRestClient.GetCurrentApplicationAsync(CancellationToken) BaseDiscordRestClient.GetCurrentUserAsync(CancellationToken) BaseDiscordRestClient.GetGroupChannelAsync(Snowflake, CacheBehavior, CancellationToken) BaseDiscordRestClient.GetGuildAsync(Snowflake, CacheBehavior, CancellationToken) BaseDiscordRestClient.GetInviteAsync(String, CancellationToken) BaseDiscordRestClient.GetMessageAsync(Snowflake, Snowflake, CancellationToken) BaseDiscordRestClient.GetOptimalVoiceRegionAsync(CancellationToken) BaseDiscordRestClient.GetPrivateChannelAsync(Snowflake, CacheBehavior, CancellationToken) BaseDiscordRestClient.GetStoreChannelAsync(Snowflake, CacheBehavior, CancellationToken) BaseDiscordRestClient.GetTextChannelAsync(Snowflake, CacheBehavior, CancellationToken) BaseDiscordRestClient.GetUserAsync(Snowflake, CacheBehavior, CancellationToken) BaseDiscordRestClient.GetUserConnectionsAsync(CancellationToken) BaseDiscordRestClient.GetUserGuildsAsync(Int32) BaseDiscordRestClient.GetVoiceChannelAsync(Snowflake, CacheBehavior, CancellationToken) BaseDiscordRestClient.GetVoiceRegionsAsync(CancellationToken) BaseDiscordRestClient.GetWebhookAsync(Snowflake, CancellationToken) BaseDiscordRestClient.OpenChannelAsync(GroupChannelCreationProperties, CancellationToken) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade Assembly : Strade.dll Syntax public class DiscordClient : BaseDiscordRestClient, IDiscordRestClient, IDisposable, IAsyncDisposable Constructors | Improve this Doc View Source DiscordClient(AuthenticationCredentials, WebSocketFactory, ILogger) Initializes a new instance of the DiscordClient class. Declaration public DiscordClient(AuthenticationCredentials credentials, WebSocketFactory webSocketFactory = null, ILogger logger = null) Parameters Type Name Description AuthenticationCredentials credentials the authentication credentials. WebSocketFactory webSocketFactory the WebSocket factory used to instantiate WebSocket instances for the client; or null to use the default WebSocket factory ( Factory ). ILogger logger the logger used for logging; or null to disable logging. Exceptions Type Condition ArgumentNullException thrown if the specified credentials is null . | Improve this Doc View Source DiscordClient(DiscordClientConfiguration, WebSocketFactory, DiscordRestApiClient, ILogger) Initializes a new instance of the DiscordClient class. Declaration protected DiscordClient(DiscordClientConfiguration configuration, WebSocketFactory webSocketFactory = null, DiscordRestApiClient apiClient = null, ILogger logger = null) Parameters Type Name Description DiscordClientConfiguration configuration the client configuration. WebSocketFactory webSocketFactory the WebSocket factory used to instantiate WebSocket instances for the client; or null to use the default WebSocket factory ( Factory ). DiscordRestApiClient apiClient the shared API client; e.g. used for sharding; or null to create an own API client. ILogger logger the logger; or null to disable logging. Exceptions Type Condition ArgumentNullException thrown if the specified configuration is null . | Improve this Doc View Source DiscordClient(DiscordClientConfiguration, WebSocketFactory, ILogger) Initializes a new instance of the DiscordClient class. Declaration public DiscordClient(DiscordClientConfiguration configuration, WebSocketFactory webSocketFactory = null, ILogger logger = null) Parameters Type Name Description DiscordClientConfiguration configuration the client configuration. WebSocketFactory webSocketFactory the WebSocket factory used to instantiate WebSocket instances for the client; or null to use the default WebSocket factory ( Factory ). ILogger logger the logger used for logging; or null to disable logging. Exceptions Type Condition ArgumentNullException thrown if the specified configuration is null . | Improve this Doc View Source DiscordClient(WebSocketFactory, ILogger) Initializes a new instance of the DiscordClient class. Declaration public DiscordClient(WebSocketFactory webSocketFactory = null, ILogger logger = null) Parameters Type Name Description WebSocketFactory webSocketFactory the WebSocket factory used to instantiate WebSocket instances for the client; or null to use the default WebSocket factory ( Factory ). ILogger logger the logger used for logging; or null to disable logging. Properties | Improve this Doc View Source ApiClient Declaration public override DiscordRestApiClient ApiClient { get; } Property Value Type Description DiscordRestApiClient Overrides BaseDiscordRestClient.ApiClient | Improve this Doc View Source Configuration Gets the discord client configuration. Declaration public DiscordClientConfiguration Configuration { get; } Property Value Type Description DiscordClientConfiguration the discord client configuration. | Improve this Doc View Source Connections Gets a list of the connections the client serves. Declaration public IReadOnlyList<GatewayConnection> Connections { get; } Property Value Type Description IReadOnlyList < GatewayConnection > a list of the connections the client serves. | Improve this Doc View Source CurrentUser Gets the current bot user. Declaration public CurrentUser CurrentUser { get; } Property Value Type Description CurrentUser the current bot user; or null if not available. | Improve this Doc View Source EventQueue Gets the event queue used to dispatch events. Declaration public IEventQueue EventQueue { get; } Property Value Type Description IEventQueue the event queue used to dispatch events. | Improve this Doc View Source Guilds Gets an enumerable that enumerates through all available guilds. Declaration public IEnumerable<Guild> Guilds { get; } Property Value Type Description IEnumerable < Guild > an enumerable that enumerates through all available guilds. | Improve this Doc View Source Latency Gets the different between the send of the heartbeat and the receive time ( null if unknown). Declaration public TimeSpan? Latency { get; } Property Value Type Description Nullable < TimeSpan > the different between the send of the heartbeat and the receive time ( null if unknown). See Also LatencyUpdated | Improve this Doc View Source Logger Gets the logger; or null if logging is disabled. Declaration public ILogger Logger { get; } Property Value Type Description ILogger the logger; or null if logging is disabled. | Improve this Doc View Source PrimaryConnection Gets the primary connection that is used to serve requests. Declaration protected GatewayConnection PrimaryConnection { get; } Property Value Type Description GatewayConnection the primary connection that is used to serve requests. Remarks In the most cases the primary connection is the main shard, if the client does not have a main shard, the first connection in the connections list ( Connections ) is returned. | Improve this Doc View Source SerializerOptions Gets the JSON serializer options. Declaration protected JsonSerializerOptions SerializerOptions { get; } Property Value Type Description JsonSerializerOptions the JSON serializer options. Methods | Improve this Doc View Source ConnectAsync(CancellationToken) Connects the client asynchronously. Declaration public Task ConnectAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source CreateConnection(DiscordClientConfiguration, ShardingInformation) Creates a new gateway connection for the specified clientConfiguration and shardingInformation . Declaration protected virtual GatewayConnection CreateConnection(DiscordClientConfiguration clientConfiguration, ShardingInformation shardingInformation) Parameters Type Name Description DiscordClientConfiguration clientConfiguration the client configuration. ShardingInformation shardingInformation the sharding information. Returns Type Description GatewayConnection the gateway connection created. | Improve this Doc View Source CreateUnavailableGuild(Snowflake) Creates a new unavailable guild for the specified guildId . Declaration protected virtual Guild CreateUnavailableGuild(Snowflake guildId) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild. Returns Type Description Guild the unavailable guild instance. | Improve this Doc View Source DisconnectAsync(GatewayCloseCode, String, CancellationToken) Closes the connection to the gateway asynchronously. Declaration public Task DisconnectAsync(GatewayCloseCode closeCode, string reason = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GatewayCloseCode closeCode the close code indicating why the connection should be closed. String reason the reason indicating why the connection should be closed; or null to supply no reason. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Remarks If not connected this will do a no-op. | Improve this Doc View Source DisconnectAsync(WebSocketCloseCode, String, CancellationToken) Closes the connection to the gateway asynchronously. Declaration public Task DisconnectAsync(WebSocketCloseCode closeCode, string reason = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description WebSocketCloseCode closeCode the close code indicating why the connection should be closed. String reason the reason indicating why the connection should be closed; or null to supply no reason. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Remarks If not connected this will do a no-op. | Improve this Doc View Source DisconnectAsync(Boolean, String, CancellationToken) Closes the connection to the gateway asynchronously. Declaration public Task DisconnectAsync(bool invalidateSession = true, string reason = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Boolean invalidateSession a value indicating whether the old session should be invalidated. String reason the reason indicating why the connection should be closed; or null to supply no reason. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Remarks If not connected this will do a no-op. | Improve this Doc View Source DisconnectAsync(UInt16, String, CancellationToken) Closes the connection to the gateway asynchronously. Declaration public Task DisconnectAsync(ushort closeCode, string reason = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description UInt16 closeCode the close code indicating why the connection should be closed. String reason the reason indicating why the connection should be closed; or null to supply no reason. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Remarks If not connected this will do a no-op. | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides BaseDiscordRestClient.Dispose(Boolean) | Improve this Doc View Source DisposeAsync() Declaration public ValueTask DisposeAsync() Returns Type Description ValueTask | Improve this Doc View Source DisposeAsyncCore() Declaration protected virtual ValueTask DisposeAsyncCore() Returns Type Description ValueTask | Improve this Doc View Source GetConnection(IGuild) Gets the connection for the specified guild . Declaration public GatewayConnection GetConnection(IGuild guild) Parameters Type Name Description IGuild guild the guild to retrieve the connection for. Returns Type Description GatewayConnection the connection; or null if no connection serves the specified guild . | Improve this Doc View Source GetConnection(Snowflake) Gets the connection for the guild specified by guildId . Declaration public GatewayConnection GetConnection(Snowflake guildId) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild to retrieve the connection for. Returns Type Description GatewayConnection the connection; or null if no connection serves the guild specified by guildId . | Improve this Doc View Source GetConnectionOrPrimary(IGuild) Gets the connection for the specified guild . Declaration public GatewayConnection GetConnectionOrPrimary(IGuild guild) Parameters Type Name Description IGuild guild the guild to retrieve the connection for. Returns Type Description GatewayConnection the connection; or the client's primary connection ( PrimaryConnection ) if the client does not serve the specified guild . | Improve this Doc View Source GetConnectionOrPrimary(Snowflake) Gets the connection for the guild specified by guildId . Declaration public GatewayConnection GetConnectionOrPrimary(Snowflake guildId) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild to retrieve the connection for. Returns Type Description GatewayConnection the connection; or the client's primary connection ( PrimaryConnection ) if the client does not serve the guild specified by guildId . | Improve this Doc View Source GetConnectionOrThrow(IGuild) Gets the connection for the specified guild . Declaration public GatewayConnection GetConnectionOrThrow(IGuild guild) Parameters Type Name Description IGuild guild the guild to retrieve the connection for. Returns Type Description GatewayConnection the connection. Exceptions Type Condition GuildNotServedException thrown if the specified guild is not served by the client. | Improve this Doc View Source GetConnectionOrThrow(Snowflake) Gets the connection for the guild specified by guildId . Declaration public GatewayConnection GetConnectionOrThrow(Snowflake guildId) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild to retrieve the connection for. Returns Type Description GatewayConnection the connection. Exceptions Type Condition GuildNotServedException thrown if the guild specified by guildId is not served by the client. | Improve this Doc View Source GetGuild(Snowflake) Gets the guild by the specified id . Declaration public Guild GetGuild(Snowflake id) Parameters Type Name Description Snowflake id the snowflake identifier of the guild to retrieve. Returns Type Description Guild the guild; or null if the guild was not found. | Improve this Doc View Source GetShardLabel(ShardingInformation) Gets the label for the shard specified by the shardingInformation . Declaration protected virtual string GetShardLabel(ShardingInformation shardingInformation) Parameters Type Name Description ShardingInformation shardingInformation the sharding information used to build the label. Returns Type Description String the shard label. | Improve this Doc View Source HandleChannelCreateAsync(ChannelModel) Handles the CHANNEL_CREATE event asynchronously. Declaration protected virtual ValueTask HandleChannelCreateAsync(ChannelModel model) Parameters Type Name Description ChannelModel model the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleChannelDeleteAsync(ChannelModel) Handles the CHANNEL_DELETE event asynchronously. Declaration protected virtual ValueTask HandleChannelDeleteAsync(ChannelModel model) Parameters Type Name Description ChannelModel model the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleChannelPinsUpdateAsync(ChannelPinsUpdateEvent) Handles the CHANNEL_PINS_UPDATE event asynchronously. Declaration protected virtual ValueTask HandleChannelPinsUpdateAsync(ChannelPinsUpdateEvent data) Parameters Type Name Description ChannelPinsUpdateEvent data the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleChannelUpdateAsync(ChannelModel) Handles the CHANNEL_UPDATE event asynchronously. Declaration protected virtual ValueTask HandleChannelUpdateAsync(ChannelModel model) Parameters Type Name Description ChannelModel model the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildBanAddAsync(GuildBanAddEvent) Handles the GUILD_BAN_ADD event asynchronously. Declaration protected virtual ValueTask HandleGuildBanAddAsync(GuildBanAddEvent payload) Parameters Type Name Description GuildBanAddEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildBanRemoveAsync(GuildBanRemoveEvent) Handles the GUILD_BAN_REMOVE event asynchronously. Declaration protected virtual ValueTask HandleGuildBanRemoveAsync(GuildBanRemoveEvent payload) Parameters Type Name Description GuildBanRemoveEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildCreateAsync(GuildModel) Handles the GUILD_CREATE event asynchronously. Declaration protected virtual ValueTask HandleGuildCreateAsync(GuildModel model) Parameters Type Name Description GuildModel model the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildDeleteAsync(UnavailableGuildInformation) Handles the GUILD_DELETE event asynchronously. Declaration protected virtual ValueTask HandleGuildDeleteAsync(UnavailableGuildInformation model) Parameters Type Name Description UnavailableGuildInformation model the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildEmojisUpdateAsync(GuildEmojisUpdateEvent) Handles the GUILD_EMOJIS_UPDATE event asynchronously. Declaration protected virtual ValueTask HandleGuildEmojisUpdateAsync(GuildEmojisUpdateEvent payload) Parameters Type Name Description GuildEmojisUpdateEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildIntegrationsUpdateAsync(GuildIntegrationsUpdateEvent) Handles the GUILD_INTEGRATIONS_UPDATE event asynchronously. Declaration protected virtual ValueTask HandleGuildIntegrationsUpdateAsync(GuildIntegrationsUpdateEvent payload) Parameters Type Name Description GuildIntegrationsUpdateEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildMemberAddAsync(GuildMemberAddEvent) Handles the GUILD_MEMBER_ADD event asynchronously. Declaration protected virtual ValueTask HandleGuildMemberAddAsync(GuildMemberAddEvent payload) Parameters Type Name Description GuildMemberAddEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildMemberRemoveAsync(GuildMemberRemoveEvent) Handles the GUILD_MEMBER_REMOVE event asynchronously. Declaration protected virtual ValueTask HandleGuildMemberRemoveAsync(GuildMemberRemoveEvent payload) Parameters Type Name Description GuildMemberRemoveEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildMembersChunkAsync(GuildMembersChunkEvent) Handles the GUILD_MEMBERS_CHUNK event asynchronously. Declaration protected virtual ValueTask HandleGuildMembersChunkAsync(GuildMembersChunkEvent payload) Parameters Type Name Description GuildMembersChunkEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildMemberUpdateAsync(GuildMemberUpdateEvent) Handles the GUILD_MEMBER_UPDATE event asynchronously. Declaration protected virtual ValueTask HandleGuildMemberUpdateAsync(GuildMemberUpdateEvent payload) Parameters Type Name Description GuildMemberUpdateEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildRoleCreateAsync(GuildRoleCreateEvent) Handles the GUILD_ROLE_CREATE event asynchronously. Declaration protected virtual ValueTask HandleGuildRoleCreateAsync(GuildRoleCreateEvent payload) Parameters Type Name Description GuildRoleCreateEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildRoleDeleteAsync(GuildRoleDeleteEvent) Handles the GUILD_ROLE_DELETE event asynchronously. Declaration protected virtual ValueTask HandleGuildRoleDeleteAsync(GuildRoleDeleteEvent payload) Parameters Type Name Description GuildRoleDeleteEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildRoleUpdateAsync(GuildRoleUpdateEvent) Handles the GUILD_ROLE_UPDATE event asynchronously. Declaration protected virtual ValueTask HandleGuildRoleUpdateAsync(GuildRoleUpdateEvent payload) Parameters Type Name Description GuildRoleUpdateEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildUpdateAsync(GuildModel) Handles the GUILD_ROLE_UPDATE event asynchronously. Declaration protected virtual ValueTask HandleGuildUpdateAsync(GuildModel model) Parameters Type Name Description GuildModel model the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleInteractionCreateEventAsync(InteractionModel) Handles the INTERACTION_CREATE event asynchronously. Declaration protected virtual ValueTask HandleInteractionCreateEventAsync(InteractionModel payload) Parameters Type Name Description InteractionModel payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleInviteCreateAsync(InviteCreateEvent) Handles the INVITE_CREATE event asynchronously. Declaration protected virtual ValueTask HandleInviteCreateAsync(InviteCreateEvent payload) Parameters Type Name Description InviteCreateEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleInviteDeleteAsync(InviteDeleteEvent) Handles the INVITE_DELETE event asynchronously. Declaration protected virtual ValueTask HandleInviteDeleteAsync(InviteDeleteEvent payload) Parameters Type Name Description InviteDeleteEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleMessageCreateAsync(MessageModel) Handles the MESSAGE_CREATE event asynchronously. Declaration protected virtual ValueTask HandleMessageCreateAsync(MessageModel payload) Parameters Type Name Description MessageModel payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleMessageDeleteAsync(MessageDeleteEvent) Handles the MESSAGE_DELETE event asynchronously. Declaration protected virtual ValueTask HandleMessageDeleteAsync(MessageDeleteEvent payload) Parameters Type Name Description MessageDeleteEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleMessageDeleteBulkAsync(MessageBulkDeleteEvent) Handles the MESSAGE_DELETE_BULK event asynchronously. Declaration protected virtual ValueTask HandleMessageDeleteBulkAsync(MessageBulkDeleteEvent payload) Parameters Type Name Description MessageBulkDeleteEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleMessageReactionAddAsync(MessageReactionAddEvent) Handles the MESSAGE_REACTION_ADD event asynchronously. Declaration protected virtual ValueTask HandleMessageReactionAddAsync(MessageReactionAddEvent payload) Parameters Type Name Description MessageReactionAddEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleMessageReactionRemoveAllAsync(MessageReactionRemoveAllEvent) Handles the MESSAGE_REACTION_REMOVE_ALL event asynchronously. Declaration protected virtual ValueTask HandleMessageReactionRemoveAllAsync(MessageReactionRemoveAllEvent payload) Parameters Type Name Description MessageReactionRemoveAllEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleMessageReactionRemoveAsync(MessageReactionRemoveEvent) Handles the MESSAGE_REACTION_REMOVE event asynchronously. Declaration protected virtual ValueTask HandleMessageReactionRemoveAsync(MessageReactionRemoveEvent payload) Parameters Type Name Description MessageReactionRemoveEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleMessageReactionRemoveEmojiAsync(MessageReactionRemoveEmojiEvent) Handles the MESSAGE_REACTION_REMOVE_EMOJI event asynchronously. Declaration protected virtual ValueTask HandleMessageReactionRemoveEmojiAsync(MessageReactionRemoveEmojiEvent payload) Parameters Type Name Description MessageReactionRemoveEmojiEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleMessageUpdateAsync(MessageModel) Handles the MESSAGE_UPDATE event asynchronously. Declaration protected virtual ValueTask HandleMessageUpdateAsync(MessageModel payload) Parameters Type Name Description MessageModel payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandlePresenceUpdateAsync(PresenceUpdateEvent) Handles the PRESENCE_UPDATE event asynchronously. Declaration protected virtual ValueTask HandlePresenceUpdateAsync(PresenceUpdateEvent payload) Parameters Type Name Description PresenceUpdateEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleTypingStartAsync(TypingStartEvent) Handles the TYPING_START event asynchronously. Declaration protected virtual ValueTask HandleTypingStartAsync(TypingStartEvent payload) Parameters Type Name Description TypingStartEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleUserUpdateAsync(UserModel) Handles the USER_UPDATE event asynchronously. Declaration protected virtual ValueTask HandleUserUpdateAsync(UserModel model) Parameters Type Name Description UserModel model the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleVoiceServerUpdateAsync(VoiceServerModel) Handles the VOICE_SERVER_UPDATE event asynchronously. Declaration protected virtual ValueTask HandleVoiceServerUpdateAsync(VoiceServerModel voiceServerModel) Parameters Type Name Description VoiceServerModel voiceServerModel the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleVoiceStateUpdateAsync(VoiceStateModel) Handles the VOICE_STATE_UPDATE event asynchronously. Declaration protected virtual ValueTask HandleVoiceStateUpdateAsync(VoiceStateModel model) Parameters Type Name Description VoiceStateModel model the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleWebhookUpdateAsync(WebhooksUpdateEvent) Handles the WEBHOOK_UPDATE event asynchronously. Declaration protected virtual ValueTask HandleWebhookUpdateAsync(WebhooksUpdateEvent payload) Parameters Type Name Description WebhooksUpdateEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HasIntent(GatewayIntents) Gets a value indicating whether the client has the specified intent . Declaration public bool HasIntent(GatewayIntents intent) Parameters Type Name Description GatewayIntents intent the intent to check for. Returns Type Description Boolean a value indicating whether the client has the specified intent . Remarks If no intents are used true is returned. | Improve this Doc View Source OnChannelCreatedAsync(ChannelCreatedEventArgs) Dispatches the ChannelCreated event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnChannelCreatedAsync(ChannelCreatedEventArgs eventArgs) Parameters Type Name Description ChannelCreatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnChannelDeletedAsync(ChannelDeletedEventArgs) Dispatches the ChannelDeleted event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnChannelDeletedAsync(ChannelDeletedEventArgs eventArgs) Parameters Type Name Description ChannelDeletedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnChannelPinsUpdatedAsync(ChannelPinsUpdatedEventArgs) Dispatches the ChannelPinsUpdated event on the IEventQueue asynchronously. Declaration protected virtual ValueTask OnChannelPinsUpdatedAsync(ChannelPinsUpdatedEventArgs eventArgs) Parameters Type Name Description ChannelPinsUpdatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnChannelUpdatedAsync(ChannelUpdatedEventArgs) Dispatches the ChannelUpdated event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnChannelUpdatedAsync(ChannelUpdatedEventArgs eventArgs) Parameters Type Name Description ChannelUpdatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnCurrentUserUpdatedAsync(CurrentUserUpdatedEventArgs) Dispatches the CurrentUserUpdated event on the IEventQueue asynchronously. Declaration protected virtual ValueTask OnCurrentUserUpdatedAsync(CurrentUserUpdatedEventArgs eventArgs) Parameters Type Name Description CurrentUserUpdatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnEmoteReactionsClearedAsync(EmoteReactionsClearedEventArgs) Dispatches the EmoteReactionsCleared event on the IEventQueue asynchronously. Declaration protected virtual ValueTask OnEmoteReactionsClearedAsync(EmoteReactionsClearedEventArgs eventArgs) Parameters Type Name Description EmoteReactionsClearedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnGuildCreatedAsync(GuildCreatedEventArgs) Dispatches the GuildCreated event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnGuildCreatedAsync(GuildCreatedEventArgs eventArgs) Parameters Type Name Description GuildCreatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnGuildDeletedAsync(GuildDeletedEventArgs) Dispatches the GuildDeleted event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnGuildDeletedAsync(GuildDeletedEventArgs eventArgs) Parameters Type Name Description GuildDeletedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnGuildEmotesUpdatedAsync(GuildEmotesUpdatedEventArgs) Dispatches the GuildEmotesUpdated event on the IEventQueue asynchronously. Declaration protected virtual ValueTask OnGuildEmotesUpdatedAsync(GuildEmotesUpdatedEventArgs eventArgs) Parameters Type Name Description GuildEmotesUpdatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnGuildIntegrationsUpdatedAsync(GuildIntegrationsUpdatedEventArgs) Dispatches the GuildIntegrationsUpdated event on the IEventQueue asynchronously. Declaration protected virtual ValueTask OnGuildIntegrationsUpdatedAsync(GuildIntegrationsUpdatedEventArgs eventArgs) Parameters Type Name Description GuildIntegrationsUpdatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnGuildUpdatedAsync(GuildUpdatedEventArgs) Dispatches the GuildUpdated event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnGuildUpdatedAsync(GuildUpdatedEventArgs eventArgs) Parameters Type Name Description GuildUpdatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnInteractionCreatedAsync(InteractionCreatedEventArgs) Dispatches the InteractionCreated event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnInteractionCreatedAsync(InteractionCreatedEventArgs eventArgs) Parameters Type Name Description InteractionCreatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnInviteCreatedAsync(InviteCreatedEventArgs) Dispatches the InviteCreated event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnInviteCreatedAsync(InviteCreatedEventArgs eventArgs) Parameters Type Name Description InviteCreatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnInviteDeletedAsync(InviteDeletedEventArgs) Dispatches the InviteDeleted event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnInviteDeletedAsync(InviteDeletedEventArgs eventArgs) Parameters Type Name Description InviteDeletedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnLatencyUpdatedAsync(LatencyUpdatedEventArgs) Dispatches the LatencyUpdated event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnLatencyUpdatedAsync(LatencyUpdatedEventArgs eventArgs) Parameters Type Name Description LatencyUpdatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnMemberBannedAsync(MemberBannedEventArgs) Dispatches the MemberBanned event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnMemberBannedAsync(MemberBannedEventArgs eventArgs) Parameters Type Name Description MemberBannedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnMemberJoinedAsync(MemberJoinedEventArgs) Dispatches the MemberJoined event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnMemberJoinedAsync(MemberJoinedEventArgs eventArgs) Parameters Type Name Description MemberJoinedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnMemberRemovedAsync(MemberRemovedEventArgs) Dispatches the MemberRemoved event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnMemberRemovedAsync(MemberRemovedEventArgs eventArgs) Parameters Type Name Description MemberRemovedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnMemberUnbannedAsync(MemberUnbannedEventArgs) Dispatches the MemberUnbanned event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnMemberUnbannedAsync(MemberUnbannedEventArgs eventArgs) Parameters Type Name Description MemberUnbannedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnMemberUpdatedAsync(MemberUpdatedEventArgs) Dispatches the MemberUpdated event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnMemberUpdatedAsync(MemberUpdatedEventArgs eventArgs) Parameters Type Name Description MemberUpdatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnMessageDeletedAsync(MessageDeletedEventArgs) Dispatches the MessageDeleted event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnMessageDeletedAsync(MessageDeletedEventArgs eventArgs) Parameters Type Name Description MessageDeletedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnMessageReceivedAsync(MessageReceivedEventArgs) Dispatches the MessageReceived event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnMessageReceivedAsync(MessageReceivedEventArgs eventArgs) Parameters Type Name Description MessageReceivedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnMessageUpdatedAsync(MessageUpdatedEventArgs) Dispatches the MessageUpdated event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnMessageUpdatedAsync(MessageUpdatedEventArgs eventArgs) Parameters Type Name Description MessageUpdatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnPresenceUpdatedAsync(PresenceUpdatedEventArgs) Dispatches the PresenceUpdated event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnPresenceUpdatedAsync(PresenceUpdatedEventArgs eventArgs) Parameters Type Name Description PresenceUpdatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnReactionAddedAsync(ReactionAddedEventArgs) Dispatches the ReactionAdded event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnReactionAddedAsync(ReactionAddedEventArgs eventArgs) Parameters Type Name Description ReactionAddedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnReactionRemovedAsync(ReactionRemovedEventArgs) Dispatches the ReactionRemoved event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnReactionRemovedAsync(ReactionRemovedEventArgs eventArgs) Parameters Type Name Description ReactionRemovedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnReactionsClearedAsync(ReactionsClearedEventArgs) Dispatches the ReactionsCleared event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnReactionsClearedAsync(ReactionsClearedEventArgs eventArgs) Parameters Type Name Description ReactionsClearedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnReadyAsync(EventArgs) Dispatches the Ready event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnReadyAsync(EventArgs eventArgs) Parameters Type Name Description EventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnRoleCreatedAsync(RoleCreatedEventArgs) Dispatches the RoleCreated event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnRoleCreatedAsync(RoleCreatedEventArgs eventArgs) Parameters Type Name Description RoleCreatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnRoleDeletedAsync(RoleDeletedEventArgs) Dispatches the RoleDeleted event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnRoleDeletedAsync(RoleDeletedEventArgs eventArgs) Parameters Type Name Description RoleDeletedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnRoleUpdatedAsync(RoleUpdatedEventArgs) Dispatches the RoleUpdated event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnRoleUpdatedAsync(RoleUpdatedEventArgs eventArgs) Parameters Type Name Description RoleUpdatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnTypingStartAsync(TypingStartEventArgs) Dispatches the TypingStart event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnTypingStartAsync(TypingStartEventArgs eventArgs) Parameters Type Name Description TypingStartEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnVoiceServerUpdatedAsync(VoiceServerUpdatedEventArgs) Dispatches the VoiceServerUpdated event on the IEventQueue asynchronously. Declaration protected virtual ValueTask OnVoiceServerUpdatedAsync(VoiceServerUpdatedEventArgs eventArgs) Parameters Type Name Description VoiceServerUpdatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnVoiceStateUpdatedAsync(VoiceStateUpdatedEventArgs) Dispatches the VoiceStateUpdatedEventArgs event on the IEventQueue asynchronously. Declaration protected virtual ValueTask OnVoiceStateUpdatedAsync(VoiceStateUpdatedEventArgs eventArgs) Parameters Type Name Description VoiceStateUpdatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OnWebhooksUpdatedAsync(WebhooksUpdatedEventArgs) Dispatches the WebhooksUpdated event on the EventQueue asynchronously. Declaration protected virtual ValueTask OnWebhooksUpdatedAsync(WebhooksUpdatedEventArgs eventArgs) Parameters Type Name Description WebhooksUpdatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source OpenChannelAsync(PrivateChannelCreationProperties, CancellationToken) Declaration public override ValueTask<IPrivateChannel> OpenChannelAsync(PrivateChannelCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description PrivateChannelCreationProperties properties CancellationToken cancellationToken Returns Type Description ValueTask < IPrivateChannel > Overrides BaseDiscordRestClient.OpenChannelAsync(PrivateChannelCreationProperties, CancellationToken) | Improve this Doc View Source OpenChannelAsync(Snowflake, CancellationToken) Declaration public override ValueTask<IPrivateChannel> OpenChannelAsync(Snowflake recipientId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake recipientId CancellationToken cancellationToken Returns Type Description ValueTask < IPrivateChannel > Overrides BaseDiscordRestClient.OpenChannelAsync(Snowflake, CancellationToken) | Improve this Doc View Source RequestGuildMembersAsync(Snowflake, IReadOnlyList<Snowflake>, Boolean, CancellationToken) Requests guild members for the guild specified by guildId asynchronously. Declaration public Task RequestGuildMembersAsync(Snowflake guildId, IReadOnlyList<Snowflake> userIds, bool requestPresences = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild to retrieve members for. IReadOnlyList < Snowflake > userIds a list of snowflakes referencing the users to retrieve. Boolean requestPresences a value indicating whether to request presences for the users. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source RequestGuildMembersAsync(Snowflake, String, Nullable<Int32>, Boolean, CancellationToken) Requests guild members for the guild specified by guildId asynchronously. Declaration public Task RequestGuildMembersAsync(Snowflake guildId, string query = \"\", int? limit = default(int? ), bool requestPresences = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild to retrieve members for. String query the query that returned users should start with. Nullable < Int32 > limit the number of users to return; or null to return all matching users. Boolean requestPresences a value indicating whether to request presences for the users. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source Run(CancellationToken) Runs the client. Declaration public void Run(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Remarks The bot stops gracefully if the application's domain process is exited or the console cancel key is pressed. The Run(CancellationToken) method is the synchronous wrapper for the RunAsync(CancellationToken) method. | Improve this Doc View Source RunAsync(CancellationToken) Runs the client asynchronously. Declaration public Task RunAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Remarks The bot stops gracefully if the application's domain process is exited or the console cancel key is pressed. | Improve this Doc View Source TryGetGuild(Snowflake, out Guild) Tries to retrieve the guild by the specified id . Declaration public bool TryGetGuild(Snowflake id, out Guild guild) Parameters Type Name Description Snowflake id the snowflake identifier of the guild to retrieve. Guild guild ( out ) the guild; or null if the guild was not found. Returns Type Description Boolean a value indicating whether the guild could be found. | Improve this Doc View Source UpdatePresenceAsync(Presence, CancellationToken) Updates the client's presence asynchronously. Declaration public Task UpdatePresenceAsync(Presence presence, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Presence presence the client presence. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source UpdateVoiceStateAsync(Snowflake, Nullable<Snowflake>, Boolean, Boolean, CancellationToken) Updates the client's voice state asynchronously. Declaration public Task UpdateVoiceStateAsync(Snowflake guildId, Snowflake? channelId, bool selfMute = false, bool selfDeaf = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the identifier of the affected guild. Nullable < Snowflake > channelId the snowflake identifier of the channel to connect to (or null to disconnect). Boolean selfMute a value indicating whether the client should be self-muted. Boolean selfDeaf a value indicating whether the client should be self-deafened. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Events | Improve this Doc View Source ChannelCreated Asynchronous event which is dispatched when a channel was created. Declaration public event AsyncEventHandler<ChannelCreatedEventArgs> ChannelCreated Event Type Type Description AsyncEventHandler < ChannelCreatedEventArgs > | Improve this Doc View Source ChannelDeleted Asynchronous event which is dispatched when a channel was deleted. Declaration public event AsyncEventHandler<ChannelDeletedEventArgs> ChannelDeleted Event Type Type Description AsyncEventHandler < ChannelDeletedEventArgs > | Improve this Doc View Source ChannelPinsUpdated Asynchronous event which is dispatched when the message pins of a channel were updated. Declaration public event AsyncEventHandler<ChannelPinsUpdatedEventArgs> ChannelPinsUpdated Event Type Type Description AsyncEventHandler < ChannelPinsUpdatedEventArgs > | Improve this Doc View Source ChannelUpdated Asynchronous event which is dispatched when a channel was updated. Declaration public event AsyncEventHandler<ChannelUpdatedEventArgs> ChannelUpdated Event Type Type Description AsyncEventHandler < ChannelUpdatedEventArgs > | Improve this Doc View Source CurrentUserUpdated Asynchronous event which is dispatched when the current user was updated. Declaration public event AsyncEventHandler<CurrentUserUpdatedEventArgs> CurrentUserUpdated Event Type Type Description AsyncEventHandler < CurrentUserUpdatedEventArgs > | Improve this Doc View Source EmoteReactionsCleared Asynchronous event which is dispatched when a specified emote was cleared from a message. Declaration public event AsyncEventHandler<EmoteReactionsClearedEventArgs> EmoteReactionsCleared Event Type Type Description AsyncEventHandler < EmoteReactionsClearedEventArgs > | Improve this Doc View Source GuildCreated Asynchronous event which is dispatched when a guild was created. Declaration public event AsyncEventHandler<GuildCreatedEventArgs> GuildCreated Event Type Type Description AsyncEventHandler < GuildCreatedEventArgs > | Improve this Doc View Source GuildDeleted Asynchronous event which is dispatched when a guild was deleted. Declaration public event AsyncEventHandler<GuildDeletedEventArgs> GuildDeleted Event Type Type Description AsyncEventHandler < GuildDeletedEventArgs > | Improve this Doc View Source GuildEmotesUpdated Asynchronous event which is dispatched when the emotes of a guild were updated. Declaration public event AsyncEventHandler<GuildEmotesUpdatedEventArgs> GuildEmotesUpdated Event Type Type Description AsyncEventHandler < GuildEmotesUpdatedEventArgs > | Improve this Doc View Source GuildIntegrationsUpdated Asynchronous event which is dispatched when the integrations of a guild were updated. Declaration public event AsyncEventHandler<GuildIntegrationsUpdatedEventArgs> GuildIntegrationsUpdated Event Type Type Description AsyncEventHandler < GuildIntegrationsUpdatedEventArgs > | Improve this Doc View Source GuildUpdated Asynchronous event which is dispatched when a guild was updated. Declaration public event AsyncEventHandler<GuildUpdatedEventArgs> GuildUpdated Event Type Type Description AsyncEventHandler < GuildUpdatedEventArgs > | Improve this Doc View Source InteractionCreated Asynchronous event which is dispatched when an interaction was created. Declaration public event AsyncEventHandler<InteractionCreatedEventArgs> InteractionCreated Event Type Type Description AsyncEventHandler < InteractionCreatedEventArgs > | Improve this Doc View Source InviteCreated Asynchronous event which is dispatched when an invite was created. Declaration public event AsyncEventHandler<InviteCreatedEventArgs> InviteCreated Event Type Type Description AsyncEventHandler < InviteCreatedEventArgs > | Improve this Doc View Source InviteDeleted Asynchronous event which is dispatched when an invite was deleted. Declaration public event AsyncEventHandler<InviteDeletedEventArgs> InviteDeleted Event Type Type Description AsyncEventHandler < InviteDeletedEventArgs > | Improve this Doc View Source LatencyUpdated Asynchronous event which is dispatched when the latency was updated. Declaration public event AsyncEventHandler<LatencyUpdatedEventArgs> LatencyUpdated Event Type Type Description AsyncEventHandler < LatencyUpdatedEventArgs > | Improve this Doc View Source MemberBanned Asynchronous event which is dispatched when a member was banned from a guild. Declaration public event AsyncEventHandler<MemberBannedEventArgs> MemberBanned Event Type Type Description AsyncEventHandler < MemberBannedEventArgs > | Improve this Doc View Source MemberJoined Asynchronous event which is dispatched when a member joined a guild. Declaration public event AsyncEventHandler<MemberJoinedEventArgs> MemberJoined Event Type Type Description AsyncEventHandler < MemberJoinedEventArgs > | Improve this Doc View Source MemberRemoved Asynchronous event which is dispatched when a member was removed (leave / kick / ban) from a guild. Declaration public event AsyncEventHandler<MemberRemovedEventArgs> MemberRemoved Event Type Type Description AsyncEventHandler < MemberRemovedEventArgs > | Improve this Doc View Source MemberUnbanned Asynchronous event which is dispatched when a member was unbanned from a guild. Declaration public event AsyncEventHandler<MemberUnbannedEventArgs> MemberUnbanned Event Type Type Description AsyncEventHandler < MemberUnbannedEventArgs > | Improve this Doc View Source MemberUpdated Asynchronous event which is dispatched when a member was updated. Declaration public event AsyncEventHandler<MemberUpdatedEventArgs> MemberUpdated Event Type Type Description AsyncEventHandler < MemberUpdatedEventArgs > | Improve this Doc View Source MessageDeleted Asynchronous event which is dispatched when a message was deleted. Declaration public event AsyncEventHandler<MessageDeletedEventArgs> MessageDeleted Event Type Type Description AsyncEventHandler < MessageDeletedEventArgs > | Improve this Doc View Source MessageReceived Asynchronous event which is dispatched when a message was received / created. Declaration public event AsyncEventHandler<MessageReceivedEventArgs> MessageReceived Event Type Type Description AsyncEventHandler < MessageReceivedEventArgs > | Improve this Doc View Source MessageUpdated Asynchronous event which is dispatched when a message was updated. Declaration public event AsyncEventHandler<MessageUpdatedEventArgs> MessageUpdated Event Type Type Description AsyncEventHandler < MessageUpdatedEventArgs > | Improve this Doc View Source PresenceUpdated Asynchronous event which is dispatched when a user's presence was updated. Declaration public event AsyncEventHandler<PresenceUpdatedEventArgs> PresenceUpdated Event Type Type Description AsyncEventHandler < PresenceUpdatedEventArgs > | Improve this Doc View Source ReactionAdded Asynchronous event which is dispatched when a reaction was added to a message. Declaration public event AsyncEventHandler<ReactionAddedEventArgs> ReactionAdded Event Type Type Description AsyncEventHandler < ReactionAddedEventArgs > | Improve this Doc View Source ReactionRemoved Asynchronous event which is dispatched when a reaction was removed from a message. Declaration public event AsyncEventHandler<ReactionRemovedEventArgs> ReactionRemoved Event Type Type Description AsyncEventHandler < ReactionRemovedEventArgs > | Improve this Doc View Source ReactionsCleared Asynchronous event which is dispatched when all reactions on a messages were cleared. Declaration public event AsyncEventHandler<ReactionsClearedEventArgs> ReactionsCleared Event Type Type Description AsyncEventHandler < ReactionsClearedEventArgs > | Improve this Doc View Source Ready Asynchronous event which is dispatched when the client is ready. Declaration public event AsyncEventHandler Ready Event Type Type Description AsyncEventHandler | Improve this Doc View Source RoleCreated Asynchronous event which is dispatched when a role was created. Declaration public event AsyncEventHandler<RoleCreatedEventArgs> RoleCreated Event Type Type Description AsyncEventHandler < RoleCreatedEventArgs > | Improve this Doc View Source RoleDeleted Asynchronous event which is dispatched when a role was deleted. Declaration public event AsyncEventHandler<RoleDeletedEventArgs> RoleDeleted Event Type Type Description AsyncEventHandler < RoleDeletedEventArgs > | Improve this Doc View Source RoleUpdated Asynchronous event which is dispatched when a role was updated. Declaration public event AsyncEventHandler<RoleUpdatedEventArgs> RoleUpdated Event Type Type Description AsyncEventHandler < RoleUpdatedEventArgs > | Improve this Doc View Source TypingStart Asynchronous event which is dispatched when a user starts typing. Declaration public event AsyncEventHandler<TypingStartEventArgs> TypingStart Event Type Type Description AsyncEventHandler < TypingStartEventArgs > | Improve this Doc View Source VoiceServerUpdated Asynchronous event which is dispatched when the client's voice server was updated. Declaration public event AsyncEventHandler<VoiceServerUpdatedEventArgs> VoiceServerUpdated Event Type Type Description AsyncEventHandler < VoiceServerUpdatedEventArgs > | Improve this Doc View Source VoiceStateUpdated Asynchronous event which is dispatched when a voice state was updated. Declaration public event AsyncEventHandler<VoiceStateUpdatedEventArgs> VoiceStateUpdated Event Type Type Description AsyncEventHandler < VoiceStateUpdatedEventArgs > | Improve this Doc View Source WebhooksUpdated Asynchronous event which is dispatched when the webhooks of a guild channel were updated (added, deleted or modified). Declaration public event AsyncEventHandler<WebhooksUpdatedEventArgs> WebhooksUpdated Event Type Type Description AsyncEventHandler < WebhooksUpdatedEventArgs > Implements IDiscordRestClient System.IDisposable System.IAsyncDisposable"
  },
  "api/Strade.DiscordClientConfiguration.html": {
    "href": "api/Strade.DiscordClientConfiguration.html",
    "title": "Class DiscordClientConfiguration | Strade Developer Documentation",
    "keywords": "Class DiscordClientConfiguration The configuration for the DiscordClient . Inheritance Object BaseRestClientConfiguration RestClientConfiguration DiscordClientConfiguration Implements ICloneable < RestClientConfiguration > ICloneable < DiscordClientConfiguration > ICloneable Inherited Members RestClientConfiguration.Credentials RestClientConfiguration.IncludeCredentials RestClientConfiguration.EntityCache RestClientConfiguration.FromEnvironment(String, AuthenticationTokenType) RestClientConfiguration.ICloneable.Clone() BaseRestClientConfiguration.DefaultBaseAddress BaseRestClientConfiguration.UserAgent BaseRestClientConfiguration.BaseAddress BaseRestClientConfiguration.MaxRequestRetries BaseRestClientConfiguration.TraceRequests Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade Assembly : Strade.dll Syntax public class DiscordClientConfiguration : RestClientConfiguration, ICloneable<RestClientConfiguration>, ICloneable<DiscordClientConfiguration>, ICloneable Constructors | Improve this Doc View Source DiscordClientConfiguration() Initializes a new instance of the DiscordClientConfiguration class using authentication credentials provided by passed environment headers (BOT_TOKEN). Declaration public DiscordClientConfiguration() | Improve this Doc View Source DiscordClientConfiguration(AuthenticationCredentials) Initializes a new instance of the DiscordClientConfiguration class. Declaration public DiscordClientConfiguration(AuthenticationCredentials credentials) Parameters Type Name Description AuthenticationCredentials credentials the credentials. Exceptions Type Condition ArgumentNullException thrown if the specified credentials parameter is null . Properties | Improve this Doc View Source AllowResume Gets or sets a value indicating whether session resuming is enabled. Declaration public bool AllowResume { get; set; } Property Value Type Description Boolean a value indicating whether session resuming is enabled (default: true ). Exceptions Type Condition InvalidOperationException thrown if the configuration is read-only ( IsReadOnly ). | Improve this Doc View Source ChecksEvents Gets or sets a value indicating whether an exception should be thrown if it is tried to register an event handler to an event without the intent being registered for the event. Declaration public bool ChecksEvents { get; set; } Property Value Type Description Boolean a value indicating whether an exception should be thrown if it is tried to register an event handler to an event without the intent being registered for the event. Remarks This property defaults to true . Exceptions Type Condition InvalidOperationException thrown if the configuration is read-only ( IsReadOnly ). | Improve this Doc View Source CompressionMode Gets or sets the compression mode. Declaration public GatewayCompressionMode CompressionMode { get; set; } Property Value Type Description GatewayCompressionMode the compression mode. Exceptions Type Condition InvalidOperationException thrown if the configuration is read-only ( IsReadOnly ). | Improve this Doc View Source EventQueue Declaration public IEventQueue EventQueue { get; set; } Property Value Type Description IEventQueue | Improve this Doc View Source GuildTimeout Gets or sets the timeout after the last guild receive time to indicate that the client is ready. Declaration public TimeSpan GuildTimeout { get; set; } Property Value Type Description TimeSpan the timeout after the last guild receive time to indicate that the client is ready. Exceptions Type Condition InvalidOperationException thrown if the configuration is read-only ( IsReadOnly ). | Improve this Doc View Source InitialPresence Gets or sets the initial presence to show. Declaration public Presence InitialPresence { get; set; } Property Value Type Description Presence the initial presence to show (if null , no presence is shown). Exceptions Type Condition InvalidOperationException thrown if the configuration is read-only ( IsReadOnly ). | Improve this Doc View Source Intents Gets or sets the intents used for the bot. Declaration public GatewayIntents Intents { get; set; } Property Value Type Description GatewayIntents the intents used for the bot. Exceptions Type Condition InvalidOperationException thrown if the configuration is read-only ( IsReadOnly ). | Improve this Doc View Source IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean | Improve this Doc View Source LargeThreshold Gets or sets the threshold when the gateway will stop sending offline members in guild members list. (default: 50 , 50 - 250 ). Declaration public int LargeThreshold { get; set; } Property Value Type Description Int32 the threshold when the gateway will stop sending offline members in guild members list. (default: 50 , 50 - 250 ). Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified value is not between 50 and 250 . InvalidOperationException thrown if the configuration is read-only ( IsReadOnly ). | Improve this Doc View Source ReadyTimeout Gets or sets the timeout after which all shards must be ready. Declaration public TimeSpan ReadyTimeout { get; set; } Property Value Type Description TimeSpan the timeout after which all shards must be ready. Exceptions Type Condition InvalidOperationException thrown if the configuration is read-only ( IsReadOnly ). | Improve this Doc View Source ReplayPresence Gets or sets a value indicating whether to replay the last connection's presence after a reconnect. Declaration public bool ReplayPresence { get; set; } Property Value Type Description Boolean a value indicating whether to replay the last connection's presence after a reconnect. Exceptions Type Condition InvalidOperationException thrown if the configuration is read-only ( IsReadOnly ). | Improve this Doc View Source ShardingConfiguration Gets or sets the client's sharding configuration; or null to automatically configure sharding. Declaration public ShardingConfiguration ShardingConfiguration { get; set; } Property Value Type Description ShardingConfiguration the client's sharding configuration; or null to automatically configure sharding. Remarks You may want to configure sharding manually to separate resources over multiple processes, machines, cluster, etc... Exceptions Type Condition InvalidOperationException thrown if the configuration is read-only ( IsReadOnly ). | Improve this Doc View Source TracePayloads Gets or sets a value indicating whether gateway payloads should be traced to the logger. Declaration public bool TracePayloads { get; set; } Property Value Type Description Boolean a value indicating whether gateway payloads should be traced to the logger. Exceptions Type Condition InvalidOperationException thrown if the configuration is read-only ( IsReadOnly ). | Improve this Doc View Source TrackPresences Gets or sets a value indicating whether to track presences, if set to true , the client will track user presences; if false , the client will not track user presences and the Presence property will remain null even if the user has updated the presence information. Declaration public bool TrackPresences { get; set; } Property Value Type Description Boolean a value indicating whether to track presences, if set to true , the client will track user presences; if false , the client will not track user presences. | Improve this Doc View Source UseIntegratedLogger Declaration public bool UseIntegratedLogger { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source AsReadOnly() Declaration public void AsReadOnly() | Improve this Doc View Source Clone() Declaration public DiscordClientConfiguration Clone() Returns Type Description DiscordClientConfiguration Implements ICloneable<TSelf> ICloneable<TSelf> System.ICloneable"
  },
  "api/Strade.DiscordRestApiClient.html": {
    "href": "api/Strade.DiscordRestApiClient.html",
    "title": "Class DiscordRestApiClient | Strade Developer Documentation",
    "keywords": "Class DiscordRestApiClient The base RESTful API client for the discord RESTful API service. Inheritance Object BaseRestApiClient DiscordRestApiClient Implements IDisposable Inherited Members BaseRestApiClient.BaseAddress BaseRestApiClient.HttpClient BaseRestApiClient.Logger BaseRestApiClient.RequestLimiter BaseRestApiClient.SerializerOptions BaseRestApiClient.Patch BaseRestApiClient.AdditionalRequestHeaders BaseRestApiClient.Boundary BaseRestApiClient.Dispose() BaseRestApiClient.GetRouteType(HttpMethod) BaseRestApiClient.CreateException(RestResponseStatus, String, Nullable<RateLimiterBucket>) BaseRestApiClient.DeleteAsync(String, Object[], Nullable<Snowflake>, Object, CancellationToken) BaseRestApiClient.DeleteAsync(String, Object[], Nullable<Snowflake>, HttpContent, CancellationToken) BaseRestApiClient.Dispose(Boolean) BaseRestApiClient.GetAsync<T>(String, Object[], Nullable<Snowflake>, QueryParameterCollection, CancellationToken) BaseRestApiClient.GetResponseBehavior(HttpMethod, HttpStatusCode, RestResponseStatus) BaseRestApiClient.PatchAsync(String, Object[], Nullable<Snowflake>, Object, CancellationToken) BaseRestApiClient.PatchAsync<T>(String, Object[], Nullable<Snowflake>, Object, CancellationToken) BaseRestApiClient.PatchAsync(String, Object[], Nullable<Snowflake>, HttpContent, CancellationToken) BaseRestApiClient.PatchAsync<T>(String, Object[], Nullable<Snowflake>, HttpContent, CancellationToken) BaseRestApiClient.PostAsync(String, Object[], Nullable<Snowflake>, Object, QueryParameterCollection, CancellationToken) BaseRestApiClient.PostAsync<T>(String, Object[], Nullable<Snowflake>, Object, QueryParameterCollection, CancellationToken) BaseRestApiClient.PostAsync(String, Object[], Nullable<Snowflake>, HttpContent, QueryParameterCollection, CancellationToken) BaseRestApiClient.PostAsync<T>(String, Object[], Nullable<Snowflake>, HttpContent, QueryParameterCollection, CancellationToken) BaseRestApiClient.PutAsync(String, Object[], Nullable<Snowflake>, Object, QueryParameterCollection, CancellationToken) BaseRestApiClient.PutAsync<T>(String, Object[], Nullable<Snowflake>, Object, QueryParameterCollection, CancellationToken) BaseRestApiClient.PutAsync(String, Object[], Nullable<Snowflake>, HttpContent, QueryParameterCollection, CancellationToken) BaseRestApiClient.PutAsync<T>(String, Object[], Nullable<Snowflake>, HttpContent, QueryParameterCollection, CancellationToken) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade Assembly : Strade.Rest.dll Syntax public class DiscordRestApiClient : BaseRestApiClient, IDisposable Constructors | Improve this Doc View Source DiscordRestApiClient(IDiscordRestClient, RestClientConfiguration, ILogger) Initializes a new instance of the DiscordRestApiClient class. Declaration public DiscordRestApiClient(IDiscordRestClient discordClient, RestClientConfiguration configuration, ILogger logger = null) Parameters Type Name Description IDiscordRestClient discordClient the parent discord client. RestClientConfiguration configuration the configuration. ILogger logger the logger to use for logging; or null to disable logging. Exceptions Type Condition ArgumentNullException thrown if the specified discordClient is null . ArgumentNullException thrown if the specified configuration is null . Fields | Improve this Doc View Source AuthorizationHeaderName The name of the authorization header. Declaration public const string AuthorizationHeaderName = \"Authorization\" Field Value Type Description String Properties | Improve this Doc View Source AuthenticationCredentials Gets the authentication credentials used for authorization to the Discord RESTful API. Declaration public AuthenticationCredentials AuthenticationCredentials { get; } Property Value Type Description AuthenticationCredentials the authentication credentials used for authorization to the Discord RESTful API; or null if no authentication is used. | Improve this Doc View Source Cache Gets the global entity cache used to resource sharing, real-time entity updates and request caching. Declaration public IEntityCache Cache { get; } Property Value Type Description IEntityCache the global entity cache used to resource sharing, real-time entity updates and request caching. | Improve this Doc View Source ChannelCache Gets a cache accessor used to access all channel entities within the global cache. Declaration public CacheAccessor<IChannel, ChannelModel> ChannelCache { get; } Property Value Type Description CacheAccessor < IChannel , ChannelModel > a cache accessor used to access all channel entities within the global cache. Remarks The channel cache is unscoped. | Improve this Doc View Source Client Gets the discord client bound to. Declaration public IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient the discord client bound to. | Improve this Doc View Source EmoteCache Gets a cache accessor used to access all webhook entities within the global cache. Declaration public CacheAccessor<Emote, EmoteModel> EmoteCache { get; } Property Value Type Description CacheAccessor < Emote , EmoteModel > a cache accessor used to access all webhook entities within the global cache. Remarks The invite cache is unscoped. | Improve this Doc View Source GuildCache Gets a cache accessor used to access all guild entities within the global cache. Declaration public CacheAccessor<IGuild, GuildModel> GuildCache { get; } Property Value Type Description CacheAccessor < IGuild , GuildModel > a cache accessor used to access all guild entities within the global cache. Remarks The guild cache is unscoped. | Improve this Doc View Source IsGatewayClient Gets a value indicating whether the underlying client is a gateway client or not. Declaration protected virtual bool IsGatewayClient { get; } Property Value Type Description Boolean a value indicating whether the underlying client is a gateway client or not. | Improve this Doc View Source UserCache Gets a cache accessor used to access all user entities within the global cache. Declaration public CacheAccessor<User, UserModel> UserCache { get; } Property Value Type Description CacheAccessor < User , UserModel > a cache accessor used to access all user entities within the global cache. Remarks The user cache is unscoped. | Improve this Doc View Source WebhookCache Gets a cache accessor used to access all webhook entities within the global cache. Declaration public CacheAccessor<Webhook, WebhookModel> WebhookCache { get; } Property Value Type Description CacheAccessor < Webhook , WebhookModel > a cache accessor used to access all webhook entities within the global cache. Remarks The invite cache is unscoped. Methods | Improve this Doc View Source AddGroupChannelRecipientAsync(Snowflake, Snowflake, GroupChannelRecipientCreationProperties, CancellationToken) Adds the user specified by userId to the group DM channel specified by channelId asynchronously. Declaration public Task AddGroupChannelRecipientAsync(Snowflake channelId, Snowflake userId, GroupChannelRecipientCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the snowflake identifier of the target group DM channel. Snowflake userId the snowflake identifier of the target user. GroupChannelRecipientCreationProperties properties the recipient creation properties. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified properties parameter is null . | Improve this Doc View Source AddMemberAsync(Snowflake, Snowflake, MemberCreationProperties, CancellationToken) Adds the user specified by userId to the guild specified by guildId asynchronously. Declaration public Task<Member> AddMemberAsync(Snowflake guildId, Snowflake userId, MemberCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the target guild. Snowflake userId the snowflake identifier of the target user. MemberCreationProperties properties the recipient creation properties. CancellationToken cancellationToken Returns Type Description Task < Member > a task that represents the asynchronous operation. The task result is the member added to the guild. Exceptions Type Condition ArgumentNullException thrown if the specified properties parameter is null . | Improve this Doc View Source AddRoleAsync(Snowflake, Snowflake, Snowflake, CancellationToken) Adds the role specified by roleId to the member specified by userId and guildId asynchronously. Declaration public Task AddRoleAsync(Snowflake guildId, Snowflake userId, Snowflake roleId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the target guild. Snowflake userId the snowflake identifier of the target user. Snowflake roleId the snowflake identifier of the role to add. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source BanAsync(Snowflake, Snowflake, MemberBanCreationProperties, CancellationToken) Bans the user specified by userId from the guild specified by guildId asynchronously. Declaration public Task BanAsync(Snowflake guildId, Snowflake userId, MemberBanCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the target guild. Snowflake userId the snowflake identifier of the target user to ban. MemberBanCreationProperties properties the recipient creation properties. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source BeginPruneAsync(Snowflake, BeginPruneProperties, CancellationToken) Begins a guild prune asynchronously. Declaration public Task<PruneInformation?> BeginPruneAsync(Snowflake guildId, BeginPruneProperties properties = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild to prune members from. BeginPruneProperties properties the prune properties. CancellationToken cancellationToken Returns Type Description Task < Nullable < PruneInformation >> a task that represents the asynchronous operation. The task result is the guild prune information; or null if properties is null or ComputePruneCount is false . | Improve this Doc View Source CreateChannelInviteAsync(Snowflake, InviteCreationProperties, CancellationToken) Creates a new (channel) invite asynchronously. Declaration public Task<Invite> CreateChannelInviteAsync(Snowflake channelId, InviteCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the snowflake identifier of the channel to create the invite for. InviteCreationProperties properties the creation properties. CancellationToken cancellationToken Returns Type Description Task < Invite > a task that represents the asynchronous operation. The task result is the created channel. Exceptions Type Condition ArgumentNullException thrown if the specified properties parameter is null . | Improve this Doc View Source CreateEmojiAsync(Snowflake, EmojiCreationProperties, CancellationToken) Creates a new emoji asynchronously. Declaration public Task<GuildEmote> CreateEmojiAsync(Snowflake guildId, EmojiCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the target guild. EmojiCreationProperties properties the creation properties. CancellationToken cancellationToken Returns Type Description Task < GuildEmote > a task that represents the asynchronous operation. The task result is the created entity. Exceptions Type Condition ArgumentNullException thrown if the specified properties parameter is null . | Improve this Doc View Source CreateGlobalCommandAsync(Snowflake, CommandCreationProperties, CancellationToken) Declaration public Task<ApplicationCommand> CreateGlobalCommandAsync(Snowflake applicationId, CommandCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake applicationId CommandCreationProperties properties CancellationToken cancellationToken Returns Type Description Task < ApplicationCommand > | Improve this Doc View Source CreateGuildAsync(GuildCreationProperties, CancellationToken) Creates a new guild asynchronously. Declaration public Task<IGuild> CreateGuildAsync(GuildCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GuildCreationProperties properties the creation properties. CancellationToken cancellationToken Returns Type Description Task < IGuild > a task that represents the asynchronous operation. The task result is the created entity. | Improve this Doc View Source CreateGuildChannelAsync(Snowflake, GuildChannelCreationProperties, CancellationToken) Creates a new guild channel asynchronously. Declaration public Task<IGuildChannel> CreateGuildChannelAsync(Snowflake guildId, GuildChannelCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild to create the channel in. GuildChannelCreationProperties properties the creation properties used to create the guild channel. CancellationToken cancellationToken Returns Type Description Task < IGuildChannel > a task that represents the asynchronous operation. The task result is the created channel. | Improve this Doc View Source CreateGuildCommandAsync(Snowflake, Snowflake, CommandCreationProperties, CancellationToken) Declaration public Task<ApplicationCommand> CreateGuildCommandAsync(Snowflake applicationId, Snowflake guildId, CommandCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake applicationId Snowflake guildId CommandCreationProperties properties CancellationToken cancellationToken Returns Type Description Task < ApplicationCommand > | Improve this Doc View Source CreateGuildIntegrationAsync(Snowflake, GuildIntegrationCreationProperties, CancellationToken) Creates a new guild integration asynchronously. Declaration public Task<GuildIntegration> CreateGuildIntegrationAsync(Snowflake guildId, GuildIntegrationCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the target guild to create the integration in. GuildIntegrationCreationProperties properties the creation properties. CancellationToken cancellationToken Returns Type Description Task < GuildIntegration > a task that represents the asynchronous operation. The task result is the created guild integration. | Improve this Doc View Source CreateInteractionResponseAsync(Snowflake, String, InteractionResponseCreationProperties, CancellationToken) Declaration public Task CreateInteractionResponseAsync(Snowflake interactionId, string continuationToken, InteractionResponseCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake interactionId String continuationToken InteractionResponseCreationProperties properties CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source CreateReactionAsync(Nullable<Snowflake>, Snowflake, Snowflake, IEmote, CancellationToken) Creates a new reaction on the message specified by messageId in the channel specified by channelId with the specified emote asynchronously. Declaration public Task CreateReactionAsync(Snowflake? guildId, Snowflake channelId, Snowflake messageId, IEmote emote, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Nullable < Snowflake > guildId the snowflake identifier of the target guild; if null then the message was send in a non-guild channel. This value is used for rate limiting. Snowflake channelId the snowflake identifier of the target channel. Snowflake messageId the snowflake identifier of the target message. IEmote emote the emote to react with. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified emote is null . | Improve this Doc View Source CreateRoleAsync(Snowflake, RoleCreationProperties, CancellationToken) Creates a new role asynchronously. Declaration public Task<IRole> CreateRoleAsync(Snowflake guildId, RoleCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the target guild. RoleCreationProperties properties the creation properties. CancellationToken cancellationToken Returns Type Description Task < IRole > a task that represents the asynchronous operation. The task result is the created entity. Exceptions Type Condition ArgumentNullException thrown if the specified properties parameter is null . | Improve this Doc View Source CreateWebhookAsync(Snowflake, WebhookCreationProperties, CancellationToken) Declaration public Task<Webhook> CreateWebhookAsync(Snowflake channelId, WebhookCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId WebhookCreationProperties properties CancellationToken cancellationToken Returns Type Description Task < Webhook > | Improve this Doc View Source CrosspostMessageAsync(Snowflake, Snowflake, CancellationToken) Crossposts / publishes the message (specified by messageId ) from the channel (specified by channelId ) asynchronously. Declaration public Task<IMessage> CrosspostMessageAsync(Snowflake channelId, Snowflake messageId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the snowflake identifier of the target channel the specified messageId was sent in. Snowflake messageId the snowflake identifier of the target message to crosspost / publish. CancellationToken cancellationToken Returns Type Description Task < IMessage > a task that represents the asynchronous operation. Remarks The term 'Crosspost' is used for the Discord API, in the client 'Publish' is used. | Improve this Doc View Source DeleteChannelAsync(Snowflake, CancellationToken) Deletes the channel specified by channelId asynchronously. Declaration public Task DeleteChannelAsync(Snowflake channelId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the snowflake identifier of the channel to delete. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source DeleteChannelOverwriteAsync(Snowflake, Snowflake, CancellationToken) Deletes the channel overwrite specified by overwriteId from the channel specified by channelId asynchronously. Declaration public Task DeleteChannelOverwriteAsync(Snowflake channelId, Snowflake overwriteId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the snowflake identifier of the channel to delete. Snowflake overwriteId the snowflake identifier of the target of the overwrite. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source DeleteEmojiAsync(Snowflake, Snowflake, CancellationToken) Deletes the guild emoji specified by guildId and emojiId asynchronously. Declaration public Task DeleteEmojiAsync(Snowflake guildId, Snowflake emojiId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the target guild. Snowflake emojiId the snowflake identifier of the target emoji. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source DeleteFollowupMessageAsync(Snowflake, String, Snowflake, CancellationToken) Declaration public Task DeleteFollowupMessageAsync(Snowflake applicationId, string interactionToken, Snowflake messageId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake applicationId String interactionToken Snowflake messageId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source DeleteGlobalCommandAsync(Snowflake, Snowflake, CancellationToken) Declaration public Task DeleteGlobalCommandAsync(Snowflake applicationId, Snowflake commandId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake applicationId Snowflake commandId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source DeleteGuildAsync(Snowflake, CancellationToken) Deletes the guild specified by guildId asynchronously. Declaration public Task DeleteGuildAsync(Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild to delete. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source DeleteGuildCommandAsync(Snowflake, Snowflake, Snowflake, CancellationToken) Declaration public Task DeleteGuildCommandAsync(Snowflake applicationId, Snowflake guildId, Snowflake commandId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake applicationId Snowflake guildId Snowflake commandId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source DeleteGuildIntegrationAsync(Snowflake, Snowflake, CancellationToken) Deletes the guild integration specified by guildId and integrationId asynchronously. Declaration public Task DeleteGuildIntegrationAsync(Snowflake guildId, Snowflake integrationId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild where the integration is in. Snowflake integrationId the snowflake identifier of the guild integration to delete. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source DeleteInviteAsync(String, CancellationToken) Deletes the invite specified by code asynchronously. Declaration public Task DeleteInviteAsync(string code, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String code the invitation code to delete. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified code is null . | Improve this Doc View Source DeleteMessageAsync(Snowflake, Snowflake, CancellationToken) Deletes the message specified by channelId and messageId asynchronously. Declaration public Task DeleteMessageAsync(Snowflake channelId, Snowflake messageId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the snowflake identifier of the target channel. Snowflake messageId the snowflake identifier of the target message. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source DeleteMessagesAsync(Snowflake, IEnumerable<Snowflake>, CancellationToken) Deletes the messages specified by messageIds from the channel specified by channelId asynchronously. Declaration public Task DeleteMessagesAsync(Snowflake channelId, IEnumerable<Snowflake> messageIds, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the snowflake identifier of the target channel. IEnumerable < Snowflake > messageIds an enumerable that yields through the snowflake identifiers of the messages to delete. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified messageIds enumerable is null . | Improve this Doc View Source DeleteOriginalInteractionResponseAsync(Snowflake, String, CancellationToken) Declaration public Task DeleteOriginalInteractionResponseAsync(Snowflake applicationId, string interactionToken, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake applicationId String interactionToken CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source DeleteOwnReactionAsync(Nullable<Snowflake>, Snowflake, Snowflake, IEmote, CancellationToken) Deletes the reaction on the message specified by messageId in the channel specified by channelId with the specified emote asynchronously. Declaration public Task DeleteOwnReactionAsync(Snowflake? guildId, Snowflake channelId, Snowflake messageId, IEmote emote, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Nullable < Snowflake > guildId the snowflake identifier of the target guild; if null then the message was send in a non-guild channel. This value is used for rate limiting. Snowflake channelId the snowflake identifier of the target channel. Snowflake messageId the snowflake identifier of the target message. IEmote emote the emote to remove the user's reaction from. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified emote is null . | Improve this Doc View Source DeleteReactionAsync(Nullable<Snowflake>, Snowflake, Snowflake, Snowflake, IEmote, CancellationToken) Deletes the reaction on the message specified by messageId in the channel specified by channelId with the specified emote from the user specified by userId asynchronously. Declaration public Task DeleteReactionAsync(Snowflake? guildId, Snowflake channelId, Snowflake messageId, Snowflake userId, IEmote emote, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Nullable < Snowflake > guildId the snowflake identifier of the target guild; if null then the message was send in a non-guild channel. This value is used for rate limiting. Snowflake channelId the snowflake identifier of the target channel. Snowflake messageId the snowflake identifier of the target message. Snowflake userId the snowflake identifier of the target user. IEmote emote the emote to remove the user's reaction from. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified emote is null . | Improve this Doc View Source DeleteReactionsAsync(Nullable<Snowflake>, Snowflake, Snowflake, IEmote, CancellationToken) Deletes all reactions for the specified emote on the message specified by messageId in the channel specified by channelId asynchronously. Declaration public Task DeleteReactionsAsync(Snowflake? guildId, Snowflake channelId, Snowflake messageId, IEmote emote, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Nullable < Snowflake > guildId the snowflake identifier of the target guild; if null then the message was send in a non-guild channel. This value is used for rate limiting. Snowflake channelId the snowflake identifier of the target channel. Snowflake messageId the snowflake identifier of the target message. IEmote emote the emote type. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified emote is null . | Improve this Doc View Source DeleteReactionsAsync(Nullable<Snowflake>, Snowflake, Snowflake, CancellationToken) Deletes all reactions on the message specified by messageId in the channel specified by channelId asynchronously. Declaration public Task DeleteReactionsAsync(Snowflake? guildId, Snowflake channelId, Snowflake messageId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Nullable < Snowflake > guildId the snowflake identifier of the target guild; if null then the message was send in a non-guild channel. This value is used for rate limiting. Snowflake channelId the snowflake identifier of the target channel. Snowflake messageId the snowflake identifier of the target message. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source DeleteRoleAsync(Snowflake, Snowflake, CancellationToken) Deletes the role specified by roleId asynchronously. Declaration public Task DeleteRoleAsync(Snowflake guildId, Snowflake roleId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild the role is in. Snowflake roleId the snowflake identifier of the role to delete. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source DeleteWebhookAsync(Snowflake, String, CancellationToken) Declaration public Task DeleteWebhookAsync(Snowflake webhookId, string token, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake webhookId String token CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source DeleteWebhookAsync(Snowflake, CancellationToken) Declaration public Task DeleteWebhookAsync(Snowflake webhookId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake webhookId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source DeleteWebhookMessageAsync(Snowflake, String, Snowflake, CancellationToken) Declaration public Task DeleteWebhookMessageAsync(Snowflake webhookId, string webhookToken, Snowflake messageId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake webhookId String webhookToken Snowflake messageId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source DownloadAuditLogAsync(Snowflake, AuditLogProperties, CancellationToken) Downloads the audit log for the guild specified by guildId asynchronously. Declaration public Task<AuditLogModel> DownloadAuditLogAsync(Snowflake guildId, AuditLogProperties properties = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild. AuditLogProperties properties optional properties used to filter the result. CancellationToken cancellationToken Returns Type Description Task < AuditLogModel > a task that represents the asynchronous operation. The task result is the downloaded audit log model. | Improve this Doc View Source DownloadBanAsync(Snowflake, Snowflake, CancellationToken) Downloads the ban for the member specified by guildId and userId asynchronously. Declaration public Task<BanModel> DownloadBanAsync(Snowflake guildId, Snowflake userId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild. Snowflake userId the snowflake identifier of the target user to retrieve the ban for. CancellationToken cancellationToken Returns Type Description Task < BanModel > a task that represents the asynchronous operation. The task result is the downloaded ban model. | Improve this Doc View Source DownloadBansAsync(Snowflake, CancellationToken) Downloads the bans for the guild specified by guildId asynchronously. Declaration public Task<IReadOnlyList<BanModel>> DownloadBansAsync(Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild. CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < BanModel >> a task that represents the asynchronous operation. The task result is the downloaded bans list model. | Improve this Doc View Source DownloadChannelAsync(Snowflake, CancellationToken) Downloads a raw channel asynchronously. Declaration public Task<ChannelModel> DownloadChannelAsync(Snowflake channelId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the channel snowflake identifier. CancellationToken cancellationToken Returns Type Description Task < ChannelModel > a task that represents the asynchronous operation. The task result is the downloaded channel. | Improve this Doc View Source DownloadChannelWebhooksAsync(Snowflake, CancellationToken) Declaration public Task<IReadOnlyList<WebhookModel>> DownloadChannelWebhooksAsync(Snowflake channelId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < WebhookModel >> | Improve this Doc View Source DownloadCurrentApplicationAsync(CancellationToken) Downloads the current application information asynchronously. Declaration public Task<ApplicationInformationModel> DownloadCurrentApplicationAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < ApplicationInformationModel > a task that represents the asynchronous operation. The task result is the current application information model. | Improve this Doc View Source DownloadCurrentUserAsync(CancellationToken) Downloads the current user asynchronously. Declaration public Task<UserModel> DownloadCurrentUserAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < UserModel > a task that represents the asynchronous operation. The task result is the current user information. | Improve this Doc View Source DownloadGlobalCommandsAsync(Snowflake, CancellationToken) Declaration public Task<IReadOnlyList<ApplicationCommandModel>> DownloadGlobalCommandsAsync(Snowflake applicationId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake applicationId CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < ApplicationCommandModel >> | Improve this Doc View Source DownloadGuildAsync(Snowflake, CancellationToken) Downloads a raw guild asynchronously. Declaration public Task<GuildModel> DownloadGuildAsync(Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the guild snowflake identifier. CancellationToken cancellationToken Returns Type Description Task < GuildModel > a task that represents the asynchronous operation. The task result is the downloaded guild. | Improve this Doc View Source DownloadGuildChannelsAsync(Snowflake, CancellationToken) Downloads the channels of the guild specified by guildId asynchronously. Declaration public Task<IReadOnlyList<ChannelModel>> DownloadGuildChannelsAsync(Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the guild snowflake identifier. CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < ChannelModel >> a task that represents the asynchronous operation. The task result is a list of the guild channels. | Improve this Doc View Source DownloadGuildCommandsAsync(Snowflake, Snowflake, CancellationToken) Declaration public Task<IReadOnlyList<ApplicationCommandModel>> DownloadGuildCommandsAsync(Snowflake applicationId, Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake applicationId Snowflake guildId CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < ApplicationCommandModel >> | Improve this Doc View Source DownloadGuildIntegrationsAsync(Snowflake, CancellationToken) Gets the integrations for the guild specified by guildId asynchronously. Declaration public Task<IReadOnlyList<GuildIntegrationModel>> DownloadGuildIntegrationsAsync(Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the guild snowflake identifier to retrieve the integrations for. CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < GuildIntegrationModel >> a task that represents the asynchronous operation. The task result is a list of the guild integrations. | Improve this Doc View Source DownloadGuildInvitesAsync(Snowflake, CancellationToken) Gets the invite models for the guild specified by guildId asynchronously. Declaration public Task<IReadOnlyList<InviteWithMetadataModel>> DownloadGuildInvitesAsync(Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the guild snowflake identifier to retrieve the integrations for. CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < InviteWithMetadataModel >> a task that represents the asynchronous operation. The task result is a list of the guild invite models. | Improve this Doc View Source DownloadGuildRolesAsync(Snowflake, CancellationToken) Declaration public Task<IReadOnlyList<RoleModel>> DownloadGuildRolesAsync(Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < RoleModel >> | Improve this Doc View Source DownloadGuildVoiceRegionsAsync(Snowflake, CancellationToken) Gets the voice regions for the guild specified by guildId asynchronously. Declaration public Task<IReadOnlyList<VoiceRegionModel>> DownloadGuildVoiceRegionsAsync(Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the guild snowflake identifier to retrieve the integrations for. CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < VoiceRegionModel >> a task that represents the asynchronous operation. The task result is a list of the guild voice regions. | Improve this Doc View Source DownloadGuildWebhooksAsync(Snowflake, CancellationToken) Declaration public Task<IReadOnlyList<WebhookModel>> DownloadGuildWebhooksAsync(Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < WebhookModel >> | Improve this Doc View Source DownloadGuildWidgetAsync(Snowflake, CancellationToken) Downloads the guild widget model for the guild specified by guildId asynchronously. Declaration public Task<GuildWidgetModel> DownloadGuildWidgetAsync(Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the guild snowflake identifier. CancellationToken cancellationToken Returns Type Description Task < GuildWidgetModel > a task that represents the asynchronous operation. The task result is the guild widget model. | Improve this Doc View Source DownloadInviteAsync(String, InviteProperties, CancellationToken) Downloads an invite asynchronously. Declaration public Task<InviteModel> DownloadInviteAsync(string code, InviteProperties properties = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String code the invite code. InviteProperties properties the properties used to retrieve the invite. CancellationToken cancellationToken Returns Type Description Task < InviteModel > a task that represents the asynchronous operation. The task result is the invite. Exceptions Type Condition ArgumentNullException thrown if the specified code is null . | Improve this Doc View Source DownloadInviteAsync(String, Boolean, CancellationToken) Downloads an invite asynchronously. Declaration public Task<InviteModel> DownloadInviteAsync(string code, bool includeCounts = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String code the invite code. Boolean includeCounts a value indicating whether to include guild member count approximations for the invite. CancellationToken cancellationToken Returns Type Description Task < InviteModel > a task that represents the asynchronous operation. The task result is the invite. Exceptions Type Condition ArgumentNullException thrown if the specified code is null . | Improve this Doc View Source DownloadMemberAsync(Snowflake, Snowflake, CancellationToken) Downloads a raw guild member asynchronously. Declaration public Task<MemberModel> DownloadMemberAsync(Snowflake guildId, Snowflake userId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the guild snowflake identifier. Snowflake userId the user snowflake identifier. CancellationToken cancellationToken Returns Type Description Task < MemberModel > a task that represents the asynchronous operation. The task result is the downloaded guild member. | Improve this Doc View Source DownloadMembersAsync(Snowflake, MemberDownloadProperties, CancellationToken) Downloads guild members asynchronously. Declaration public Task<IReadOnlyList<MemberModel>> DownloadMembersAsync(Snowflake guildId, MemberDownloadProperties properties = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the guild snowflake identifier. MemberDownloadProperties properties the properties used to download the members; or null to use the default properties. CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < MemberModel >> a task that represents the asynchronous operation. The task result is a list containing the downloaded guild members. | Improve this Doc View Source DownloadMessageAsync(Snowflake, Snowflake, CancellationToken) Downloads a message asynchronously. Declaration public Task<MessageModel> DownloadMessageAsync(Snowflake channelId, Snowflake messageId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the channel snowflake identifier. Snowflake messageId the message snowflake identifier. CancellationToken cancellationToken Returns Type Description Task < MessageModel > a task that represents the asynchronous operation. The task result is the message. | Improve this Doc View Source DownloadMessagesAsync(Snowflake, MessageProperties, CancellationToken) Downloads messages for the channel specified by channelId asynchronously. Declaration public Task<IReadOnlyList<MessageModel>> DownloadMessagesAsync(Snowflake channelId, MessageProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the snowflake identifier of the channel. MessageProperties properties the properties used to retrieve the messages. CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < MessageModel >> a task that represents the asynchronous operation. The task result is a list of the message models downloaded. | Improve this Doc View Source DownloadPinnedMessagesAsync(Snowflake, CancellationToken) Gets a list of pinned messages in the channel (specified by channelId ) asynchronously. Declaration public Task<IReadOnlyList<MessageModel>> DownloadPinnedMessagesAsync(Snowflake channelId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the snowflake identifier of the channel to get pinned messages from. CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < MessageModel >> a task that represents the asynchronous operation. The task result is a list of pinned messages in the channel (specified by channelId ). | Improve this Doc View Source DownloadUserAsync(Snowflake, CancellationToken) Downloads a raw user asynchronously. Declaration public Task<UserModel> DownloadUserAsync(Snowflake userId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake userId the snowflake identifier of the user to download. CancellationToken cancellationToken Returns Type Description Task < UserModel > a task that represents the asynchronous operation. The task result is the downloaded user. | Improve this Doc View Source DownloadUserConnectionsAsync(CancellationToken) Downloads a list of the connections of the current user asynchronously. Declaration public Task<IReadOnlyList<UserConnectionModel>> DownloadUserConnectionsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < UserConnectionModel >> a task that represents the asynchronous operation. The task result is a list of the connections of the current user. | Improve this Doc View Source DownloadUserGuildsAsync(UserGuildsDownloadProperties, CancellationToken) Downloads a list of the current user guilds of the current user asynchronously. Declaration public Task<IReadOnlyList<UserGuildInformationModel>> DownloadUserGuildsAsync(UserGuildsDownloadProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description UserGuildsDownloadProperties properties the properties used to download the guild. CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < UserGuildInformationModel >> a task that represents the asynchronous operation. The task result is a list of the guilds the current user is in. | Improve this Doc View Source DownloadVanityInviteAsync(Snowflake, CancellationToken) Gets the vanity invite information for the guild (specified by guildId ) asynchronously. Declaration public Task<VanityInviteModel> DownloadVanityInviteAsync(Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild to get the vanity invite information for. CancellationToken cancellationToken Returns Type Description Task < VanityInviteModel > a task that represents the asynchronous operation. The task result is a list of the connections of the current user. | Improve this Doc View Source DownloadVoiceRegionsAsync(CancellationToken) Downloads all available voice regions asynchronously. Declaration public Task<IReadOnlyList<VoiceRegionModel>> DownloadVoiceRegionsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < VoiceRegionModel >> a task that represents the asynchronous operation. The task result is a list of all available voice regions. | Improve this Doc View Source DownloadWebhookAsync(Snowflake, String, CancellationToken) Declaration public Task<WebhookModel> DownloadWebhookAsync(Snowflake webhookId, string token, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake webhookId String token CancellationToken cancellationToken Returns Type Description Task < WebhookModel > | Improve this Doc View Source DownloadWebhookAsync(Snowflake, CancellationToken) Downloads a webhook asynchronously. Declaration public Task<WebhookModel> DownloadWebhookAsync(Snowflake webhookId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake webhookId the webhook snowflake identifier. CancellationToken cancellationToken Returns Type Description Task < WebhookModel > a task that represents the asynchronous operation. The task result is the webhook. | Improve this Doc View Source ExecuteWebhookAsync(Snowflake, String, WebhookMessageCreationProperties, Boolean, CancellationToken) Declaration public Task<IWebhookMessage> ExecuteWebhookAsync(Snowflake webhookId, string token, WebhookMessageCreationProperties properties, bool wait = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake webhookId String token WebhookMessageCreationProperties properties Boolean wait CancellationToken cancellationToken Returns Type Description Task < IWebhookMessage > | Improve this Doc View Source FollowChannelAsync(Snowflake, ChannelFollowProperties, CancellationToken) Declaration public Task<FollowedChannel> FollowChannelAsync(Snowflake channelId, ChannelFollowProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId ChannelFollowProperties properties CancellationToken cancellationToken Returns Type Description Task < FollowedChannel > | Improve this Doc View Source GetAuditLogAsync(Snowflake, AuditLogProperties, CancellationToken) Gets the audit log for the guild specified by guildId asynchronously. Declaration public Task<IAuditLog> GetAuditLogAsync(Snowflake guildId, AuditLogProperties properties = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild. AuditLogProperties properties optional properties used to filter the result. CancellationToken cancellationToken Returns Type Description Task < IAuditLog > a task that represents the asynchronous operation. The task result is the downloaded audit log. | Improve this Doc View Source GetBanAsync(Snowflake, Snowflake, CancellationToken) Gets the ban specified by guildId and userId asynchronously. Declaration public Task<Ban> GetBanAsync(Snowflake guildId, Snowflake userId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild to get the ban information for. Snowflake userId the snowflake identifier of the channel to get the ban information for. CancellationToken cancellationToken Returns Type Description Task < Ban > a task that represents the asynchronous operation. The task result is the ban. | Improve this Doc View Source GetBansAsync(Snowflake, CancellationToken) Gets the bans specified in the guild by guildId asynchronously. Declaration public Task<IReadOnlyList<Ban>> GetBansAsync(Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild to get the ban information for. CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < Ban >> a task that represents the asynchronous operation. The task result is a list of the guild bans. | Improve this Doc View Source GetCache<TEntity, TModel>(EntityType, Nullable<Snowflake>) Gets a structure that allows access to inner contents of the cache to perform basic write and read operations for entities from the specified type and optionally a scope . Declaration public CacheAccessor<TEntity, TModel> GetCache<TEntity, TModel>(EntityType type, Snowflake? scope = default(Snowflake? )) where TEntity : IUpdateable<TModel>, IIdentifiable<Snowflake> where TModel : class, IIdentifiable<Snowflake>, new() Parameters Type Name Description EntityType type the type of the entities to access. Nullable < Snowflake > scope the scope of the accessor; or null to use no scope. Returns Type Description CacheAccessor <TEntity, TModel> a structure that allows access to inner contents of the cache to perform basic write and read operations for entities from the specified type and optionally a scope . Type Parameters Name Description TEntity the type of the entities being accessed. TModel the type of the entity model. Remarks This method is a shortcut for GetAccessor<TEntity, TModel>(EntityType, Nullable<Snowflake>) on EntityCache . | Improve this Doc View Source GetChannelAsync(Snowflake, CacheBehavior, CancellationToken) Gets a channel asynchronously. Declaration public ValueTask<IChannel> GetChannelAsync(Snowflake channelId, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the channel snowflake identifier. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IChannel > a task that represents the asynchronous operation. The task result is the channel. | Improve this Doc View Source GetChannelInvitesAsync(Snowflake, CancellationToken) Gets the invites for the channel specified by channelId asynchronously. Declaration public Task<IReadOnlyList<InviteInformation>> GetChannelInvitesAsync(Snowflake channelId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the channel snowflake identifier. CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < InviteInformation >> a task that represents the asynchronous operation. The task result is a list of invites. | Improve this Doc View Source GetChannelWebhooksAsync(Snowflake, CancellationToken) Declaration public Task<IReadOnlyList<Webhook>> GetChannelWebhooksAsync(Snowflake channelId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < Webhook >> | Improve this Doc View Source GetCurrentApplicationAsync(CancellationToken) Gets the current application information asynchronously. Declaration public Task<ApplicationInformation> GetCurrentApplicationAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < ApplicationInformation > a task that represents the asynchronous operation. The task result is the current application information. | Improve this Doc View Source GetCurrentUserAsync(CancellationToken) Gets the current user asynchronously. Declaration public Task<CurrentUser> GetCurrentUserAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < CurrentUser > a task that represents the asynchronous operation. The task result is the current user information. | Improve this Doc View Source GetGatewayInformationAsync(Boolean, CancellationToken) Requests the gateway connection information asynchronously. Declaration public Task<UserGatewayInformation> GetGatewayInformationAsync(bool forceUser = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Boolean forceUser a value indicating whether the user gateway endpoint should be forced even if the token type is Bot . CancellationToken cancellationToken Returns Type Description Task < UserGatewayInformation > a task that represents the asynchronous operation. The task result is the gateway connection information. | Improve this Doc View Source GetGlobalApplicationCommandsAsync(Snowflake, CancellationToken) Declaration public Task<IReadOnlyList<ApplicationCommand>> GetGlobalApplicationCommandsAsync(Snowflake applicationId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake applicationId CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < ApplicationCommand >> | Improve this Doc View Source GetGuildAsync(Snowflake, CacheBehavior, CancellationToken) Gets a guild asynchronously. Declaration public ValueTask<IGuild> GetGuildAsync(Snowflake guildId, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the guild snowflake identifier. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IGuild > a task that represents the asynchronous operation. The task result is the guild. | Improve this Doc View Source GetGuildChannelsAsync(Snowflake, CancellationToken) Gets a list of channels in the guild specified by guildId asynchronously. Declaration public Task<IReadOnlyList<IGuildChannel>> GetGuildChannelsAsync(Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild. CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < IGuildChannel >> a task that represents the asynchronous operation. The task result is a list of the guild channels. | Improve this Doc View Source GetGuildCommandsAsync(Snowflake, Snowflake, CancellationToken) Declaration public Task<IReadOnlyList<ApplicationCommand>> GetGuildCommandsAsync(Snowflake applicationId, Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake applicationId Snowflake guildId CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < ApplicationCommand >> | Improve this Doc View Source GetGuildIntegrationsAsync(Snowflake, CancellationToken) Gets the integrations for the guild specified by guildId asynchronously. Declaration public Task<IReadOnlyList<GuildIntegration>> GetGuildIntegrationsAsync(Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the guild snowflake identifier to retrieve the integrations for. CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < GuildIntegration >> a task that represents the asynchronous operation. The task result is a list of the guild integrations. | Improve this Doc View Source GetGuildInvitesAsync(Snowflake, CancellationToken) Gets the invites for the guild specified by guildId asynchronously. Declaration public Task<IReadOnlyList<InviteInformation>> GetGuildInvitesAsync(Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the guild snowflake identifier to retrieve the integrations for. CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < InviteInformation >> a task that represents the asynchronous operation. The task result is a list of the guild invites. | Improve this Doc View Source GetGuildRolesAsync(Snowflake, CancellationToken) Declaration public Task<IReadOnlyList<IRole>> GetGuildRolesAsync(Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < IRole >> | Improve this Doc View Source GetGuildVoiceRegionsAsync(Snowflake, CancellationToken) Gets the voice regions for the guild specified by guildId asynchronously. Declaration public Task<IReadOnlyList<VoiceRegion>> GetGuildVoiceRegionsAsync(Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the guild snowflake identifier to retrieve the voice regions for. CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < VoiceRegion >> a task that represents the asynchronous operation. The task result is a list of the guild voice regions. | Improve this Doc View Source GetGuildWebhooksAsync(Snowflake, CancellationToken) Declaration public Task<IReadOnlyList<Webhook>> GetGuildWebhooksAsync(Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < Webhook >> | Improve this Doc View Source GetGuildWidgetAsync(Snowflake, CancellationToken) Gets the guild widget for the guild specified by guildId asynchronously. Declaration public Task<GuildWidget> GetGuildWidgetAsync(Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the guild snowflake identifier. CancellationToken cancellationToken Returns Type Description Task < GuildWidget > a task that represents the asynchronous operation. The task result is the guild widget. | Improve this Doc View Source GetInviteAsync(String, InviteProperties, CancellationToken) Gets an invite asynchronously. Declaration public Task<Invite> GetInviteAsync(string code, InviteProperties properties = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String code the invite code. InviteProperties properties the properties used to retrieve the invite. CancellationToken cancellationToken Returns Type Description Task < Invite > a task that represents the asynchronous operation. The task result is the invite. Exceptions Type Condition ArgumentNullException thrown if the specified code is null . | Improve this Doc View Source GetInviteAsync(String, Boolean, CancellationToken) Gets an invite asynchronously. Declaration public Task<Invite> GetInviteAsync(string code, bool includeCounts = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String code the invite code. Boolean includeCounts a value indicating whether to include guild member count approximations for the invite. CancellationToken cancellationToken Returns Type Description Task < Invite > a task that represents the asynchronous operation. The task result is the invite. Exceptions Type Condition ArgumentNullException thrown if the specified code is null . | Improve this Doc View Source GetMemberAsync(Snowflake, Snowflake, CacheBehavior, CancellationToken) Gets a guild member asynchronously. Declaration public ValueTask<Member> GetMemberAsync(Snowflake guildId, Snowflake userId, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the guild snowflake identifier. Snowflake userId the user snowflake identifier. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < Member > a task that represents the asynchronous operation. The task result is the guild member. | Improve this Doc View Source GetMemberCache(Snowflake) Gets a cache accessor used to access all member entities with the scoped specified by guildId within the global cache. Declaration public CacheAccessor<Member, MemberModel> GetMemberCache(Snowflake guildId) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild to access members for. Returns Type Description CacheAccessor < Member , MemberModel > a cache accessor used to access all member entities within the global cache. Remarks The member cache is scoped by the specified guildId . | Improve this Doc View Source GetMessageAsync(Snowflake, Snowflake, CancellationToken) Gets a message asynchronously. Declaration public ValueTask<IMessage> GetMessageAsync(Snowflake channelId, Snowflake messageId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the channel snowflake identifier. Snowflake messageId the message snowflake identifier. CancellationToken cancellationToken Returns Type Description ValueTask < IMessage > a task that represents the asynchronous operation. The task result is the message. | Improve this Doc View Source GetMessageCache(Snowflake) Gets a cache accessor used to access all message entities with the scoped specified by channelId within the global cache. Declaration public CacheAccessor<IMessage, MessageModel> GetMessageCache(Snowflake channelId) Parameters Type Name Description Snowflake channelId the snowflake identifier of the channel to access messages for. Returns Type Description CacheAccessor < IMessage , MessageModel > a cache accessor used to access all message entities within the global cache. Remarks The message cache is scoped by the specified channelId . Webhook messages are excluded from the message cache when using REST-only mode. | Improve this Doc View Source GetMessagesAsync(Snowflake, MessageProperties, CancellationToken) Gets a list of messages sent in the channel specified by channelId asynchronously. Declaration public Task<IReadOnlyList<IMessage>> GetMessagesAsync(Snowflake channelId, MessageProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the channel snowflake identifier. MessageProperties properties the message download properties. CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < IMessage >> a task that represents the asynchronous operation. The task result is the message. | Improve this Doc View Source GetOptimalVoiceRegionAsync(CancellationToken) Gets the best voice region for the client asynchronously. Declaration public Task<VoiceRegion> GetOptimalVoiceRegionAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < VoiceRegion > a task that represents the asynchronous operation. The task result is the best voice region for the current client. | Improve this Doc View Source GetPinnedMessagesAsync(Snowflake, CancellationToken) Gets a list of pinned messages in the channel (specified by channelId ) asynchronously. Declaration public Task<IReadOnlyList<IMessage>> GetPinnedMessagesAsync(Snowflake channelId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the snowflake identifier of the channel to get pinned messages from. CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < IMessage >> a task that represents the asynchronous operation. The task result is a list of pinned messages in the channel (specified by channelId ). | Improve this Doc View Source GetPruneInformationAsync(Snowflake, PruneProperties, CancellationToken) Gets the prune information for the guild specified by guildId asynchronously. Declaration public Task<PruneInformation> GetPruneInformationAsync(Snowflake guildId, PruneProperties properties = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild to get the prune information for. PruneProperties properties the prune properties. CancellationToken cancellationToken Returns Type Description Task < PruneInformation > a task that represents the asynchronous operation. The task result is the prune information. | Improve this Doc View Source GetRoleCache(Snowflake) Gets a cache accessor used to access all role entities with the scoped specified by guildId within the global cache. Declaration public CacheAccessor<IRole, RoleModel> GetRoleCache(Snowflake guildId) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild to access roles for. Returns Type Description CacheAccessor < IRole , RoleModel > a cache accessor used to access all role entities within the global cache. Remarks The role cache is scoped by the specified guildId . | Improve this Doc View Source GetUserAsync(Snowflake, CacheBehavior, CancellationToken) Gets an user asynchronously. Declaration public ValueTask<User> GetUserAsync(Snowflake userId, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake userId the user snowflake identifier. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < User > a task that represents the asynchronous operation. The task result is the user. | Improve this Doc View Source GetUserConnectionsAsync(CancellationToken) Gets a list of the connections of the current user asynchronously. Declaration public Task<IReadOnlyList<UserConnection>> GetUserConnectionsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < UserConnection >> a task that represents the asynchronous operation. The task result is a list of the connections of the current user. | Improve this Doc View Source GetUserGuildsAsync(UserGuildsDownloadProperties, CancellationToken) Gets a list of the current user guilds of the current user asynchronously. Declaration public Task<IReadOnlyList<UserGuildInformation>> GetUserGuildsAsync(UserGuildsDownloadProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description UserGuildsDownloadProperties properties the properties used to download the guild. CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < UserGuildInformation >> a task that represents the asynchronous operation. The task result is a list of the guilds the current user is in. | Improve this Doc View Source GetVanityInviteAsync(Snowflake, CancellationToken) Gets the vanity invite information for the guild (specified by guildId ) asynchronously. Declaration public Task<VanityInvite> GetVanityInviteAsync(Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild to get the vanity invite information for. CancellationToken cancellationToken Returns Type Description Task < VanityInvite > a task that represents the asynchronous operation. The task result is a list of the connections of the current user. | Improve this Doc View Source GetVoiceRegionsAsync(CancellationToken) Gets all available voice regions asynchronously. Declaration public Task<IReadOnlyList<VoiceRegion>> GetVoiceRegionsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < VoiceRegion >> a task that represents the asynchronous operation. The task result is a list of all available voice regions. | Improve this Doc View Source GetWebhookAsync(Snowflake, String, CancellationToken) Declaration public Task<Webhook> GetWebhookAsync(Snowflake webhookId, string token, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake webhookId String token CancellationToken cancellationToken Returns Type Description Task < Webhook > | Improve this Doc View Source GetWebhookAsync(Snowflake, CancellationToken) Gets a webhook asynchronously. Declaration public Task<Webhook> GetWebhookAsync(Snowflake webhookId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake webhookId the webhook snowflake identifier. CancellationToken cancellationToken Returns Type Description Task < Webhook > a task that represents the asynchronous operation. The task result is the webhook. | Improve this Doc View Source KickMemberAsync(Snowflake, Snowflake, CancellationToken) Kicks the user specified by userId from the guild specified by guildId asynchronously. Declaration public Task KickMemberAsync(Snowflake guildId, Snowflake userId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the target guild. Snowflake userId the snowflake identifier of the target user to ban. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source LeaveGuildAsync(Snowflake, CancellationToken) Leaves the guild specified by guildId asynchronously. Declaration public Task LeaveGuildAsync(Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild to leave. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source ModifyChannelAsync(Snowflake, GuildChannelModifyProperties, CancellationToken) Modifies a guild channel with the specified properties asynchronously. Declaration public Task<IGuildChannel> ModifyChannelAsync(Snowflake channelId, GuildChannelModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the snowflake identifier of the voice channel to modify. GuildChannelModifyProperties properties the modify properties to use. CancellationToken cancellationToken Returns Type Description Task < IGuildChannel > a task that represents the asynchronous operation. The task result is the updated guild channel. Exceptions Type Condition ArgumentNullException thrown if the specified properties parameter is null . | Improve this Doc View Source ModifyCurrentUserAsync(CurrentUserModifyProperties, CancellationToken) Modifies the current user with the specified properties asynchronously. Declaration public Task<CurrentUser> ModifyCurrentUserAsync(CurrentUserModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CurrentUserModifyProperties properties the modify properties to use. CancellationToken cancellationToken Returns Type Description Task < CurrentUser > a task that represents the asynchronous operation. The task result is the current user updated. | Improve this Doc View Source ModifyEmojiAsync(Snowflake, Snowflake, EmojiModifyProperties, CancellationToken) Modifies the emoji specified by guildId and emojiId with the specified properties asynchronously. Declaration public Task<GuildEmote> ModifyEmojiAsync(Snowflake guildId, Snowflake emojiId, EmojiModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the target guild. Snowflake emojiId the snowflake identifier of the target emoji. EmojiModifyProperties properties the modify properties to use. CancellationToken cancellationToken Returns Type Description Task < GuildEmote > a task that represents the asynchronous operation. The task result is the current user updated. Exceptions Type Condition ArgumentNullException thrown if the specified properties parameter is null . | Improve this Doc View Source ModifyFollowupMessageAsync(Snowflake, String, WebhookMessageModifyProperties, Snowflake, CancellationToken) Declaration public Task<IMessage> ModifyFollowupMessageAsync(Snowflake applicationId, string interactionToken, WebhookMessageModifyProperties properties, Snowflake messageId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake applicationId String interactionToken WebhookMessageModifyProperties properties Snowflake messageId CancellationToken cancellationToken Returns Type Description Task < IMessage > | Improve this Doc View Source ModifyGlobalCommandAsync(Snowflake, Snowflake, CommandModifyProperties, CancellationToken) Declaration public Task<ApplicationCommand> ModifyGlobalCommandAsync(Snowflake applicationId, Snowflake commandId, CommandModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake applicationId Snowflake commandId CommandModifyProperties properties CancellationToken cancellationToken Returns Type Description Task < ApplicationCommand > | Improve this Doc View Source ModifyGuildAsync(Snowflake, GuildModifyProperties, CancellationToken) Modifies a guild with the specified properties asynchronously. Declaration public Task<IGuild> ModifyGuildAsync(Snowflake guildId, GuildModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild to modify. GuildModifyProperties properties the modify properties to use. CancellationToken cancellationToken Returns Type Description Task < IGuild > a task that represents the asynchronous operation. The task result is the updated guild. Exceptions Type Condition ArgumentNullException thrown if the specified properties parameter is null . | Improve this Doc View Source ModifyGuildCommandAsync(Snowflake, Snowflake, Snowflake, CommandModifyProperties, CancellationToken) Declaration public Task<ApplicationCommand> ModifyGuildCommandAsync(Snowflake applicationId, Snowflake guildId, Snowflake commandId, CommandModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake applicationId Snowflake guildId Snowflake commandId CommandModifyProperties properties CancellationToken cancellationToken Returns Type Description Task < ApplicationCommand > | Improve this Doc View Source ModifyGuildIntegrationAsync(Snowflake, Snowflake, GuildIntegrationModifyProperties, CancellationToken) Modifies a guild with the specified properties asynchronously. Declaration public Task ModifyGuildIntegrationAsync(Snowflake guildId, Snowflake integrationId, GuildIntegrationModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild to modify. Snowflake integrationId the snowflake identifier of the affected integration. GuildIntegrationModifyProperties properties the modify properties to use. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. The task result is the updated guild. Exceptions Type Condition ArgumentNullException thrown if the specified properties parameter is null . | Improve this Doc View Source ModifyGuildWidgetAsync(Snowflake, GuildWidgetModifyProperties, CancellationToken) Modifies a guild with the specified properties asynchronously. Declaration public Task<GuildWidget> ModifyGuildWidgetAsync(Snowflake guildId, GuildWidgetModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild to modify. GuildWidgetModifyProperties properties the modify properties to use. CancellationToken cancellationToken Returns Type Description Task < GuildWidget > a task that represents the asynchronous operation. The task result is the updated guild. Exceptions Type Condition ArgumentNullException thrown if the specified properties parameter is null . | Improve this Doc View Source ModifyMemberAsync(Snowflake, Snowflake, MemberModifyProperties, CancellationToken) Modifies a guild member with the specified properties asynchronously. Declaration public Task ModifyMemberAsync(Snowflake guildId, Snowflake memberId, MemberModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild the member is in. Snowflake memberId the member identifier of the member to modify. MemberModifyProperties properties the modify properties to use. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified properties parameter is null . | Improve this Doc View Source ModifyMessageAsync(Snowflake, Snowflake, MessageModifyProperties, CancellationToken) Modifies a message with the specified properties asynchronously. Declaration public Task<IMessage> ModifyMessageAsync(Snowflake channelId, Snowflake messageId, MessageModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the snowflake identifier of the target channel. Snowflake messageId the snowflake identifier of the target message. MessageModifyProperties properties the modify properties to use. CancellationToken cancellationToken Returns Type Description Task < IMessage > a task that represents the asynchronous operation. The task result is the updated message. Exceptions Type Condition ArgumentNullException thrown if the specified properties parameter is null . | Improve this Doc View Source ModifyNicknameAsync(Snowflake, String, CancellationToken) Modifies the current bot/user's nickname asynchronously. Declaration public Task ModifyNicknameAsync(Snowflake guildId, string nickname, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the target guild. String nickname the new nickname. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified nickname is null . | Improve this Doc View Source ModifyOriginalInteractionResponseAsync(Snowflake, String, WebhookMessageModifyProperties, CancellationToken) Declaration public Task<IMessage> ModifyOriginalInteractionResponseAsync(Snowflake applicationId, string interactionToken, WebhookMessageModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake applicationId String interactionToken WebhookMessageModifyProperties properties CancellationToken cancellationToken Returns Type Description Task < IMessage > | Improve this Doc View Source ModifyPermissionsAsync(Snowflake, Snowflake, PermissionOverwriteTarget, PermissionSet, PermissionSet, CancellationToken) Edits the permissions for the specified channel specified by channelId and the permissions target specified by targetId and targetType asynchronously. Declaration public Task ModifyPermissionsAsync(Snowflake channelId, Snowflake targetId, PermissionOverwriteTarget targetType, PermissionSet allowedPermissions, PermissionSet deniedPermissions, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the snowflake identifier of the target channel to edit permissions for. Snowflake targetId the snowflake identifier of the guild member or the role to edit permissions for. PermissionOverwriteTarget targetType the type of the entity (guild member or role) what the specified targetId references. PermissionSet allowedPermissions the set of allowed permissions for the overwrite. PermissionSet deniedPermissions the set of denied permissions for the overwrite. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source ModifyRoleAsync(Snowflake, Snowflake, RoleModifyProperties, CancellationToken) Modifies a role with the specified properties asynchronously. Declaration public Task<IRole> ModifyRoleAsync(Snowflake guildId, Snowflake roleId, RoleModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild the role is in. Snowflake roleId the snowflake identifier of the role. RoleModifyProperties properties the modify properties to use. CancellationToken cancellationToken Returns Type Description Task < IRole > a task that represents the asynchronous operation. The task result is the updated role. Exceptions Type Condition ArgumentNullException thrown if the specified properties parameter is null . | Improve this Doc View Source ModifyWebhookAsync(Snowflake, WebhookModifyProperties, CancellationToken) Declaration public Task<Webhook> ModifyWebhookAsync(Snowflake webhookId, WebhookModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake webhookId WebhookModifyProperties properties CancellationToken cancellationToken Returns Type Description Task < Webhook > | Improve this Doc View Source ModifyWebhookAsync(Snowflake, String, WebhookModifyProperties, CancellationToken) Declaration public Task<Webhook> ModifyWebhookAsync(Snowflake webhookId, string token, WebhookModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake webhookId String token WebhookModifyProperties properties CancellationToken cancellationToken Returns Type Description Task < Webhook > | Improve this Doc View Source ModifyWebhookMessageAsync(Snowflake, String, Snowflake, WebhookMessageModifyProperties, CancellationToken) Declaration public Task<IMessage> ModifyWebhookMessageAsync(Snowflake webhookId, string webhookToken, Snowflake messageId, WebhookMessageModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake webhookId String webhookToken Snowflake messageId WebhookMessageModifyProperties properties CancellationToken cancellationToken Returns Type Description Task < IMessage > | Improve this Doc View Source OpenChannelAsync(GroupChannelCreationProperties, CancellationToken) Opens a new direct group message channel asynchronously. Declaration public Task<IGroupChannel> OpenChannelAsync(GroupChannelCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GroupChannelCreationProperties properties the creation properties. CancellationToken cancellationToken Returns Type Description Task < IGroupChannel > a task that represents the asynchronous operation. The task result is the created entity. Exceptions Type Condition ArgumentNullException thrown if the specified properties parameter is null . | Improve this Doc View Source OpenChannelAsync(PrivateChannelCreationProperties, CancellationToken) Opens a new direct message channel asynchronously. Declaration public Task<IPrivateChannel> OpenChannelAsync(PrivateChannelCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description PrivateChannelCreationProperties properties the creation properties. CancellationToken cancellationToken Returns Type Description Task < IPrivateChannel > a task that represents the asynchronous operation. The task result is the created entity. Exceptions Type Condition ArgumentNullException thrown if the specified properties parameter is null . | Improve this Doc View Source OpenChannelAsync(Snowflake, CancellationToken) Opens a new direct message channel for the recipient (specified by recipientId ) asynchronously. Declaration public Task<IPrivateChannel> OpenChannelAsync(Snowflake recipientId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake recipientId the snowflake identifier of the recipient user. CancellationToken cancellationToken Returns Type Description Task < IPrivateChannel > a task that represents the asynchronous operation. The task result is the created entity. | Improve this Doc View Source PinMessageAsync(Snowflake, Snowflake, CancellationToken) Pins the message (specified by messageId and channelId ) asynchronously. Declaration public Task PinMessageAsync(Snowflake channelId, Snowflake messageId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the snowflake identifier of the target channel. Snowflake messageId the snowflake identifier of the target message. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source RemoveGroupChannelRecipientAsync(Snowflake, Snowflake, CancellationToken) Removes the user specified by userId from the group DM channel specified by channelId asynchronously. Declaration public Task RemoveGroupChannelRecipientAsync(Snowflake channelId, Snowflake userId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the snowflake identifier of the target group DM channel. Snowflake userId the snowflake identifier of the target user. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source RemoveRoleAsync(Snowflake, Snowflake, Snowflake, CancellationToken) Removes the role specified by roleId to the member specified by userId and guildId asynchronously. Declaration public Task RemoveRoleAsync(Snowflake guildId, Snowflake userId, Snowflake roleId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the target guild. Snowflake userId the snowflake identifier of the target user. Snowflake roleId the snowflake identifier of the role to add. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source SendFollowupMessageAsync(Snowflake, String, WebhookMessageCreationProperties, CancellationToken) Declaration public Task<IWebhookMessage> SendFollowupMessageAsync(Snowflake applicationId, string interactionToken, WebhookMessageCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake applicationId String interactionToken WebhookMessageCreationProperties properties CancellationToken cancellationToken Returns Type Description Task < IWebhookMessage > | Improve this Doc View Source SendMessageAsync(Nullable<Snowflake>, Snowflake, MessageCreationProperties, CancellationToken) Sends a message to the channel specified by channelId asynchronously. Declaration public Task<IMessage> SendMessageAsync(Snowflake? guildId, Snowflake channelId, MessageCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Nullable < Snowflake > guildId the snowflake identifier of the guild the message was sent in; or null if the message was not sent in a guild. Snowflake channelId the snowflake identifier of the message channel to send the message to. MessageCreationProperties properties the channel properties. CancellationToken cancellationToken Returns Type Description Task < IMessage > a task that represents the asynchronous operation. The task result is the message send. Exceptions Type Condition ArgumentNullException thrown if the specified properties parameter is null . | Improve this Doc View Source SyncGuildIntegrationAsync(Snowflake, Snowflake, CancellationToken) Synchronizes the guild integration specified by guildId and integrationId asynchronously. Declaration public Task SyncGuildIntegrationAsync(Snowflake guildId, Snowflake integrationId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the guild snowflake identifier of the integration to synchronize. Snowflake integrationId the snowflake identifier of the integration to synchronize. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. The task result is the updated guild. | Improve this Doc View Source TriggerTypingAsync(Snowflake, CancellationToken) Triggers the typing indicator in the channel specified by channelId asynchronously. Declaration public Task TriggerTypingAsync(Snowflake channelId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the snowflake identifier of the target channel. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source UnbanAsync(Snowflake, Snowflake, CancellationToken) Unbans the member (specified by guildId and userId ) asynchronously. Declaration public Task UnbanAsync(Snowflake guildId, Snowflake userId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild the user is in. Snowflake userId the snowflake identifier of the target user. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source UnpinMessageAsync(Snowflake, Snowflake, CancellationToken) Unpins the message (specified by messageId and channelId ) asynchronously. Declaration public Task UnpinMessageAsync(Snowflake channelId, Snowflake messageId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the snowflake identifier of the target channel. Snowflake messageId the snowflake identifier of the target message. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source UpdateChannelPositionsAsync(Snowflake, IReadOnlyList<ChannelPositionUpdate>, CancellationToken) Updates the positions of channels in the guild specified by guildId using the specified positionUpdates asynchronously. Declaration public Task UpdateChannelPositionsAsync(Snowflake guildId, IReadOnlyList<ChannelPositionUpdate> positionUpdates, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild to update the positions. IReadOnlyList < ChannelPositionUpdate > positionUpdates a list holding position updates. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified positionUpdates list is null . InvalidOperationException thrown if less than two position updates are specified. ArgumentNullException thrown if the specified positionUpdates is null . | Improve this Doc View Source UpdateRolePositionsAsync(Snowflake, IReadOnlyList<RolePositionUpdate>, CancellationToken) Updates the positions of roles in the guild specified by guildId using the specified positionUpdates asynchronously. Declaration public Task UpdateRolePositionsAsync(Snowflake guildId, IReadOnlyList<RolePositionUpdate> positionUpdates, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild to update the positions. IReadOnlyList < RolePositionUpdate > positionUpdates a list holding position updates. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified positionUpdates list is null . Implements System.IDisposable"
  },
  "api/Strade.DiscordRestClient.html": {
    "href": "api/Strade.DiscordRestClient.html",
    "title": "Class DiscordRestClient | Strade Developer Documentation",
    "keywords": "Class DiscordRestClient A client for the discord RESTful HTTP API ( https://discord.com/api/v8/ ). Inheritance Object BaseDiscordRestClient DiscordRestClient Implements IDiscordRestClient IDisposable Inherited Members BaseDiscordRestClient.CreateGuildAsync(GuildCreationProperties, CancellationToken) BaseDiscordRestClient.Dispose() BaseDiscordRestClient.GetNewsChannelAsync(Snowflake, CacheBehavior, CancellationToken) BaseDiscordRestClient.GetApplicationIdAsync(CancellationToken) BaseDiscordRestClient.GetCategoryAsync(Snowflake, CacheBehavior, CancellationToken) BaseDiscordRestClient.GetChannelAsync(Snowflake, CacheBehavior, CancellationToken) BaseDiscordRestClient.GetChannelAsync<TChannel>(Snowflake, CacheBehavior, CancellationToken) BaseDiscordRestClient.GetCurrentApplicationAsync(CancellationToken) BaseDiscordRestClient.GetCurrentUserAsync(CancellationToken) BaseDiscordRestClient.GetGroupChannelAsync(Snowflake, CacheBehavior, CancellationToken) BaseDiscordRestClient.GetGuildAsync(Snowflake, CacheBehavior, CancellationToken) BaseDiscordRestClient.GetInviteAsync(String, CancellationToken) BaseDiscordRestClient.GetMessageAsync(Snowflake, Snowflake, CancellationToken) BaseDiscordRestClient.GetOptimalVoiceRegionAsync(CancellationToken) BaseDiscordRestClient.GetPrivateChannelAsync(Snowflake, CacheBehavior, CancellationToken) BaseDiscordRestClient.GetStoreChannelAsync(Snowflake, CacheBehavior, CancellationToken) BaseDiscordRestClient.GetTextChannelAsync(Snowflake, CacheBehavior, CancellationToken) BaseDiscordRestClient.GetUserAsync(Snowflake, CacheBehavior, CancellationToken) BaseDiscordRestClient.GetUserConnectionsAsync(CancellationToken) BaseDiscordRestClient.GetUserGuildsAsync(Int32) BaseDiscordRestClient.GetVoiceChannelAsync(Snowflake, CacheBehavior, CancellationToken) BaseDiscordRestClient.GetVoiceRegionsAsync(CancellationToken) BaseDiscordRestClient.GetWebhookAsync(Snowflake, CancellationToken) BaseDiscordRestClient.OpenChannelAsync(PrivateChannelCreationProperties, CancellationToken) BaseDiscordRestClient.OpenChannelAsync(GroupChannelCreationProperties, CancellationToken) BaseDiscordRestClient.OpenChannelAsync(Snowflake, CancellationToken) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade Assembly : Strade.Rest.dll Syntax public class DiscordRestClient : BaseDiscordRestClient, IDiscordRestClient, IDisposable Constructors | Improve this Doc View Source DiscordRestClient(AuthenticationCredentials, ILogger) Initializes a new instance of the DiscordRestClient class. Declaration public DiscordRestClient(AuthenticationCredentials credentials, ILogger logger = null) Parameters Type Name Description AuthenticationCredentials credentials the authentication credentials. ILogger logger the logger; or null to disable logging. | Improve this Doc View Source DiscordRestClient(DiscordRestApiClient, Boolean) Initializes a new instance of the DiscordRestClient class. Declaration public DiscordRestClient(DiscordRestApiClient apiClient, bool disposeClient = true) Parameters Type Name Description DiscordRestApiClient apiClient the underlying API client to use for requests. Boolean disposeClient a value indicating whether to dispose the specified apiClient when disposing the DiscordRestClient instance. | Improve this Doc View Source DiscordRestClient(RestClientConfiguration, ILogger) Initializes a new instance of the DiscordRestClient class. Declaration public DiscordRestClient(RestClientConfiguration configuration, ILogger logger = null) Parameters Type Name Description RestClientConfiguration configuration the configuration. ILogger logger the logger; or null to disable logging. Properties | Improve this Doc View Source ApiClient Declaration public override DiscordRestApiClient ApiClient { get; } Property Value Type Description DiscordRestApiClient Overrides BaseDiscordRestClient.ApiClient Methods | Improve this Doc View Source CreateClient(RestClientConfiguration, ILogger) Creates a client for the specified configuration . Declaration protected virtual DiscordRestApiClient CreateClient(RestClientConfiguration configuration, ILogger logger = null) Parameters Type Name Description RestClientConfiguration configuration the client configuration. ILogger logger the logger; or null if logging is disabled. Returns Type Description DiscordRestApiClient the created discord REST API client. | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides BaseDiscordRestClient.Dispose(Boolean) Implements IDiscordRestClient System.IDisposable"
  },
  "api/Strade.Entities.Activity.html": {
    "href": "api/Strade.Entities.Activity.html",
    "title": "Class Activity | Strade Developer Documentation",
    "keywords": "Class Activity Represents an activity object. Inheritance Object Activity Implements ICloneable < Activity > ICloneable IIdentifiable < String > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class Activity : ICloneable<Activity>, ICloneable, IIdentifiable<string> Remarks More details can be found on https://discord.com/developers/docs/topics/gateway#activity-object-activity-structure [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source Activity(ActivityModel) Declaration public Activity(ActivityModel model) Parameters Type Name Description ActivityModel model | Improve this Doc View Source Activity(String, String, ActivityType, Uri, ActivityAssets, String, Boolean, IEmote, Nullable<Snowflake>, ActivityFlags, ActivityParty, ActivitySecrets, String, String, Nullable<ActivityPlatform>, String, IReadOnlyList<ActivityButton>, ActivityTimestamps) Declaration public Activity(string id, string name, ActivityType type = ActivityType.Playing, Uri streamUri = null, ActivityAssets assets = null, string details = null, bool isGameInstance = false, IEmote emote = null, Snowflake? applicationId = default(Snowflake? ), ActivityFlags flags = ActivityFlags.None, ActivityParty party = null, ActivitySecrets secrets = null, string state = null, string synchronizationId = null, ActivityPlatform? platform = default(ActivityPlatform? ), string sessionId = null, IReadOnlyList<ActivityButton> buttons = null, ActivityTimestamps timestamps = null) Parameters Type Name Description String id String name ActivityType type Uri streamUri ActivityAssets assets String details Boolean isGameInstance IEmote emote Nullable < Snowflake > applicationId ActivityFlags flags ActivityParty party ActivitySecrets secrets String state String synchronizationId Nullable < ActivityPlatform > platform String sessionId IReadOnlyList < ActivityButton > buttons ActivityTimestamps timestamps Properties | Improve this Doc View Source ApplicationId Gets the snowflake identifier of the associated application. Declaration public Snowflake? ApplicationId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the associated application. | Improve this Doc View Source Assets Gets information about game assets. Declaration public ActivityAssets Assets { get; } Property Value Type Description ActivityAssets information about game assets. | Improve this Doc View Source Buttons Gets a read-only list containing activity buttons that represent custom buttons that are shown in the rich presence (maximum two). Declaration public IReadOnlyList<ActivityButton> Buttons { get; } Property Value Type Description IReadOnlyList < ActivityButton > a read-only list containing activity buttons that represent custom buttons that are shown in the rich presence (maximum two). | Improve this Doc View Source Details Gets details about what the player is doing. Declaration public string Details { get; } Property Value Type Description String details about what the player is doing. | Improve this Doc View Source Emote Gets the emote that is used for the activity. Declaration public IEmote Emote { get; } Property Value Type Description IEmote the emote that is used for the activity. | Improve this Doc View Source Flags Gets the activity flags. Declaration public ActivityFlags Flags { get; } Property Value Type Description ActivityFlags the activity flags. | Improve this Doc View Source Id Gets the activity identifier. Declaration public string Id { get; } Property Value Type Description String the activity identifier. | Improve this Doc View Source IsGameInstance Gets a value indicating whether the game is an instantiated game session. Declaration public bool IsGameInstance { get; } Property Value Type Description Boolean a value indicating whether the game is an instantiated game session. | Improve this Doc View Source Name Gets the name of the user's activity. Declaration public string Name { get; } Property Value Type Description String the name of the user's activity. | Improve this Doc View Source Party Gets information about the party. Declaration public ActivityParty Party { get; } Property Value Type Description ActivityParty information about the party. | Improve this Doc View Source Platform Gets the platform the game represented by the activity is being played on. Declaration public ActivityPlatform? Platform { get; } Property Value Type Description Nullable < ActivityPlatform > the platform the game represented by the activity is being played on. | Improve this Doc View Source Secrets Gets information about game secrets. Declaration public ActivitySecrets Secrets { get; } Property Value Type Description ActivitySecrets information about game secrets. | Improve this Doc View Source SessionId Gets an identifier that represents the game or the Spotify session. Declaration public string SessionId { get; } Property Value Type Description String an identifier that represents the game or the Spotify session. | Improve this Doc View Source State Gets the current game status description. Declaration public string State { get; } Property Value Type Description String the current game status description. | Improve this Doc View Source StreamUri Gets the stream URI (only available if Type is Streaming ). Declaration public Uri StreamUri { get; } Property Value Type Description Uri the stream URI (only available if Type is Streaming ). | Improve this Doc View Source SynchronizationId Gets the synchronization identifier for a song on Spotify linked with the activity. Declaration public string SynchronizationId { get; } Property Value Type Description String the synchronization identifier for a song on Spotify linked with the activity. | Improve this Doc View Source Timestamps Gets the time information / timestamps for the activity that indicates the start and end time of the activity. Declaration public ActivityTimestamps Timestamps { get; } Property Value Type Description ActivityTimestamps the time information / timestamps for the activity that indicates the start and end time of the activity. | Improve this Doc View Source Type Gets the type of the user's activity. Declaration public ActivityType Type { get; } Property Value Type Description ActivityType the type of the user's activity. Methods | Improve this Doc View Source Clone() Declaration public Activity Clone() Returns Type Description Activity Explicit Interface Implementations | Improve this Doc View Source ICloneable.Clone() Declaration object ICloneable.Clone() Returns Type Description Object Implements ICloneable<TSelf> System.ICloneable IIdentifiable<TIdentifier>"
  },
  "api/Strade.Entities.ActivityAssets.html": {
    "href": "api/Strade.Entities.ActivityAssets.html",
    "title": "Class ActivityAssets | Strade Developer Documentation",
    "keywords": "Class ActivityAssets Represents an activity assets object. Inheritance Object ActivityAssets Implements ICloneable < ActivityAssets > ICloneable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class ActivityAssets : ICloneable<ActivityAssets>, ICloneable Constructors | Improve this Doc View Source ActivityAssets(ActivityAssetsModel) Declaration public ActivityAssets(ActivityAssetsModel model) Parameters Type Name Description ActivityAssetsModel model | Improve this Doc View Source ActivityAssets(String, String, String, String) Declaration public ActivityAssets(string largeImageId = null, string largeText = null, string smallImageId = null, string smallText = null) Parameters Type Name Description String largeImageId String largeText String smallImageId String smallText Properties | Improve this Doc View Source LargeImageId Gets the identifier of the asset for the large image of the activity. Declaration public string LargeImageId { get; } Property Value Type Description String the identifier of the asset for the large image of the activity. | Improve this Doc View Source LargeText Gets the text displayed when hovering over the large image of the activity. Declaration public string LargeText { get; } Property Value Type Description String the text displayed when hovering over the large image of the activity. | Improve this Doc View Source SmallImageId Gets the identifier of the asset for the small image of the activity. Declaration public string SmallImageId { get; } Property Value Type Description String the identifier of the asset for the small image of the activity. | Improve this Doc View Source SmallText Gets the text displayed when hovering over the large image of the activity. Declaration public string SmallText { get; } Property Value Type Description String the text displayed when hovering over the large image of the activity. Methods | Improve this Doc View Source Clone() Declaration public ActivityAssets Clone() Returns Type Description ActivityAssets Explicit Interface Implementations | Improve this Doc View Source ICloneable.Clone() Declaration object ICloneable.Clone() Returns Type Description Object Implements ICloneable<TSelf> System.ICloneable"
  },
  "api/Strade.Entities.ActivityAssetsBuilder.html": {
    "href": "api/Strade.Entities.ActivityAssetsBuilder.html",
    "title": "Class ActivityAssetsBuilder | Strade Developer Documentation",
    "keywords": "Class ActivityAssetsBuilder A builder for the ActivityAssets class. Inheritance Object ActivityAssetsBuilder Implements IBuilder < ActivityAssets > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class ActivityAssetsBuilder : IBuilder<ActivityAssets> Properties | Improve this Doc View Source LargeImage Gets or sets the identifier of the asset for the large image of the activity. Declaration public string LargeImage { get; set; } Property Value Type Description String the identifier of the asset for the large image of the activity. | Improve this Doc View Source LargeText Gets or sets the text displayed when hovering over the large image of the activity. Declaration public string LargeText { get; set; } Property Value Type Description String the text displayed when hovering over the large image of the activity. | Improve this Doc View Source SmallImage Gets or sets the identifier of the asset for the small image of the activity. Declaration public string SmallImage { get; set; } Property Value Type Description String the identifier of the asset for the small image of the activity. | Improve this Doc View Source SmallText Gets or sets the text displayed when hovering over the large image of the activity. Declaration public string SmallText { get; set; } Property Value Type Description String the text displayed when hovering over the large image of the activity. Methods | Improve this Doc View Source Build() Declaration public ActivityAssets Build() Returns Type Description ActivityAssets | Improve this Doc View Source Reset() Declaration public void Reset() | Improve this Doc View Source WithLargeImage(String) Sets the identifier of the asset for the large image of the activity to the specified id . Declaration public ActivityAssetsBuilder WithLargeImage(string id) Parameters Type Name Description String id the image id. Returns Type Description ActivityAssetsBuilder the ActivityAssetsBuilder instance. | Improve this Doc View Source WithLargeText(String) Sets the text displayed when hovering over the large image of the activity. Declaration public ActivityAssetsBuilder WithLargeText(string text) Parameters Type Name Description String text the image text shown when hovering over the large image of the activity. Returns Type Description ActivityAssetsBuilder the ActivityAssetsBuilder instance. | Improve this Doc View Source WithSmallImage(String) Sets the identifier of the asset for the small image of the activity to the specified id . Declaration public ActivityAssetsBuilder WithSmallImage(string id) Parameters Type Name Description String id the image id. Returns Type Description ActivityAssetsBuilder the ActivityAssetsBuilder instance. | Improve this Doc View Source WithSmallText(String) Sets the text displayed when hovering over the small image of the activity. Declaration public ActivityAssetsBuilder WithSmallText(string text) Parameters Type Name Description String text the image text shown when hovering over the small image of the activity. Returns Type Description ActivityAssetsBuilder the ActivityAssetsBuilder instance. Operators | Improve this Doc View Source Implicit(ActivityAssetsBuilder to ActivityAssets) Builds the ActivityAssets instance. Declaration public static implicit operator ActivityAssets(ActivityAssetsBuilder builder) Parameters Type Name Description ActivityAssetsBuilder builder the builder. Returns Type Description ActivityAssets Implements IBuilder<TResult>"
  },
  "api/Strade.Entities.ActivityBuilder.html": {
    "href": "api/Strade.Entities.ActivityBuilder.html",
    "title": "Class ActivityBuilder | Strade Developer Documentation",
    "keywords": "Class ActivityBuilder A builder for activity objects. Inheritance Object ActivityBuilder < ActivityBuilder > ActivityBuilder Implements IBuilder < Activity > Inherited Members ActivityBuilder<ActivityBuilder>.Name ActivityBuilder<ActivityBuilder>.StreamUri ActivityBuilder<ActivityBuilder>.Type ActivityBuilder<ActivityBuilder>.Build() ActivityBuilder<ActivityBuilder>.Reset() ActivityBuilder<ActivityBuilder>.WithName(String) ActivityBuilder<ActivityBuilder>.WithStreamUri(Uri) ActivityBuilder<ActivityBuilder>.WithType(ActivityType) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class ActivityBuilder : ActivityBuilder<ActivityBuilder>, IBuilder<Activity> Constructors | Improve this Doc View Source ActivityBuilder() Initializes a new instance of the ActivityBuilder class. Declaration public ActivityBuilder() | Improve this Doc View Source ActivityBuilder(Activity) Initializes a new instance of the ActivityBuilder class. Declaration public ActivityBuilder(Activity prototype) Parameters Type Name Description Activity prototype the activity prototype to copy the data from. Exceptions Type Condition ArgumentNullException thrown if the specified prototype is null . Properties | Improve this Doc View Source Builder Declaration protected override ActivityBuilder Builder { get; } Property Value Type Description ActivityBuilder Overrides Strade.Entities.ActivityBuilder<Strade.Entities.ActivityBuilder>.Builder Implements IBuilder<TResult>"
  },
  "api/Strade.Entities.ActivityBuilder-1.html": {
    "href": "api/Strade.Entities.ActivityBuilder-1.html",
    "title": "Class ActivityBuilder<TBuilder> | Strade Developer Documentation",
    "keywords": "Class ActivityBuilder<TBuilder> A builder for activity objects. Inheritance Object ActivityBuilder<TBuilder> ActivityBuilder UserActivityBuilder Implements IBuilder < Activity > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public abstract class ActivityBuilder<TBuilder> : IBuilder<Activity> Type Parameters Name Description TBuilder the type of the builder. Constructors | Improve this Doc View Source ActivityBuilder() Initializes a new instance of the ActivityBuilder<TBuilder> class. Declaration public ActivityBuilder() | Improve this Doc View Source ActivityBuilder(Activity) Initializes a new instance of the ActivityBuilder<TBuilder> class. Declaration public ActivityBuilder(Activity prototype) Parameters Type Name Description Activity prototype the activity prototype to copy the data from. Exceptions Type Condition ArgumentNullException thrown if the specified prototype is null . Properties | Improve this Doc View Source Builder Gets the builder instance. Declaration protected abstract TBuilder Builder { get; } Property Value Type Description TBuilder the builder instance. | Improve this Doc View Source Name Gets or sets the activity name. Declaration public string Name { get; set; } Property Value Type Description String the activity name. Exceptions Type Condition ArgumentException thrown if the specified value is null , empty or only consists of whitespaces. | Improve this Doc View Source StreamUri Gets or sets the stream URI. Declaration public Uri StreamUri { get; set; } Property Value Type Description Uri the stream URI. Remarks If the specified value is not null , then the current Type is set to Streaming . | Improve this Doc View Source Type Gets or sets the activity type. Declaration public ActivityType Type { get; set; } Property Value Type Description ActivityType the activity type. Remarks If the specified value is not Streaming the current stream URI is dropped. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified value is not defined in the ActivityType enumeration. Methods | Improve this Doc View Source Build() Builds the activity. Declaration public virtual Activity Build() Returns Type Description Activity the activity. | Improve this Doc View Source Reset() Declaration public virtual void Reset() | Improve this Doc View Source WithName(String) Sets the activity name to the specified name . Declaration public TBuilder WithName(string name) Parameters Type Name Description String name the activity name. Returns Type Description TBuilder the builder instance. | Improve this Doc View Source WithStreamUri(Uri) Sets the stream URI to the specified uri . Declaration public TBuilder WithStreamUri(Uri uri) Parameters Type Name Description Uri uri the stream URI. Returns Type Description TBuilder the builder instance. | Improve this Doc View Source WithType(ActivityType) Sets the activity type to the specified type . Declaration public TBuilder WithType(ActivityType type) Parameters Type Name Description ActivityType type the activity type. Returns Type Description TBuilder the builder instance. Operators | Improve this Doc View Source Implicit(ActivityBuilder<TBuilder> to Activity) Declaration public static implicit operator Activity(ActivityBuilder<TBuilder> builder) Parameters Type Name Description ActivityBuilder <TBuilder> builder Returns Type Description Activity Implements IBuilder<TResult>"
  },
  "api/Strade.Entities.ActivityButton.html": {
    "href": "api/Strade.Entities.ActivityButton.html",
    "title": "Struct ActivityButton | Strade Developer Documentation",
    "keywords": "Struct ActivityButton Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public struct ActivityButton Constructors | Improve this Doc View Source ActivityButton(ActivityButtonModel) Declaration public ActivityButton(ActivityButtonModel model) Parameters Type Name Description ActivityButtonModel model | Improve this Doc View Source ActivityButton(String, Uri) Initializes a new instance of the ActivityButton struct. Declaration public ActivityButton(string label, Uri url) Parameters Type Name Description String label the label shown on the button (1-32 characters). Uri url a URI that is opened when clicked on the button. Exceptions Type Condition ArgumentNullException thrown if the specified label is null . ArgumentNullException thrown if the specified url is null . Properties | Improve this Doc View Source Label Gets the label shown on the button (1-32 characters). Declaration public string Label { get; } Property Value Type Description String the label shown on the button (1-32 characters). | Improve this Doc View Source Url Gets a URI that is opened when clicked on the button. Declaration public Uri Url { get; } Property Value Type Description Uri a URI that is opened when clicked on the button."
  },
  "api/Strade.Entities.ActivityFlags.html": {
    "href": "api/Strade.Entities.ActivityFlags.html",
    "title": "Enum ActivityFlags | Strade Developer Documentation",
    "keywords": "Enum ActivityFlags A set of activity flags ( Flags ). Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [Flags] [JsonConverter(typeof(NumericEnumConverter<ActivityFlags>))] public enum ActivityFlags : byte Fields Name Description Instance Denotes that the activity is an instantiated game. Join Denotes that the activity can be joined. JoinRequest Denotes that users can make join requests to the activity. None Denotes that the activity has no flags. Play Denotes that the activity can be played (e.g. a song). Spectate Denotes that the activity can be spectated. Sync Denotes that a user can synchronize with the activity (e.g. Playing a song on Spotify and synchronize the Time). Extension Methods EnumExtensions.GetName<ActivityFlags>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.ActivityParty.html": {
    "href": "api/Strade.Entities.ActivityParty.html",
    "title": "Class ActivityParty | Strade Developer Documentation",
    "keywords": "Class ActivityParty Represents an activity party object. Inheritance Object ActivityParty Implements ICloneable < ActivityParty > ICloneable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class ActivityParty : ICloneable<ActivityParty>, ICloneable Constructors | Improve this Doc View Source ActivityParty(ActivityPartyModel) Declaration public ActivityParty(ActivityPartyModel model) Parameters Type Name Description ActivityPartyModel model | Improve this Doc View Source ActivityParty(String, Nullable<PartySize>) Declaration public ActivityParty(string id, PartySize? size) Parameters Type Name Description String id Nullable < PartySize > size Properties | Improve this Doc View Source Id Gets the party identifier. Declaration public string Id { get; } Property Value Type Description String the party identifier. | Improve this Doc View Source Size Gets the size of the party. Declaration public PartySize? Size { get; } Property Value Type Description Nullable < PartySize > the size of the party. Methods | Improve this Doc View Source Clone() Declaration public ActivityParty Clone() Returns Type Description ActivityParty Explicit Interface Implementations | Improve this Doc View Source ICloneable.Clone() Declaration object ICloneable.Clone() Returns Type Description Object Implements ICloneable<TSelf> System.ICloneable"
  },
  "api/Strade.Entities.ActivityPartyBuilder.html": {
    "href": "api/Strade.Entities.ActivityPartyBuilder.html",
    "title": "Class ActivityPartyBuilder | Strade Developer Documentation",
    "keywords": "Class ActivityPartyBuilder A builder for the ActivityParty class. Inheritance Object ActivityPartyBuilder Implements IBuilder < ActivityParty > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class ActivityPartyBuilder : IBuilder<ActivityParty> Properties | Improve this Doc View Source Id Gets or sets the party identifier. Declaration public string Id { get; set; } Property Value Type Description String the party identifier. | Improve this Doc View Source Size Gets or sets the size of the party. Declaration public PartySize? Size { get; set; } Property Value Type Description Nullable < PartySize > the size of the party; if present. Methods | Improve this Doc View Source Build() Declaration public ActivityParty Build() Returns Type Description ActivityParty | Improve this Doc View Source Reset() Declaration public void Reset() | Improve this Doc View Source WithId(String) Sets the party identifier to the specified partyId . Declaration public ActivityPartyBuilder WithId(string partyId) Parameters Type Name Description String partyId the party identifier. Returns Type Description ActivityPartyBuilder the ActivityPartyBuilder instance. | Improve this Doc View Source WithSize(Int32, Int32) Sets the size of the party to the specified size ( currentSize , maximumSize ). Declaration public ActivityPartyBuilder WithSize(int currentSize, int maximumSize) Parameters Type Name Description Int32 currentSize the current size of the party. Int32 maximumSize the maximum size of the party. Returns Type Description ActivityPartyBuilder the ActivityPartyBuilder instance. | Improve this Doc View Source WithSize(Nullable<PartySize>) Sets the size of the party to the specified size . Declaration public ActivityPartyBuilder WithSize(PartySize? size) Parameters Type Name Description Nullable < PartySize > size the size of the party. Returns Type Description ActivityPartyBuilder the ActivityPartyBuilder instance. Implements IBuilder<TResult>"
  },
  "api/Strade.Entities.ActivityPlatform.html": {
    "href": "api/Strade.Entities.ActivityPlatform.html",
    "title": "Enum ActivityPlatform | Strade Developer Documentation",
    "keywords": "Enum ActivityPlatform Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(StringEnumConverter<ActivityPlatform>))] public enum ActivityPlatform : byte Fields Name Description Desktop Samsung Xbox Extension Methods EnumExtensions.GetName<ActivityPlatform>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.ActivitySecrets.html": {
    "href": "api/Strade.Entities.ActivitySecrets.html",
    "title": "Class ActivitySecrets | Strade Developer Documentation",
    "keywords": "Class ActivitySecrets Represents an activity secret object. Inheritance Object ActivitySecrets Implements ICloneable < ActivitySecrets > ICloneable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class ActivitySecrets : ICloneable<ActivitySecrets>, ICloneable Remarks More details can be found on https://discord.com/developers/docs/topics/gateway#activity-object-activity-secrets [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source ActivitySecrets(ActivitySecretsModel) Declaration public ActivitySecrets(ActivitySecretsModel model) Parameters Type Name Description ActivitySecretsModel model | Improve this Doc View Source ActivitySecrets(String, String, String) Declaration public ActivitySecrets(string joinSecret = null, string matchSecret = null, string spectateSecret = null) Parameters Type Name Description String joinSecret String matchSecret String spectateSecret Properties | Improve this Doc View Source JoinSecret Gets the join secret, if present. Declaration public string JoinSecret { get; } Property Value Type Description String the join secret, if present. | Improve this Doc View Source MatchSecret Gets the match secret, if present. Declaration public string MatchSecret { get; } Property Value Type Description String the match secret, if present. | Improve this Doc View Source SpectateSecret Gets the spectate secret, if present. Declaration public string SpectateSecret { get; } Property Value Type Description String the spectate secret, if present. Methods | Improve this Doc View Source Clone() Declaration public ActivitySecrets Clone() Returns Type Description ActivitySecrets Explicit Interface Implementations | Improve this Doc View Source ICloneable.Clone() Declaration object ICloneable.Clone() Returns Type Description Object Implements ICloneable<TSelf> System.ICloneable"
  },
  "api/Strade.Entities.ActivitySecretsBuilder.html": {
    "href": "api/Strade.Entities.ActivitySecretsBuilder.html",
    "title": "Class ActivitySecretsBuilder | Strade Developer Documentation",
    "keywords": "Class ActivitySecretsBuilder A builder for activity secrets objects. Inheritance Object ActivitySecretsBuilder Implements IBuilder < ActivitySecrets > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class ActivitySecretsBuilder : IBuilder<ActivitySecrets> Properties | Improve this Doc View Source JoinSecret Gets or sets the join secret. Declaration public string JoinSecret { get; set; } Property Value Type Description String a String representing the join secret. | Improve this Doc View Source MatchSecret Gets or sets the match secret. Declaration public string MatchSecret { get; set; } Property Value Type Description String a String representing the match secret. | Improve this Doc View Source SpectateSecret Gets or sets the spectate secret. Declaration public string SpectateSecret { get; set; } Property Value Type Description String a String representing the spectate secret. Methods | Improve this Doc View Source Build() Declaration public ActivitySecrets Build() Returns Type Description ActivitySecrets | Improve this Doc View Source Reset() Declaration public void Reset() | Improve this Doc View Source WithJoinSecret(String) Sets the join secret to the specified joinSecret . Declaration public ActivitySecretsBuilder WithJoinSecret(string joinSecret) Parameters Type Name Description String joinSecret the match join secret. Returns Type Description ActivitySecretsBuilder the ActivitySecretsBuilder instance. | Improve this Doc View Source WithMatchSecret(String) Sets the match secret to the specified matchSecret . Declaration public ActivitySecretsBuilder WithMatchSecret(string matchSecret) Parameters Type Name Description String matchSecret the match secret. Returns Type Description ActivitySecretsBuilder the ActivitySecretsBuilder instance. | Improve this Doc View Source WithSpectateSecret(String) Sets the spectate secret to the specified spectateSecret . Declaration public ActivitySecretsBuilder WithSpectateSecret(string spectateSecret) Parameters Type Name Description String spectateSecret the match spectate secret. Returns Type Description ActivitySecretsBuilder the ActivitySecretsBuilder instance. Implements IBuilder<TResult>"
  },
  "api/Strade.Entities.ActivityTimestamps.html": {
    "href": "api/Strade.Entities.ActivityTimestamps.html",
    "title": "Class ActivityTimestamps | Strade Developer Documentation",
    "keywords": "Class ActivityTimestamps Represents an activity timestamps object. Inheritance Object ActivityTimestamps Implements ICloneable < ActivityTimestamps > ICloneable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class ActivityTimestamps : ICloneable<ActivityTimestamps>, ICloneable Remarks More details can be found on https://discord.com/developers/docs/topics/gateway#activity-object-activity-timestamps [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source ActivityTimestamps(ActivityTimestampsModel) Declaration public ActivityTimestamps(ActivityTimestampsModel model) Parameters Type Name Description ActivityTimestampsModel model | Improve this Doc View Source ActivityTimestamps(Nullable<DateTimeOffset>, Nullable<DateTimeOffset>) Declaration public ActivityTimestamps(DateTimeOffset? startTime, DateTimeOffset? endTime) Parameters Type Name Description Nullable < DateTimeOffset > startTime Nullable < DateTimeOffset > endTime Properties | Improve this Doc View Source Duration Gets the duration of the activity ( null if one of StartTime or EndTime is null ). Declaration public TimeSpan? Duration { get; } Property Value Type Description Nullable < TimeSpan > | Improve this Doc View Source EndTime Gets the time when the activity ends. Declaration public DateTimeOffset? EndTime { get; } Property Value Type Description Nullable < DateTimeOffset > the time when the activity ends. | Improve this Doc View Source StartTime Gets the time when the activity starts. Declaration public DateTimeOffset? StartTime { get; } Property Value Type Description Nullable < DateTimeOffset > the time when the activity starts. Methods | Improve this Doc View Source Clone() Declaration public ActivityTimestamps Clone() Returns Type Description ActivityTimestamps Explicit Interface Implementations | Improve this Doc View Source ICloneable.Clone() Declaration object ICloneable.Clone() Returns Type Description Object Implements ICloneable<TSelf> System.ICloneable"
  },
  "api/Strade.Entities.ActivityTimestampsBuilder.html": {
    "href": "api/Strade.Entities.ActivityTimestampsBuilder.html",
    "title": "Class ActivityTimestampsBuilder | Strade Developer Documentation",
    "keywords": "Class ActivityTimestampsBuilder A builder for activity time objects. Inheritance Object ActivityTimestampsBuilder Implements IBuilder < ActivityTimestamps > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class ActivityTimestampsBuilder : IBuilder<ActivityTimestamps> Properties | Improve this Doc View Source EndTime Gets the time when the activity ends. Declaration public DateTimeOffset? EndTime { get; } Property Value Type Description Nullable < DateTimeOffset > the time when the activity ends; if present. | Improve this Doc View Source StartTime Gets the time when the activity starts. Declaration public DateTimeOffset? StartTime { get; } Property Value Type Description Nullable < DateTimeOffset > the time when the activity starts; if present. Methods | Improve this Doc View Source Build() Declaration public ActivityTimestamps Build() Returns Type Description ActivityTimestamps | Improve this Doc View Source Reset() Declaration public void Reset() | Improve this Doc View Source WithDuration(DateTimeOffset, TimeSpan) Sets the start ( StartTime ) and end ( EndTime ) time based on the specified startTime and the specified duration . Declaration public ActivityTimestampsBuilder WithDuration(DateTimeOffset startTime, TimeSpan duration) Parameters Type Name Description DateTimeOffset startTime the start time. TimeSpan duration the match duration. Returns Type Description ActivityTimestampsBuilder the ActivityTimestampsBuilder instance. | Improve this Doc View Source WithEndTime(Nullable<DateTimeOffset>) Sets the match end time ( EndTime ) to the specified endTime . Declaration public ActivityTimestampsBuilder WithEndTime(DateTimeOffset? endTime) Parameters Type Name Description Nullable < DateTimeOffset > endTime the match end time. Returns Type Description ActivityTimestampsBuilder the ActivityTimestampsBuilder instance. | Improve this Doc View Source WithStartTime(Nullable<DateTimeOffset>) Sets the match start time ( StartTime ) to the specified startTime . Declaration public ActivityTimestampsBuilder WithStartTime(DateTimeOffset? startTime) Parameters Type Name Description Nullable < DateTimeOffset > startTime the match start time. Returns Type Description ActivityTimestampsBuilder the ActivityTimestampsBuilder instance. Implements IBuilder<TResult>"
  },
  "api/Strade.Entities.ActivityType.html": {
    "href": "api/Strade.Entities.ActivityType.html",
    "title": "Enum ActivityType | Strade Developer Documentation",
    "keywords": "Enum ActivityType A set of activity types. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(NumericEnumConverter<ActivityType>))] public enum ActivityType : byte Fields Name Description Competing Denotes that the user is competing in a game. Custom Denotes that the user has a custom activity. Listening Denotes that the user is listening to a song. Playing Denotes that the user is playing a game. Streaming Denotes that the user is currently live. Extension Methods EnumExtensions.GetName<ActivityType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.ApplicationCommand.html": {
    "href": "api/Strade.Entities.ApplicationCommand.html",
    "title": "Class ApplicationCommand | Strade Developer Documentation",
    "keywords": "Class ApplicationCommand Inheritance Object ApplicationCommand Implements ISnowflakeEntity IIdentifiable < Snowflake > IDiscordEntity Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class ApplicationCommand : ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity Constructors | Improve this Doc View Source ApplicationCommand(IDiscordRestClient, ApplicationCommandModel) Declaration public ApplicationCommand(IDiscordRestClient client, ApplicationCommandModel model) Parameters Type Name Description IDiscordRestClient client ApplicationCommandModel model Properties | Improve this Doc View Source ApplicationId Gets the snowflake identifier of the application the command belongs to. Declaration public Snowflake ApplicationId { get; } Property Value Type Description Snowflake the snowflake identifier of the application the command belongs to. | Improve this Doc View Source Client Declaration public IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient | Improve this Doc View Source Description Gets the description of the command. Declaration public string Description { get; } Property Value Type Description String the description of the command. | Improve this Doc View Source Id Declaration public Snowflake Id { get; } Property Value Type Description Snowflake | Improve this Doc View Source Name Gets the name of the command. Declaration public string Name { get; } Property Value Type Description String the name of the command. | Improve this Doc View Source Options Gets a read-only list containing the options of the command. Declaration public IReadOnlyList<CommandOption> Options { get; } Property Value Type Description IReadOnlyList < CommandOption > a read-only list containing the options of the command. Implements ISnowflakeEntity IIdentifiable<TIdentifier> IDiscordEntity"
  },
  "api/Strade.Entities.ApplicationCommandOptionType.html": {
    "href": "api/Strade.Entities.ApplicationCommandOptionType.html",
    "title": "Enum ApplicationCommandOptionType | Strade Developer Documentation",
    "keywords": "Enum ApplicationCommandOptionType Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public enum ApplicationCommandOptionType : byte Fields Name Description Boolean Channel Integer Role String SubCommand SubCommandGroup User Extension Methods EnumExtensions.GetName<ApplicationCommandOptionType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.ApplicationInformation.html": {
    "href": "api/Strade.Entities.ApplicationInformation.html",
    "title": "Class ApplicationInformation | Strade Developer Documentation",
    "keywords": "Class ApplicationInformation Holds information about an Oauth2 application. Inheritance Object ApplicationInformation Implements ISnowflakeEntity IIdentifiable < Snowflake > IDiscordEntity IHasIcon IHasDescription IOwnable < User > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class ApplicationInformation : ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IHasIcon, IHasDescription, IOwnable<User> Remarks More details can be found on https://discord.com/developers/docs/topics/oauth2#get-current-application-information-response-structure [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source ApplicationInformation(IDiscordRestClient, ApplicationInformationModel) Initializes a new instance of the ApplicationInformation class. Declaration public ApplicationInformation(IDiscordRestClient client, ApplicationInformationModel model) Parameters Type Name Description IDiscordRestClient client the client that owns the entity. ApplicationInformationModel model the model that contains the entity data. Exceptions Type Condition ArgumentNullException thrown if the specified client is null . ArgumentNullException thrown if the specified model is null . Properties | Improve this Doc View Source Client Declaration public IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient | Improve this Doc View Source CoverImageHash Gets the hash of the image on store embeds, or null if the application is not a game sold on discord. Declaration public string CoverImageHash { get; } Property Value Type Description String the hash of the image on store embeds; else null . | Improve this Doc View Source Description Gets the description of the entity. Declaration public string Description { get; } Property Value Type Description String the description of the entity. | Improve this Doc View Source HasIcon Declaration public bool HasIcon { get; } Property Value Type Description Boolean | Improve this Doc View Source IconHash Gets the hash of the icon (if null , the application has no icon). Declaration public string IconHash { get; } Property Value Type Description String the hash of the icon (if null , the application has no icon). | Improve this Doc View Source IconUrl Declaration public Uri IconUrl { get; } Property Value Type Description Uri | Improve this Doc View Source Id Gets the snowflake identifier of the application the information is for. Declaration public Snowflake Id { get; } Property Value Type Description Snowflake the snowflake identifier of the application the information is for. | Improve this Doc View Source IsPublic Gets a value indicating whether the application is public. Declaration public bool IsPublic { get; } Property Value Type Description Boolean a value indicating whether the application is public. Remarks If an application is private ( false ) then the application can be only added by its owner. | Improve this Doc View Source IsRequiringCodeGrant Gets a value indicating whether the application's bot will only join upon completion of the full oauth2 code grant flow. Declaration public bool IsRequiringCodeGrant { get; } Property Value Type Description Boolean a value indicating whether the application's bot will only join upon completion of the full oauth2 code grant flow. | Improve this Doc View Source LinkedGuildId Gets the snowflake identifier of the guild to which the game has been linked to. Declaration public Snowflake? LinkedGuildId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the guild to which the game has been linked to; or null if the game is not sold on discord. | Improve this Doc View Source Name Gets the associated name of the application. Declaration public string Name { get; } Property Value Type Description String the associated name of the application. | Improve this Doc View Source Owner Gets the application owner. Declaration public User Owner { get; } Property Value Type Description User the application owner. See Also Possessor | Improve this Doc View Source Possessor Gets the possessor / owner of the application. Declaration public User Possessor { get; } Property Value Type Description User the possessor / owner of the application. Remarks This user may contain information about a non-existent user for example if the application is owned by a team then the property will hold an user model filled with place holders referencing the team as the application owner. If you want to get the real user owner of the application then use Owner instead. | Improve this Doc View Source PrimarySkuId Gets the game's primary SKU ID. Declaration public string PrimarySkuId { get; } Property Value Type Description String the game's primary SKU ID; or null if the game is not sold on discord. | Improve this Doc View Source RpcOrigins Gets a list of RPC origin URLs (if null , then RPC is disabled). Declaration public IReadOnlyList<string> RpcOrigins { get; } Property Value Type Description IReadOnlyList < String > a list of RPC origin URLs (if null , then RPC is disabled). | Improve this Doc View Source Slug Gets the URL slug that links to the store page. Declaration public string Slug { get; } Property Value Type Description String the URL slug that links to the store page; or null if the game is not sold on discord. | Improve this Doc View Source Summary Gets the summary being shown in the summary field of the store page (if the application is a game that is sold on Discord). Declaration public string Summary { get; } Property Value Type Description String the summary being shown in the summary field of the store page (if the application is a game that is sold on Discord). | Improve this Doc View Source Team Gets the team the application belongs to; or null if the application does not belong to a team. Declaration public ITeam Team { get; } Property Value Type Description ITeam the team the application belongs to; or null if the application does not belong to a team. | Improve this Doc View Source VerifyKey Gets the base64 encoded key for the GameSDK's GetTicket method. Declaration public string VerifyKey { get; } Property Value Type Description String the base64 encoded key for the GameSDK's GetTicket method. Remarks https://discord.com/developers/docs/game-sdk/applications#getticket . Methods | Improve this Doc View Source BuildIconUrl(ImageFormat, Nullable<Int32>) Declaration public Uri BuildIconUrl(ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description ImageFormat format Nullable < Int32 > size Returns Type Description Uri | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements ISnowflakeEntity IIdentifiable<TIdentifier> IDiscordEntity IHasIcon IHasDescription IOwnable<TOwner>"
  },
  "api/Strade.Entities.Attachment.html": {
    "href": "api/Strade.Entities.Attachment.html",
    "title": "Class Attachment | Strade Developer Documentation",
    "keywords": "Class Attachment Inheritance Object Attachment Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public static class Attachment Methods | Improve this Doc View Source Create(FileInfo) Declaration public static IAttachment Create(FileInfo fileInfo) Parameters Type Name Description FileInfo fileInfo Returns Type Description IAttachment | Improve this Doc View Source Create(Stream, ImageFormat, Boolean) Declaration public static IAttachment Create(Stream stream, ImageFormat format, bool leaveOpen = false) Parameters Type Name Description Stream stream ImageFormat format Boolean leaveOpen Returns Type Description IAttachment | Improve this Doc View Source Create(Stream, String, Boolean) Declaration public static IAttachment Create(Stream stream, string extension, bool leaveOpen = false) Parameters Type Name Description Stream stream String extension Boolean leaveOpen Returns Type Description IAttachment | Improve this Doc View Source Create(String) Declaration public static IAttachment Create(string path) Parameters Type Name Description String path Returns Type Description IAttachment | Improve this Doc View Source Create(String, String) Declaration public static IAttachment Create(string path, string filename) Parameters Type Name Description String path String filename Returns Type Description IAttachment"
  },
  "api/Strade.Entities.AttachmentImage.html": {
    "href": "api/Strade.Entities.AttachmentImage.html",
    "title": "Struct AttachmentImage | Strade Developer Documentation",
    "keywords": "Struct AttachmentImage Represents the bounds of an attachment image. Implements IEquatable < AttachmentImage > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public struct AttachmentImage : IEquatable<AttachmentImage> Constructors | Improve this Doc View Source AttachmentImage(Int32, Int32) Initializes a new instance of the AttachmentImage struct. Declaration public AttachmentImage(int width, int height) Parameters Type Name Description Int32 width the width bound of the image. Int32 height the height bound of the image. Properties | Improve this Doc View Source Height Gets the height of the image of the attachment. Declaration public int Height { get; } Property Value Type Description Int32 the height of the image of the attachment. | Improve this Doc View Source Width Gets the width of the image of the attachment. Declaration public int Width { get; } Property Value Type Description Int32 the width of the image of the attachment. Methods | Improve this Doc View Source Equals(AttachmentImage) Declaration public bool Equals(AttachmentImage other) Parameters Type Name Description AttachmentImage other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(AttachmentImage, AttachmentImage) Checks the equality of the first attachment image ( left ) and the second attachment image ( right ). Declaration public static bool operator ==(AttachmentImage left, AttachmentImage right) Parameters Type Name Description AttachmentImage left the first attachment image. AttachmentImage right the second attachment image. Returns Type Description Boolean a value indicating whether the first attachment image ( left ) and the second attachment image ( right ) are equal to each other. | Improve this Doc View Source Inequality(AttachmentImage, AttachmentImage) Checks the in-equality of the first attachment image ( left ) and the second attachment image ( right ). Declaration public static bool operator !=(AttachmentImage left, AttachmentImage right) Parameters Type Name Description AttachmentImage left the first attachment image. AttachmentImage right the second attachment image. Returns Type Description Boolean a value indicating whether the first attachment image ( left ) and the second attachment image ( right ) are not equal to each other. Implements System.IEquatable<T>"
  },
  "api/Strade.Entities.AuditLog.html": {
    "href": "api/Strade.Entities.AuditLog.html",
    "title": "Class AuditLog | Strade Developer Documentation",
    "keywords": "Class AuditLog Represents an audit log of a guild. An audit log logs administrative operations for example when a channel is created, a user was banned, etc. Inheritance Object AuditLog Implements IAuditLog IDiscordEntity Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class AuditLog : IAuditLog, IDiscordEntity Remarks See https://discord.com/developers/docs/resources/audit-log#audit-log-object-audit-log-structure for more details. Constructors | Improve this Doc View Source AuditLog(IDiscordRestClient, AuditLogModel, Snowflake) Initializes a new instance of the AuditLog class. Declaration public AuditLog(IDiscordRestClient client, AuditLogModel model, Snowflake guildId) Parameters Type Name Description IDiscordRestClient client the client that owns the entity. AuditLogModel model the model that contains the entity data. Snowflake guildId the snowflake identifier of the guild. Exceptions Type Condition ArgumentNullException thrown if the specified client is null . ArgumentNullException thrown if the specified model is null . Properties | Improve this Doc View Source Client Declaration public IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient | Improve this Doc View Source Entries Declaration public IEnumerable<AuditLogEntry> Entries { get; } Property Value Type Description IEnumerable < AuditLogEntry > | Improve this Doc View Source GuildId Declaration public Snowflake GuildId { get; } Property Value Type Description Snowflake | Improve this Doc View Source Integrations Declaration public IEnumerable<GuildIntegrationInformation> Integrations { get; } Property Value Type Description IEnumerable < GuildIntegrationInformation > | Improve this Doc View Source Reason Gets or sets the reason for the audit log. Declaration public static string Reason { get; set; } Property Value Type Description String the reason for the audit log. Remarks The property sets the value of an AsyncLocal<T> that stores the audit log reason. The reason will flow to children and will be reset if the context changes. | Improve this Doc View Source Users Declaration public IEnumerable<User> Users { get; } Property Value Type Description IEnumerable < User > | Improve this Doc View Source Webhooks Declaration public IEnumerable<Webhook> Webhooks { get; } Property Value Type Description IEnumerable < Webhook > Methods | Improve this Doc View Source GetEntry(Snowflake) Declaration public AuditLogEntry GetEntry(Snowflake entryId) Parameters Type Name Description Snowflake entryId Returns Type Description AuditLogEntry | Improve this Doc View Source GetIntegration(Snowflake) Declaration public GuildIntegrationInformation GetIntegration(Snowflake integrationId) Parameters Type Name Description Snowflake integrationId Returns Type Description GuildIntegrationInformation | Improve this Doc View Source GetUser(Snowflake) Declaration public User GetUser(Snowflake userId) Parameters Type Name Description Snowflake userId Returns Type Description User | Improve this Doc View Source GetWebhook(Snowflake) Declaration public Webhook GetWebhook(Snowflake webhookId) Parameters Type Name Description Snowflake webhookId Returns Type Description Webhook Implements IAuditLog IDiscordEntity"
  },
  "api/Strade.Entities.AuditLogActionType.html": {
    "href": "api/Strade.Entities.AuditLogActionType.html",
    "title": "Enum AuditLogActionType | Strade Developer Documentation",
    "keywords": "Enum AuditLogActionType Audit action type definitions. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(NumericEnumConverter<AuditLogActionType>))] public enum AuditLogActionType Remarks See https://discord.com/developers/docs/resources/audit-log#audit-log-entry-object-audit-log-events for more details. Fields Name Description BotAdd Denotes that a bot was added to the guild. ChannelCreate A channel was created. ChannelDelete A channel was deleted. ChannelOverwriteCreate A channel overwrite was created. ChannelOverwriteDelete A channel overwrite was deleted. ChannelOverwriteUpdate A channel overwrite was updated. ChannelUpdate A channel was updated. EmojiCreate An emoji was created. EmojiDelete An emoji was deleted. EmojiUpdate An emoji was updated. GuildUpdate The guild was updated. IntegrationCreate Denotes that an integration was created. IntegrationDelete Denotes that an integration was deleted. IntegrationUpdate Denotes that an integration was updated. InviteCreate An invitation was created. InviteDelete An invitation was deleted. InviteUpdate An invitation was updated. MemberBanAdd A member was banned. MemberBanRemove A member was unbanned. MemberDisconnect Denotes that a member was disconnected. MemberKick A member was kicked. MemberMove Denotes that a member was moved. MemberPrune A member was pruned. MemberRoleUpdate The roles of a member was updated. MemberUpdate A member was updated. (Nickname change, etc..) MessageBulkDelete Denotes that multiple messages were deleted at once (bulk-delete). MessageDelete A message was deleted. MessagePin Denotes that a message was pinned. MessageUnpin Denotes that a message was unpinned. RoleCreate A role was created. RoleDelete A role was deleted. RoleUpdate A role was updated. WebhookCreate A webhook was created. WebhookDelete A webhook was deleted. WebhookUpdate A webhook was updated. Extension Methods EnumExtensions.GetName<AuditLogActionType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.AuditLogChange.html": {
    "href": "api/Strade.Entities.AuditLogChange.html",
    "title": "Struct AuditLogChange | Strade Developer Documentation",
    "keywords": "Struct AuditLogChange Represents an audit log change which records a property that was changed on an entity in a guild. Implements IEquatable < AuditLogChange > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(AuditLogChangeJsonConverter))] public struct AuditLogChange : IEquatable<AuditLogChange> Remarks See https://discord.com/developers/docs/resources/audit-log#audit-log-change-object-audit-log-change-structure for more details. Constructors | Improve this Doc View Source AuditLogChange(AuditLogChangeKey, Object, Object) Initializes a new instance of the AuditLogChange struct. Declaration public AuditLogChange(AuditLogChangeKey key, object oldValue, object value) Parameters Type Name Description AuditLogChangeKey key the key that was changed. Object oldValue the value before the change. Object value the value after the change. Properties | Improve this Doc View Source Key Gets the key that was changed. Declaration public AuditLogChangeKey Key { get; } Property Value Type Description AuditLogChangeKey the key that was changed. | Improve this Doc View Source OldValue Gets the value before the change. Declaration public object OldValue { get; } Property Value Type Description Object the value before the change. | Improve this Doc View Source Value Gets the value after the change. Declaration public object Value { get; } Property Value Type Description Object the value after the change. Methods | Improve this Doc View Source Equals(AuditLogChange) Declaration public bool Equals(AuditLogChange other) Parameters Type Name Description AuditLogChange other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Builds a String representation of the AuditLogChange instance. Declaration public override string ToString() Returns Type Description String a String representation of the AuditLogChange instance. Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(AuditLogChange, AuditLogChange) Declaration public static bool operator ==(AuditLogChange left, AuditLogChange right) Parameters Type Name Description AuditLogChange left AuditLogChange right Returns Type Description Boolean | Improve this Doc View Source Inequality(AuditLogChange, AuditLogChange) Declaration public static bool operator !=(AuditLogChange left, AuditLogChange right) Parameters Type Name Description AuditLogChange left AuditLogChange right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Entities.AuditLogChangeKey.html": {
    "href": "api/Strade.Entities.AuditLogChangeKey.html",
    "title": "Enum AuditLogChangeKey | Strade Developer Documentation",
    "keywords": "Enum AuditLogChangeKey Audit log change key definitions. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(StringEnumConverter<AuditLogChangeKey>))] public enum AuditLogChangeKey : ushort Remarks See https://discord.com/developers/docs/resources/audit-log#audit-log-change-object-audit-log-change-key for more details. Fields Name Description AfkChannel Denotes that the afk channel (id) of the guild was changed. AfkTimeout Denotes that the afk timeout of the guild was changed. ChannelApplicationId Denotes that the application id of the added or removed webhook bot changed. ChannelBitrate Denotes that the bitrate of a voice channel was changed. ChannelNsfw Denotes that the nsfw restriction of a text channel was changed. ChannelPermissionOverwrites Denotes that the permissions of a channel were changed. ChannelPosition Denotes that the position of a channel was changed. ChannelRateLimitPerUser Denotes that the message rate limit of a channel was changed. ChannelTopic Denotes that the topic of a text channel was changed. DefaultMessageNotificationLevel Denotes that the default message notification level of the guild was changed. EnableEmoticons Denotes that emotes were enabled. EntityId Denotes that the id of an entity was changed. EntityType Denotes that the type of an entity was changed. ExpireBehavior Denotes that the expire behavior of an integration was updated. ExpireGracePeriod Denotes that the expire grace behavior of an integration was updated. ExplicitContentFilterLevel Denotes that the explicit content filter level of the guild was changed. Icon Denotes that the icon (hash) of the guild was changed. InviteChannel Denotes that the channel for a invite was changed. InviteCode Denotes that the invite code for an invitation was changed. InviteMaxAge Denotes that the value how long an invitation code is valid was changed. InviteMaxUses Denotes that the max number of maximum uses for an invitation code was changed. Inviter Denotes that the creator (id) of an invitation code was changed. InviteTemporary Denotes that the value indicating whether an invitation code is temporary was changed. InviteUses Denotes that the number of uses for an invitation code was changed. MultiFactorAuthenticationLevel Denotes that the multi-factor authentication level of the guild was changed. Name Denotes that the name of the guild was changed. Owner Denotes that the owner (id) of the guild was changed. PermissionsAllowed A permission for a text or voice channel was allowed for a role / member. PermissionsDenied A permission for a text or voice channel was denied for a role / member. PruneDeleteDays Denotes that the days after which inactive and role-unassigned members are kicked was changed. Region Denotes that the voice region of the guild was changed. RoleAdd A role was added to the guild. RoleColor Denotes that the color of a role was changed. RoleHoist Denotes that the role separation was changed. RoleMentionable Mentioning was allowed / disallowed on the role. RolePermissions Denotes that the permissions of a role were changed. RoleRemove A role was removed from the guild. Splash Denotes that the splash (hash) of the guild was changed. Unknown Denotes that the change key is not supported. Please upgrade to a future version of the library. UserAvatar Denotes that the avatar (hash) of a user was changed. UserDeaf Denotes that a user was server deafened/deafened. UserMute Denotes that a user was server muted/unmuted. UserNickname Denotes that the nickname of a user was changed. VanityUrlCode Denotes that the vanity url code of the guild was changed. VerificationLevel Denotes that the verification level of the guild was changed. WidgetChannel Denotes that the server widget channel (id) was changed. WidgetEnabled Denotes that the server widget was enabled or disabled. Extension Methods EnumExtensions.GetName<AuditLogChangeKey>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.AuditLogEntry.html": {
    "href": "api/Strade.Entities.AuditLogEntry.html",
    "title": "Class AuditLogEntry | Strade Developer Documentation",
    "keywords": "Class AuditLogEntry Represents an entry in the audit log and records an administrative operation on the guild. Inheritance Object AuditLogEntry Implements IDiscordEntity IIdentifiable < Snowflake > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class AuditLogEntry : IDiscordEntity, IIdentifiable<Snowflake> Remarks See https://discord.com/developers/docs/resources/audit-log#audit-log-entry-object for more details. Constructors | Improve this Doc View Source AuditLogEntry(IAuditLog, AuditLogEntryModel) Initializes a new instance of the AuditLogEntry class. Declaration public AuditLogEntry(IAuditLog auditLog, AuditLogEntryModel model) Parameters Type Name Description IAuditLog auditLog the parent audit log. AuditLogEntryModel model the model that contains the entity data. Exceptions Type Condition ArgumentNullException thrown if the specified auditLog is null . ArgumentNullException thrown if the specified model is null . Properties | Improve this Doc View Source ActionType Gets the action type of the entry. Declaration public AuditLogActionType ActionType { get; } Property Value Type Description AuditLogActionType the action type of the entry. | Improve this Doc View Source AuditLog Gets the parent audit log ( AuditLog ) that owns the entry. Declaration public IAuditLog AuditLog { get; } Property Value Type Description IAuditLog the parent audit log ( AuditLog ) that owns the entry. | Improve this Doc View Source Changes Gets a read-only list of the changes that this entry represents. Declaration public IReadOnlyList<AuditLogChange> Changes { get; } Property Value Type Description IReadOnlyList < AuditLogChange > a read-only list of the changes that this entry represents. | Improve this Doc View Source Client Declaration public IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient | Improve this Doc View Source CreatedAt Gets the UTC time when the entry was created. Declaration public DateTimeOffset CreatedAt { get; } Property Value Type Description DateTimeOffset the UTC time when the entry was created. | Improve this Doc View Source Id Declaration public Snowflake Id { get; } Property Value Type Description Snowflake | Improve this Doc View Source Options Gets additional options included within the entry; or null if no additional options are included within the entry. Declaration public IAuditLogOptions Options { get; } Property Value Type Description IAuditLogOptions additional options included within the entry; or null if no additional options are included within the entry. Remarks The following action types include additional options: ChannelOverwriteCreate OverwriteAuditLogOptions ChannelOverwriteUpdate OverwriteAuditLogOptions ChannelOverwriteDelete OverwriteAuditLogOptions MemberPrune MemberPruneAuditLogOptions MemberMove MemberMoveAuditLogOptions MemberDisconnect MemberDisconnectAuditLogOptions MessageDelete MessageDeleteAuditLogOptions MessageBulkDelete MessageBulkDeleteAuditLogOptions MessagePin MessagePinAuditLogOptions MessageUnpin MessagePinAuditLogOptions | Improve this Doc View Source Reason Gets the reason why the operation was made; or null if the initiator did not include an action. Declaration public string Reason { get; } Property Value Type Description String the reason why the operation was made; or null if the initiator did not include an action. Remarks You can set the reason for client actions using the Reason property. | Improve this Doc View Source TargetId Gets the snowflake identifier of the entity that audit log entry refers to. Declaration public Snowflake? TargetId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the entity that audit log entry refers to. | Improve this Doc View Source User Gets the user that made the action. Declaration public User User { get; } Property Value Type Description User the user that made the action. Implements IDiscordEntity IIdentifiable<TIdentifier>"
  },
  "api/Strade.Entities.AuditLogProperties.html": {
    "href": "api/Strade.Entities.AuditLogProperties.html",
    "title": "Class AuditLogProperties | Strade Developer Documentation",
    "keywords": "Class AuditLogProperties The IRetrieveProperties for an AuditLog . Inheritance Object AuditLogProperties Implements IRetrieveProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class AuditLogProperties : IRetrieveProperties Properties | Improve this Doc View Source BeforeEntryId Gets or sets the \"Before-Entry\" filter. Declaration public Optional<Snowflake> BeforeEntryId { get; set; } Property Value Type Description Optional < Snowflake > the \"Before-Entry\" filter. | Improve this Doc View Source EventType Gets or sets the event type filter. Declaration public Optional<AuditLogActionType> EventType { get; set; } Property Value Type Description Optional < AuditLogActionType > the event type filter. | Improve this Doc View Source Limit Gets or sets the number of entries returned (default: 50 , minimum: 1 , maximum: 100 ). Declaration public int Limit { get; set; } Property Value Type Description Int32 the number of entries returned (default: 50 , minimum: 1 , maximum: 100 ). | Improve this Doc View Source UserId Gets or sets the user filter. Declaration public Optional<Snowflake> UserId { get; set; } Property Value Type Description Optional < Snowflake > the user filter. Methods | Improve this Doc View Source BuildQuery() Declaration public QueryParameterCollection BuildQuery() Returns Type Description QueryParameterCollection | Improve this Doc View Source Validate() Declaration public void Validate() Implements IRetrieveProperties"
  },
  "api/Strade.Entities.Ban.html": {
    "href": "api/Strade.Entities.Ban.html",
    "title": "Class Ban | Strade Developer Documentation",
    "keywords": "Class Ban Represents the structure of a ban. Inheritance Object Ban Implements IIdentifiable < Snowflake > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class Ban : IIdentifiable<Snowflake> Constructors | Improve this Doc View Source Ban(IDiscordRestClient, BanModel, Snowflake) Declaration public Ban(IDiscordRestClient client, BanModel model, Snowflake guildId) Parameters Type Name Description IDiscordRestClient client BanModel model Snowflake guildId Properties | Improve this Doc View Source GuildId Declaration public Snowflake GuildId { get; } Property Value Type Description Snowflake | Improve this Doc View Source Reason Gets the ban reason; or null if no reason is given for the ban. Declaration public string Reason { get; } Property Value Type Description String the ban reason; or null if no reason is given for the ban. | Improve this Doc View Source User Gets the user that was banned. Declaration public User User { get; } Property Value Type Description User the user that was banned. Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IIdentifiable<Snowflake>.Id Declaration Snowflake IIdentifiable<Snowflake>.Id { get; } Returns Type Description Snowflake Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Entities.BaseGuild.html": {
    "href": "api/Strade.Entities.BaseGuild.html",
    "title": "Class BaseGuild | Strade Developer Documentation",
    "keywords": "Class BaseGuild Inheritance Object BaseGuild Guild RestGuild Implements IGuild IHasIcon IModifiable < GuildModifyProperties > IDeletable IChannelContainer IChannelParent ISnowflakeEntity IIdentifiable < Snowflake > IDiscordEntity IUpdateable < GuildModel > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public abstract class BaseGuild : IGuild, IHasIcon, IModifiable<GuildModifyProperties>, IDeletable, IChannelContainer, IChannelParent, ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IUpdateable<GuildModel> Properties | Improve this Doc View Source AfkChannelId Declaration public Snowflake? AfkChannelId { get; } Property Value Type Description Nullable < Snowflake > | Improve this Doc View Source AfkTimeout Declaration public TimeSpan? AfkTimeout { get; } Property Value Type Description Nullable < TimeSpan > | Improve this Doc View Source ApplicationId Declaration public Snowflake? ApplicationId { get; } Property Value Type Description Nullable < Snowflake > | Improve this Doc View Source AreMembersDownloaded Declaration public abstract bool AreMembersDownloaded { get; } Property Value Type Description Boolean | Improve this Doc View Source BannerHash Declaration public string BannerHash { get; } Property Value Type Description String | Improve this Doc View Source BannerUrl Declaration public Uri BannerUrl { get; } Property Value Type Description Uri | Improve this Doc View Source BoostCount Declaration public int BoostCount { get; } Property Value Type Description Int32 | Improve this Doc View Source BoostTier Declaration public GuildBoostTier BoostTier { get; } Property Value Type Description GuildBoostTier | Improve this Doc View Source CanHaveAnimatedIcon Declaration public bool CanHaveAnimatedIcon { get; } Property Value Type Description Boolean | Improve this Doc View Source CanHaveBanner Declaration public bool CanHaveBanner { get; } Property Value Type Description Boolean | Improve this Doc View Source CanHaveVanityUrl Declaration public bool CanHaveVanityUrl { get; } Property Value Type Description Boolean | Improve this Doc View Source ChannelsMap Declaration protected Dictionary<Snowflake, IGuildChannel> ChannelsMap { get; set; } Property Value Type Description Dictionary < Snowflake , IGuildChannel > | Improve this Doc View Source Client Declaration public IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient | Improve this Doc View Source DefaultMessageNotificationLevel Declaration public MessageNotificationLevel DefaultMessageNotificationLevel { get; } Property Value Type Description MessageNotificationLevel | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description String | Improve this Doc View Source DiscoverySplashHash Declaration public string DiscoverySplashHash { get; } Property Value Type Description String | Improve this Doc View Source DiscoverySplashUrl Declaration public Uri DiscoverySplashUrl { get; } Property Value Type Description Uri | Improve this Doc View Source DownloadedMemberCount Declaration public int DownloadedMemberCount { get; } Property Value Type Description Int32 | Improve this Doc View Source Emotes Declaration public IReadOnlyList<GuildEmote> Emotes { get; protected set; } Property Value Type Description IReadOnlyList < GuildEmote > | Improve this Doc View Source EveryoneRole Declaration public IRole EveryoneRole { get; } Property Value Type Description IRole | Improve this Doc View Source ExplicitContentFilterLevel Declaration public ExplicitContentFilterLevel ExplicitContentFilterLevel { get; } Property Value Type Description ExplicitContentFilterLevel | Improve this Doc View Source Features Declaration public IReadOnlyList<string> Features { get; } Property Value Type Description IReadOnlyList < String > | Improve this Doc View Source HasAfkChannel Declaration public bool HasAfkChannel { get; } Property Value Type Description Boolean | Improve this Doc View Source HasBanner Declaration public bool HasBanner { get; } Property Value Type Description Boolean | Improve this Doc View Source HasDiscoverySplash Declaration public bool HasDiscoverySplash { get; } Property Value Type Description Boolean | Improve this Doc View Source HasIcon Declaration public bool HasIcon { get; } Property Value Type Description Boolean | Improve this Doc View Source HasPublicUpdatesChannel Declaration public bool HasPublicUpdatesChannel { get; } Property Value Type Description Boolean | Improve this Doc View Source HasRulesChannel Declaration public bool HasRulesChannel { get; } Property Value Type Description Boolean | Improve this Doc View Source HasSplash Declaration public bool HasSplash { get; } Property Value Type Description Boolean | Improve this Doc View Source HasSystemChannel Declaration public bool HasSystemChannel { get; } Property Value Type Description Boolean | Improve this Doc View Source HasVipRegions Declaration public bool HasVipRegions { get; } Property Value Type Description Boolean | Improve this Doc View Source HasWidgetChannel Declaration public bool HasWidgetChannel { get; } Property Value Type Description Boolean | Improve this Doc View Source IconHash Declaration public string IconHash { get; } Property Value Type Description String | Improve this Doc View Source IconUrl Declaration public Uri IconUrl { get; } Property Value Type Description Uri | Improve this Doc View Source Id Declaration public Snowflake Id { get; } Property Value Type Description Snowflake | Improve this Doc View Source IsBoostMessageEnabled Declaration public bool IsBoostMessageEnabled { get; } Property Value Type Description Boolean | Improve this Doc View Source IsCommerce Declaration public bool IsCommerce { get; } Property Value Type Description Boolean | Improve this Doc View Source IsCommunity Declaration public bool IsCommunity { get; } Property Value Type Description Boolean | Improve this Doc View Source IsDiscoverable Declaration public bool IsDiscoverable { get; } Property Value Type Description Boolean | Improve this Doc View Source IsLazy Declaration public bool IsLazy { get; } Property Value Type Description Boolean | Improve this Doc View Source IsOwner Declaration public virtual bool IsOwner { get; } Property Value Type Description Boolean | Improve this Doc View Source IsPartnered Declaration public bool IsPartnered { get; } Property Value Type Description Boolean | Improve this Doc View Source IsRelayEnabled Declaration public bool IsRelayEnabled { get; } Property Value Type Description Boolean | Improve this Doc View Source IsRelayForced Declaration public bool IsRelayForced { get; } Property Value Type Description Boolean | Improve this Doc View Source IsUnavailable Declaration public bool IsUnavailable { get; } Property Value Type Description Boolean | Improve this Doc View Source IsVerified Declaration public bool IsVerified { get; } Property Value Type Description Boolean | Improve this Doc View Source IsWelcomeMessageEnabled Declaration public bool IsWelcomeMessageEnabled { get; } Property Value Type Description Boolean | Improve this Doc View Source IsWelcomeScreenEnabled Declaration public bool IsWelcomeScreenEnabled { get; } Property Value Type Description Boolean | Improve this Doc View Source IsWidgetEnabled Declaration public bool IsWidgetEnabled { get; } Property Value Type Description Boolean | Improve this Doc View Source MaximumMembers Declaration public int? MaximumMembers { get; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source MaximumPresences Declaration public int MaximumPresences { get; } Property Value Type Description Int32 | Improve this Doc View Source MaximumVideoChannelUsers Declaration public int? MaximumVideoChannelUsers { get; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source MembersMap Declaration protected Dictionary<Snowflake, Member> MembersMap { get; set; } Property Value Type Description Dictionary < Snowflake , Member > | Improve this Doc View Source MultiFactorAuthenticationLevel Declaration public MultiFactorAuthenticationLevel MultiFactorAuthenticationLevel { get; } Property Value Type Description MultiFactorAuthenticationLevel | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source OwnerId Declaration public Snowflake OwnerId { get; } Property Value Type Description Snowflake | Improve this Doc View Source PreferredCulture Declaration public CultureInfo PreferredCulture { get; } Property Value Type Description CultureInfo | Improve this Doc View Source PublicUpdatesChannelId Declaration public Snowflake? PublicUpdatesChannelId { get; } Property Value Type Description Nullable < Snowflake > | Improve this Doc View Source Roles Declaration public IEnumerable<IRole> Roles { get; } Property Value Type Description IEnumerable < IRole > | Improve this Doc View Source RolesMap Declaration protected Dictionary<Snowflake, IRole> RolesMap { get; set; } Property Value Type Description Dictionary < Snowflake , IRole > | Improve this Doc View Source RulesChannelId Declaration public Snowflake? RulesChannelId { get; } Property Value Type Description Nullable < Snowflake > | Improve this Doc View Source SplashHash Declaration public string SplashHash { get; } Property Value Type Description String | Improve this Doc View Source SplashUrl Declaration public Uri SplashUrl { get; } Property Value Type Description Uri | Improve this Doc View Source SystemChannelFlags Declaration public SystemChannelFlags SystemChannelFlags { get; } Property Value Type Description SystemChannelFlags | Improve this Doc View Source SystemChannelId Declaration public Snowflake? SystemChannelId { get; } Property Value Type Description Nullable < Snowflake > | Improve this Doc View Source VanityCode Declaration public string VanityCode { get; } Property Value Type Description String | Improve this Doc View Source VanityUrl Declaration public Uri VanityUrl { get; } Property Value Type Description Uri | Improve this Doc View Source VerificationLevel Declaration public VerificationLevel VerificationLevel { get; } Property Value Type Description VerificationLevel | Improve this Doc View Source VoiceRegionId Declaration public string VoiceRegionId { get; } Property Value Type Description String | Improve this Doc View Source WidgetChannelId Declaration public Snowflake? WidgetChannelId { get; } Property Value Type Description Nullable < Snowflake > Methods | Improve this Doc View Source AddMemberAsync(Snowflake, MemberCreationProperties, CancellationToken) Declaration public Task AddMemberAsync(Snowflake userId, MemberCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake userId MemberCreationProperties properties CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source AddMemberAsync(Snowflake, Action<MemberCreationProperties>, CancellationToken) Declaration public Task AddMemberAsync(Snowflake userId, Action<MemberCreationProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake userId Action < MemberCreationProperties > action CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source AddMemberAsync(User, MemberCreationProperties, CancellationToken) Declaration public Task AddMemberAsync(User user, MemberCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description User user MemberCreationProperties properties CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source AddMemberAsync(User, Action<MemberCreationProperties>, CancellationToken) Declaration public Task AddMemberAsync(User user, Action<MemberCreationProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description User user Action < MemberCreationProperties > action CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source BeginPruneAsync(BeginPruneProperties, CancellationToken) Declaration public Task<PruneInformation?> BeginPruneAsync(BeginPruneProperties properties = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description BeginPruneProperties properties CancellationToken cancellationToken Returns Type Description Task < Nullable < PruneInformation >> | Improve this Doc View Source BeginPruneAsync(Action<BeginPruneProperties>, CancellationToken) Declaration public Task<PruneInformation?> BeginPruneAsync(Action<BeginPruneProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < BeginPruneProperties > action CancellationToken cancellationToken Returns Type Description Task < Nullable < PruneInformation >> | Improve this Doc View Source BuildBannerUrl(ImageFormat, Nullable<Int32>) Declaration public Uri BuildBannerUrl(ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description ImageFormat format Nullable < Int32 > size Returns Type Description Uri | Improve this Doc View Source BuildDiscoverySplashUrl(ImageFormat, Nullable<Int32>) Declaration public Uri BuildDiscoverySplashUrl(ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description ImageFormat format Nullable < Int32 > size Returns Type Description Uri | Improve this Doc View Source BuildIconUrl(ImageFormat, Nullable<Int32>) Declaration public Uri BuildIconUrl(ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description ImageFormat format Nullable < Int32 > size Returns Type Description Uri | Improve this Doc View Source BuildSplashUrl(ImageFormat, Nullable<Int32>) Declaration public Uri BuildSplashUrl(ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description ImageFormat format Nullable < Int32 > size Returns Type Description Uri | Improve this Doc View Source CreateCategoryAsync(CategoryCreationProperties, CancellationToken) Declaration public Task<ICategory> CreateCategoryAsync(CategoryCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CategoryCreationProperties properties CancellationToken cancellationToken Returns Type Description Task < ICategory > | Improve this Doc View Source CreateCategoryAsync(Action<CategoryCreationProperties>, CancellationToken) Declaration public Task<ICategory> CreateCategoryAsync(Action<CategoryCreationProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < CategoryCreationProperties > action CancellationToken cancellationToken Returns Type Description Task < ICategory > | Improve this Doc View Source CreateChannelAsync(GuildChannelCreationProperties, CancellationToken) Declaration public Task<IGuildChannel> CreateChannelAsync(GuildChannelCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GuildChannelCreationProperties properties CancellationToken cancellationToken Returns Type Description Task < IGuildChannel > | Improve this Doc View Source CreateChannelAsync(NestedChannelCreationProperties, CancellationToken) Declaration public Task<INestedChannel> CreateChannelAsync(NestedChannelCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description NestedChannelCreationProperties properties CancellationToken cancellationToken Returns Type Description Task < INestedChannel > | Improve this Doc View Source CreateEmojiAsync(EmojiCreationProperties, CancellationToken) Declaration public Task<GuildEmote> CreateEmojiAsync(EmojiCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description EmojiCreationProperties properties CancellationToken cancellationToken Returns Type Description Task < GuildEmote > | Improve this Doc View Source CreateEmojiAsync(Action<EmojiCreationProperties>, CancellationToken) Declaration public Task<GuildEmote> CreateEmojiAsync(Action<EmojiCreationProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < EmojiCreationProperties > action CancellationToken cancellationToken Returns Type Description Task < GuildEmote > | Improve this Doc View Source CreateIntegrationAsync(GuildIntegrationCreationProperties, CancellationToken) Declaration public Task<GuildIntegration> CreateIntegrationAsync(GuildIntegrationCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GuildIntegrationCreationProperties properties CancellationToken cancellationToken Returns Type Description Task < GuildIntegration > | Improve this Doc View Source CreateIntegrationAsync(Action<GuildIntegrationCreationProperties>, CancellationToken) Declaration public Task<GuildIntegration> CreateIntegrationAsync(Action<GuildIntegrationCreationProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < GuildIntegrationCreationProperties > action CancellationToken cancellationToken Returns Type Description Task < GuildIntegration > | Improve this Doc View Source CreateNewsChannelAsync(NewsChannelCreationProperties, CancellationToken) Declaration public Task<INewsChannel> CreateNewsChannelAsync(NewsChannelCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description NewsChannelCreationProperties properties CancellationToken cancellationToken Returns Type Description Task < INewsChannel > | Improve this Doc View Source CreateNewsChannelAsync(Action<NewsChannelCreationProperties>, CancellationToken) Declaration public Task<INewsChannel> CreateNewsChannelAsync(Action<NewsChannelCreationProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < NewsChannelCreationProperties > action CancellationToken cancellationToken Returns Type Description Task < INewsChannel > | Improve this Doc View Source CreateRoleAsync(RoleCreationProperties, CancellationToken) Declaration public Task<IRole> CreateRoleAsync(RoleCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description RoleCreationProperties properties CancellationToken cancellationToken Returns Type Description Task < IRole > | Improve this Doc View Source CreateRoleAsync(Action<RoleCreationProperties>, CancellationToken) Declaration public Task<IRole> CreateRoleAsync(Action<RoleCreationProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < RoleCreationProperties > action CancellationToken cancellationToken Returns Type Description Task < IRole > | Improve this Doc View Source CreateStoreChannelAsync(StoreChannelCreationProperties, CancellationToken) Declaration public Task<IStoreChannel> CreateStoreChannelAsync(StoreChannelCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description StoreChannelCreationProperties properties CancellationToken cancellationToken Returns Type Description Task < IStoreChannel > | Improve this Doc View Source CreateStoreChannelAsync(Action<StoreChannelCreationProperties>, CancellationToken) Declaration public Task<IStoreChannel> CreateStoreChannelAsync(Action<StoreChannelCreationProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < StoreChannelCreationProperties > action CancellationToken cancellationToken Returns Type Description Task < IStoreChannel > | Improve this Doc View Source CreateTextChannelAsync(TextChannelCreationProperties, CancellationToken) Declaration public Task<ITextChannel> CreateTextChannelAsync(TextChannelCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TextChannelCreationProperties properties CancellationToken cancellationToken Returns Type Description Task < ITextChannel > | Improve this Doc View Source CreateTextChannelAsync(Action<TextChannelCreationProperties>, CancellationToken) Declaration public Task<ITextChannel> CreateTextChannelAsync(Action<TextChannelCreationProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < TextChannelCreationProperties > action CancellationToken cancellationToken Returns Type Description Task < ITextChannel > | Improve this Doc View Source CreateVoiceChannelAsync(VoiceChannelCreationProperties, CancellationToken) Declaration public Task<IVoiceChannel> CreateVoiceChannelAsync(VoiceChannelCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description VoiceChannelCreationProperties properties CancellationToken cancellationToken Returns Type Description Task < IVoiceChannel > | Improve this Doc View Source CreateVoiceChannelAsync(Action<VoiceChannelCreationProperties>, CancellationToken) Declaration public Task<IVoiceChannel> CreateVoiceChannelAsync(Action<VoiceChannelCreationProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < VoiceChannelCreationProperties > action CancellationToken cancellationToken Returns Type Description Task < IVoiceChannel > | Improve this Doc View Source DeleteAsync(CancellationToken) Declaration public Task DeleteAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source DownloadMembersAsync(CancellationToken) Declaration public abstract ValueTask<IEnumerable<Member>> DownloadMembersAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask < IEnumerable < Member >> | Improve this Doc View Source EnsureAvailable() Ensures that the guild is available. Declaration protected void EnsureAvailable() | Improve this Doc View Source GetAfkChannelAsync(CacheBehavior, CancellationToken) Declaration public ValueTask<IVoiceChannel> GetAfkChannelAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IVoiceChannel > | Improve this Doc View Source GetAuditLogAsync(AuditLogProperties, CancellationToken) Declaration public Task<IAuditLog> GetAuditLogAsync(AuditLogProperties properties = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description AuditLogProperties properties CancellationToken cancellationToken Returns Type Description Task < IAuditLog > | Improve this Doc View Source GetAuditLogEntriesAsync(AuditLogProperties, CancellationToken) Declaration public IAsyncEnumerable<AuditLogEntry> GetAuditLogEntriesAsync(AuditLogProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description AuditLogProperties properties CancellationToken cancellationToken Returns Type Description IAsyncEnumerable < AuditLogEntry > | Improve this Doc View Source GetAuditLogEntriesChunkedAsync(AuditLogProperties, CancellationToken) Declaration public IAsyncEnumerable<IReadOnlyList<AuditLogEntry>> GetAuditLogEntriesChunkedAsync(AuditLogProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description AuditLogProperties properties CancellationToken cancellationToken Returns Type Description IAsyncEnumerable < IReadOnlyList < AuditLogEntry >> | Improve this Doc View Source GetBanAsync(Snowflake, CancellationToken) Declaration public Task<Ban> GetBanAsync(Snowflake userId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake userId CancellationToken cancellationToken Returns Type Description Task < Ban > | Improve this Doc View Source GetBanAsync(User, CancellationToken) Declaration public Task<Ban> GetBanAsync(User user, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description User user CancellationToken cancellationToken Returns Type Description Task < Ban > | Improve this Doc View Source GetBansAsync(CancellationToken) Declaration public Task<IReadOnlyList<Ban>> GetBansAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < Ban >> | Improve this Doc View Source GetCategoriesAsync(CacheBehavior, CancellationToken) Declaration public ValueTask<IEnumerable<ICategory>> GetCategoriesAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IEnumerable < ICategory >> | Improve this Doc View Source GetCategoryAsync(Snowflake, CacheBehavior, CancellationToken) Declaration public ValueTask<ICategory> GetCategoryAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < ICategory > | Improve this Doc View Source GetChannelAsync(Snowflake, CacheBehavior, CancellationToken) Declaration public ValueTask<IGuildChannel> GetChannelAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IGuildChannel > | Improve this Doc View Source GetChannelAsync<TChannel>(Snowflake, CacheBehavior, CancellationToken) Declaration public ValueTask<TChannel> GetChannelAsync<TChannel>(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) where TChannel : IGuildChannel Parameters Type Name Description Snowflake id CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask <TChannel> Type Parameters Name Description TChannel | Improve this Doc View Source GetChannelsAsync(CacheBehavior, CancellationToken) Declaration public ValueTask<IEnumerable<IGuildChannel>> GetChannelsAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IEnumerable < IGuildChannel >> | Improve this Doc View Source GetChannelsAsync<TChannel>(CacheBehavior, CancellationToken) Declaration public ValueTask<IEnumerable<TChannel>> GetChannelsAsync<TChannel>(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) where TChannel : IGuildChannel Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IEnumerable <TChannel>> Type Parameters Name Description TChannel | Improve this Doc View Source GetIntegrationsAsync(CancellationToken) Declaration public Task<IReadOnlyList<GuildIntegration>> GetIntegrationsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < GuildIntegration >> | Improve this Doc View Source GetInvitesAsync(CancellationToken) Declaration public Task<IReadOnlyList<InviteInformation>> GetInvitesAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < InviteInformation >> | Improve this Doc View Source GetMemberAsync(Snowflake, CacheBehavior, CancellationToken) Declaration public ValueTask<Member> GetMemberAsync(Snowflake userId, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake userId CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < Member > | Improve this Doc View Source GetMembersAsync(Boolean, CancellationToken) Declaration public abstract ValueTask<IEnumerable<Member>> GetMembersAsync(bool download = true, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Boolean download CancellationToken cancellationToken Returns Type Description ValueTask < IEnumerable < Member >> | Improve this Doc View Source GetNewsChannelAsync(Snowflake, CacheBehavior, CancellationToken) Declaration public ValueTask<INewsChannel> GetNewsChannelAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < INewsChannel > | Improve this Doc View Source GetNewsChannelsAsync(CacheBehavior, CancellationToken) Declaration public ValueTask<IEnumerable<INewsChannel>> GetNewsChannelsAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IEnumerable < INewsChannel >> | Improve this Doc View Source GetPermissionsAsync(CancellationToken) Declaration public ValueTask<PermissionSet> GetPermissionsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask < PermissionSet > | Improve this Doc View Source GetPruneInformationAsync(PruneProperties, CancellationToken) Declaration public Task<PruneInformation> GetPruneInformationAsync(PruneProperties properties = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description PruneProperties properties CancellationToken cancellationToken Returns Type Description Task < PruneInformation > | Improve this Doc View Source GetPruneInformationAsync(Action<PruneProperties>, CancellationToken) Declaration public Task<PruneInformation> GetPruneInformationAsync(Action<PruneProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < PruneProperties > action CancellationToken cancellationToken Returns Type Description Task < PruneInformation > | Improve this Doc View Source GetPublicUpdatesChannelAsync(CacheBehavior, CancellationToken) Declaration public ValueTask<ITextChannel> GetPublicUpdatesChannelAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < ITextChannel > | Improve this Doc View Source GetRole(Snowflake) Declaration public IRole GetRole(Snowflake id) Parameters Type Name Description Snowflake id Returns Type Description IRole | Improve this Doc View Source GetRulesChannelAsync(CacheBehavior, CancellationToken) Declaration public ValueTask<ITextChannel> GetRulesChannelAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < ITextChannel > | Improve this Doc View Source GetStoreChannelAsync(Snowflake, CacheBehavior, CancellationToken) Declaration public ValueTask<IStoreChannel> GetStoreChannelAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IStoreChannel > | Improve this Doc View Source GetStoreChannelsAsync(CacheBehavior, CancellationToken) Declaration public ValueTask<IEnumerable<IStoreChannel>> GetStoreChannelsAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IEnumerable < IStoreChannel >> | Improve this Doc View Source GetSystemChannelAsync(CacheBehavior, CancellationToken) Declaration public ValueTask<ITextChannel> GetSystemChannelAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < ITextChannel > | Improve this Doc View Source GetTextChannelAsync(Snowflake, CacheBehavior, CancellationToken) Declaration public ValueTask<ITextChannel> GetTextChannelAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < ITextChannel > | Improve this Doc View Source GetTextChannelsAsync(CacheBehavior, CancellationToken) Declaration public ValueTask<IEnumerable<ITextChannel>> GetTextChannelsAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IEnumerable < ITextChannel >> | Improve this Doc View Source GetVanityInviteAsync(CancellationToken) Declaration public Task<VanityInvite> GetVanityInviteAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < VanityInvite > | Improve this Doc View Source GetVoiceChannelAsync(Snowflake, CacheBehavior, CancellationToken) Declaration public ValueTask<IVoiceChannel> GetVoiceChannelAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IVoiceChannel > | Improve this Doc View Source GetVoiceChannelsAsync(CacheBehavior, CancellationToken) Declaration public ValueTask<IEnumerable<IVoiceChannel>> GetVoiceChannelsAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IEnumerable < IVoiceChannel >> | Improve this Doc View Source GetVoiceRegionAsync(CancellationToken) Declaration public Task<VoiceRegion> GetVoiceRegionAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < VoiceRegion > | Improve this Doc View Source GetVoiceRegionsAsync(CancellationToken) Declaration public Task<IReadOnlyList<VoiceRegion>> GetVoiceRegionsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < VoiceRegion >> | Improve this Doc View Source GetWidgetChannelAsync(CacheBehavior, CancellationToken) Declaration public ValueTask<IGuildChannel> GetWidgetChannelAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IGuildChannel > | Improve this Doc View Source GetWidgetImage(WidgetStyle) Declaration public Uri GetWidgetImage(WidgetStyle widgetStyle) Parameters Type Name Description WidgetStyle widgetStyle Returns Type Description Uri | Improve this Doc View Source HasFeature(String) Declaration public bool HasFeature(string feature) Parameters Type Name Description String feature Returns Type Description Boolean | Improve this Doc View Source LeaveAsync(CancellationToken) Declaration public Task LeaveAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ModifyAsync(GuildModifyProperties, CancellationToken) Declaration public Task ModifyAsync(GuildModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GuildModifyProperties properties CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ModifyAsync(Action<GuildModifyProperties>, CancellationToken) Declaration public Task ModifyAsync(Action<GuildModifyProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < GuildModifyProperties > action CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ModifyNicknameAsync(String, CancellationToken) Declaration public Task ModifyNicknameAsync(string nickname, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String nickname CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ModifyWidgetAsync(GuildWidgetModifyProperties, CancellationToken) Declaration public Task ModifyWidgetAsync(GuildWidgetModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GuildWidgetModifyProperties properties CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ModifyWidgetAsync(Action<GuildWidgetModifyProperties>, CancellationToken) Declaration public Task ModifyWidgetAsync(Action<GuildWidgetModifyProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < GuildWidgetModifyProperties > action CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() | Improve this Doc View Source UnbanAsync(Snowflake, CancellationToken) Declaration public Task UnbanAsync(Snowflake userId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake userId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source UnbanAsync(User, CancellationToken) Declaration public Task UnbanAsync(User user, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description User user CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source Update(GuildModel) Updates the entity using the specified model. Declaration protected virtual void Update(GuildModel model) Parameters Type Name Description GuildModel model the model. | Improve this Doc View Source UpdateChannelPositionsAsync(IReadOnlyList<ChannelPositionUpdate>, CancellationToken) Declaration public Task UpdateChannelPositionsAsync(IReadOnlyList<ChannelPositionUpdate> positionUpdates, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IReadOnlyList < ChannelPositionUpdate > positionUpdates CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source UpdateRolePositionsAsync(IReadOnlyList<RolePositionUpdate>, CancellationToken) Declaration public Task UpdateRolePositionsAsync(IReadOnlyList<RolePositionUpdate> positionUpdates, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IReadOnlyList < RolePositionUpdate > positionUpdates CancellationToken cancellationToken Returns Type Description Task Explicit Interface Implementations | Improve this Doc View Source IUpdateable<GuildModel>.Update(GuildModel) Declaration void IUpdateable<GuildModel>.Update(GuildModel model) Parameters Type Name Description GuildModel model Implements IGuild IHasIcon IModifiable<TProperties> IDeletable IChannelContainer IChannelParent ISnowflakeEntity IIdentifiable<TIdentifier> IDiscordEntity IUpdateable<TModel> Extension Methods GuildExtensions.DisconnectVoiceAsync(IGuild, CancellationToken)"
  },
  "api/Strade.Entities.BeginPruneProperties.html": {
    "href": "api/Strade.Entities.BeginPruneProperties.html",
    "title": "Class BeginPruneProperties | Strade Developer Documentation",
    "keywords": "Class BeginPruneProperties Inheritance Object BeginPruneProperties Implements IRetrieveProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class BeginPruneProperties : IRetrieveProperties Properties | Improve this Doc View Source ComputePruneCount Declaration public bool ComputePruneCount { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Days Declaration public Optional<int> Days { get; set; } Property Value Type Description Optional < Int32 > | Improve this Doc View Source Roles Declaration public Optional<IReadOnlyList<Snowflake>> Roles { get; set; } Property Value Type Description Optional < IReadOnlyList < Snowflake >> Methods | Improve this Doc View Source BuildQuery() Declaration public QueryParameterCollection BuildQuery() Returns Type Description QueryParameterCollection | Improve this Doc View Source Validate() Declaration public void Validate() Implements IRetrieveProperties"
  },
  "api/Strade.Entities.CallInformation.html": {
    "href": "api/Strade.Entities.CallInformation.html",
    "title": "Class CallInformation | Strade Developer Documentation",
    "keywords": "Class CallInformation Inheritance Object CallInformation Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class CallInformation Constructors | Improve this Doc View Source CallInformation(CallInformationModel) Declaration public CallInformation(CallInformationModel model) Parameters Type Name Description CallInformationModel model Properties | Improve this Doc View Source EndedAt Gets the time when the call ended; or null if the call is on-going. Declaration public DateTimeOffset? EndedAt { get; } Property Value Type Description Nullable < DateTimeOffset > the time when the call ended; or null if the call is on-going. | Improve this Doc View Source Participants Gets a read-only list of the snowflake identifiers of the participants of the call. Declaration public IReadOnlyList<Snowflake> Participants { get; } Property Value Type Description IReadOnlyList < Snowflake > a read-only list of the snowflake identifiers of the participants of the call."
  },
  "api/Strade.Entities.CategoryCreationProperties.html": {
    "href": "api/Strade.Entities.CategoryCreationProperties.html",
    "title": "Class CategoryCreationProperties | Strade Developer Documentation",
    "keywords": "Class CategoryCreationProperties The ICreationProperties for categories (category channels). Inheritance Object GuildChannelCreationProperties CategoryCreationProperties Implements ICreationProperties Inherited Members GuildChannelCreationProperties.Name GuildChannelCreationProperties.PermissionOverwrites GuildChannelCreationProperties.Position GuildChannelCreationProperties.Validate() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class CategoryCreationProperties : GuildChannelCreationProperties, ICreationProperties Properties | Improve this Doc View Source Type Declaration public override ChannelType Type { get; } Property Value Type Description ChannelType Overrides GuildChannelCreationProperties.Type Implements ICreationProperties"
  },
  "api/Strade.Entities.CategoryModifyProperties.html": {
    "href": "api/Strade.Entities.CategoryModifyProperties.html",
    "title": "Class CategoryModifyProperties | Strade Developer Documentation",
    "keywords": "Class CategoryModifyProperties The IModifyProperties for categories (category channels). Inheritance Object GuildChannelModifyProperties CategoryModifyProperties Implements IModifyProperties Inherited Members GuildChannelModifyProperties.Name GuildChannelModifyProperties.PermissionOverwrites GuildChannelModifyProperties.Position GuildChannelModifyProperties.Validate() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class CategoryModifyProperties : GuildChannelModifyProperties, IModifyProperties Implements IModifyProperties"
  },
  "api/Strade.Entities.Channel.FollowedChannel.html": {
    "href": "api/Strade.Entities.Channel.FollowedChannel.html",
    "title": "Struct FollowedChannel | Strade Developer Documentation",
    "keywords": "Struct FollowedChannel Holds information about a followed channel. Implements IDiscordEntity IEquatable < FollowedChannel > Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities.Channel Assembly : Strade.Rest.dll Syntax public struct FollowedChannel : IDiscordEntity, IEquatable<FollowedChannel> Remarks More details can be found on https://discord.com/developers/docs/resources/channel#followed-channel-object [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source FollowedChannel(IDiscordRestClient, Snowflake, Snowflake) Initializes a new instance of the FollowedChannel struct. Declaration public FollowedChannel(IDiscordRestClient client, Snowflake channelId, Snowflake webhookId) Parameters Type Name Description IDiscordRestClient client the discord client. Snowflake channelId the snowflake identifier of the followed channel. Snowflake webhookId the snowflake identifier of the webhook for the followed channel. Exceptions Type Condition ArgumentNullException thrown if the specified client is null . | Improve this Doc View Source FollowedChannel(IDiscordRestClient, FollowedChannelModel) Initializes a new instance of the FollowedChannel struct. Declaration public FollowedChannel(IDiscordRestClient client, FollowedChannelModel model) Parameters Type Name Description IDiscordRestClient client the discord client. FollowedChannelModel model the model containing the entity data. Exceptions Type Condition ArgumentNullException thrown if the specified client is null . ArgumentNullException thrown if the specified model is null . Properties | Improve this Doc View Source ChannelId Gets the snowflake identifier of the followed channel. Declaration public Snowflake ChannelId { get; } Property Value Type Description Snowflake the snowflake identifier of the followed channel. | Improve this Doc View Source Client Declaration public IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient | Improve this Doc View Source WebhookId Gets the snowflake identifier of the webhook for the followed channel. Declaration public Snowflake WebhookId { get; } Property Value Type Description Snowflake the snowflake identifier of the webhook for the followed channel. Methods | Improve this Doc View Source Equals(FollowedChannel) Declaration public bool Equals(FollowedChannel other) Parameters Type Name Description FollowedChannel other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetChannelAsync(CacheBehavior, CancellationToken) Gets the target Webhook channel asynchronously. Declaration public ValueTask<IGuildMessageChannel> GetChannelAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IGuildMessageChannel > a task that represents the asynchronous operation. The task result is the channel. | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source GetWebhookAsync(CancellationToken) Gets the target webhook asynchronously. Declaration public Task<Webhook> GetWebhookAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < Webhook > a task that represents the asynchronous operation. The task result is the webhook. Operators | Improve this Doc View Source Equality(FollowedChannel, FollowedChannel) Declaration public static bool operator ==(FollowedChannel left, FollowedChannel right) Parameters Type Name Description FollowedChannel left FollowedChannel right Returns Type Description Boolean | Improve this Doc View Source Inequality(FollowedChannel, FollowedChannel) Declaration public static bool operator !=(FollowedChannel left, FollowedChannel right) Parameters Type Name Description FollowedChannel left FollowedChannel right Returns Type Description Boolean Implements IDiscordEntity System.IEquatable<T>"
  },
  "api/Strade.Entities.Channel.html": {
    "href": "api/Strade.Entities.Channel.html",
    "title": "Namespace Strade.Entities.Channel | Strade Developer Documentation",
    "keywords": "Namespace Strade.Entities.Channel Structs FollowedChannel Holds information about a followed channel."
  },
  "api/Strade.Entities.Channel.Properties.ChannelFollowProperties.html": {
    "href": "api/Strade.Entities.Channel.Properties.ChannelFollowProperties.html",
    "title": "Class ChannelFollowProperties | Strade Developer Documentation",
    "keywords": "Class ChannelFollowProperties The follow properties used to follow a News channel. Inheritance Object ChannelFollowProperties Implements ICreationProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities.Channel.Properties Assembly : Strade.Rest.dll Syntax public sealed class ChannelFollowProperties : ICreationProperties Properties | Improve this Doc View Source TargetChannelId Gets or sets the snowflake identifier of the channel to follow. Declaration [JsonPropertyName(\"webhook_channel_id\")] public Snowflake TargetChannelId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the channel to follow. Methods | Improve this Doc View Source Validate() Declaration public void Validate() Implements ICreationProperties"
  },
  "api/Strade.Entities.Channel.Properties.html": {
    "href": "api/Strade.Entities.Channel.Properties.html",
    "title": "Namespace Strade.Entities.Channel.Properties | Strade Developer Documentation",
    "keywords": "Namespace Strade.Entities.Channel.Properties Classes ChannelFollowProperties The follow properties used to follow a News channel."
  },
  "api/Strade.Entities.ChannelMention.html": {
    "href": "api/Strade.Entities.ChannelMention.html",
    "title": "Class ChannelMention | Strade Developer Documentation",
    "keywords": "Class ChannelMention Represents a channel mention. Inheritance Object ChannelMention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class ChannelMention Constructors | Improve this Doc View Source ChannelMention(ChannelMentionModel) Declaration public ChannelMention(ChannelMentionModel model) Parameters Type Name Description ChannelMentionModel model Properties | Improve this Doc View Source GuildId Gets the snowflake identifier of the guild of the mentioned channel. Declaration public Snowflake GuildId { get; } Property Value Type Description Snowflake the snowflake identifier of the guild of the mentioned channel. | Improve this Doc View Source Id Gets the snowflake identifier of the mentioned channel. Declaration public Snowflake Id { get; } Property Value Type Description Snowflake the snowflake identifier of the mentioned channel. | Improve this Doc View Source Name Gets the channel name. Declaration public string Name { get; } Property Value Type Description String the channel name. | Improve this Doc View Source Type Gets the channel type. Declaration public ChannelType Type { get; } Property Value Type Description ChannelType the channel type. Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Strade.Entities.ChannelPositionUpdate.html": {
    "href": "api/Strade.Entities.ChannelPositionUpdate.html",
    "title": "Class ChannelPositionUpdate | Strade Developer Documentation",
    "keywords": "Class ChannelPositionUpdate Represents a structure used to update channels position. Inheritance Object ChannelPositionUpdate Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class ChannelPositionUpdate Constructors | Improve this Doc View Source ChannelPositionUpdate(Snowflake, Int32) Initializes a new instance of the ChannelPositionUpdate class. Declaration public ChannelPositionUpdate(Snowflake channelId, int position) Parameters Type Name Description Snowflake channelId a reference to the channel to update. Int32 position the new channel position. | Improve this Doc View Source ChannelPositionUpdate(Snowflake, Int32, Snowflake, Boolean) Initializes a new instance of the ChannelPositionUpdate class. Declaration public ChannelPositionUpdate(Snowflake channelId, int position, Snowflake parentId, bool synchronizeWithParent = false) Parameters Type Name Description Snowflake channelId a reference to the channel to update. Int32 position the new channel position. Snowflake parentId the snowflake identifier of the parent to move to. Boolean synchronizeWithParent a value indicating whether the permissions should be synchronized with the parent. Properties | Improve this Doc View Source ChannelId Gets a reference to the channel to update. Declaration [JsonPropertyName(\"id\")] public Snowflake ChannelId { get; } Property Value Type Description Snowflake a reference to the channel to update. | Improve this Doc View Source ParentId Gets the snowflake identifier of the parent to move to; or null to keep the parent. Declaration [JsonPropertyName(\"parent_id\")] public Snowflake? ParentId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the parent to move to; or null to keep the parent. | Improve this Doc View Source Position Gets the new channel position. Declaration [JsonPropertyName(\"position\")] public int Position { get; } Property Value Type Description Int32 the new channel position. | Improve this Doc View Source SynchronizeWithParent Gets a value indicating whether the permissions should be synchronized with the parent. Declaration [JsonPropertyName(\"lock_permissions\")] public bool SynchronizeWithParent { get; } Property Value Type Description Boolean a value indicating whether the permissions should be synchronized with the parent."
  },
  "api/Strade.Entities.ChannelPreview.html": {
    "href": "api/Strade.Entities.ChannelPreview.html",
    "title": "Class ChannelPreview | Strade Developer Documentation",
    "keywords": "Class ChannelPreview Represents the preview structure for a partial channel. Inheritance Object ChannelPreview Implements IIdentifiable < Snowflake > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class ChannelPreview : IIdentifiable<Snowflake> Constructors | Improve this Doc View Source ChannelPreview(ChannelPreviewModel) Declaration public ChannelPreview(ChannelPreviewModel model) Parameters Type Name Description ChannelPreviewModel model Properties | Improve this Doc View Source Id Gets the snowflake identifier of the channel. Declaration public Snowflake Id { get; } Property Value Type Description Snowflake the snowflake identifier of the channel. | Improve this Doc View Source Name Gets the channel name. Declaration public string Name { get; } Property Value Type Description String the channel name. | Improve this Doc View Source Type Gets the type of the channel. Declaration public ChannelType Type { get; } Property Value Type Description ChannelType the type of the channel. Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Entities.ChannelType.html": {
    "href": "api/Strade.Entities.ChannelType.html",
    "title": "Enum ChannelType | Strade Developer Documentation",
    "keywords": "Enum ChannelType A set of the different channel types. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(NumericEnumConverter<ChannelType>))] public enum ChannelType Remarks More details can be found on https://discord.com/developers/docs/resources/channel#channel-object-channel-types [external, Discord Developer Documentation]. Fields Name Description Category Denotes that the channel is a guild category channel. DirectMessage Denotes that the channel is a direct message channel. Group Denotes that the channel is a group direct message channel. Interactions Denotes that the channel is an interactions channel. Interactions channel are strade-only constructs and only exists during runtime. News Denotes that the channel is a news channel. Store Denotes that the channel is a store channel. Text Denotes that the channel is a guild text channel. Voice Denotes that the channel is a guild voice channel. Extension Methods EnumExtensions.GetName<ChannelType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.Color.html": {
    "href": "api/Strade.Entities.Color.html",
    "title": "Struct Color | Strade Developer Documentation",
    "keywords": "Struct Color A structure that can represent a RGB color (without alpha) encoded in. Implements IEquatable < Color > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(ColorJsonConverter))] public struct Color : IEquatable<Color> Constructors | Improve this Doc View Source Color(KnownColor) Initializes a new instance of the Color struct. Declaration public Color(KnownColor knownColor) Parameters Type Name Description KnownColor knownColor the known color to create the color from. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified knownColor is not defined in the KnownColor enumeration. | Improve this Doc View Source Color(Byte, Byte, Byte) Initializes a new instance of the Color struct. Declaration public Color(byte red, byte green, byte blue) Parameters Type Name Description Byte red the R color value. Byte green the G color value. Byte blue the B color value. | Improve this Doc View Source Color(Color) Initializes a new instance of the Color struct. Declaration public Color(Color color) Parameters Type Name Description Color color the color representation. Remarks If the color has an alpha channel, the alpha channel will be ignored. | Improve this Doc View Source Color(Int32) Initializes a new instance of the Color struct. Declaration public Color(int value) Parameters Type Name Description Int32 value the encoded 48-bit value representing the color. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified value is greater than 0x00FFFFFF . | Improve this Doc View Source Color(Int32, Int32, Int32) Initializes a new instance of the Color struct. Declaration public Color(int red, int green, int blue) Parameters Type Name Description Int32 red the R color value. Int32 green the G color value. Int32 blue the B color value. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified red value is greater than 0xFF . ArgumentOutOfRangeException thrown if the specified green value is greater than 0xFF . ArgumentOutOfRangeException thrown if the specified blue value is greater than 0xFF . ArgumentOutOfRangeException thrown if the specified red value is less than 0 . ArgumentOutOfRangeException thrown if the specified green value is less than 0 . ArgumentOutOfRangeException thrown if the specified blue value is less than 0 . | Improve this Doc View Source Color(Single, Single, Single) Initializes a new instance of the Color struct. Declaration public Color(float red, float green, float blue) Parameters Type Name Description Single red the R color value. Single green the G color value. Single blue the B color value. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified red value is greater than 0xFF . ArgumentOutOfRangeException thrown if the specified green value is greater than 0xFF . ArgumentOutOfRangeException thrown if the specified blue value is greater than 0xFF . ArgumentOutOfRangeException thrown if the specified red value is less than 0 . ArgumentOutOfRangeException thrown if the specified green value is less than 0 . ArgumentOutOfRangeException thrown if the specified blue value is less than 0 . | Improve this Doc View Source Color(UInt32) Initializes a new instance of the Color struct. Declaration public Color(uint value) Parameters Type Name Description UInt32 value the encoded 48-bit value representing the color. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified value is greater than 0x00FFFFFF . Fields | Improve this Doc View Source Blue Gets the color for the known color Blue (Hexadecimal value: #3498DB ). Declaration public static readonly Color Blue Field Value Type Description Color the color for the known color Blue (Hexadecimal value: #3498DB ). | Improve this Doc View Source DarkBlue Gets the color for the known color DarkBlue (Hexadecimal value: #206694 ). Declaration public static readonly Color DarkBlue Field Value Type Description Color the color for the known color DarkBlue (Hexadecimal value: #206694 ). | Improve this Doc View Source DarkerGray Gets the color for the known color DarkerGray (Hexadecimal value: #546E7A ). Declaration public static readonly Color DarkerGray Field Value Type Description Color the color for the known color DarkerGray (Hexadecimal value: #546E7A ). | Improve this Doc View Source DarkGold Gets the color for the known color DarkGold (Hexadecimal value: #C27C0E ). Declaration public static readonly Color DarkGold Field Value Type Description Color the color for the known color DarkGold (Hexadecimal value: #C27C0E ). | Improve this Doc View Source DarkGray Gets the color for the known color DarkGray (Hexadecimal value: #607D8B ). Declaration public static readonly Color DarkGray Field Value Type Description Color the color for the known color DarkGray (Hexadecimal value: #607D8B ). | Improve this Doc View Source DarkGreen Gets the color for the known color DarkGreen (Hexadecimal value: #1F8B4C ). Declaration public static readonly Color DarkGreen Field Value Type Description Color the color for the known color DarkGreen (Hexadecimal value: #1F8B4C ). | Improve this Doc View Source DarkMagenta Gets the color for the known color DarkMagenta (Hexadecimal value: #AD1457 ). Declaration public static readonly Color DarkMagenta Field Value Type Description Color the color for the known color DarkMagenta (Hexadecimal value: #AD1457 ). | Improve this Doc View Source DarkOrange Gets the color for the known color DarkOrange (Hexadecimal value: #A84300 ). Declaration public static readonly Color DarkOrange Field Value Type Description Color the color for the known color DarkOrange (Hexadecimal value: #A84300 ). | Improve this Doc View Source DarkPurple Gets the color for the known color DarkPurple (Hexadecimal value: #71368A ). Declaration public static readonly Color DarkPurple Field Value Type Description Color the color for the known color DarkPurple (Hexadecimal value: #71368A ). | Improve this Doc View Source DarkRed Gets the color for the known color DarkRed (Hexadecimal value: #992D22 ). Declaration public static readonly Color DarkRed Field Value Type Description Color the color for the known color DarkRed (Hexadecimal value: #992D22 ). | Improve this Doc View Source DarkTeal Gets the color for the known color DarkTeal (Hexadecimal value: #11806A ). Declaration public static readonly Color DarkTeal Field Value Type Description Color the color for the known color DarkTeal (Hexadecimal value: #11806A ). | Improve this Doc View Source Default Gets the color for the known color Default (Hexadecimal value: #0000000 ). Declaration public static readonly Color Default Field Value Type Description Color the color for the known color Default (Hexadecimal value: #0000000 ). | Improve this Doc View Source Gold Gets the color for the known color Gold (Hexadecimal value: #F1C40FC ). Declaration public static readonly Color Gold Field Value Type Description Color the color for the known color Gold (Hexadecimal value: #F1C40FC ). | Improve this Doc View Source Green Gets the color for the known color Green (Hexadecimal value: #2ECC71 ). Declaration public static readonly Color Green Field Value Type Description Color the color for the known color Green (Hexadecimal value: #2ECC71 ). | Improve this Doc View Source LighterGray Gets the color for the known color LighterGray (Hexadecimal value: #95A5A6 ). Declaration public static readonly Color LighterGray Field Value Type Description Color the color for the known color LighterGray (Hexadecimal value: #95A5A6 ). | Improve this Doc View Source LightGray Gets the color for the known color LightGray (Hexadecimal value: #979C9F ). Declaration public static readonly Color LightGray Field Value Type Description Color the color for the known color LightGray (Hexadecimal value: #979C9F ). | Improve this Doc View Source Magenta Gets the color for the known color Magenta (Hexadecimal value: #E91E63 ). Declaration public static readonly Color Magenta Field Value Type Description Color the color for the known color Magenta (Hexadecimal value: #E91E63 ). | Improve this Doc View Source Orange Gets the color for the known color Orange (Hexadecimal value: #E67E22 ). Declaration public static readonly Color Orange Field Value Type Description Color the color for the known color Orange (Hexadecimal value: #E67E22 ). | Improve this Doc View Source Purple Gets the color for the known color Purple (Hexadecimal value: #9B59B6 ). Declaration public static readonly Color Purple Field Value Type Description Color the color for the known color Purple (Hexadecimal value: #9B59B6 ). | Improve this Doc View Source Red Gets the color for the known color Red (Hexadecimal value: #E74C3C ). Declaration public static readonly Color Red Field Value Type Description Color the color for the known color Red (Hexadecimal value: #E74C3C ). | Improve this Doc View Source Teal Gets the color for the known color Teal (Hexadecimal value: #1ABC9C ). Declaration public static readonly Color Teal Field Value Type Description Color the color for the known color Teal (Hexadecimal value: #1ABC9C ). Properties | Improve this Doc View Source B Gets the Blue color value of the color. Declaration public byte B { get; } Property Value Type Description Byte the Blue color value of the color. | Improve this Doc View Source G Gets the Green color value of the color. Declaration public byte G { get; } Property Value Type Description Byte the Green color value of the color. | Improve this Doc View Source IsKnown Gets a value indicating whether the color is a known color. Declaration public bool IsKnown { get; } Property Value Type Description Boolean a value indicating whether the color is a known color. | Improve this Doc View Source KnownColor Gets the known color representation of the color, or Unknown if the color is not a known color. Declaration public KnownColor KnownColor { get; } Property Value Type Description KnownColor the known color representation of the color, or Unknown if the color is not a known color. | Improve this Doc View Source R Gets the Red color value of the color. Declaration public byte R { get; } Property Value Type Description Byte the Red color value of the color. | Improve this Doc View Source Value Gets the 48-bit color representation of the color. Declaration public uint Value { get; } Property Value Type Description UInt32 the 48-bit color representation of the color. Methods | Improve this Doc View Source Equals(Color) Checks the equality between the current color and the specified color . Declaration public bool Equals(Color color) Parameters Type Name Description Color color the Color to check the equality between. Returns Type Description Boolean a value indicating whether the current color and the specified color are equal. | Improve this Doc View Source Equals(Object) Checks the equality between the current color and the specified obj . Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj the object to check the equality between. Returns Type Description Boolean a value indicating whether the current color and the specified obj are equal. Overrides ValueType.Equals(Object) | Improve this Doc View Source FromKnownColor(KnownColor) Creates a color from a known color. Declaration public static Color? FromKnownColor(KnownColor color) Parameters Type Name Description KnownColor color the known color. Returns Type Description Nullable < Color > the color, or null if the color is not supported. | Improve this Doc View Source GetByName(String) Declaration public static Color? GetByName(string name) Parameters Type Name Description String name Returns Type Description Nullable < Color > | Improve this Doc View Source GetHashCode() Gets the hash code of the Color . Declaration public override int GetHashCode() Returns Type Description Int32 the hash code of the Color . Overrides ValueType.GetHashCode() | Improve this Doc View Source ToColor() Gets the Color for the actual color. Declaration public Color ToColor() Returns Type Description Color the Color for the actual color. | Improve this Doc View Source ToString() Builds a String representation of the Color instance. Declaration public override string ToString() Returns Type Description String a String representation of the Color instance. Overrides ValueType.ToString() | Improve this Doc View Source TryGetByName(String, out Color) Declaration public static bool TryGetByName(string name, out Color color) Parameters Type Name Description String name Color color Returns Type Description Boolean Operators | Improve this Doc View Source Equality(Color, Color) Checks the equality between the specified left color and the specified right color. Declaration public static bool operator ==(Color left, Color right) Parameters Type Name Description Color left the left color to check. Color right the right color to check. Returns Type Description Boolean a value indicating whether the specified left color and the specified right color are equal. | Improve this Doc View Source Inequality(Color, Color) Checks the equality between the current color and the specified left color and the specified right color. Declaration public static bool operator !=(Color left, Color right) Parameters Type Name Description Color left the first color. Color right the second color. Returns Type Description Boolean a value indicating whether the specified left color and the specified right color are NOT equal. Implements System.IEquatable<T>"
  },
  "api/Strade.Entities.CommandChoice.html": {
    "href": "api/Strade.Entities.CommandChoice.html",
    "title": "Struct CommandChoice | Strade Developer Documentation",
    "keywords": "Struct CommandChoice Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public struct CommandChoice Constructors | Improve this Doc View Source CommandChoice(String, String) Declaration public CommandChoice(string name, string value) Parameters Type Name Description String name String value Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Value Declaration public string Value { get; } Property Value Type Description String"
  },
  "api/Strade.Entities.CommandCreationProperties.html": {
    "href": "api/Strade.Entities.CommandCreationProperties.html",
    "title": "Class CommandCreationProperties | Strade Developer Documentation",
    "keywords": "Class CommandCreationProperties Inheritance Object CommandCreationProperties Implements ICreationProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class CommandCreationProperties : ICreationProperties Properties | Improve this Doc View Source Description Gets or sets the description of the command. Declaration [JsonPropertyName(\"description\")] public string Description { get; set; } Property Value Type Description String the description of the command. | Improve this Doc View Source Name Gets or sets the name of the command. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the name of the command. | Improve this Doc View Source Options Gets or sets a read-only list containing the options of the command. Declaration [JsonPropertyName(\"options\")] public IReadOnlyList<CommandOptionCreationProperties> Options { get; set; } Property Value Type Description IReadOnlyList < CommandOptionCreationProperties > a read-only list containing the options of the command. Methods | Improve this Doc View Source Validate() Declaration public void Validate() Implements ICreationProperties"
  },
  "api/Strade.Entities.CommandModifyProperties.html": {
    "href": "api/Strade.Entities.CommandModifyProperties.html",
    "title": "Class CommandModifyProperties | Strade Developer Documentation",
    "keywords": "Class CommandModifyProperties Inheritance Object CommandModifyProperties Implements IModifyProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class CommandModifyProperties : IModifyProperties Properties | Improve this Doc View Source Description Gets or sets the description of the command. Declaration [JsonPropertyName(\"description\")] public Optional<string> Description { get; set; } Property Value Type Description Optional < String > the description of the command. | Improve this Doc View Source Name Gets or sets the name of the command. Declaration [JsonPropertyName(\"name\")] public Optional<string> Name { get; set; } Property Value Type Description Optional < String > the name of the command. | Improve this Doc View Source Options Gets or sets a read-only list containing the options of the command. Declaration [JsonPropertyName(\"options\")] public Optional<IReadOnlyList<CommandOptionCreationProperties>> Options { get; set; } Property Value Type Description Optional < IReadOnlyList < CommandOptionCreationProperties >> a read-only list containing the options of the command. Methods | Improve this Doc View Source Validate() Declaration public void Validate() Implements IModifyProperties"
  },
  "api/Strade.Entities.CommandOption.html": {
    "href": "api/Strade.Entities.CommandOption.html",
    "title": "Class CommandOption | Strade Developer Documentation",
    "keywords": "Class CommandOption Inheritance Object CommandOption Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public class CommandOption Constructors | Improve this Doc View Source CommandOption(ApplicationCommandOptionModel) Declaration public CommandOption(ApplicationCommandOptionModel model) Parameters Type Name Description ApplicationCommandOptionModel model Properties | Improve this Doc View Source Choices Gets a read-only list of choices for the option. Declaration public IReadOnlyList<CommandChoice> Choices { get; } Property Value Type Description IReadOnlyList < CommandChoice > a read-only list of choices for the option. | Improve this Doc View Source Description Gets the description of the option. Declaration public string Description { get; } Property Value Type Description String the description of the option. | Improve this Doc View Source IsDefault Gets a value indicating whether the option is the default option. Declaration public bool IsDefault { get; } Property Value Type Description Boolean a value indicating whether the option is the default option. | Improve this Doc View Source IsRequired Gets a value indicating whether the option is required. Declaration public bool IsRequired { get; } Property Value Type Description Boolean a value indicating whether the option is required. | Improve this Doc View Source Name Gets the name of the option. Declaration public string Name { get; } Property Value Type Description String the name of the option. | Improve this Doc View Source Options Gets a read-only list of options for the subcommands. Declaration public IReadOnlyList<CommandOption> Options { get; } Property Value Type Description IReadOnlyList < CommandOption > a read-only list of options for the subcommands. | Improve this Doc View Source Type Gets the type of the command option. Declaration public ApplicationCommandOptionType Type { get; } Property Value Type Description ApplicationCommandOptionType the type of the command option."
  },
  "api/Strade.Entities.CommandOptionCreationProperties.html": {
    "href": "api/Strade.Entities.CommandOptionCreationProperties.html",
    "title": "Class CommandOptionCreationProperties | Strade Developer Documentation",
    "keywords": "Class CommandOptionCreationProperties Inheritance Object CommandOptionCreationProperties Implements ICreationProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public class CommandOptionCreationProperties : ICreationProperties Properties | Improve this Doc View Source Choices Gets or sets a read-only list of choices for the option. Declaration [JsonPropertyName(\"choices\")] public Optional<IReadOnlyList<CommandChoice>> Choices { get; set; } Property Value Type Description Optional < IReadOnlyList < CommandChoice >> a read-only list of choices for the option. | Improve this Doc View Source Description Gets or sets the description of the option. Declaration [JsonPropertyName(\"description\")] public string Description { get; set; } Property Value Type Description String the description of the option. | Improve this Doc View Source IsDefault Gets or sets a value indicating whether the option is the default option. Declaration [JsonPropertyName(\"default\")] public Optional<bool> IsDefault { get; set; } Property Value Type Description Optional < Boolean > a value indicating whether the option is the default option. | Improve this Doc View Source IsRequired Gets or sets a value indicating whether the option is required. Declaration [JsonPropertyName(\"required\")] public Optional<bool> IsRequired { get; set; } Property Value Type Description Optional < Boolean > a value indicating whether the option is required. | Improve this Doc View Source Name Gets or sets the name of the option. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the name of the option. | Improve this Doc View Source Options Gets or sets a read-only list of options for the subcommands. Declaration [JsonPropertyName(\"options\")] public Optional<IReadOnlyList<CommandOptionCreationProperties>> Options { get; set; } Property Value Type Description Optional < IReadOnlyList < CommandOptionCreationProperties >> a read-only list of options for the subcommands. | Improve this Doc View Source Type Gets or sets the type of the command option. Declaration [JsonPropertyName(\"type\")] public ApplicationCommandOptionType Type { get; set; } Property Value Type Description ApplicationCommandOptionType the type of the command option. Methods | Improve this Doc View Source Validate() Declaration public void Validate() Implements ICreationProperties"
  },
  "api/Strade.Entities.ConnectionVisibility.html": {
    "href": "api/Strade.Entities.ConnectionVisibility.html",
    "title": "Enum ConnectionVisibility | Strade Developer Documentation",
    "keywords": "Enum ConnectionVisibility Connection visibility definition. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public enum ConnectionVisibility : byte Remarks More details can be found on https://discord.com/developers/docs/resources/user#connection-object-visibility-types [external, Discord Developer Documentation]. Fields Name Description Everyone Denotes that the connection is visible to everyone. None Denotes that the connection is invisible to everyone except the user themselves. Extension Methods EnumExtensions.GetName<ConnectionVisibility>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.CurrentUser.html": {
    "href": "api/Strade.Entities.CurrentUser.html",
    "title": "Class CurrentUser | Strade Developer Documentation",
    "keywords": "Class CurrentUser Represents a self-user object which holds information about the associated application user. Inheritance Object User CurrentUser Implements IHasAvatar ISnowflakeEntity IIdentifiable < Snowflake > IMentionable IUpdateable < UserModel > IDiscordEntity IModifiable < CurrentUserModifyProperties > Inherited Members User.AvatarHash User.AvatarUrl User.Client User.Discriminator User.DiscriminatorValue User.Flags User.HasAvatar User.Id User.IsBot User.IsSystem User.IsWebhook User.Mention User.Presence User.QualifiedName User.Type User.Username User.BuildAvatarUrl(ImageFormat, Nullable<Int32>) User.OpenChannelAsync(CancellationToken) User.ToString() User.IUpdateable<UserModel>.Update(UserModel) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class CurrentUser : User, IHasAvatar, ISnowflakeEntity, IIdentifiable<Snowflake>, IMentionable, IUpdateable<UserModel>, IDiscordEntity, IModifiable<CurrentUserModifyProperties> Remarks More details can be found on https://discord.com/developers/docs/resources/user#user-object-user-structure [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source CurrentUser(IDiscordRestClient, UserModel) Declaration public CurrentUser(IDiscordRestClient client, UserModel model) Parameters Type Name Description IDiscordRestClient client UserModel model Properties | Improve this Doc View Source EmailAddress Gets the user's email address; or null if the e-mail address is not available. Declaration public string EmailAddress { get; } Property Value Type Description String the user's email address; or null if the e-mail address is not available. | Improve this Doc View Source IsMultiFactorAuthenticationEnabled Gets a value indicating whether multi-factor authentication is enabled on the user. Declaration public bool IsMultiFactorAuthenticationEnabled { get; } Property Value Type Description Boolean a value indicating whether multi-factor authentication is enabled on the user. | Improve this Doc View Source IsVerified Gets a value indicating whether the user's email is verified. Declaration public bool IsVerified { get; } Property Value Type Description Boolean a value indicating whether the user's email is verified. | Improve this Doc View Source Locale Gets the user's locale setting. Declaration public string Locale { get; } Property Value Type Description String the user's locale setting. | Improve this Doc View Source PremiumType Gets the type of the Discord nitro subscription on the user's account. Declaration public PremiumType PremiumType { get; } Property Value Type Description PremiumType the type of the Discord nitro subscription on the user's account. Methods | Improve this Doc View Source ModifyAsync(CurrentUserModifyProperties, CancellationToken) Declaration public Task ModifyAsync(CurrentUserModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CurrentUserModifyProperties properties CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ModifyAsync(Action<CurrentUserModifyProperties>, CancellationToken) Declaration public Task ModifyAsync(Action<CurrentUserModifyProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < CurrentUserModifyProperties > action CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source Update(UserModel) Declaration protected override void Update(UserModel model) Parameters Type Name Description UserModel model Overrides User.Update(UserModel) Implements IHasAvatar ISnowflakeEntity IIdentifiable<TIdentifier> IMentionable IUpdateable<TModel> IDiscordEntity IModifiable<TProperties>"
  },
  "api/Strade.Entities.CurrentUserModifyProperties.html": {
    "href": "api/Strade.Entities.CurrentUserModifyProperties.html",
    "title": "Class CurrentUserModifyProperties | Strade Developer Documentation",
    "keywords": "Class CurrentUserModifyProperties Modification properties for a CurrentUser . Inheritance Object CurrentUserModifyProperties Implements IModifyProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class CurrentUserModifyProperties : IModifyProperties Properties | Improve this Doc View Source Avatar Gets or sets the avatar of the current user. Declaration [JsonPropertyName(\"avatar\")] public Optional<ImageData> Avatar { get; set; } Property Value Type Description Optional < ImageData > the avatar of the current user. | Improve this Doc View Source Username Gets or sets the username of the current user. Declaration [JsonPropertyName(\"username\")] public Optional<string> Username { get; set; } Property Value Type Description Optional < String > the username of the current user. Methods | Improve this Doc View Source Validate() Declaration public void Validate() Implements IModifyProperties"
  },
  "api/Strade.Entities.EmbedAuthor.html": {
    "href": "api/Strade.Entities.EmbedAuthor.html",
    "title": "Struct EmbedAuthor | Strade Developer Documentation",
    "keywords": "Struct EmbedAuthor Represents an embedded message author. Implements IEquatable < EmbedAuthor > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public struct EmbedAuthor : IEquatable<EmbedAuthor> Remarks More details can be found on https://discord.com/developers/docs/resources/channel#embed-object-embed-author-structure [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source EmbedAuthor(EmbedAuthorModel) Declaration public EmbedAuthor(EmbedAuthorModel model) Parameters Type Name Description EmbedAuthorModel model | Improve this Doc View Source EmbedAuthor(String, Uri, Uri, Uri) Declaration public EmbedAuthor(string name, Uri url, Uri iconUrl = null, Uri proxiedIconUrl = null) Parameters Type Name Description String name Uri url Uri iconUrl Uri proxiedIconUrl Properties | Improve this Doc View Source IconUrl Gets the icon URL of the author. Declaration public Uri IconUrl { get; } Property Value Type Description Uri the icon URL of the author. | Improve this Doc View Source Name Gets the name of the author. Declaration public string Name { get; } Property Value Type Description String the name of the author. See Also MaximumAuthorNameLength | Improve this Doc View Source ProxiedIconUrl Gets the proxied icon URL of the author. Declaration public Uri ProxiedIconUrl { get; } Property Value Type Description Uri the proxied icon URL of the author. | Improve this Doc View Source Url Gets the URL of the author. Declaration public Uri Url { get; } Property Value Type Description Uri the URL of the author. Methods | Improve this Doc View Source Equals(EmbedAuthor) Declaration public bool Equals(EmbedAuthor other) Parameters Type Name Description EmbedAuthor other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(EmbedAuthor, EmbedAuthor) Declaration public static bool operator ==(EmbedAuthor left, EmbedAuthor right) Parameters Type Name Description EmbedAuthor left EmbedAuthor right Returns Type Description Boolean | Improve this Doc View Source Inequality(EmbedAuthor, EmbedAuthor) Declaration public static bool operator !=(EmbedAuthor left, EmbedAuthor right) Parameters Type Name Description EmbedAuthor left EmbedAuthor right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Entities.EmbedAuthorBuilder.html": {
    "href": "api/Strade.Entities.EmbedAuthorBuilder.html",
    "title": "Class EmbedAuthorBuilder | Strade Developer Documentation",
    "keywords": "Class EmbedAuthorBuilder A builder for EmbedAuthor instances. Inheritance Object EmbedAuthorBuilder Implements IBuilder < EmbedAuthor > ICloneable < EmbedAuthorBuilder > ICloneable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public class EmbedAuthorBuilder : IBuilder<EmbedAuthor>, ICloneable<EmbedAuthorBuilder>, ICloneable Constructors | Improve this Doc View Source EmbedAuthorBuilder() Initializes a new instance of the EmbedAuthorBuilder class. Declaration public EmbedAuthorBuilder() | Improve this Doc View Source EmbedAuthorBuilder(EmbedAuthor) Initializes a new instance of the EmbedAuthorBuilder class. Declaration public EmbedAuthorBuilder(EmbedAuthor author) Parameters Type Name Description EmbedAuthor author the embed author to clone. | Improve this Doc View Source EmbedAuthorBuilder(EmbedAuthorBuilder) Initializes a new instance of the EmbedAuthorBuilder class. Declaration public EmbedAuthorBuilder(EmbedAuthorBuilder builder) Parameters Type Name Description EmbedAuthorBuilder builder the embed author builder to clone. Exceptions Type Condition ArgumentNullException thrown if the specified builder is null . | Improve this Doc View Source EmbedAuthorBuilder(String, Uri, Uri) Initializes a new instance of the EmbedAuthorBuilder class. Declaration public EmbedAuthorBuilder(string name, Uri url = null, Uri iconUrl = null) Parameters Type Name Description String name the author name. Uri url the author URL. Uri iconUrl the author icon URL. Properties | Improve this Doc View Source IconUrl Gets or sets the author icon URL. Declaration public Uri IconUrl { get; set; } Property Value Type Description Uri the author icon URL. | Improve this Doc View Source Name Gets or sets the author name. Declaration public string Name { get; set; } Property Value Type Description String the author name. See Also MaximumAuthorNameLength | Improve this Doc View Source Url Gets or sets the author URL. Declaration public Uri Url { get; set; } Property Value Type Description Uri the author URL. Methods | Improve this Doc View Source Build() Builds the EmbedAuthor instance. Declaration public EmbedAuthor Build() Returns Type Description EmbedAuthor the EmbedAuthor instance. | Improve this Doc View Source Clone() Declaration public EmbedAuthorBuilder Clone() Returns Type Description EmbedAuthorBuilder | Improve this Doc View Source Reset() Declaration public void Reset() | Improve this Doc View Source WithIcon(IAttachment) Sets the icon URL to the specified attachment . Declaration public EmbedAuthorBuilder WithIcon(IAttachment attachment) Parameters Type Name Description IAttachment attachment the icon image attachment. Returns Type Description EmbedAuthorBuilder the EmbedAuthorBuilder instance. | Improve this Doc View Source WithIconUrl(String) Sets the icon URL to the specified iconUrl . Declaration public EmbedAuthorBuilder WithIconUrl(string iconUrl) Parameters Type Name Description String iconUrl the icon image URL. Returns Type Description EmbedAuthorBuilder the EmbedAuthorBuilder instance. | Improve this Doc View Source WithIconUrl(Uri) Sets the icon URL to the specified iconUrl . Declaration public EmbedAuthorBuilder WithIconUrl(Uri iconUrl) Parameters Type Name Description Uri iconUrl the icon image URL. Returns Type Description EmbedAuthorBuilder the EmbedAuthorBuilder instance. | Improve this Doc View Source WithName(String) Sets the author name to the specified name . Declaration public EmbedAuthorBuilder WithName(string name) Parameters Type Name Description String name the author name. Returns Type Description EmbedAuthorBuilder the EmbedAuthorBuilder instance. | Improve this Doc View Source WithUrl(String) Sets the URL to the specified url . Declaration public EmbedAuthorBuilder WithUrl(string url) Parameters Type Name Description String url the URL. Returns Type Description EmbedAuthorBuilder the EmbedAuthorBuilder instance. | Improve this Doc View Source WithUrl(Uri) Sets the URL to the specified url . Declaration public EmbedAuthorBuilder WithUrl(Uri url) Parameters Type Name Description Uri url the URL. Returns Type Description EmbedAuthorBuilder the EmbedAuthorBuilder instance. Operators | Improve this Doc View Source Implicit(EmbedAuthorBuilder to EmbedAuthor) Gets the embed author from the specified builder . Declaration public static implicit operator EmbedAuthor(EmbedAuthorBuilder builder) Parameters Type Name Description EmbedAuthorBuilder builder the embedded author builder. Returns Type Description EmbedAuthor See Also Build() Explicit Interface Implementations | Improve this Doc View Source ICloneable.Clone() Declaration object ICloneable.Clone() Returns Type Description Object Implements IBuilder<TResult> ICloneable<TSelf> System.ICloneable"
  },
  "api/Strade.Entities.EmbedBuilder.html": {
    "href": "api/Strade.Entities.EmbedBuilder.html",
    "title": "Class EmbedBuilder | Strade Developer Documentation",
    "keywords": "Class EmbedBuilder Inheritance Object EmbedBuilder Implements IBuilder < EmbedMessage > ICloneable < EmbedBuilder > ICloneable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public class EmbedBuilder : IBuilder<EmbedMessage>, ICloneable<EmbedBuilder>, ICloneable Constructors | Improve this Doc View Source EmbedBuilder() Initializes a new instance of the EmbedBuilder class. Declaration public EmbedBuilder() | Improve this Doc View Source EmbedBuilder(EmbedBuilder) Initializes a new instance of the EmbedBuilder class. Declaration public EmbedBuilder(EmbedBuilder builder) Parameters Type Name Description EmbedBuilder builder the builder to clone. Exceptions Type Condition ArgumentNullException thrown if the specified builder is null . | Improve this Doc View Source EmbedBuilder(EmbedMessage) Initializes a new instance of the EmbedBuilder class. Declaration public EmbedBuilder(EmbedMessage embed) Parameters Type Name Description EmbedMessage embed the embed to clone. Exceptions Type Condition ArgumentNullException thrown if the specified embed is null . Properties | Improve this Doc View Source Author Gets or sets the embed author. Declaration public EmbedAuthor? Author { get; set; } Property Value Type Description Nullable < EmbedAuthor > the embed author. | Improve this Doc View Source Color Gets or sets the embed color. Declaration public Color? Color { get; set; } Property Value Type Description Nullable < Color > the embed color; or null if the default color is used. | Improve this Doc View Source Description Gets or sets the description / content of the embed message. Declaration public string Description { get; set; } Property Value Type Description String the description / content of the embed message. | Improve this Doc View Source Fields Gets or sets a read-only list containing the embed fields. Declaration public IReadOnlyList<EmbedField> Fields { get; set; } Property Value Type Description IReadOnlyList < EmbedField > a read-only list containing the embed fields. | Improve this Doc View Source Footer Gets or sets the embed footer. Declaration public EmbedFooter? Footer { get; set; } Property Value Type Description Nullable < EmbedFooter > the embed footer. | Improve this Doc View Source ImageUrl Gets or sets the image URL of the embed. Declaration public Uri ImageUrl { get; set; } Property Value Type Description Uri the image URL of the embed; if null no image is shown in the embed. | Improve this Doc View Source IsEmpty Gets a value indicating whether the embed is empty. Declaration public bool IsEmpty { get; } Property Value Type Description Boolean a value indicating whether the embed is empty. | Improve this Doc View Source ThumbnailUrl Gets or sets the thumbnail URL of the embed. Declaration public Uri ThumbnailUrl { get; set; } Property Value Type Description Uri the thumbnail URL of the embed; if null no thumbnail is shown. | Improve this Doc View Source Timestamp Gets or sets the timestamp. Declaration public DateTimeOffset? Timestamp { get; set; } Property Value Type Description Nullable < DateTimeOffset > the timestamp; or null if no timestamp is provided. | Improve this Doc View Source Title Gets or sets the title. Declaration public string Title { get; set; } Property Value Type Description String the title; or null if no title is set. | Improve this Doc View Source TotalLength Gets the total length of all fields together. Declaration public int TotalLength { get; } Property Value Type Description Int32 the total length of all fields together. Remarks The length includes the lengths of. Embed Title ( Title ) Embed Description ( Description ) All field names ( Name / Name ) All field names ( Value / Value ) Footer Text ( Text / Text ) Author Name ( Name / Name ) The total length of all fields should be less than MaximumTotalLength characters. | Improve this Doc View Source Url Gets or sets the embed URL. Declaration public Uri Url { get; set; } Property Value Type Description Uri the embed URL. Methods | Improve this Doc View Source Build() Builds the EmbedMessage . Declaration public EmbedMessage Build() Returns Type Description EmbedMessage the EmbedMessage instance. | Improve this Doc View Source Clone() Declaration public EmbedBuilder Clone() Returns Type Description EmbedBuilder | Improve this Doc View Source Reset() Declaration public void Reset() | Improve this Doc View Source WithAuthor(EmbedAuthorBuilder) Sets the embed author to an instance build by the specified authorBuilder . Declaration public EmbedBuilder WithAuthor(EmbedAuthorBuilder authorBuilder) Parameters Type Name Description EmbedAuthorBuilder authorBuilder the author builder. Returns Type Description EmbedBuilder the EmbedBuilder instance. Exceptions Type Condition ArgumentNullException thrown if the specified authorBuilder is null . | Improve this Doc View Source WithAuthor(Member) Sets the embed author using the specified member . Declaration public EmbedBuilder WithAuthor(Member member) Parameters Type Name Description Member member the member to show in the footer. Returns Type Description EmbedBuilder the EmbedBuilder instance. Exceptions Type Condition ArgumentNullException thrown if the specified member is null . | Improve this Doc View Source WithAuthor(User) Sets the embed author using the specified user . Declaration public EmbedBuilder WithAuthor(User user) Parameters Type Name Description User user the user to show in the footer. Returns Type Description EmbedBuilder the EmbedBuilder instance. Exceptions Type Condition ArgumentNullException thrown if the specified user is null . | Improve this Doc View Source WithAuthor(Action<EmbedAuthorBuilder>) Sets the embed author using the specified builder action . Declaration public EmbedBuilder WithAuthor(Action<EmbedAuthorBuilder> action) Parameters Type Name Description Action < EmbedAuthorBuilder > action the builder callback. Returns Type Description EmbedBuilder the EmbedBuilder instance. Exceptions Type Condition ArgumentNullException thrown if the specified action is null . | Improve this Doc View Source WithAuthor(Nullable<EmbedAuthor>) Sets the embed author to the specified author . Declaration public EmbedBuilder WithAuthor(EmbedAuthor? author) Parameters Type Name Description Nullable < EmbedAuthor > author the author. Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithAuthor(String, String, String) Sets the embed author with the specified name , url and iconUrl . Declaration public EmbedBuilder WithAuthor(string name, string url = null, string iconUrl = null) Parameters Type Name Description String name the author name. String url the author URL. String iconUrl the author icon URL. Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithAuthor(String, Uri, IAttachment) Sets the embed author with the specified name , url and icon . Declaration public EmbedBuilder WithAuthor(string name, Uri url, IAttachment icon) Parameters Type Name Description String name the author name. Uri url the author URL. IAttachment icon the author icon attachment. Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithAuthor(String, Uri, Uri) Sets the embed author with the specified name , url and iconUrl . Declaration public EmbedBuilder WithAuthor(string name, Uri url, Uri iconUrl) Parameters Type Name Description String name the author name. Uri url the author URL. Uri iconUrl the author icon URL. Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithColor(KnownColor) Sets the embed color to the specified knownColor . Declaration public EmbedBuilder WithColor(KnownColor knownColor) Parameters Type Name Description KnownColor knownColor the known color to use. Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithColor(Nullable<Color>) Sets the embed color to the specified color . Declaration public EmbedBuilder WithColor(Color? color) Parameters Type Name Description Nullable < Color > color the color (if null the default color is used). Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithCurrentTimestamp() Sets the embed timestamp to the current UTC time. Declaration public EmbedBuilder WithCurrentTimestamp() Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithDescription(String) Sets the embed description to the specified description . Declaration public EmbedBuilder WithDescription(string description) Parameters Type Name Description String description the description. Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithField(EmbedField, Boolean) Adds an embed field to the builder. Declaration public EmbedBuilder WithField(EmbedField field, bool append = true) Parameters Type Name Description EmbedField field the field to add. Boolean append a value indicating whether the field should be appended to the other fields (if there any; true ), or a new list with the field should be created ( false ). Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithField(EmbedFieldBuilder, Boolean) Adds an embed field to the builder. Declaration public EmbedBuilder WithField(EmbedFieldBuilder fieldBuilder, bool append = true) Parameters Type Name Description EmbedFieldBuilder fieldBuilder the field builder. Boolean append a value indicating whether the field should be appended to the other fields (if there any; true ), or a new list with the field should be created ( false ). Returns Type Description EmbedBuilder the EmbedBuilder instance. Exceptions Type Condition ArgumentNullException thrown if the specified fieldBuilder is null . | Improve this Doc View Source WithField(Action<EmbedFieldBuilder>, Boolean) Adds an embed field to the builder. Declaration public EmbedBuilder WithField(Action<EmbedFieldBuilder> action, bool append = true) Parameters Type Name Description Action < EmbedFieldBuilder > action the builder action. Boolean append a value indicating whether the field should be appended to the other fields (if there any; true ), or a new list with the field should be created ( false ). Returns Type Description EmbedBuilder the EmbedBuilder instance. Exceptions Type Condition ArgumentNullException thrown if the specified action is null . | Improve this Doc View Source WithField(String, String, Boolean, Boolean) Adds an embed field to the builder. Declaration public EmbedBuilder WithField(string name, string value, bool inline = false, bool append = true) Parameters Type Name Description String name the field name. String value the field value. Boolean inline a value indicating whether the field is inline. Boolean append a value indicating whether the field should be appended to the other fields (if there any; true ), or a new list with the field should be created ( false ). Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithFields(EmbedField[]) Adds the specified fields to the builder (append). Declaration public EmbedBuilder WithFields(params EmbedField[] fields) Parameters Type Name Description EmbedField [] fields the fields to add. Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithFields(EmbedField[], Boolean) Adds the specified fields to the builder. Declaration public EmbedBuilder WithFields(EmbedField[] fields, bool append = false) Parameters Type Name Description EmbedField [] fields the fields to add. Boolean append a value indicating whether the fields should be appended to the other fields (if there any; true ), or a new list with the fields should be created ( false ). Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithFields(IEnumerable<EmbedField>, Boolean) Adds the specified fields to the builder. Declaration public EmbedBuilder WithFields(IEnumerable<EmbedField> fields, bool append = false) Parameters Type Name Description IEnumerable < EmbedField > fields the fields to add. Boolean append a value indicating whether the fields should be appended to the other fields (if there any; true ), or a new list with the fields should be created ( false ). Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithFooter(EmbedFooterBuilder) Sets the embed footer to an instance build by the specified footerBuilder . Declaration public EmbedBuilder WithFooter(EmbedFooterBuilder footerBuilder) Parameters Type Name Description EmbedFooterBuilder footerBuilder the footer builder. Returns Type Description EmbedBuilder the EmbedBuilder instance. Exceptions Type Condition ArgumentNullException thrown if the specified footerBuilder is null . | Improve this Doc View Source WithFooter(Member) Sets the embed footer using the specified member . Declaration public EmbedBuilder WithFooter(Member member) Parameters Type Name Description Member member the member to show in the footer. Returns Type Description EmbedBuilder the EmbedBuilder instance. Exceptions Type Condition ArgumentNullException thrown if the specified member is null . | Improve this Doc View Source WithFooter(User) Sets the embed footer using the specified user . Declaration public EmbedBuilder WithFooter(User user) Parameters Type Name Description User user the user to show in the footer. Returns Type Description EmbedBuilder the EmbedBuilder instance. Exceptions Type Condition ArgumentNullException thrown if the specified user is null . | Improve this Doc View Source WithFooter(Action<EmbedFooterBuilder>) Sets the embed footer using the specified builder action . Declaration public EmbedBuilder WithFooter(Action<EmbedFooterBuilder> action) Parameters Type Name Description Action < EmbedFooterBuilder > action the builder callback. Returns Type Description EmbedBuilder the EmbedBuilder instance. Exceptions Type Condition ArgumentNullException thrown if the specified action is null . | Improve this Doc View Source WithFooter(Nullable<EmbedFooter>) Sets the embed footer to the specified footer . Declaration public EmbedBuilder WithFooter(EmbedFooter? footer) Parameters Type Name Description Nullable < EmbedFooter > footer the footer. Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithFooter(String, IAttachment) Sets the embed footer with the specified text and icon . Declaration public EmbedBuilder WithFooter(string text, IAttachment icon) Parameters Type Name Description String text the footer text. IAttachment icon the footer icon attachment. Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithFooter(String, String) Sets the embed footer with the specified text and iconUrl . Declaration public EmbedBuilder WithFooter(string text, string iconUrl) Parameters Type Name Description String text the footer text. String iconUrl the footer icon URL. Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithFooter(String, Uri) Sets the embed footer with the specified text and iconUrl . Declaration public EmbedBuilder WithFooter(string text, Uri iconUrl = null) Parameters Type Name Description String text the footer text. Uri iconUrl the footer icon URL. Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithImage(IAttachment) Sets the embed image to the specified attachment . Declaration public EmbedBuilder WithImage(IAttachment attachment) Parameters Type Name Description IAttachment attachment the image attachment. Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithImage(String) Sets the embed image to the specified imageUrl . Declaration public EmbedBuilder WithImage(string imageUrl) Parameters Type Name Description String imageUrl the image URL. Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithImage(Uri) Sets the embed image to the specified imageUrl . Declaration public EmbedBuilder WithImage(Uri imageUrl) Parameters Type Name Description Uri imageUrl the image URL. Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithThumbnail(IAttachment) Sets the embed thumbnail to the specified attachment . Declaration public EmbedBuilder WithThumbnail(IAttachment attachment) Parameters Type Name Description IAttachment attachment the thumbnail image attachment. Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithThumbnail(String) Sets the embed thumbnail to the specified thumbnailUrl . Declaration public EmbedBuilder WithThumbnail(string thumbnailUrl) Parameters Type Name Description String thumbnailUrl the thumbnail image URL. Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithThumbnail(Uri) Sets the embed thumbnail to the specified thumbnailUrl . Declaration public EmbedBuilder WithThumbnail(Uri thumbnailUrl) Parameters Type Name Description Uri thumbnailUrl the thumbnail image URL. Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithTimestamp(Nullable<DateTimeOffset>) Sets the embed timestamp to the specified timestamp . Declaration public EmbedBuilder WithTimestamp(DateTimeOffset? timestamp) Parameters Type Name Description Nullable < DateTimeOffset > timestamp the timestamp. Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithTitle(String) Sets the embed title to the specified title . Declaration public EmbedBuilder WithTitle(string title) Parameters Type Name Description String title the message title. Returns Type Description EmbedBuilder the EmbedBuilder instance. Exceptions Type Condition ArgumentException thrown if the specified value exceeds the maximum character limit ( MaximumTitleLength ). | Improve this Doc View Source WithUrl(String) Sets the embed URL to the specified url . Declaration public EmbedBuilder WithUrl(string url) Parameters Type Name Description String url the embed URL. Returns Type Description EmbedBuilder the EmbedBuilder instance. | Improve this Doc View Source WithUrl(Uri) Sets the embed URL to the specified url . Declaration public EmbedBuilder WithUrl(Uri url) Parameters Type Name Description Uri url the embed URL. Returns Type Description EmbedBuilder the EmbedBuilder instance. Operators | Improve this Doc View Source Implicit(EmbedBuilder to EmbedMessage) Gets the embed message from the specified builder . Declaration public static implicit operator EmbedMessage(EmbedBuilder builder) Parameters Type Name Description EmbedBuilder builder the embedded message builder. Returns Type Description EmbedMessage See Also Build() Explicit Interface Implementations | Improve this Doc View Source ICloneable.Clone() Declaration object ICloneable.Clone() Returns Type Description Object Implements IBuilder<TResult> ICloneable<TSelf> System.ICloneable"
  },
  "api/Strade.Entities.EmbedField.html": {
    "href": "api/Strade.Entities.EmbedField.html",
    "title": "Struct EmbedField | Strade Developer Documentation",
    "keywords": "Struct EmbedField Represents an embedded message field. Implements IEquatable < EmbedField > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public struct EmbedField : IEquatable<EmbedField> Remarks More details can be found on https://discord.com/developers/docs/resources/channel#embed-object-embed-field-structure [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source EmbedField(EmbedFieldModel) Declaration public EmbedField(EmbedFieldModel model) Parameters Type Name Description EmbedFieldModel model | Improve this Doc View Source EmbedField(String, String, Boolean) Initializes a new instance of the EmbedField struct. Declaration public EmbedField(string name, string value, bool inline = false) Parameters Type Name Description String name the field name. String value the field value. Boolean inline a value indicating whether the field is inlined. Exceptions Type Condition ArgumentNullException thrown if the specified name is null . ArgumentNullException thrown if the specified value is null . Properties | Improve this Doc View Source IsInline Gets a value indicating whether the field is inlined. Declaration public bool IsInline { get; } Property Value Type Description Boolean a value indicating whether the field is inlined. | Improve this Doc View Source Name Gets the field name. Declaration public string Name { get; } Property Value Type Description String the field name. See Also MaximumFieldNameLength | Improve this Doc View Source Value Gets the field value. Declaration public string Value { get; } Property Value Type Description String the field value. See Also MaximumFieldValueLength Methods | Improve this Doc View Source Equals(EmbedField) Declaration public bool Equals(EmbedField other) Parameters Type Name Description EmbedField other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(EmbedField, EmbedField) Declaration public static bool operator ==(EmbedField left, EmbedField right) Parameters Type Name Description EmbedField left EmbedField right Returns Type Description Boolean | Improve this Doc View Source Inequality(EmbedField, EmbedField) Declaration public static bool operator !=(EmbedField left, EmbedField right) Parameters Type Name Description EmbedField left EmbedField right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Entities.EmbedFieldBuilder.html": {
    "href": "api/Strade.Entities.EmbedFieldBuilder.html",
    "title": "Class EmbedFieldBuilder | Strade Developer Documentation",
    "keywords": "Class EmbedFieldBuilder A builder for EmbedField instances. Inheritance Object EmbedFieldBuilder Implements IBuilder < EmbedField > ICloneable < EmbedFieldBuilder > ICloneable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public class EmbedFieldBuilder : IBuilder<EmbedField>, ICloneable<EmbedFieldBuilder>, ICloneable Constructors | Improve this Doc View Source EmbedFieldBuilder() Initializes a new instance of the EmbedFieldBuilder class. Declaration public EmbedFieldBuilder() | Improve this Doc View Source EmbedFieldBuilder(EmbedField) Initializes a new instance of the EmbedFieldBuilder class. Declaration public EmbedFieldBuilder(EmbedField field) Parameters Type Name Description EmbedField field the embed field to clone. Exceptions Type Condition ArgumentNullException thrown if the specified field is null . | Improve this Doc View Source EmbedFieldBuilder(EmbedFieldBuilder) Initializes a new instance of the EmbedFieldBuilder class. Declaration public EmbedFieldBuilder(EmbedFieldBuilder builder) Parameters Type Name Description EmbedFieldBuilder builder the embed field builder to clone. Exceptions Type Condition ArgumentNullException thrown if the specified builder is null . | Improve this Doc View Source EmbedFieldBuilder(String, String, Boolean) Initializes a new instance of the EmbedFieldBuilder class. Declaration public EmbedFieldBuilder(string name, string value, bool inline = false) Parameters Type Name Description String name the field name. String value the field value. Boolean inline a value indicating whether the field should be inline. Properties | Improve this Doc View Source IsInline Gets or sets a value indicating whether the field should be inline. Declaration public bool IsInline { get; set; } Property Value Type Description Boolean a value indicating whether the field should be inline. | Improve this Doc View Source Name Gets or sets the field name. Declaration public string Name { get; set; } Property Value Type Description String the field name. See Also MaximumFieldNameLength | Improve this Doc View Source Value Gets or sets the field value. Declaration public string Value { get; set; } Property Value Type Description String the field value. See Also MaximumFieldValueLength Methods | Improve this Doc View Source Build() Builds the EmbedField instance. Declaration public EmbedField Build() Returns Type Description EmbedField the EmbedField instance. | Improve this Doc View Source Clone() Declaration public EmbedFieldBuilder Clone() Returns Type Description EmbedFieldBuilder | Improve this Doc View Source Reset() Declaration public void Reset() | Improve this Doc View Source WithInline(Boolean) Sets the field inline (flag) to the specified inline . Declaration public EmbedFieldBuilder WithInline(bool inline = true) Parameters Type Name Description Boolean inline a value indicating whether the field should be inlined. Returns Type Description EmbedFieldBuilder the EmbedFieldBuilder instance. | Improve this Doc View Source WithName(String) Sets the field name to the specified name . Declaration public EmbedFieldBuilder WithName(string name) Parameters Type Name Description String name the field name. Returns Type Description EmbedFieldBuilder the EmbedFieldBuilder instance. | Improve this Doc View Source WithValue(String) Sets the field name to the specified value . Declaration public EmbedFieldBuilder WithValue(string value) Parameters Type Name Description String value the field value. Returns Type Description EmbedFieldBuilder the EmbedFieldBuilder instance. Operators | Improve this Doc View Source Implicit(EmbedFieldBuilder to EmbedField) Gets the embed field from the specified builder . Declaration public static implicit operator EmbedField(EmbedFieldBuilder builder) Parameters Type Name Description EmbedFieldBuilder builder the embedded field builder. Returns Type Description EmbedField See Also Build() Explicit Interface Implementations | Improve this Doc View Source ICloneable.Clone() Declaration object ICloneable.Clone() Returns Type Description Object Implements IBuilder<TResult> ICloneable<TSelf> System.ICloneable"
  },
  "api/Strade.Entities.EmbedFieldModel.html": {
    "href": "api/Strade.Entities.EmbedFieldModel.html",
    "title": "Class EmbedFieldModel | Strade Developer Documentation",
    "keywords": "Class EmbedFieldModel Represents an embedded message field. Inheritance Object EmbedFieldModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class EmbedFieldModel Remarks More details can be found on https://discord.com/developers/docs/resources/channel#embed-object-embed-field-structure [external, Discord Developer Documentation]. Properties | Improve this Doc View Source IsInline Gets or sets a value indicating whether the field is inlined. Declaration [JsonPropertyName(\"inline\")] public bool IsInline { get; set; } Property Value Type Description Boolean a value indicating whether the field is inlined. | Improve this Doc View Source Name Gets or sets the field name. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the field name. | Improve this Doc View Source Value Gets or sets the field value. Declaration [JsonPropertyName(\"value\")] public string Value { get; set; } Property Value Type Description String the field value."
  },
  "api/Strade.Entities.EmbedFooter.html": {
    "href": "api/Strade.Entities.EmbedFooter.html",
    "title": "Struct EmbedFooter | Strade Developer Documentation",
    "keywords": "Struct EmbedFooter Represents an embedded message footer. Implements IEquatable < EmbedFooter > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public struct EmbedFooter : IEquatable<EmbedFooter> Remarks More details can be found on https://discord.com/developers/docs/resources/channel#embed-object-embed-footer-structure [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source EmbedFooter(EmbedFooterModel) Declaration public EmbedFooter(EmbedFooterModel model) Parameters Type Name Description EmbedFooterModel model | Improve this Doc View Source EmbedFooter(String, Uri, Uri) Declaration public EmbedFooter(string text, Uri iconUrl = null, Uri proxiedIconUrl = null) Parameters Type Name Description String text Uri iconUrl Uri proxiedIconUrl Properties | Improve this Doc View Source IconUrl Gets the icon URL of the footer. Declaration public Uri IconUrl { get; } Property Value Type Description Uri the icon URL of the footer. | Improve this Doc View Source ProxiedIconUrl Gets the proxied icon URL of the footer. Declaration public Uri ProxiedIconUrl { get; } Property Value Type Description Uri the proxied icon URL of the footer. | Improve this Doc View Source Text Gets the footer text. Declaration public string Text { get; } Property Value Type Description String the footer text. See Also MaximumFooterTextLength Methods | Improve this Doc View Source Equals(EmbedFooter) Declaration public bool Equals(EmbedFooter other) Parameters Type Name Description EmbedFooter other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(EmbedFooter, EmbedFooter) Declaration public static bool operator ==(EmbedFooter left, EmbedFooter right) Parameters Type Name Description EmbedFooter left EmbedFooter right Returns Type Description Boolean | Improve this Doc View Source Inequality(EmbedFooter, EmbedFooter) Declaration public static bool operator !=(EmbedFooter left, EmbedFooter right) Parameters Type Name Description EmbedFooter left EmbedFooter right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Entities.EmbedFooterBuilder.html": {
    "href": "api/Strade.Entities.EmbedFooterBuilder.html",
    "title": "Class EmbedFooterBuilder | Strade Developer Documentation",
    "keywords": "Class EmbedFooterBuilder A builder for EmbedFooter instances. Inheritance Object EmbedFooterBuilder Implements IBuilder < EmbedFooter > ICloneable < EmbedFooterBuilder > ICloneable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public class EmbedFooterBuilder : IBuilder<EmbedFooter>, ICloneable<EmbedFooterBuilder>, ICloneable Constructors | Improve this Doc View Source EmbedFooterBuilder() Initializes a new instance of the EmbedFooterBuilder class. Declaration public EmbedFooterBuilder() | Improve this Doc View Source EmbedFooterBuilder(EmbedFooter) Initializes a new instance of the EmbedFooterBuilder class. Declaration public EmbedFooterBuilder(EmbedFooter footer) Parameters Type Name Description EmbedFooter footer the embed footer to clone. | Improve this Doc View Source EmbedFooterBuilder(EmbedFooterBuilder) Initializes a new instance of the EmbedFooterBuilder class. Declaration public EmbedFooterBuilder(EmbedFooterBuilder builder) Parameters Type Name Description EmbedFooterBuilder builder the embed footer builder to clone. Exceptions Type Condition ArgumentNullException thrown if the specified builder is null . | Improve this Doc View Source EmbedFooterBuilder(String, Uri) Initializes a new instance of the EmbedFooterBuilder class. Declaration public EmbedFooterBuilder(string text, Uri iconUrl = null) Parameters Type Name Description String text the footer text. Uri iconUrl the footer icon URL. Properties | Improve this Doc View Source IconUrl Gets or sets the footer icon URL. Declaration public Uri IconUrl { get; set; } Property Value Type Description Uri the footer icon URL. | Improve this Doc View Source Text Gets or sets the author text. Declaration public string Text { get; set; } Property Value Type Description String the author text. See Also MaximumFooterTextLength Methods | Improve this Doc View Source Build() Builds the EmbedFooter instance. Declaration public EmbedFooter Build() Returns Type Description EmbedFooter the EmbedFooter instance. | Improve this Doc View Source Clone() Declaration public EmbedFooterBuilder Clone() Returns Type Description EmbedFooterBuilder | Improve this Doc View Source Reset() Declaration public void Reset() | Improve this Doc View Source WithIcon(IAttachment) Sets the icon URL to the specified attachment . Declaration public EmbedFooterBuilder WithIcon(IAttachment attachment) Parameters Type Name Description IAttachment attachment the icon image attachment. Returns Type Description EmbedFooterBuilder the EmbedFooterBuilder instance. | Improve this Doc View Source WithIconUrl(String) Sets the icon URL to the specified iconUrl . Declaration public EmbedFooterBuilder WithIconUrl(string iconUrl) Parameters Type Name Description String iconUrl the icon image URL. Returns Type Description EmbedFooterBuilder the EmbedFooterBuilder instance. | Improve this Doc View Source WithIconUrl(Uri) Sets the icon URL to the specified iconUrl . Declaration public EmbedFooterBuilder WithIconUrl(Uri iconUrl) Parameters Type Name Description Uri iconUrl the icon image URL. Returns Type Description EmbedFooterBuilder the EmbedFooterBuilder instance. | Improve this Doc View Source WithText(String) Sets the text to the specified text . Declaration public EmbedFooterBuilder WithText(string text) Parameters Type Name Description String text the footer text. Returns Type Description EmbedFooterBuilder the EmbedFooterBuilder instance. Operators | Improve this Doc View Source Implicit(EmbedFooterBuilder to EmbedFooter) Gets the embed footer from the specified builder . Declaration public static implicit operator EmbedFooter(EmbedFooterBuilder builder) Parameters Type Name Description EmbedFooterBuilder builder the embedded footer builder. Returns Type Description EmbedFooter See Also Build() Explicit Interface Implementations | Improve this Doc View Source ICloneable.Clone() Declaration object ICloneable.Clone() Returns Type Description Object Implements IBuilder<TResult> ICloneable<TSelf> System.ICloneable"
  },
  "api/Strade.Entities.EmbedImage.html": {
    "href": "api/Strade.Entities.EmbedImage.html",
    "title": "Struct EmbedImage | Strade Developer Documentation",
    "keywords": "Struct EmbedImage Represents an embedded message image. Implements IEquatable < EmbedImage > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public struct EmbedImage : IEquatable<EmbedImage> Remarks More details can be found on https://discord.com/developers/docs/resources/channel#embed-object-embed-image-structure [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source EmbedImage(EmbedImageModel) Declaration public EmbedImage(EmbedImageModel model) Parameters Type Name Description EmbedImageModel model | Improve this Doc View Source EmbedImage(Uri, Nullable<EmbedMediaBounds>, Uri) Initializes a new instance of the EmbedImage struct. Declaration public EmbedImage(Uri url, EmbedMediaBounds? bounds = default(EmbedMediaBounds? ), Uri proxiedUrl = null) Parameters Type Name Description Uri url the URL of the embedded image. Nullable < EmbedMediaBounds > bounds the bounds of the embedded image. Uri proxiedUrl the bounds of the embedded image. Properties | Improve this Doc View Source Bounds Gets the bounds of the embedded image. Declaration public EmbedMediaBounds? Bounds { get; } Property Value Type Description Nullable < EmbedMediaBounds > the bounds of the embedded image. | Improve this Doc View Source ProxiedUrl Gets the proxied URL of the embedded image. Declaration public Uri ProxiedUrl { get; } Property Value Type Description Uri the proxied URL of the embedded image. | Improve this Doc View Source Url Gets the URL of the embedded image. Declaration public Uri Url { get; } Property Value Type Description Uri the URL of the embedded image. Methods | Improve this Doc View Source Equals(EmbedImage) Declaration public bool Equals(EmbedImage other) Parameters Type Name Description EmbedImage other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(EmbedImage, EmbedImage) Declaration public static bool operator ==(EmbedImage left, EmbedImage right) Parameters Type Name Description EmbedImage left EmbedImage right Returns Type Description Boolean | Improve this Doc View Source Inequality(EmbedImage, EmbedImage) Declaration public static bool operator !=(EmbedImage left, EmbedImage right) Parameters Type Name Description EmbedImage left EmbedImage right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Entities.EmbedImageModel.html": {
    "href": "api/Strade.Entities.EmbedImageModel.html",
    "title": "Class EmbedImageModel | Strade Developer Documentation",
    "keywords": "Class EmbedImageModel Represents an embedded message image. Inheritance Object EmbedImageModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class EmbedImageModel Remarks More details can be found on https://discord.com/developers/docs/resources/channel#embed-object-embed-image-structure [external, Discord Developer Documentation]. Properties | Improve this Doc View Source Height Gets or sets the height of the embedded image. Declaration [JsonPropertyName(\"height\")] public int? Height { get; set; } Property Value Type Description Nullable < Int32 > the height of the embedded image. | Improve this Doc View Source ProxiedUrl Gets or sets the proxied URL of the embedded image. Declaration [JsonPropertyName(\"proxy_url\")] [JsonConverter(typeof(UriJsonConverter))] public Uri ProxiedUrl { get; set; } Property Value Type Description Uri the proxied URL of the embedded image. | Improve this Doc View Source Url Gets or sets the URL of the embedded image. Declaration [JsonPropertyName(\"url\")] [JsonConverter(typeof(UriJsonConverter))] public Uri Url { get; set; } Property Value Type Description Uri the URL of the embedded image. | Improve this Doc View Source Width Gets or sets the width of the embedded image. Declaration [JsonPropertyName(\"width\")] public int? Width { get; set; } Property Value Type Description Nullable < Int32 > the width of the embedded image."
  },
  "api/Strade.Entities.EmbedMediaBounds.html": {
    "href": "api/Strade.Entities.EmbedMediaBounds.html",
    "title": "Struct EmbedMediaBounds | Strade Developer Documentation",
    "keywords": "Struct EmbedMediaBounds Implements IEquatable < EmbedMediaBounds > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public struct EmbedMediaBounds : IEquatable<EmbedMediaBounds> Constructors | Improve this Doc View Source EmbedMediaBounds(Int32, Int32) Initializes a new instance of the EmbedMediaBounds struct. Declaration public EmbedMediaBounds(int width, int height) Parameters Type Name Description Int32 width the width of the embedded media. Int32 height the height of the embedded media. Properties | Improve this Doc View Source Height Gets the height of the embedded media. Declaration public int Height { get; } Property Value Type Description Int32 the height of the embedded media. | Improve this Doc View Source Width Gets the width of the embedded media. Declaration public int Width { get; } Property Value Type Description Int32 the width of the embedded media. Methods | Improve this Doc View Source Equals(EmbedMediaBounds) Declaration public bool Equals(EmbedMediaBounds other) Parameters Type Name Description EmbedMediaBounds other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(EmbedMediaBounds, EmbedMediaBounds) Declaration public static bool operator ==(EmbedMediaBounds left, EmbedMediaBounds right) Parameters Type Name Description EmbedMediaBounds left EmbedMediaBounds right Returns Type Description Boolean | Improve this Doc View Source Inequality(EmbedMediaBounds, EmbedMediaBounds) Declaration public static bool operator !=(EmbedMediaBounds left, EmbedMediaBounds right) Parameters Type Name Description EmbedMediaBounds left EmbedMediaBounds right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Entities.EmbedMessage.html": {
    "href": "api/Strade.Entities.EmbedMessage.html",
    "title": "Class EmbedMessage | Strade Developer Documentation",
    "keywords": "Class EmbedMessage Represents an embedded message object. Inheritance Object EmbedMessage Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(EmbedMessageJsonConverter))] public sealed class EmbedMessage Remarks More details can be found on https://discord.com/developers/docs/resources/channel#message-object-message-types [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source EmbedMessage(EmbedMessageModel) Declaration public EmbedMessage(EmbedMessageModel model) Parameters Type Name Description EmbedMessageModel model | Improve this Doc View Source EmbedMessage(String, String, Nullable<Color>, Nullable<EmbedAuthor>, IReadOnlyList<EmbedField>, Uri, Nullable<EmbedFooter>, Nullable<EmbedImage>, Nullable<EmbedProvider>, Nullable<EmbedImage>, Nullable<DateTimeOffset>, Nullable<EmbedVideo>) Initializes a new instance of the EmbedMessage class. Declaration public EmbedMessage(string title = null, string description = null, Color? color = default(Color? ), EmbedAuthor? author = default(EmbedAuthor? ), IReadOnlyList<EmbedField> fields = null, Uri url = null, EmbedFooter? footer = default(EmbedFooter? ), EmbedImage? image = default(EmbedImage? ), EmbedProvider? provider = default(EmbedProvider? ), EmbedImage? thumbnail = default(EmbedImage? ), DateTimeOffset? timestamp = default(DateTimeOffset? ), EmbedVideo? video = default(EmbedVideo? )) Parameters Type Name Description String title the title of the embed message. String description the description of the embed message. Nullable < Color > color the color of the embed message. Nullable < EmbedAuthor > author the author of the embed message. IReadOnlyList < EmbedField > fields a list of the fields of the embed message. Uri url the URI of the embed message. Nullable < EmbedFooter > footer the footer of the embed message. Nullable < EmbedImage > image the image of the embed message. Nullable < EmbedProvider > provider the provider of the embed message. Nullable < EmbedImage > thumbnail the thumbnail of the embed message. Nullable < DateTimeOffset > timestamp the timestamp of the embed message; or null if the embed message has no timestamp. Nullable < EmbedVideo > video the video of the embed message. Fields | Improve this Doc View Source MaximumAuthorNameLength The maximum number of characters an author name can have. Declaration public const int MaximumAuthorNameLength = 256 Field Value Type Description Int32 Remarks More details can be found on https://discord.com/developers/docs/resources/channel#embed-limits-limits [external, Discord Developer Documentation]. | Improve this Doc View Source MaximumDescriptionLength The maximum number of characters a description can have. Declaration public const int MaximumDescriptionLength = 2048 Field Value Type Description Int32 Remarks More details can be found on https://discord.com/developers/docs/resources/channel#embed-limits-limits [external, Discord Developer Documentation]. | Improve this Doc View Source MaximumDisplayLength The maximum number of total displayed characters an embed message can have. Declaration public const int MaximumDisplayLength = 6000 Field Value Type Description Int32 Remarks More details can be found on https://discord.com/developers/docs/resources/channel#embed-limits-limits [external, Discord Developer Documentation]. | Improve this Doc View Source MaximumFieldCount The maximum number of fields an embed message can have. Declaration public const int MaximumFieldCount = 25 Field Value Type Description Int32 Remarks More details can be found on https://discord.com/developers/docs/resources/channel#embed-limits-limits [external, Discord Developer Documentation]. | Improve this Doc View Source MaximumFieldNameLength The maximum number of characters a field name can have. Declaration public const int MaximumFieldNameLength = 256 Field Value Type Description Int32 Remarks More details can be found on https://discord.com/developers/docs/resources/channel#embed-limits-limits [external, Discord Developer Documentation]. | Improve this Doc View Source MaximumFieldValueLength The maximum number of characters a field value can have. Declaration public const int MaximumFieldValueLength = 1024 Field Value Type Description Int32 Remarks More details can be found on https://discord.com/developers/docs/resources/channel#embed-limits-limits [external, Discord Developer Documentation]. | Improve this Doc View Source MaximumFooterTextLength The maximum number of characters a footer text can have. Declaration public const int MaximumFooterTextLength = 2048 Field Value Type Description Int32 Remarks More details can be found on https://discord.com/developers/docs/resources/channel#embed-limits-limits [external, Discord Developer Documentation]. | Improve this Doc View Source MaximumTitleLength The maximum number of characters a title can have. Declaration public const int MaximumTitleLength = 256 Field Value Type Description Int32 Remarks More details can be found on https://discord.com/developers/docs/resources/channel#embed-limits-limits [external, Discord Developer Documentation]. | Improve this Doc View Source MaximumTotalLength The maximum number the complete embed can have. Declaration public const int MaximumTotalLength = 6000 Field Value Type Description Int32 Remarks More details can be found on https://discord.com/developers/docs/resources/channel#embed-limits-limits [external, Discord Developer Documentation]. Properties | Improve this Doc View Source Author Gets the author of the embed message. Declaration public EmbedAuthor? Author { get; } Property Value Type Description Nullable < EmbedAuthor > the author of the embed message. | Improve this Doc View Source Color Gets the color of the embed message. Declaration public Color? Color { get; } Property Value Type Description Nullable < Color > the color of the embed message. | Improve this Doc View Source Description Gets the description of the embed message. Declaration public string Description { get; } Property Value Type Description String the description of the embed message. See Also MaximumDescriptionLength | Improve this Doc View Source Fields Gets a list of the fields of the embed message. Declaration public IReadOnlyList<EmbedField> Fields { get; } Property Value Type Description IReadOnlyList < EmbedField > a list of the fields of the embed message. See Also MaximumFieldCount | Improve this Doc View Source Footer Gets the footer of the embed message. Declaration public EmbedFooter? Footer { get; } Property Value Type Description Nullable < EmbedFooter > the footer of the embed message. | Improve this Doc View Source Image Gets the image of the embed message. Declaration public EmbedImage? Image { get; } Property Value Type Description Nullable < EmbedImage > the image of the embed message. | Improve this Doc View Source Provider Gets the provider of the embed message. Declaration public EmbedProvider? Provider { get; } Property Value Type Description Nullable < EmbedProvider > the provider of the embed message. | Improve this Doc View Source Thumbnail Gets the thumbnail of the embed message. Declaration public EmbedImage? Thumbnail { get; } Property Value Type Description Nullable < EmbedImage > the thumbnail of the embed message. | Improve this Doc View Source Timestamp Gets the timestamp of the embed message; or null if the embed message has no timestamp. Declaration public DateTimeOffset? Timestamp { get; } Property Value Type Description Nullable < DateTimeOffset > the timestamp of the embed message; or null if the embed message has no timestamp. | Improve this Doc View Source Title Gets the title of the embed message. Declaration public string Title { get; } Property Value Type Description String the title of the embed message. See Also MaximumTitleLength | Improve this Doc View Source Url Gets the URI of the embed message. Declaration public Uri Url { get; } Property Value Type Description Uri the URI of the embed message. | Improve this Doc View Source Video Gets the video of the embed message. Declaration public EmbedVideo? Video { get; } Property Value Type Description Nullable < EmbedVideo > the video of the embed message. Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Strade.Entities.EmbedProvider.html": {
    "href": "api/Strade.Entities.EmbedProvider.html",
    "title": "Struct EmbedProvider | Strade Developer Documentation",
    "keywords": "Struct EmbedProvider Represents an embedded message provider. Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public struct EmbedProvider Remarks More details can be found on https://discord.com/developers/docs/resources/channel#embed-object-embed-provider-structure [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source EmbedProvider(EmbedProviderModel) Declaration public EmbedProvider(EmbedProviderModel model) Parameters Type Name Description EmbedProviderModel model | Improve this Doc View Source EmbedProvider(String, Uri) Declaration public EmbedProvider(string name, Uri url) Parameters Type Name Description String name Uri url Properties | Improve this Doc View Source Name Gets the name of the provider. Declaration public string Name { get; } Property Value Type Description String the name of the provider. | Improve this Doc View Source Url Gets the URL of the provider. Declaration public Uri Url { get; } Property Value Type Description Uri the URL of the provider. Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString()"
  },
  "api/Strade.Entities.EmbedVideo.html": {
    "href": "api/Strade.Entities.EmbedVideo.html",
    "title": "Struct EmbedVideo | Strade Developer Documentation",
    "keywords": "Struct EmbedVideo Represents an embedded message video. Implements IEquatable < EmbedVideo > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public struct EmbedVideo : IEquatable<EmbedVideo> Remarks More details can be found on https://discord.com/developers/docs/resources/channel#embed-object-embed-video-structure [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source EmbedVideo(EmbedVideoModel) Declaration public EmbedVideo(EmbedVideoModel model) Parameters Type Name Description EmbedVideoModel model | Improve this Doc View Source EmbedVideo(Uri, Nullable<EmbedMediaBounds>, Uri) Initializes a new instance of the EmbedVideo struct. Declaration public EmbedVideo(Uri url, EmbedMediaBounds? bounds = default(EmbedMediaBounds? ), Uri proxiedUrl = null) Parameters Type Name Description Uri url the URL of the embedded video. Nullable < EmbedMediaBounds > bounds the bounds of the embedded video, or null if not available. Uri proxiedUrl the proxied URL of the embedded video, or null if not available. Properties | Improve this Doc View Source Bounds Gets the bounds of the embedded video, or null if not available.. Declaration public EmbedMediaBounds? Bounds { get; } Property Value Type Description Nullable < EmbedMediaBounds > the bounds of the embedded video, or null if not available.. | Improve this Doc View Source ProxiedUrl Gets the proxied URL of the embedded video, or null if not available.. Declaration public Uri ProxiedUrl { get; } Property Value Type Description Uri the proxied URL of the embedded video, or null if not available.. | Improve this Doc View Source Url Gets the URL of the embedded video. Declaration public Uri Url { get; } Property Value Type Description Uri the URL of the embedded video. Methods | Improve this Doc View Source Equals(EmbedVideo) Declaration public bool Equals(EmbedVideo other) Parameters Type Name Description EmbedVideo other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(EmbedVideo, EmbedVideo) Declaration public static bool operator ==(EmbedVideo left, EmbedVideo right) Parameters Type Name Description EmbedVideo left EmbedVideo right Returns Type Description Boolean | Improve this Doc View Source Inequality(EmbedVideo, EmbedVideo) Declaration public static bool operator !=(EmbedVideo left, EmbedVideo right) Parameters Type Name Description EmbedVideo left EmbedVideo right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Entities.Emoji.html": {
    "href": "api/Strade.Entities.Emoji.html",
    "title": "Struct Emoji | Strade Developer Documentation",
    "keywords": "Struct Emoji Represents an emoji represents in an Unicode String . Implements IEmote IEquatable < Emoji > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(EmoteJsonConverter))] public struct Emoji : IEmote, IEquatable<Emoji> Constructors | Improve this Doc View Source Emoji(String) Initializes a new instance of the Emoji struct. Declaration public Emoji(string unicode) Parameters Type Name Description String unicode the Unicode representation. Properties | Improve this Doc View Source Format Declaration public string Format { get; } Property Value Type Description String | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source QualifiedName Declaration public string QualifiedName { get; } Property Value Type Description String Methods | Improve this Doc View Source Equals(Emoji) Gets a value indicating whether the specified other is equal to the current instance. Declaration public bool Equals(Emoji other) Parameters Type Name Description Emoji other the Emoji to compare with. Returns Type Description Boolean a value indicating whether the specified other is equal to the current instance. | Improve this Doc View Source Equals(Object) Gets a value indicating whether the specified obj is equal to the current instance. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj the object to compare with. Returns Type Description Boolean a value indicating whether the specified obj is equal to the current instance. Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Gets the hash code of the Emoji instance. Declaration public override int GetHashCode() Returns Type Description Int32 the hash code of the Emoji instance. Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Builds a string representation of the Emoji instance. Declaration public override string ToString() Returns Type Description String a string representation of the Emoji instance. Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(Emoji, Emoji) Checks the equality of the specified Emoji instances ( left and right ). Declaration public static bool operator ==(Emoji left, Emoji right) Parameters Type Name Description Emoji left the left-hand emoji to check. Emoji right the right-hand emoji to check. Returns Type Description Boolean a value indicating whether the specified Emoji instances ( left and right ) are equal. | Improve this Doc View Source Inequality(Emoji, Emoji) Checks the equality of the specified Emoji instances ( left and right ). Declaration public static bool operator !=(Emoji left, Emoji right) Parameters Type Name Description Emoji left the left-hand emoji to check. Emoji right the right-hand emoji to check. Returns Type Description Boolean a value indicating whether the specified Emoji instances ( left and right ) are NOT equal. Implements IEmote System.IEquatable<T>"
  },
  "api/Strade.Entities.EmojiCreationProperties.html": {
    "href": "api/Strade.Entities.EmojiCreationProperties.html",
    "title": "Class EmojiCreationProperties | Strade Developer Documentation",
    "keywords": "Class EmojiCreationProperties The ICreationProperties for an emoji. (see https://discord.com/developers/docs/resources/emoji#create-guild-emoji-json-params for more details). Inheritance Object EmojiCreationProperties Implements ICreationProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class EmojiCreationProperties : ICreationProperties Properties | Improve this Doc View Source Image Gets or sets the image data for the emoji. Declaration [JsonPropertyName(\"image\")] public ImageData Image { get; set; } Property Value Type Description ImageData the image data for the emoji. | Improve this Doc View Source Name Gets or sets the name of the emoji. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the name of the emoji. | Improve this Doc View Source Roles Gets or sets a list of the roles that are white-listed to use the emoji. Declaration [JsonPropertyName(\"roles\")] public Optional<IReadOnlyList<Snowflake>> Roles { get; set; } Property Value Type Description Optional < IReadOnlyList < Snowflake >> a list of the roles that are white-listed to use the emoji. Methods | Improve this Doc View Source Validate() Declaration public void Validate() Implements ICreationProperties"
  },
  "api/Strade.Entities.EmojiModifyProperties.html": {
    "href": "api/Strade.Entities.EmojiModifyProperties.html",
    "title": "Class EmojiModifyProperties | Strade Developer Documentation",
    "keywords": "Class EmojiModifyProperties The IModifyProperties for an emoji. (see https://discord.com/developers/docs/resources/emoji#modify-guild-emoji-json-params for more details). Inheritance Object EmojiModifyProperties Implements IModifyProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class EmojiModifyProperties : IModifyProperties Properties | Improve this Doc View Source Name Gets or sets the name of the emoji. Declaration [JsonPropertyName(\"name\")] public Optional<string> Name { get; set; } Property Value Type Description Optional < String > the name of the emoji. | Improve this Doc View Source Roles Gets or sets a list of the roles that are white-listed to use the emoji. Declaration [JsonPropertyName(\"roles\")] public Optional<IReadOnlyList<Snowflake>> Roles { get; set; } Property Value Type Description Optional < IReadOnlyList < Snowflake >> a list of the roles that are white-listed to use the emoji. Methods | Improve this Doc View Source Validate() Declaration public void Validate() Implements IModifyProperties"
  },
  "api/Strade.Entities.Emote.html": {
    "href": "api/Strade.Entities.Emote.html",
    "title": "Class Emote | Strade Developer Documentation",
    "keywords": "Class Emote Represents an emote / emoji object. Inheritance Object Emote GuildEmote Implements IEmote IEquatable < Emote > IIdentifiable < Snowflake > IUpdateable < EmoteModel > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public class Emote : IEmote, IEquatable<Emote>, IIdentifiable<Snowflake>, IUpdateable<EmoteModel> Remarks See https://discord.com/developers/docs/resources/emoji#emoji-object for more details [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source Emote(Snowflake, String, Boolean) Initializes a new instance of the Emote class. Declaration public Emote(Snowflake id, string name, bool animated = false) Parameters Type Name Description Snowflake id the snowflake identifier of the emote. String name the name of the emote. Boolean animated a value indicating whether the emote is animated. Exceptions Type Condition ArgumentNullException thrown if the specified name is null . Properties | Improve this Doc View Source Format Declaration public string Format { get; } Property Value Type Description String | Improve this Doc View Source Id Declaration public Snowflake Id { get; } Property Value Type Description Snowflake | Improve this Doc View Source IsAnimated Gets a value indicating whether the emote is animated (GIF). Declaration public bool IsAnimated { get; } Property Value Type Description Boolean a value indicating whether the emote is animated (GIF). | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source QualifiedName Declaration public string QualifiedName { get; } Property Value Type Description String Methods | Improve this Doc View Source Equals(Emote) Declaration public bool Equals(Emote other) Parameters Type Name Description Emote other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) | Improve this Doc View Source FormatEmote(Snowflake, String, Boolean) Formats the emote representation from the specified id , name and animated flag. Declaration public static string FormatEmote(Snowflake id, string name, bool animated = false) Parameters Type Name Description Snowflake id the snowflake identifier of the emote. String name the name of the emote. Boolean animated a value indicating whether the emote is animated. Returns Type Description String the formatted emote string. | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() | Improve this Doc View Source Parse(String) Parses an emote from the specified content . Declaration public static Emote Parse(string content) Parameters Type Name Description String content the content to parse. Returns Type Description Emote the parsed emote. Exceptions Type Condition ArgumentException thrown if the specified content is not an invalid emote string. | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() | Improve this Doc View Source TryParse(String, out Emote) Tries to parse an emote from the specified content . Declaration public static bool TryParse(string content, out Emote result) Parameters Type Name Description String content the content to parse. Emote result the parsed emote. Returns Type Description Boolean a value indicating whether the parsing was successful. Exceptions Type Condition ArgumentNullException thrown if the specified content is null . | Improve this Doc View Source Update(EmoteModel) Declaration public void Update(EmoteModel model) Parameters Type Name Description EmoteModel model Operators | Improve this Doc View Source Equality(Emote, Emote) Declaration public static bool operator ==(Emote left, Emote right) Parameters Type Name Description Emote left Emote right Returns Type Description Boolean | Improve this Doc View Source Inequality(Emote, Emote) Declaration public static bool operator !=(Emote left, Emote right) Parameters Type Name Description Emote left Emote right Returns Type Description Boolean Implements IEmote System.IEquatable<T> IIdentifiable<TIdentifier> IUpdateable<TModel>"
  },
  "api/Strade.Entities.ExplicitContentFilterLevel.html": {
    "href": "api/Strade.Entities.ExplicitContentFilterLevel.html",
    "title": "Enum ExplicitContentFilterLevel | Strade Developer Documentation",
    "keywords": "Enum ExplicitContentFilterLevel A set of different explicit content filter levels. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(NumericEnumConverter<ExplicitContentFilterLevel>))] public enum ExplicitContentFilterLevel : byte Remarks More details can be found on https://discord.com/developers/docs/resources/guild#guild-object-explicit-content-filter-level [external, Discord Developer Documentation]. Fields Name Description AllMembers Denotes that all members are checked by the explicit content filter. Disabled Denotes that the explicit content filter is disabled. MembersWithoutRoles Denotes that all members without roles are checked by the explicit content filter. Extension Methods EnumExtensions.GetName<ExplicitContentFilterLevel>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.GroupChannelCreationProperties.html": {
    "href": "api/Strade.Entities.GroupChannelCreationProperties.html",
    "title": "Class GroupChannelCreationProperties | Strade Developer Documentation",
    "keywords": "Class GroupChannelCreationProperties The ICreationProperties for a channel. Inheritance Object GroupChannelCreationProperties Implements ICreationProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class GroupChannelCreationProperties : ICreationProperties Properties | Improve this Doc View Source Recipients Gets or sets a list of the group channel recipients. Declaration public IReadOnlyList<GroupChannelRecipient> Recipients { get; set; } Property Value Type Description IReadOnlyList < GroupChannelRecipient > a list of the group channel recipients. Methods | Improve this Doc View Source Validate() Declaration public void Validate() Implements ICreationProperties"
  },
  "api/Strade.Entities.GroupChannelRecipient.html": {
    "href": "api/Strade.Entities.GroupChannelRecipient.html",
    "title": "Class GroupChannelRecipient | Strade Developer Documentation",
    "keywords": "Class GroupChannelRecipient Represents a direct message group channel recipient. Inheritance Object GroupChannelRecipient Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class GroupChannelRecipient Constructors | Improve this Doc View Source GroupChannelRecipient(Snowflake, String, String) Initializes a new instance of the GroupChannelRecipient class. Declaration public GroupChannelRecipient(Snowflake userId, string accessToken, string nickname) Parameters Type Name Description Snowflake userId a reference to the recipient user. String accessToken the access token of the user that granted the bot application the gdm.join OAuth2 scope. String nickname the respective nickname of the user in the group channel. Exceptions Type Condition ArgumentNullException thrown if the specified accessToken is null . ArgumentNullException thrown if the specified nickname is null . | Improve this Doc View Source GroupChannelRecipient(User, String, String) Initializes a new instance of the GroupChannelRecipient class. Declaration public GroupChannelRecipient(User user, string accessToken, string nickname = null) Parameters Type Name Description User user the user. String accessToken the access token of the user that granted the bot application the gdm.join OAuth2 scope. String nickname the respective nickname of the user in the group channel; or null to use the username ( Username ) of the specified user . Exceptions Type Condition ArgumentNullException thrown if the specified user is null . ArgumentNullException thrown if the specified accessToken is null . Properties | Improve this Doc View Source AccessToken Gets the access token of the user that granted the bot application the gdm.join OAuth2 scope. Declaration public string AccessToken { get; } Property Value Type Description String the access token of the user that granted the bot application the gdm.join OAuth2 scope. | Improve this Doc View Source Nickname Gets the respective nickname of the user in the group channel. Declaration public string Nickname { get; } Property Value Type Description String the respective nickname of the user in the group channel. | Improve this Doc View Source UserId Gets the snowflake identifier of the recipient user. Declaration public Snowflake UserId { get; } Property Value Type Description Snowflake the snowflake identifier of the recipient user."
  },
  "api/Strade.Entities.GroupChannelRecipientCreationProperties.html": {
    "href": "api/Strade.Entities.GroupChannelRecipientCreationProperties.html",
    "title": "Class GroupChannelRecipientCreationProperties | Strade Developer Documentation",
    "keywords": "Class GroupChannelRecipientCreationProperties The ICreationProperties for adding a recipient to a group channel ( IGroupChannel ). Inheritance Object GroupChannelRecipientCreationProperties Implements ICreationProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class GroupChannelRecipientCreationProperties : ICreationProperties Properties | Improve this Doc View Source AccessToken Gets or sets the access token of the user that granted your application the gdm.join scope. Declaration [JsonPropertyName(\"access_token\")] public string AccessToken { get; set; } Property Value Type Description String the access token of the user that granted your application the gdm.join scope. | Improve this Doc View Source Nickname Gets or sets the user's nickname. Declaration [JsonPropertyName(\"nick\")] public string Nickname { get; set; } Property Value Type Description String the user's nickname. Methods | Improve this Doc View Source Validate() Declaration public void Validate() Implements ICreationProperties"
  },
  "api/Strade.Entities.Guild.html": {
    "href": "api/Strade.Entities.Guild.html",
    "title": "Class Guild | Strade Developer Documentation",
    "keywords": "Class Guild Represents a discord guild. Inheritance Object BaseGuild Guild Implements IGuild IHasIcon IModifiable < GuildModifyProperties > IDeletable IChannelContainer IChannelParent ISnowflakeEntity IIdentifiable < Snowflake > IDiscordEntity IUpdateable < GuildModel > Inherited Members BaseGuild.AfkChannelId BaseGuild.AfkTimeout BaseGuild.ApplicationId BaseGuild.BannerHash BaseGuild.BannerUrl BaseGuild.BoostCount BaseGuild.BoostTier BaseGuild.CanHaveAnimatedIcon BaseGuild.CanHaveBanner BaseGuild.CanHaveVanityUrl BaseGuild.DefaultMessageNotificationLevel BaseGuild.Description BaseGuild.DiscoverySplashHash BaseGuild.DiscoverySplashUrl BaseGuild.DownloadedMemberCount BaseGuild.Emotes BaseGuild.EveryoneRole BaseGuild.ExplicitContentFilterLevel BaseGuild.Features BaseGuild.HasAfkChannel BaseGuild.HasBanner BaseGuild.HasDiscoverySplash BaseGuild.HasIcon BaseGuild.HasPublicUpdatesChannel BaseGuild.HasRulesChannel BaseGuild.HasSplash BaseGuild.HasSystemChannel BaseGuild.HasVipRegions BaseGuild.HasWidgetChannel BaseGuild.IconHash BaseGuild.IconUrl BaseGuild.Id BaseGuild.IsBoostMessageEnabled BaseGuild.IsCommerce BaseGuild.IsCommunity BaseGuild.IsDiscoverable BaseGuild.IsLazy BaseGuild.IsOwner BaseGuild.IsPartnered BaseGuild.IsRelayEnabled BaseGuild.IsRelayForced BaseGuild.IsUnavailable BaseGuild.IsVerified BaseGuild.IsWelcomeMessageEnabled BaseGuild.IsWelcomeScreenEnabled BaseGuild.IsWidgetEnabled BaseGuild.MaximumMembers BaseGuild.MaximumPresences BaseGuild.MaximumVideoChannelUsers BaseGuild.MultiFactorAuthenticationLevel BaseGuild.Name BaseGuild.OwnerId BaseGuild.PreferredCulture BaseGuild.PublicUpdatesChannelId BaseGuild.Roles BaseGuild.RulesChannelId BaseGuild.SplashHash BaseGuild.SplashUrl BaseGuild.SystemChannelFlags BaseGuild.SystemChannelId BaseGuild.VanityCode BaseGuild.VanityUrl BaseGuild.VerificationLevel BaseGuild.VoiceRegionId BaseGuild.WidgetChannelId BaseGuild.ChannelsMap BaseGuild.MembersMap BaseGuild.RolesMap BaseGuild.AddMemberAsync(Snowflake, MemberCreationProperties, CancellationToken) BaseGuild.AddMemberAsync(User, MemberCreationProperties, CancellationToken) BaseGuild.AddMemberAsync(Snowflake, Action<MemberCreationProperties>, CancellationToken) BaseGuild.AddMemberAsync(User, Action<MemberCreationProperties>, CancellationToken) BaseGuild.BeginPruneAsync(BeginPruneProperties, CancellationToken) BaseGuild.BeginPruneAsync(Action<BeginPruneProperties>, CancellationToken) BaseGuild.BuildBannerUrl(ImageFormat, Nullable<Int32>) BaseGuild.BuildDiscoverySplashUrl(ImageFormat, Nullable<Int32>) BaseGuild.BuildIconUrl(ImageFormat, Nullable<Int32>) BaseGuild.BuildSplashUrl(ImageFormat, Nullable<Int32>) BaseGuild.CreateCategoryAsync(CategoryCreationProperties, CancellationToken) BaseGuild.CreateCategoryAsync(Action<CategoryCreationProperties>, CancellationToken) BaseGuild.CreateChannelAsync(GuildChannelCreationProperties, CancellationToken) BaseGuild.CreateChannelAsync(NestedChannelCreationProperties, CancellationToken) BaseGuild.CreateEmojiAsync(EmojiCreationProperties, CancellationToken) BaseGuild.CreateEmojiAsync(Action<EmojiCreationProperties>, CancellationToken) BaseGuild.CreateIntegrationAsync(GuildIntegrationCreationProperties, CancellationToken) BaseGuild.CreateIntegrationAsync(Action<GuildIntegrationCreationProperties>, CancellationToken) BaseGuild.CreateNewsChannelAsync(Action<NewsChannelCreationProperties>, CancellationToken) BaseGuild.CreateNewsChannelAsync(NewsChannelCreationProperties, CancellationToken) BaseGuild.CreateRoleAsync(RoleCreationProperties, CancellationToken) BaseGuild.CreateRoleAsync(Action<RoleCreationProperties>, CancellationToken) BaseGuild.CreateStoreChannelAsync(Action<StoreChannelCreationProperties>, CancellationToken) BaseGuild.CreateStoreChannelAsync(StoreChannelCreationProperties, CancellationToken) BaseGuild.CreateTextChannelAsync(TextChannelCreationProperties, CancellationToken) BaseGuild.CreateTextChannelAsync(Action<TextChannelCreationProperties>, CancellationToken) BaseGuild.CreateVoiceChannelAsync(VoiceChannelCreationProperties, CancellationToken) BaseGuild.CreateVoiceChannelAsync(Action<VoiceChannelCreationProperties>, CancellationToken) BaseGuild.DeleteAsync(CancellationToken) BaseGuild.GetAfkChannelAsync(CacheBehavior, CancellationToken) BaseGuild.GetAuditLogAsync(AuditLogProperties, CancellationToken) BaseGuild.GetAuditLogEntriesAsync(AuditLogProperties, CancellationToken) BaseGuild.GetAuditLogEntriesChunkedAsync(AuditLogProperties, CancellationToken) BaseGuild.GetBanAsync(Snowflake, CancellationToken) BaseGuild.GetBanAsync(User, CancellationToken) BaseGuild.GetBansAsync(CancellationToken) BaseGuild.GetCategoriesAsync(CacheBehavior, CancellationToken) BaseGuild.GetCategoryAsync(Snowflake, CacheBehavior, CancellationToken) BaseGuild.GetChannelAsync<TChannel>(Snowflake, CacheBehavior, CancellationToken) BaseGuild.GetChannelAsync(Snowflake, CacheBehavior, CancellationToken) BaseGuild.GetChannelsAsync(CacheBehavior, CancellationToken) BaseGuild.GetChannelsAsync<TChannel>(CacheBehavior, CancellationToken) BaseGuild.GetIntegrationsAsync(CancellationToken) BaseGuild.GetInvitesAsync(CancellationToken) BaseGuild.GetMemberAsync(Snowflake, CacheBehavior, CancellationToken) BaseGuild.GetNewsChannelAsync(Snowflake, CacheBehavior, CancellationToken) BaseGuild.GetNewsChannelsAsync(CacheBehavior, CancellationToken) BaseGuild.GetPermissionsAsync(CancellationToken) BaseGuild.GetPruneInformationAsync(PruneProperties, CancellationToken) BaseGuild.GetPruneInformationAsync(Action<PruneProperties>, CancellationToken) BaseGuild.GetPublicUpdatesChannelAsync(CacheBehavior, CancellationToken) BaseGuild.GetRole(Snowflake) BaseGuild.GetRulesChannelAsync(CacheBehavior, CancellationToken) BaseGuild.GetStoreChannelAsync(Snowflake, CacheBehavior, CancellationToken) BaseGuild.GetStoreChannelsAsync(CacheBehavior, CancellationToken) BaseGuild.GetSystemChannelAsync(CacheBehavior, CancellationToken) BaseGuild.GetTextChannelAsync(Snowflake, CacheBehavior, CancellationToken) BaseGuild.GetTextChannelsAsync(CacheBehavior, CancellationToken) BaseGuild.GetVanityInviteAsync(CancellationToken) BaseGuild.GetVoiceChannelAsync(Snowflake, CacheBehavior, CancellationToken) BaseGuild.GetVoiceChannelsAsync(CacheBehavior, CancellationToken) BaseGuild.GetVoiceRegionAsync(CancellationToken) BaseGuild.GetVoiceRegionsAsync(CancellationToken) BaseGuild.GetWidgetChannelAsync(CacheBehavior, CancellationToken) BaseGuild.GetWidgetImage(WidgetStyle) BaseGuild.HasFeature(String) BaseGuild.LeaveAsync(CancellationToken) BaseGuild.ModifyAsync(GuildModifyProperties, CancellationToken) BaseGuild.ModifyAsync(Action<GuildModifyProperties>, CancellationToken) BaseGuild.ModifyNicknameAsync(String, CancellationToken) BaseGuild.ModifyWidgetAsync(Action<GuildWidgetModifyProperties>, CancellationToken) BaseGuild.ModifyWidgetAsync(GuildWidgetModifyProperties, CancellationToken) BaseGuild.ToString() BaseGuild.UnbanAsync(User, CancellationToken) BaseGuild.UnbanAsync(Snowflake, CancellationToken) BaseGuild.UpdateChannelPositionsAsync(IReadOnlyList<ChannelPositionUpdate>, CancellationToken) BaseGuild.UpdateRolePositionsAsync(IReadOnlyList<RolePositionUpdate>, CancellationToken) BaseGuild.IUpdateable<GuildModel>.Update(GuildModel) BaseGuild.EnsureAvailable() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.dll Syntax public class Guild : BaseGuild, IGuild, IHasIcon, IModifiable<GuildModifyProperties>, IDeletable, IChannelContainer, IChannelParent, ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IUpdateable<GuildModel> Remarks More details can be found on https://discordapp.com/developers/docs/resources/guild#guild-object-guild-structure [external, Discord Developer Documentation]. The name guild is used by discord internally. The discord client uses the name server for discord guilds. Constructors | Improve this Doc View Source Guild(DiscordClient, GuildModel) Declaration public Guild(DiscordClient client, GuildModel model) Parameters Type Name Description DiscordClient client GuildModel model Properties | Improve this Doc View Source AfkChannel Gets the AFK channel assigned for the guild. Declaration public IVoiceChannel AfkChannel { get; } Property Value Type Description IVoiceChannel the AFK channel assigned for the guild; or null if no channel is assigned as an AFK channel in the guild. | Improve this Doc View Source AreMembersDownloaded Declaration public override bool AreMembersDownloaded { get; } Property Value Type Description Boolean Overrides BaseGuild.AreMembersDownloaded | Improve this Doc View Source Categories Gets an enumerable ( IEnumerable<T> ) that enumerates through all category (channels) / categories ( ICategory ) contained in the guild. Declaration public IEnumerable<ICategory> Categories { get; } Property Value Type Description IEnumerable < ICategory > an enumerable ( IEnumerable<T> ) that enumerates through all category (channels) / categories ( ICategory ) contained in the guild. | Improve this Doc View Source Channels Gets an enumerable ( IEnumerable<T> ) that enumerates through all channels ( IGuildChannel ) contained in the guild. Declaration public IEnumerable<IGuildChannel> Channels { get; } Property Value Type Description IEnumerable < IGuildChannel > an enumerable ( IEnumerable<T> ) that enumerates through all category channels( IGuildChannel ) contained in the guild. | Improve this Doc View Source Client Gets the discord client. Declaration public DiscordClient Client { get; } Property Value Type Description DiscordClient the discord client. | Improve this Doc View Source CurrentMember Gets the current bot member. Declaration public Member CurrentMember { get; } Property Value Type Description Member the current bot member. | Improve this Doc View Source MemberCount Gets the total number of members in the guild. Declaration public int MemberCount { get; } Property Value Type Description Int32 the total number of members in the guild. | Improve this Doc View Source PublicUpdatesChannel Gets the public updates channel assigned for the guild. Declaration public ITextChannel PublicUpdatesChannel { get; } Property Value Type Description ITextChannel the public updates channel assigned for the guild; or null if no channel is assigned as a public updates channel for the guild. | Improve this Doc View Source RulesChannel Gets the rules channel assigned for the guild. Declaration public ITextChannel RulesChannel { get; } Property Value Type Description ITextChannel the rules channel assigned for the guild; or null if no channel is assigned as a rules channel for the guild. | Improve this Doc View Source StoreChannels Gets an enumerable ( IEnumerable<T> ) that enumerates through all store channels ( IStoreChannel ) contained in the guild. Declaration public IEnumerable<IStoreChannel> StoreChannels { get; } Property Value Type Description IEnumerable < IStoreChannel > an enumerable ( IEnumerable<T> ) that enumerates through all store channels ( IStoreChannel ) contained in the guild. | Improve this Doc View Source SystemChannel Gets the system channel assigned for the guild. Declaration public ITextChannel SystemChannel { get; } Property Value Type Description ITextChannel the system channel assigned for the guild; or null if no channel is assigned as a system channel for the guild. | Improve this Doc View Source TextChannels Gets an enumerable ( IEnumerable<T> ) that enumerates through all text channels ( ITextChannel ) contained in the guild. Declaration public IEnumerable<ITextChannel> TextChannels { get; } Property Value Type Description IEnumerable < ITextChannel > an enumerable ( IEnumerable<T> ) that enumerates through all text channels ( ITextChannel ) contained in the guild. | Improve this Doc View Source VoiceChannels Gets an enumerable ( IEnumerable<T> ) that enumerates through all voice channels ( IVoiceChannel ) contained in the guild. Declaration public IEnumerable<IVoiceChannel> VoiceChannels { get; } Property Value Type Description IEnumerable < IVoiceChannel > an enumerable ( IEnumerable<T> ) that enumerates through all voice channels ( IVoiceChannel ) contained in the guild. | Improve this Doc View Source VoiceStates Gets an enumerable ( IEnumerable<T> ) that enumerates through all voice states for the guild. Declaration public IEnumerable<VoiceState> VoiceStates { get; } Property Value Type Description IEnumerable < VoiceState > an enumerable ( IEnumerable<T> ) that enumerates through all voice states for the guild. | Improve this Doc View Source WidgetChannel Gets the widget channel assigned for the guild. Declaration public IGuildChannel WidgetChannel { get; } Property Value Type Description IGuildChannel the widget channel assigned for the guild; or null if no channel is assigned as a widget channel for the guild. Methods | Improve this Doc View Source DownloadMembersAsync(CancellationToken) Declaration public override ValueTask<IEnumerable<Member>> DownloadMembersAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask < IEnumerable < Member >> Overrides BaseGuild.DownloadMembersAsync(CancellationToken) | Improve this Doc View Source GetCategory(Snowflake) Gets the category (channel) ( ICategory ) specified by channelId . Declaration public ICategory GetCategory(Snowflake channelId) Parameters Type Name Description Snowflake channelId the snowflake identifier of the category (channel). Returns Type Description ICategory the category (channel) ( ICategory ) specified by channelId ; or null if no category (channel) ( ICategory ) was found by the specified channelId . Remarks If a channel with the specified channelId is found but is not a category (channel) ( ICategory ) then null is returned. | Improve this Doc View Source GetChannel(Snowflake) Gets the channel ( IGuildChannel ) specified by channelId . Declaration public IGuildChannel GetChannel(Snowflake channelId) Parameters Type Name Description Snowflake channelId the snowflake identifier of the channel. Returns Type Description IGuildChannel the channel ( IGuildChannel ) specified by channelId ; or null if no channel ( IGuildChannel ) was found by the specified channelId . | Improve this Doc View Source GetChannel<TChannel>(Snowflake) Gets a channel ( IGuildChannel ) of the specified TChannel type specified by channelId . Declaration public TChannel GetChannel<TChannel>(Snowflake channelId) where TChannel : IGuildChannel Parameters Type Name Description Snowflake channelId the snowflake identifier of the channel. Returns Type Description TChannel the channel ( IGuildChannel ) specified by channelId ; or null if no channel ( IGuildChannel ) was found by the specified channelId . Type Parameters Name Description TChannel the type of the channel. Remarks If a channel with the specified channelId is found but is not a channel of the specified TChannel type then the default value (\" default(TChannel) \") is returned. | Improve this Doc View Source GetChannels<TChannel>() Gets an enumerable ( IEnumerable<T> ) that enumerates through all channels of the specified TChannel type. Declaration public IEnumerable<TChannel> GetChannels<TChannel>() where TChannel : IGuildChannel Returns Type Description IEnumerable <TChannel> an enumerable ( IEnumerable<T> ) that enumerates through all channels of the specified TChannel type. Type Parameters Name Description TChannel the type of the channel. | Improve this Doc View Source GetMembersAsync(Boolean, CancellationToken) Declaration public override ValueTask<IEnumerable<Member>> GetMembersAsync(bool download = true, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Boolean download CancellationToken cancellationToken Returns Type Description ValueTask < IEnumerable < Member >> Overrides BaseGuild.GetMembersAsync(Boolean, CancellationToken) | Improve this Doc View Source GetNewsChannel(Snowflake) Gets the announcement channel ( INewsChannel ) specified by channelId . Declaration public INewsChannel GetNewsChannel(Snowflake channelId) Parameters Type Name Description Snowflake channelId the snowflake identifier of the channel. Returns Type Description INewsChannel the announcement channel ( INewsChannel ) specified by channelId ; or null if no announcement channel ( INewsChannel ) was found by the specified channelId . Remarks If a channel with the specified channelId is found but is not a announcement channel ( INewsChannel ) then null is returned. | Improve this Doc View Source GetStoreChannel(Snowflake) Gets the store channel ( IStoreChannel ) specified by channelId . Declaration public IStoreChannel GetStoreChannel(Snowflake channelId) Parameters Type Name Description Snowflake channelId the snowflake identifier of the channel. Returns Type Description IStoreChannel the store channel ( IStoreChannel ) specified by channelId ; or null if no store channel ( IStoreChannel ) was found by the specified channelId . Remarks If a channel with the specified channelId is found but is not a store channel ( IStoreChannel ) then null is returned. | Improve this Doc View Source GetTextChannel(Snowflake) Gets the text channel ( ITextChannel ) specified by channelId . Declaration public ITextChannel GetTextChannel(Snowflake channelId) Parameters Type Name Description Snowflake channelId the snowflake identifier of the channel. Returns Type Description ITextChannel the text channel ( ITextChannel ) specified by channelId ; or null if no text channel ( ITextChannel ) was found by the specified channelId . Remarks If a channel with the specified channelId is found but is not a text channel ( ITextChannel ) then null is returned. | Improve this Doc View Source GetVoiceChannel(Snowflake) Gets the voice channel ( IVoiceChannel ) specified by channelId . Declaration public IVoiceChannel GetVoiceChannel(Snowflake channelId) Parameters Type Name Description Snowflake channelId the snowflake identifier of the channel. Returns Type Description IVoiceChannel the voice channel ( IVoiceChannel ) specified by channelId ; or null if no voice channel ( IVoiceChannel ) was found by the specified channelId . Remarks If a channel with the specified channelId is found but is not a voice channel ( IVoiceChannel ) then null is returned. | Improve this Doc View Source GetVoiceState(Member) Gets the voice state for the specified member . Declaration public VoiceState GetVoiceState(Member member) Parameters Type Name Description Member member the member to check for. Returns Type Description VoiceState the voice state; or null if no voice state is assigned to the specified member . Exceptions Type Condition ArgumentNullException thrown if the specified member is null . | Improve this Doc View Source GetVoiceState(Snowflake) Gets the voice state for the member specified by memberId . Declaration public VoiceState GetVoiceState(Snowflake memberId) Parameters Type Name Description Snowflake memberId the snowflake identifier of the member specified by memberId . Returns Type Description VoiceState the voice state; or null if no voice state is assigned to the member specified by memberId . | Improve this Doc View Source RequestMembersAsync(CancellationToken) Requests all members in the guild asynchronously. Declaration public Task RequestMembersAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source Update(GuildModel) Declaration protected override void Update(GuildModel model) Parameters Type Name Description GuildModel model Overrides BaseGuild.Update(GuildModel) | Improve this Doc View Source UpdateEmotes(IReadOnlyList<GuildEmote>) Declaration protected void UpdateEmotes(IReadOnlyList<GuildEmote> emotes) Parameters Type Name Description IReadOnlyList < GuildEmote > emotes | Improve this Doc View Source UpdateMembers(GuildMembersChunkEvent) Updates the members cache of the guild using a chunk event payload. Declaration protected virtual void UpdateMembers(GuildMembersChunkEvent payload) Parameters Type Name Description GuildMembersChunkEvent payload the members chunk event payload used to update the guild. Exceptions Type Condition ArgumentNullException thrown if the specified payload is null . InvalidOperationException thrown if the guild is currently unavailable. Implements IGuild IHasIcon IModifiable<TProperties> IDeletable IChannelContainer IChannelParent ISnowflakeEntity IIdentifiable<TIdentifier> IDiscordEntity IUpdateable<TModel> Extension Methods GuildExtensions.DisconnectVoiceAsync(IGuild, CancellationToken)"
  },
  "api/Strade.Entities.GuildBoostTier.html": {
    "href": "api/Strade.Entities.GuildBoostTier.html",
    "title": "Enum GuildBoostTier | Strade Developer Documentation",
    "keywords": "Enum GuildBoostTier A set of available guild premium tiers. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(NumericEnumConverter<GuildBoostTier>))] public enum GuildBoostTier : byte Remarks More details can be found on https://discord.com/developers/docs/resources/guild#guild-object-premium-tier [external, Discord Developer Documentation]. Fields Name Description None Denotes that the guild has no premium tier. Tier1 Denotes that the guild has premium tier 1 (100 server emoji slots, 128 kbps audio quality, animated server icon, 720p 60fps go live streams and custom server invite background). Tier2 Denotes that the guild has premium tier 2 (150 server emoji slots, 256 kbps audio quality, server banner, 50 MB upload limit for all members and 1080p 60fps Go Live Streams). Tier3 Denotes that the guild has premium tier 32 (250 server emoji slots, 384 kbps audio quality, vanity url for the server and 100 MB upload limit for all members). Extension Methods EnumExtensions.GetName<GuildBoostTier>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.GuildChannelCreationProperties.html": {
    "href": "api/Strade.Entities.GuildChannelCreationProperties.html",
    "title": "Class GuildChannelCreationProperties | Strade Developer Documentation",
    "keywords": "Class GuildChannelCreationProperties Abstraction for the ICreationProperties for guild channels. Inheritance Object GuildChannelCreationProperties CategoryCreationProperties NestedChannelCreationProperties Implements ICreationProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public abstract class GuildChannelCreationProperties : ICreationProperties Properties | Improve this Doc View Source Name Gets or sets the channel name. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the channel name. | Improve this Doc View Source PermissionOverwrites Gets or sets the permission overwrites. Declaration [JsonPropertyName(\"permission_overwrites\")] public IReadOnlyList<PermissionOverwrite> PermissionOverwrites { get; set; } Property Value Type Description IReadOnlyList < PermissionOverwrite > the permission overwrites. | Improve this Doc View Source Position Gets or sets the channel position. Declaration [JsonPropertyName(\"position\")] public Optional<int> Position { get; set; } Property Value Type Description Optional < Int32 > the channel position. | Improve this Doc View Source Type Gets the channel type. Declaration [JsonPropertyName(\"type\")] public abstract ChannelType Type { get; } Property Value Type Description ChannelType the channel type. Methods | Improve this Doc View Source Validate() Declaration public virtual void Validate() Implements ICreationProperties"
  },
  "api/Strade.Entities.GuildChannelModifyProperties.html": {
    "href": "api/Strade.Entities.GuildChannelModifyProperties.html",
    "title": "Class GuildChannelModifyProperties | Strade Developer Documentation",
    "keywords": "Class GuildChannelModifyProperties The IModifyProperties for a guild channel (see https://discord.com/developers/docs/resources/channel#modify-channel for more details on modifying channels). Inheritance Object GuildChannelModifyProperties CategoryModifyProperties NestedChannelModifyProperties Implements IModifyProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public abstract class GuildChannelModifyProperties : IModifyProperties Properties | Improve this Doc View Source Name Gets or sets the channel name. Declaration [JsonPropertyName(\"name\")] public Optional<string> Name { get; set; } Property Value Type Description Optional < String > the channel name. | Improve this Doc View Source PermissionOverwrites Gets or sets the permission overwrites. Declaration [JsonPropertyName(\"permission_overwrites\")] public Optional<IReadOnlyList<PermissionOverwrite>> PermissionOverwrites { get; set; } Property Value Type Description Optional < IReadOnlyList < PermissionOverwrite >> the permission overwrites. | Improve this Doc View Source Position Gets or sets the channel position. Declaration [JsonPropertyName(\"position\")] public Optional<int> Position { get; set; } Property Value Type Description Optional < Int32 > the channel position. Methods | Improve this Doc View Source Validate() Declaration public void Validate() Implements IModifyProperties"
  },
  "api/Strade.Entities.GuildCreationProperties.html": {
    "href": "api/Strade.Entities.GuildCreationProperties.html",
    "title": "Class GuildCreationProperties | Strade Developer Documentation",
    "keywords": "Class GuildCreationProperties The ICreationProperties for a IGuild entity. Inheritance Object GuildCreationProperties Implements ICreationProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class GuildCreationProperties : ICreationProperties Properties | Improve this Doc View Source DefaultMessageNotificationLevel Gets or sets the default message notification level of the guild. Declaration [JsonPropertyName(\"default_message_notifications\")] public Optional<MessageNotificationLevel> DefaultMessageNotificationLevel { get; set; } Property Value Type Description Optional < MessageNotificationLevel > the default message notification level of the guild. | Improve this Doc View Source ExplicitContentFilterLevel Gets or sets the explicit content filter level of the guild. Declaration [JsonPropertyName(\"explicit_content_filter\")] public Optional<ExplicitContentFilterLevel> ExplicitContentFilterLevel { get; set; } Property Value Type Description Optional < ExplicitContentFilterLevel > the explicit content filter level of the guild. | Improve this Doc View Source Icon Gets or sets the guild icon data. Declaration [JsonPropertyName(\"icon\")] public Optional<ImageData> Icon { get; set; } Property Value Type Description Optional < ImageData > the guild icon data. | Improve this Doc View Source Name Gets or sets the guild name. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the guild name. | Improve this Doc View Source VerificationLevel Gets or sets the verification level of the guild. Declaration [JsonPropertyName(\"verification_level\")] public Optional<VerificationLevel> VerificationLevel { get; set; } Property Value Type Description Optional < VerificationLevel > the verification level of the guild. | Improve this Doc View Source VoiceRegionId Gets or sets the identifier of the voice region to use. Declaration [JsonPropertyName(\"region\")] public Optional<string> VoiceRegionId { get; set; } Property Value Type Description Optional < String > the identifier of the voice region to use. Methods | Improve this Doc View Source Validate() Declaration public void Validate() Implements ICreationProperties"
  },
  "api/Strade.Entities.GuildEmote.html": {
    "href": "api/Strade.Entities.GuildEmote.html",
    "title": "Class GuildEmote | Strade Developer Documentation",
    "keywords": "Class GuildEmote Represents a guild emote. Inheritance Object Emote GuildEmote Implements IEquatable < Emote > IUpdateable < EmoteModel > IEmote ISnowflakeEntity IIdentifiable < Snowflake > IDiscordEntity IDeletable IModifiable < EmojiModifyProperties > Inherited Members Emote.Format Emote.Id Emote.IsAnimated Emote.Name Emote.QualifiedName Emote.FormatEmote(Snowflake, String, Boolean) Emote.Parse(String) Emote.TryParse(String, Emote) Emote.Equals(Object) Emote.Equals(Emote) Emote.GetHashCode() Emote.ToString() Emote.Update(EmoteModel) Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class GuildEmote : Emote, IEquatable<Emote>, IUpdateable<EmoteModel>, IEmote, ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IDeletable, IModifiable<EmojiModifyProperties> Constructors | Improve this Doc View Source GuildEmote(IDiscordRestClient, EmoteModel, Snowflake) Declaration public GuildEmote(IDiscordRestClient client, EmoteModel model, Snowflake guildId) Parameters Type Name Description IDiscordRestClient client EmoteModel model Snowflake guildId Properties | Improve this Doc View Source Client Declaration public IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient | Improve this Doc View Source Creator Gets the user that created the emote. Declaration public User Creator { get; } Property Value Type Description User the user that created the emote. | Improve this Doc View Source GuildId Declaration public Snowflake GuildId { get; } Property Value Type Description Snowflake | Improve this Doc View Source IsManaged Gets a value indicating whether the emoji is managed by an integration. Declaration public bool IsManaged { get; } Property Value Type Description Boolean a value indicating whether the emoji is managed by an integration. | Improve this Doc View Source RequireColons Gets a value indicating whether the emote must be wrapped in colons. Declaration public bool RequireColons { get; } Property Value Type Description Boolean a value indicating whether the emote must be wrapped in colons. | Improve this Doc View Source RoleIds Gets a list of the snowflake identifiers of the roles the emote is white-listed to. Declaration public IReadOnlyList<Snowflake> RoleIds { get; } Property Value Type Description IReadOnlyList < Snowflake > a list of the snowflake identifiers of the roles the emote is white-listed to. Methods | Improve this Doc View Source DeleteAsync(CancellationToken) Declaration public Task DeleteAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ModifyAsync(EmojiModifyProperties, CancellationToken) Declaration public Task ModifyAsync(EmojiModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description EmojiModifyProperties properties CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ModifyAsync(Action<EmojiModifyProperties>, CancellationToken) Declaration public Task ModifyAsync(Action<EmojiModifyProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < EmojiModifyProperties > action CancellationToken cancellationToken Returns Type Description Task Implements System.IEquatable<T> IUpdateable<TModel> IEmote ISnowflakeEntity IIdentifiable<TIdentifier> IDiscordEntity IDeletable IModifiable<TProperties>"
  },
  "api/Strade.Entities.GuildFeatures.html": {
    "href": "api/Strade.Entities.GuildFeatures.html",
    "title": "Class GuildFeatures | Strade Developer Documentation",
    "keywords": "Class GuildFeatures A set of guild features. Inheritance Object GuildFeatures Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public static class GuildFeatures Remarks More details can be found on https://discord.com/developers/docs/resources/guild#guild-object-guild-features [external, Discord Developer Documentation]. Fields | Improve this Doc View Source AnimatedIcon Denotes that the guild has access to set an animated guild icon. Declaration public const string AnimatedIcon = \"ANIMATED_ICON\" Field Value Type Description String | Improve this Doc View Source Banner Denotes that the guild has access to set a guild banner image. Declaration public const string Banner = \"BANNER\" Field Value Type Description String | Improve this Doc View Source Commerce Denotes that the guild has access to use commerce features (i.e. create store channels). Declaration public const string Commerce = \"COMMERCE\" Field Value Type Description String | Improve this Doc View Source Community Denotes that the guild is a community guild. Declaration public const string Community = \"COMMUNITY\" Field Value Type Description String | Improve this Doc View Source Discoverable Denotes that the guild is able to be discovered in the server discovery. Declaration public const string Discoverable = \"DISCOVERABLE\" Field Value Type Description String | Improve this Doc View Source EnabledDiscoverableBefore Denotes that the guild enabled server discovery before the Discovery Checklist launched. Declaration public const string EnabledDiscoverableBefore = \"ENABLED_DISCOVERABLE_BEFORE\" Field Value Type Description String | Improve this Doc View Source Featurable Denotes that the guild is able to be featured in the directory. Declaration public const string Featurable = \"FEATURABLE\" Field Value Type Description String | Improve this Doc View Source ForceRelay Denotes that connections to the guild are forced to be sharded to different nodes that relay information between each other. Declaration public const string ForceRelay = \"FORCE_RELAY\" Field Value Type Description String | Improve this Doc View Source InviteSplash Denotes that the guild has access to set an invite splash background. Declaration public const string InviteSplash = \"INVITE_SPLASH\" Field Value Type Description String | Improve this Doc View Source MemberListDisabled Denotes that the member list is disabled for the guild. Declaration public const string MemberListDisabled = \"MEMBER_LIST_DISABLED\" Field Value Type Description String | Improve this Doc View Source MoreEmoji Denotes that the guild is allowed to use more emojis than general. Declaration public const string MoreEmoji = \"MORE_EMOJI\" Field Value Type Description String | Improve this Doc View Source News Denotes that the guild has access to create news channels. Declaration public const string News = \"NEWS\" Field Value Type Description String | Improve this Doc View Source Partnered Denotes that the guild is partnered. Declaration public const string Partnered = \"PARTNERED\" Field Value Type Description String | Improve this Doc View Source RelayEnabled Denotes that connections to the guild are sharded to different nodes that relay information between each other. Declaration public const string RelayEnabled = \"RELAY_ENABLED\" Field Value Type Description String | Improve this Doc View Source VanityUrl Denotes that the guild has access to set a custom vanity URL. Declaration public const string VanityUrl = \"VANITY_URL\" Field Value Type Description String | Improve this Doc View Source Verified Denotes that the guild is verified. Declaration public const string Verified = \"VERIFIED\" Field Value Type Description String | Improve this Doc View Source VipRegions Denotes that the guild has access to set 320kpbs bitrate in voice channels. Declaration public const string VipRegions = \"VIP_REGIONS\" Field Value Type Description String | Improve this Doc View Source WelcomeScreenEnabled Denotes that the guild's welcome message screen is enabled. Declaration public const string WelcomeScreenEnabled = \"WELCOME_SCREEN_ENABLED\" Field Value Type Description String"
  },
  "api/Strade.Entities.GuildIntegration.html": {
    "href": "api/Strade.Entities.GuildIntegration.html",
    "title": "Class GuildIntegration | Strade Developer Documentation",
    "keywords": "Class GuildIntegration Represents the structure of a guild integration object. Inheritance Object GuildIntegrationInformation GuildIntegration Implements ISnowflakeEntity IIdentifiable < Snowflake > IDiscordEntity IDeletable IModifiable < GuildIntegrationModifyProperties > Inherited Members GuildIntegrationInformation.Account GuildIntegrationInformation.Client GuildIntegrationInformation.GuildId GuildIntegrationInformation.Id GuildIntegrationInformation.Name GuildIntegrationInformation.Type GuildIntegrationInformation.DeleteAsync(CancellationToken) GuildIntegrationInformation.ModifyAsync(GuildIntegrationModifyProperties, CancellationToken) GuildIntegrationInformation.ModifyAsync(Action<GuildIntegrationModifyProperties>, CancellationToken) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class GuildIntegration : GuildIntegrationInformation, ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IDeletable, IModifiable<GuildIntegrationModifyProperties> Remarks More details can be found on https://discord.com/developers/docs/resources/guild#integration-object-integration-structure [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source GuildIntegration(IDiscordRestClient, GuildIntegrationModel, Snowflake) Declaration public GuildIntegration(IDiscordRestClient client, GuildIntegrationModel model, Snowflake guildId) Parameters Type Name Description IDiscordRestClient client GuildIntegrationModel model Snowflake guildId Properties | Improve this Doc View Source AreEmoticonsEnabled Declaration public bool AreEmoticonsEnabled { get; } Property Value Type Description Boolean | Improve this Doc View Source ExpireBehavior Gets the behavior when an integration subscription lapses. Declaration public GuildIntegrationExpireBehavior ExpireBehavior { get; } Property Value Type Description GuildIntegrationExpireBehavior the behavior when an integration subscription lapses. | Improve this Doc View Source ExpireGracePeriod Gets the period where the integration will ignore lapsed subscriptions. Declaration public int ExpireGracePeriod { get; } Property Value Type Description Int32 the period (in seconds) where the integration will ignore lapsed subscriptions. | Improve this Doc View Source IsEnabled Gets a value indicating whether the integration is enabled. Declaration public bool IsEnabled { get; } Property Value Type Description Boolean a value indicating whether the integration is enabled. | Improve this Doc View Source IsSyncing Gets a value indicating whether the integration is syncing. Declaration public bool IsSyncing { get; } Property Value Type Description Boolean a value indicating whether the integration is syncing. | Improve this Doc View Source RoleId Gets the snowflake identifier of the role the integration is syncing with. Declaration public Snowflake RoleId { get; } Property Value Type Description Snowflake the snowflake identifier of the role the integration is syncing with. | Improve this Doc View Source SyncedAt Gets the type when the integration was synchronized the last time. Declaration public DateTimeOffset SyncedAt { get; } Property Value Type Description DateTimeOffset the type when the integration was synchronized the last time. | Improve this Doc View Source User Gets the user for the integration. Declaration public User User { get; } Property Value Type Description User the user for the integration. Implements ISnowflakeEntity IIdentifiable<TIdentifier> IDiscordEntity IDeletable IModifiable<TProperties>"
  },
  "api/Strade.Entities.GuildIntegrationCreationProperties.html": {
    "href": "api/Strade.Entities.GuildIntegrationCreationProperties.html",
    "title": "Class GuildIntegrationCreationProperties | Strade Developer Documentation",
    "keywords": "Class GuildIntegrationCreationProperties The ICreationProperties for a guild integration. Inheritance Object GuildIntegrationCreationProperties Implements ICreationProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class GuildIntegrationCreationProperties : ICreationProperties Properties | Improve this Doc View Source Id Gets or sets the snowflake identifier of the integration. Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; set; } Property Value Type Description Snowflake the snowflake identifier of the integration. | Improve this Doc View Source Type Gets or sets the type of the integration. Declaration [JsonPropertyName(\"type\")] public string Type { get; set; } Property Value Type Description String the type of the integration. Methods | Improve this Doc View Source Validate() Declaration public void Validate() Implements ICreationProperties"
  },
  "api/Strade.Entities.GuildIntegrationExpireBehavior.html": {
    "href": "api/Strade.Entities.GuildIntegrationExpireBehavior.html",
    "title": "Enum GuildIntegrationExpireBehavior | Strade Developer Documentation",
    "keywords": "Enum GuildIntegrationExpireBehavior Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public enum GuildIntegrationExpireBehavior : byte Fields Name Description Kick Denotes that the member should be kicked from the guild. RemoveRole Denotes that the member's role should be removed. Extension Methods EnumExtensions.GetName<GuildIntegrationExpireBehavior>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.GuildIntegrationInformation.html": {
    "href": "api/Strade.Entities.GuildIntegrationInformation.html",
    "title": "Class GuildIntegrationInformation | Strade Developer Documentation",
    "keywords": "Class GuildIntegrationInformation Inheritance Object GuildIntegrationInformation GuildIntegration Implements ISnowflakeEntity IIdentifiable < Snowflake > IDiscordEntity IDeletable IModifiable < GuildIntegrationModifyProperties > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public class GuildIntegrationInformation : ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IDeletable, IModifiable<GuildIntegrationModifyProperties> Constructors | Improve this Doc View Source GuildIntegrationInformation(IDiscordRestClient, GuildIntegrationInformationModel, Snowflake) Declaration public GuildIntegrationInformation(IDiscordRestClient client, GuildIntegrationInformationModel model, Snowflake guildId) Parameters Type Name Description IDiscordRestClient client GuildIntegrationInformationModel model Snowflake guildId Properties | Improve this Doc View Source Account Gets the integration account information. Declaration public IntegrationAccount Account { get; } Property Value Type Description IntegrationAccount the integration account information. | Improve this Doc View Source Client Declaration public IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient | Improve this Doc View Source GuildId Gets the snowflake identifier of the guild the integration belongs to. Declaration public Snowflake GuildId { get; } Property Value Type Description Snowflake the snowflake identifier of the guild the integration belongs to. | Improve this Doc View Source Id Declaration public Snowflake Id { get; } Property Value Type Description Snowflake | Improve this Doc View Source Name Gets the integration name. Declaration public string Name { get; } Property Value Type Description String the integration name. | Improve this Doc View Source Type Gets the type of the integration (e.g. \"twitch\" , \"youtube\" , etc.). Declaration public string Type { get; } Property Value Type Description String the type of the integration (e.g. \"twitch\" , \"youtube\" , etc.) Methods | Improve this Doc View Source DeleteAsync(CancellationToken) Declaration public Task DeleteAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ModifyAsync(GuildIntegrationModifyProperties, CancellationToken) Declaration public Task ModifyAsync(GuildIntegrationModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GuildIntegrationModifyProperties properties CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ModifyAsync(Action<GuildIntegrationModifyProperties>, CancellationToken) Declaration public Task ModifyAsync(Action<GuildIntegrationModifyProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < GuildIntegrationModifyProperties > action CancellationToken cancellationToken Returns Type Description Task Implements ISnowflakeEntity IIdentifiable<TIdentifier> IDiscordEntity IDeletable IModifiable<TProperties>"
  },
  "api/Strade.Entities.GuildIntegrationModifyProperties.html": {
    "href": "api/Strade.Entities.GuildIntegrationModifyProperties.html",
    "title": "Class GuildIntegrationModifyProperties | Strade Developer Documentation",
    "keywords": "Class GuildIntegrationModifyProperties The IModifyProperties for guild integrations. Inheritance Object GuildIntegrationModifyProperties Implements IModifyProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class GuildIntegrationModifyProperties : IModifyProperties Properties | Improve this Doc View Source EnableEmoticons Gets or sets a value indicating whether emoticons should be synced for the integration (twitch integrations only). Declaration [JsonPropertyName(\"enable_emoticons\")] public Optional<bool> EnableEmoticons { get; set; } Property Value Type Description Optional < Boolean > a value indicating whether emoticons should be synced for the integration. | Improve this Doc View Source ExpireBehavior Gets or sets the behavior when an integration subscription lapses. Declaration [JsonPropertyName(\"expire_behavior\")] public Optional<int> ExpireBehavior { get; set; } Property Value Type Description Optional < Int32 > the behavior when an integration subscription lapses. | Improve this Doc View Source ExpireGracePeriod Gets or sets the period where the integration will ignore lapsed subscriptions. Declaration [JsonPropertyName(\"expire_grace_period\")] public Optional<int> ExpireGracePeriod { get; set; } Property Value Type Description Optional < Int32 > the period (in seconds) where the integration will ignore lapsed subscriptions. Methods | Improve this Doc View Source Validate() Declaration public void Validate() Implements IModifyProperties"
  },
  "api/Strade.Entities.GuildModifyProperties.html": {
    "href": "api/Strade.Entities.GuildModifyProperties.html",
    "title": "Class GuildModifyProperties | Strade Developer Documentation",
    "keywords": "Class GuildModifyProperties The IModifyProperties for a IGuild . Inheritance Object GuildModifyProperties Implements IModifyProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class GuildModifyProperties : IModifyProperties Properties | Improve this Doc View Source AfkChannelId Gets or sets the AFK channel of the guild. Declaration [JsonPropertyName(\"afk_channel_id\")] public Optional<Snowflake> AfkChannelId { get; set; } Property Value Type Description Optional < Snowflake > the AFK channel of the guild. | Improve this Doc View Source AfkTimeout Gets or sets the AFK timeout of the guild. Declaration [JsonPropertyName(\"afk_timeout\")] public Optional<int> AfkTimeout { get; set; } Property Value Type Description Optional < Int32 > the AFK timeout (in seconds) of the guild. | Improve this Doc View Source DefaultMessageNotificationLevel Gets or sets the default message notification level of the guild. Declaration [JsonPropertyName(\"default_message_notifications\")] public Optional<MessageNotificationLevel> DefaultMessageNotificationLevel { get; set; } Property Value Type Description Optional < MessageNotificationLevel > the default message notification level of the guild. | Improve this Doc View Source ExplicitContentFilterLevel Gets or sets the explicit content filter level of the guild. Declaration [JsonPropertyName(\"explicit_content_filter\")] public Optional<ExplicitContentFilterLevel> ExplicitContentFilterLevel { get; set; } Property Value Type Description Optional < ExplicitContentFilterLevel > the explicit content filter level of the guild. | Improve this Doc View Source Icon Gets or sets the icon data of the guild. Declaration [JsonPropertyName(\"icon\")] public Optional<ImageData> Icon { get; set; } Property Value Type Description Optional < ImageData > the icon data of the guild. | Improve this Doc View Source Name Gets or sets the guild name. Declaration [JsonPropertyName(\"name\")] public Optional<string> Name { get; set; } Property Value Type Description Optional < String > the guild name. | Improve this Doc View Source OwnerId Gets or sets the user snowflake identifier of the guild owner. Declaration [JsonPropertyName(\"owner_id\")] public Optional<Snowflake> OwnerId { get; set; } Property Value Type Description Optional < Snowflake > the user snowflake identifier of the guild owner. | Improve this Doc View Source Splash Gets or sets the splash image data of the guild. Declaration [JsonPropertyName(\"splash\")] public Optional<ImageData> Splash { get; set; } Property Value Type Description Optional < ImageData > the splash image data of the guild. | Improve this Doc View Source SystemChannelId Gets or sets the channel identifier snowflake of the system channel. Declaration [JsonPropertyName(\"system_channel_id\")] public Optional<Snowflake> SystemChannelId { get; set; } Property Value Type Description Optional < Snowflake > the channel identifier snowflake of the system channel. | Improve this Doc View Source VerificationLevel Gets or sets the guild verification level. Declaration [JsonPropertyName(\"verification_level\")] public Optional<VerificationLevel> VerificationLevel { get; set; } Property Value Type Description Optional < VerificationLevel > the guild verification level. | Improve this Doc View Source VoiceRegion Gets or sets the guild voice region identifier. Declaration [JsonPropertyName(\"region\")] public Optional<string> VoiceRegion { get; set; } Property Value Type Description Optional < String > the guild voice region identifier. Methods | Improve this Doc View Source Validate() Declaration public void Validate() Implements IModifyProperties"
  },
  "api/Strade.Entities.GuildPreview.html": {
    "href": "api/Strade.Entities.GuildPreview.html",
    "title": "Class GuildPreview | Strade Developer Documentation",
    "keywords": "Class GuildPreview Represents the preview structure for a partial guild. Inheritance Object GuildPreview Implements IIdentifiable < Snowflake > IHasIcon Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class GuildPreview : IIdentifiable<Snowflake>, IHasIcon Constructors | Improve this Doc View Source GuildPreview(GuildPreviewModel) Declaration public GuildPreview(GuildPreviewModel model) Parameters Type Name Description GuildPreviewModel model Properties | Improve this Doc View Source HasIcon Declaration public bool HasIcon { get; } Property Value Type Description Boolean | Improve this Doc View Source HasSplash Declaration public bool HasSplash { get; } Property Value Type Description Boolean | Improve this Doc View Source IconHash Gets the icon hash. Declaration public string IconHash { get; } Property Value Type Description String the icon hash. | Improve this Doc View Source IconUrl Declaration public Uri IconUrl { get; } Property Value Type Description Uri | Improve this Doc View Source Id Gets the snowflake identifier of the guild. Declaration public Snowflake Id { get; } Property Value Type Description Snowflake the snowflake identifier of the guild. | Improve this Doc View Source Name Gets the guild name. Declaration public string Name { get; } Property Value Type Description String the guild name. | Improve this Doc View Source SplashHash Declaration public string SplashHash { get; } Property Value Type Description String | Improve this Doc View Source SplashUrl Declaration public Uri SplashUrl { get; } Property Value Type Description Uri | Improve this Doc View Source VanityUrlCode Declaration public string VanityUrlCode { get; } Property Value Type Description String | Improve this Doc View Source VerificationLevel Declaration public VerificationLevel VerificationLevel { get; } Property Value Type Description VerificationLevel Methods | Improve this Doc View Source BuildIconUrl(ImageFormat, Nullable<Int32>) Declaration public Uri BuildIconUrl(ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description ImageFormat format Nullable < Int32 > size Returns Type Description Uri | Improve this Doc View Source BuildSplashUrl(ImageFormat, Nullable<Int32>) Declaration public Uri BuildSplashUrl(ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description ImageFormat format Nullable < Int32 > size Returns Type Description Uri | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements IIdentifiable<TIdentifier> IHasIcon"
  },
  "api/Strade.Entities.GuildWidget.html": {
    "href": "api/Strade.Entities.GuildWidget.html",
    "title": "Class GuildWidget | Strade Developer Documentation",
    "keywords": "Class GuildWidget Represents the structure of a guild widget object. Inheritance Object GuildWidget Implements IDiscordEntity Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class GuildWidget : IDiscordEntity Remarks More details can be found on https://discord.com/developers/docs/resources/guild#guild-widget-object [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source GuildWidget(IDiscordRestClient, GuildWidgetModel) Declaration public GuildWidget(IDiscordRestClient client, GuildWidgetModel model) Parameters Type Name Description IDiscordRestClient client GuildWidgetModel model Properties | Improve this Doc View Source ChannelId Gets the channel identifier where the embed is enabled on. Declaration public Snowflake? ChannelId { get; } Property Value Type Description Nullable < Snowflake > the channel identifier where the embed is enabled on; or null if not enabled. | Improve this Doc View Source Client Declaration public IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient | Improve this Doc View Source IsEnabled Gets a value indicating whether the guild embed is enabled. Declaration public bool IsEnabled { get; } Property Value Type Description Boolean a value indicating whether the guild embed is enabled. Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements IDiscordEntity"
  },
  "api/Strade.Entities.GuildWidgetModifyProperties.html": {
    "href": "api/Strade.Entities.GuildWidgetModifyProperties.html",
    "title": "Class GuildWidgetModifyProperties | Strade Developer Documentation",
    "keywords": "Class GuildWidgetModifyProperties The IModifyProperties for modifying a guild widget. Inheritance Object GuildWidgetModifyProperties Implements IModifyProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class GuildWidgetModifyProperties : IModifyProperties Properties | Improve this Doc View Source ChannelId Gets the channel identifier where the widget is enabled on. Declaration [JsonPropertyName(\"channel_id\")] public Optional<Snowflake> ChannelId { get; } Property Value Type Description Optional < Snowflake > the channel identifier where the widget is enabled on; or null if not enabled. Methods | Improve this Doc View Source Validate() Declaration public void Validate() Implements IModifyProperties"
  },
  "api/Strade.Entities.html": {
    "href": "api/Strade.Entities.html",
    "title": "Namespace Strade.Entities | Strade Developer Documentation",
    "keywords": "Namespace Strade.Entities Classes Activity Represents an activity object. ActivityAssets Represents an activity assets object. ActivityAssetsBuilder A builder for the ActivityAssets class. ActivityBuilder A builder for activity objects. ActivityBuilder<TBuilder> A builder for activity objects. ActivityParty Represents an activity party object. ActivityPartyBuilder A builder for the ActivityParty class. ActivitySecrets Represents an activity secret object. ActivitySecretsBuilder A builder for activity secrets objects. ActivityTimestamps Represents an activity timestamps object. ActivityTimestampsBuilder A builder for activity time objects. ApplicationCommand ApplicationInformation Holds information about an Oauth2 application. Attachment AuditLog Represents an audit log of a guild. An audit log logs administrative operations for example when a channel is created, a user was banned, etc. AuditLogEntry Represents an entry in the audit log and records an administrative operation on the guild. AuditLogProperties The IRetrieveProperties for an AuditLog . Ban Represents the structure of a ban. BaseGuild BeginPruneProperties CallInformation CategoryCreationProperties The ICreationProperties for categories (category channels). CategoryModifyProperties The IModifyProperties for categories (category channels). ChannelMention Represents a channel mention. ChannelPositionUpdate Represents a structure used to update channels position. ChannelPreview Represents the preview structure for a partial channel. CommandCreationProperties CommandModifyProperties CommandOption CommandOptionCreationProperties CurrentUser Represents a self-user object which holds information about the associated application user. CurrentUserModifyProperties Modification properties for a CurrentUser . EmbedAuthorBuilder A builder for EmbedAuthor instances. EmbedBuilder EmbedFieldBuilder A builder for EmbedField instances. EmbedFieldModel Represents an embedded message field. EmbedFooterBuilder A builder for EmbedFooter instances. EmbedImageModel Represents an embedded message image. EmbedMessage Represents an embedded message object. EmojiCreationProperties The ICreationProperties for an emoji. (see https://discord.com/developers/docs/resources/emoji#create-guild-emoji-json-params for more details). EmojiModifyProperties The IModifyProperties for an emoji. (see https://discord.com/developers/docs/resources/emoji#modify-guild-emoji-json-params for more details). Emote Represents an emote / emoji object. GroupChannelCreationProperties The ICreationProperties for a channel. GroupChannelRecipient Represents a direct message group channel recipient. GroupChannelRecipientCreationProperties The ICreationProperties for adding a recipient to a group channel ( IGroupChannel ). Guild Represents a discord guild. GuildChannelCreationProperties Abstraction for the ICreationProperties for guild channels. GuildChannelModifyProperties The IModifyProperties for a guild channel (see https://discord.com/developers/docs/resources/channel#modify-channel for more details on modifying channels). GuildCreationProperties The ICreationProperties for a IGuild entity. GuildEmote Represents a guild emote. GuildFeatures A set of guild features. GuildIntegration Represents the structure of a guild integration object. GuildIntegrationCreationProperties The ICreationProperties for a guild integration. GuildIntegrationInformation GuildIntegrationModifyProperties The IModifyProperties for guild integrations. GuildModifyProperties The IModifyProperties for a IGuild . GuildPreview Represents the preview structure for a partial guild. GuildWidget Represents the structure of a guild widget object. GuildWidgetModifyProperties The IModifyProperties for modifying a guild widget. ImageData Represents an object that holds Base64 encoded image data. IntegrationAccount Represents the structure of an integration account object. Interaction InteractionCommandData InteractionCommandOptionData InteractionResponseCreationProperties InteractionResponseData Invite Represents a discord invite. InviteCreationProperties The creation properties ( ICreationProperties ) for an invite. InviteInformation Represents an invite with invite meta-data. InviteProperties Member The guild member structure. MemberBanCreationProperties The ICreationProperties for creating a guild ban ( Ban ). MemberCreationProperties The ICreationProperties for adding a member ( Member ) to a guild ( IGuild ). MemberDisconnectAuditLogOptions MemberDownloadProperties MemberModifyProperties The IModifyProperties for modifying a guild member. MemberMoveAuditLogOptions MemberPruneAuditLogOptions MentionProperties MessageApplication Represents a message application object. MessageAttachment Represents a message attachment. MessageBulkDeleteAuditLogOptions MessageCreationProperties The ICreationProperties for a Strade.Entities.Message . MessageDeleteAuditLogOptions MessageModifyProperties The IModifyProperties for a Strade.Entities.Message entity. MessagePinAuditLogOptions MessageProperties MessageReaction Represents a message reaction object. MessageReference Represents a message reference object. NestedChannelCreationProperties Abstraction for the ICreationProperties for nested guild channels. NestedChannelModifyProperties The IModifyProperties for a nested channel (see https://discord.com/developers/docs/resources/channel#modify-channel for more details on modifying channels). NewsChannelCreationProperties NewsChannelModifyProperties OverwriteAuditLogOptions PermissionHelper An utility class that helps with calculating nested permissions. PermissionOverwrite Represents a permission overwrite. Presence Represents an user presence. PresenceBuilder Builder for Presence objects. PrivateChannelCreationProperties The ICreationProperties for a private direct message channel. PruneProperties RestGuild RoleCreationProperties The ICreationProperties for a role. RoleInformation RoleModifyProperties The IModifyProperties for a role. RolePositionUpdate Represents a structure used to update roles position. Sticker StoreChannelCreationProperties StoreChannelModifyProperties TextChannelCreationProperties The ICreationProperties for a text channel ( Strade.Entities.TextChannel ). TextChannelModifyProperties The IModifyProperties for a text channel (see https://discord.com/developers/docs/resources/channel#modify-channel for more details on modifying channels). User Represents an user object. UserActivityBuilder A builder for activity objects for users. UserConnection Represents a user connection. UserGuildInformation UserGuildsDownloadProperties UserMention Represents a user mention object. UserPlatformStatus Represents a platform-dependent platform status compound. VanityInvite Represents the structure of a vanity invite. VoiceChannelCreationProperties The ICreationProperties for a voice channel ( IVoiceChannel ). VoiceChannelModifyProperties The IModifyProperties for a voice channel (see https://discord.com/developers/docs/resources/channel#modify-channel for more details on modifying channels). VoiceRegion Represents a discord voice region. VoiceServer Represents a voice server. VoiceState Represents a voice state object. Webhook Represents a webhook object. WebhookCreationProperties WebhookMessageCreationProperties The ICreationProperties for a webhook Strade.Entities.Message . WebhookMessageModifyProperties The IModifyProperties for a webhook Strade.Entities.Message . WebhookModifyProperties Structs ActivityButton AttachmentImage Represents the bounds of an attachment image. AuditLogChange Represents an audit log change which records a property that was changed on an entity in a guild. Color A structure that can represent a RGB color (without alpha) encoded in. CommandChoice EmbedAuthor Represents an embedded message author. EmbedField Represents an embedded message field. EmbedFooter Represents an embedded message footer. EmbedImage Represents an embedded message image. EmbedMediaBounds EmbedProvider Represents an embedded message provider. EmbedVideo Represents an embedded message video. Emoji Represents an emoji represents in an Unicode String . MessageActivity Represents a message activity. Optional<T> Represents a structure that holds an optional object. PartySize Represents a party size object. PermissionSet A helper struct for a permission set. PruneInformation Represents the structure of member prune information. ShardingInformation Holds the information that is required for enabling sharding. Snowflake A structure representing a discord snowflake. Interfaces IAttachment IAuditLog Represents an audit log of a guild. An audit log logs administrative operations for example when a channel is created, a user was banned, etc. IAuditLogOptions Interface for additional audit log options. IBuilder<TResult> Interface for builder classes. ICategory Represents a category channel object. A category is used to structure or categorize the channels of a guild. IChannel Interface for all types of channels. This is the base for all types of channels. IChannelContainer Interface for channel containers. IChannelParent An interface for an entity which has underlying channels. ICreationProperties Interface for entity creation options. IDeletable Interface for deletable entities. IDiscordEntity Interface for all discord entities. IEmote Interface for emote types. IGroupChannel Represents a private group channel. A group channel (or often referred as Group DM) is a channel that has multiple participants. A group channel is not bound to a guild. IGuild The guild structure. IGuildChannel Interface for channels that are bound to a guild. IGuildMessageChannel IHasAvatar Interface for discord entities with an optional avatar. IHasDescription Interface for discord entities with a description. IHasIcon Interface for discord entities with an optional icon. IMentionable Interface for mentionable discord entities. IMessage Represents a message. IMessageChannel Interface for channels where messages can be send to. IModifiable<TProperties> Interface for modifiable entities. IModifyProperties Interface for modification options. INestedChannel Interface for nest-able channels. INewsChannel Represents a news channel object. A news channel is a channel that is capable of being followed by another channel that means a channel that follows an announcement channel gets messages published in the announcement channel. INsfwChannel Interface for channels with NSFW (not safe for work / 18+) support. IOwnable<TOwner> Interface for discord entities that can have an owner. IPrivateChannel Represents a private channel. IRecipientChannel Interface for channels with multiple recipients. IRetrieveProperties Interface for retrieve properties. IRole The role structure. ISnowflakeEntity Interface for discord entities with an associated snowflake identifier. IStoreChannel The interface for a store channel. ITeam Represents the structure of a team object. ITeamMember Represents the structure of a team member object. ITextChannel Represents a text channel object. ITopicChannel Interface for channels with topics. ITypingIndicator An utility interface for managing the channel typing indicator. IUpdateable<TModel> An interface that entities should inherit from which can be updated from a model. IVoiceChannel Represents a voice channel object. IWebhookMessage Enums ActivityFlags A set of activity flags ( Flags ). ActivityPlatform ActivityType A set of activity types. ApplicationCommandOptionType AuditLogActionType Audit action type definitions. AuditLogChangeKey Audit log change key definitions. ChannelType A set of the different channel types. ConnectionVisibility Connection visibility definition. ExplicitContentFilterLevel A set of different explicit content filter levels. GuildBoostTier A set of available guild premium tiers. GuildIntegrationExpireBehavior ImageFormat A set of different CDN image formats. InteractionResponseType InteractionType KnownColor A set of known colors. MembershipStatus Represents a membership state / status. MentionType MessageActivityType A set of message activity types. MessageFlags A set of message flags. MessageNotificationLevel A set of discord's default message notification levels. MessageType A set of different message types. MultiFactorAuthenticationLevel The multi-factor authentication level enumeration. PermissionOverwriteTarget A set of Target types. Permissions A set of discord's permissions. PremiumType A set of discord's premium types. StickerFormatType SystemChannelFlags A list of possible system channel flags. TargetUserType A set of the target user type definitions. UserFlags Discord user flags. UserStatus A set of discord's user states. UserType A set of possible user types. VerificationLevel The verification level enumeration. WebhookIntegrationType A list of available webhook integration types. WebhookType A set of possible Webhook types. WidgetStyle A set of available widget styles."
  },
  "api/Strade.Entities.IAttachment.html": {
    "href": "api/Strade.Entities.IAttachment.html",
    "title": "Interface IAttachment | Strade Developer Documentation",
    "keywords": "Interface IAttachment Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IAttachment Properties | Improve this Doc View Source Filename Gets the filename of the attachment. Declaration string Filename { get; } Property Value Type Description String the filename of the attachment. | Improve this Doc View Source Url Gets the URL of the attachment. Declaration Uri Url { get; } Property Value Type Description Uri the URL of the attachment. Methods | Improve this Doc View Source CreateContentStreamAsync(CancellationToken) Declaration Task<Stream> CreateContentStreamAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < Stream >"
  },
  "api/Strade.Entities.IAuditLog.html": {
    "href": "api/Strade.Entities.IAuditLog.html",
    "title": "Interface IAuditLog | Strade Developer Documentation",
    "keywords": "Interface IAuditLog Represents an audit log of a guild. An audit log logs administrative operations for example when a channel is created, a user was banned, etc. Inherited Members IDiscordEntity.Client Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IAuditLog : IDiscordEntity Remarks See https://discord.com/developers/docs/resources/audit-log#audit-log-object-audit-log-structure for more details. Properties | Improve this Doc View Source Entries Gets an enumerable that yields through the audit log entries. Declaration IEnumerable<AuditLogEntry> Entries { get; } Property Value Type Description IEnumerable < AuditLogEntry > an enumerable that yields through the audit log entries. | Improve this Doc View Source GuildId Gets the snowflake identifier of the guild the audit log is for. Declaration Snowflake GuildId { get; } Property Value Type Description Snowflake the snowflake identifier of the guild the audit log is for. | Improve this Doc View Source Integrations Gets an enumerable that yields through the integrations that the audit log intersects with. Declaration IEnumerable<GuildIntegrationInformation> Integrations { get; } Property Value Type Description IEnumerable < GuildIntegrationInformation > an enumerable that yields through the integrations that the audit log intersects with. | Improve this Doc View Source Users Gets an enumerable that yields through the users that the audit log intersects with. Declaration IEnumerable<User> Users { get; } Property Value Type Description IEnumerable < User > an enumerable that yields through the users that the audit log intersects with. | Improve this Doc View Source Webhooks Gets an enumerable that yields through the webhooks that the audit log intersects with. Declaration IEnumerable<Webhook> Webhooks { get; } Property Value Type Description IEnumerable < Webhook > an enumerable that yields through the webhooks that the audit log intersects with. Methods | Improve this Doc View Source GetEntry(Snowflake) Gets an entry by the specified entryId . Declaration AuditLogEntry GetEntry(Snowflake entryId) Parameters Type Name Description Snowflake entryId the snowflake identifier of the audit log entry. Returns Type Description AuditLogEntry the audit log entry; or null if no audit log entry was found by the specified entryId . | Improve this Doc View Source GetIntegration(Snowflake) Gets an integration by the specified integrationId . Declaration GuildIntegrationInformation GetIntegration(Snowflake integrationId) Parameters Type Name Description Snowflake integrationId the snowflake identifier of the integration. Returns Type Description GuildIntegrationInformation the integration; or null if no integration was found by the specified integrationId . | Improve this Doc View Source GetUser(Snowflake) Gets an user by the specified userId . Declaration User GetUser(Snowflake userId) Parameters Type Name Description Snowflake userId the snowflake identifier of the user. Returns Type Description User the user; or null if no user was found by the specified userId . | Improve this Doc View Source GetWebhook(Snowflake) Gets a webhook by the specified webhookId . Declaration Webhook GetWebhook(Snowflake webhookId) Parameters Type Name Description Snowflake webhookId the snowflake identifier of the webhook. Returns Type Description Webhook the webhook; or null if no webhook was found by the specified webhookId ."
  },
  "api/Strade.Entities.IAuditLogOptions.html": {
    "href": "api/Strade.Entities.IAuditLogOptions.html",
    "title": "Interface IAuditLogOptions | Strade Developer Documentation",
    "keywords": "Interface IAuditLogOptions Interface for additional audit log options. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IAuditLogOptions"
  },
  "api/Strade.Entities.IBuilder-1.html": {
    "href": "api/Strade.Entities.IBuilder-1.html",
    "title": "Interface IBuilder<TResult> | Strade Developer Documentation",
    "keywords": "Interface IBuilder<TResult> Interface for builder classes. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IBuilder<TResult> Type Parameters Name Description TResult the type of the instance the builder can build. Methods | Improve this Doc View Source Build() Builds the instance. Declaration TResult Build() Returns Type Description TResult the instance. | Improve this Doc View Source Reset() Resets the builder to it's default values. Declaration void Reset()"
  },
  "api/Strade.Entities.ICategory.html": {
    "href": "api/Strade.Entities.ICategory.html",
    "title": "Interface ICategory | Strade Developer Documentation",
    "keywords": "Interface ICategory Represents a category channel object. A category is used to structure or categorize the channels of a guild. Inherited Members IGuildChannel.GuildId IGuildChannel.Name IGuildChannel.Overwrites IGuildChannel.Position IGuildChannel.DeleteChannelOverwriteAsync(Member, CancellationToken) IGuildChannel.DeleteChannelOverwriteAsync(IRole, CancellationToken) IGuildChannel.EditPermissionsAsync(Member, PermissionSet, PermissionSet, CancellationToken) IGuildChannel.EditPermissionsAsync(IRole, PermissionSet, PermissionSet, CancellationToken) IGuildChannel.GetGuildAsync(CacheBehavior, CancellationToken) IGuildChannel.GetInvitesAsync(CancellationToken) IGuildChannel.ModifyAsync(GuildChannelModifyProperties, CancellationToken) IChannel.Type IIdentifiable<Snowflake>.Id IDiscordEntity.Client IDeletable.DeleteAsync(CancellationToken) IUpdateable<ChannelModel>.Update(ChannelModel) IMentionable.Mention IChannelParent.CreateChannelAsync(NestedChannelCreationProperties, CancellationToken) IChannelParent.CreateNewsChannelAsync(Action<NewsChannelCreationProperties>, CancellationToken) IChannelParent.CreateNewsChannelAsync(NewsChannelCreationProperties, CancellationToken) IChannelParent.CreateStoreChannelAsync(Action<StoreChannelCreationProperties>, CancellationToken) IChannelParent.CreateStoreChannelAsync(StoreChannelCreationProperties, CancellationToken) IChannelParent.CreateTextChannelAsync(Action<TextChannelCreationProperties>, CancellationToken) IChannelParent.CreateTextChannelAsync(TextChannelCreationProperties, CancellationToken) IChannelParent.CreateVoiceChannelAsync(Action<VoiceChannelCreationProperties>, CancellationToken) IChannelParent.CreateVoiceChannelAsync(VoiceChannelCreationProperties, CancellationToken) IChannelParent.GetChannelAsync<TChannel>(Snowflake, CacheBehavior, CancellationToken) IChannelParent.GetChannelAsync(Snowflake, CacheBehavior, CancellationToken) IChannelParent.GetChannelsAsync(CacheBehavior, CancellationToken) IChannelParent.GetChannelsAsync<TChannel>(CacheBehavior, CancellationToken) IChannelParent.GetNewsChannelAsync(Snowflake, CacheBehavior, CancellationToken) IChannelParent.GetNewsChannelsAsync(CacheBehavior, CancellationToken) IChannelParent.GetStoreChannelAsync(Snowflake, CacheBehavior, CancellationToken) IChannelParent.GetStoreChannelsAsync(CacheBehavior, CancellationToken) IChannelParent.GetTextChannelAsync(Snowflake, CacheBehavior, CancellationToken) IChannelParent.GetTextChannelsAsync(CacheBehavior, CancellationToken) IChannelParent.GetVoiceChannelAsync(Snowflake, CacheBehavior, CancellationToken) IChannelParent.GetVoiceChannelsAsync(CacheBehavior, CancellationToken) IModifiable<CategoryModifyProperties>.ModifyAsync(CategoryModifyProperties, CancellationToken) IModifiable<CategoryModifyProperties>.ModifyAsync(Action<CategoryModifyProperties>, CancellationToken) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface ICategory : IGuildChannel, IChannel, ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IDeletable, IUpdateable<ChannelModel>, IMentionable, IChannelParent, IModifiable<CategoryModifyProperties> Remarks More details can be found on https://discord.com/developers/docs/resources/channel#channel-object-channel-structure [external, Discord Developer Documentation]."
  },
  "api/Strade.Entities.IChannel.html": {
    "href": "api/Strade.Entities.IChannel.html",
    "title": "Interface IChannel | Strade Developer Documentation",
    "keywords": "Interface IChannel Interface for all types of channels. This is the base for all types of channels. Inherited Members IIdentifiable<Snowflake>.Id IDiscordEntity.Client IDeletable.DeleteAsync(CancellationToken) IUpdateable<ChannelModel>.Update(ChannelModel) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IChannel : ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IDeletable, IUpdateable<ChannelModel> Remarks More details can be found on https://discord.com/developers/docs/resources/channel#channel-object-channel-structure [external, Discord Developer Documentation]. Properties | Improve this Doc View Source Name Gets the channel name. Declaration string Name { get; } Property Value Type Description String the channel name. | Improve this Doc View Source Type Gets the type of the channel. Declaration ChannelType Type { get; } Property Value Type Description ChannelType the type of the channel."
  },
  "api/Strade.Entities.IChannelContainer.html": {
    "href": "api/Strade.Entities.IChannelContainer.html",
    "title": "Interface IChannelContainer | Strade Developer Documentation",
    "keywords": "Interface IChannelContainer Interface for channel containers. Inherited Members IChannelParent.CreateChannelAsync(NestedChannelCreationProperties, CancellationToken) IChannelParent.CreateNewsChannelAsync(Action<NewsChannelCreationProperties>, CancellationToken) IChannelParent.CreateNewsChannelAsync(NewsChannelCreationProperties, CancellationToken) IChannelParent.CreateStoreChannelAsync(Action<StoreChannelCreationProperties>, CancellationToken) IChannelParent.CreateStoreChannelAsync(StoreChannelCreationProperties, CancellationToken) IChannelParent.CreateTextChannelAsync(Action<TextChannelCreationProperties>, CancellationToken) IChannelParent.CreateTextChannelAsync(TextChannelCreationProperties, CancellationToken) IChannelParent.CreateVoiceChannelAsync(Action<VoiceChannelCreationProperties>, CancellationToken) IChannelParent.CreateVoiceChannelAsync(VoiceChannelCreationProperties, CancellationToken) IChannelParent.GetChannelAsync<TChannel>(Snowflake, CacheBehavior, CancellationToken) IChannelParent.GetChannelAsync(Snowflake, CacheBehavior, CancellationToken) IChannelParent.GetChannelsAsync(CacheBehavior, CancellationToken) IChannelParent.GetChannelsAsync<TChannel>(CacheBehavior, CancellationToken) IChannelParent.GetNewsChannelAsync(Snowflake, CacheBehavior, CancellationToken) IChannelParent.GetNewsChannelsAsync(CacheBehavior, CancellationToken) IChannelParent.GetStoreChannelAsync(Snowflake, CacheBehavior, CancellationToken) IChannelParent.GetStoreChannelsAsync(CacheBehavior, CancellationToken) IChannelParent.GetTextChannelAsync(Snowflake, CacheBehavior, CancellationToken) IChannelParent.GetTextChannelsAsync(CacheBehavior, CancellationToken) IChannelParent.GetVoiceChannelAsync(Snowflake, CacheBehavior, CancellationToken) IChannelParent.GetVoiceChannelsAsync(CacheBehavior, CancellationToken) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IChannelContainer : IChannelParent Methods | Improve this Doc View Source CreateCategoryAsync(CategoryCreationProperties, CancellationToken) Creates a new category (channel) asynchronously. Declaration Task<ICategory> CreateCategoryAsync(CategoryCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CategoryCreationProperties properties the channel creation properties. CancellationToken cancellationToken Returns Type Description Task < ICategory > a task that represents the asynchronous operation. The task result is the created channel. | Improve this Doc View Source CreateCategoryAsync(Action<CategoryCreationProperties>, CancellationToken) Creates a new category (channel) asynchronously. Declaration Task<ICategory> CreateCategoryAsync(Action<CategoryCreationProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < CategoryCreationProperties > action the action to construct the properties for the channel. CancellationToken cancellationToken Returns Type Description Task < ICategory > a task that represents the asynchronous operation. The task result is the created channel. | Improve this Doc View Source CreateChannelAsync(GuildChannelCreationProperties, CancellationToken) Creates a new channel asynchronously. Declaration Task<IGuildChannel> CreateChannelAsync(GuildChannelCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GuildChannelCreationProperties properties the channel creation properties. CancellationToken cancellationToken Returns Type Description Task < IGuildChannel > a task that represents the asynchronous operation. The task result is the created channel. | Improve this Doc View Source GetCategoriesAsync(CacheBehavior, CancellationToken) Gets all category (channels) in the guild asynchronously. Declaration ValueTask<IEnumerable<ICategory>> GetCategoriesAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IEnumerable < ICategory >> a task that represents the asynchronous operation. The task result is an enumerable that enumerates through the channels. | Improve this Doc View Source GetCategoryAsync(Snowflake, CacheBehavior, CancellationToken) Gets the category (channel) specified by id asynchronously. Declaration ValueTask<ICategory> GetCategoryAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id the snowflake identifier of the target announcement channel. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < ICategory > a task that represents the asynchronous operation. The task result is the category (channel)."
  },
  "api/Strade.Entities.IChannelParent.html": {
    "href": "api/Strade.Entities.IChannelParent.html",
    "title": "Interface IChannelParent | Strade Developer Documentation",
    "keywords": "Interface IChannelParent An interface for an entity which has underlying channels. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IChannelParent Methods | Improve this Doc View Source CreateChannelAsync(NestedChannelCreationProperties, CancellationToken) Creates a new channel asynchronously. Declaration Task<INestedChannel> CreateChannelAsync(NestedChannelCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description NestedChannelCreationProperties properties the channel creation properties. CancellationToken cancellationToken Returns Type Description Task < INestedChannel > a task that represents the asynchronous operation. The task result is the created channel. | Improve this Doc View Source CreateNewsChannelAsync(NewsChannelCreationProperties, CancellationToken) Creates a new news channel asynchronously. Declaration Task<INewsChannel> CreateNewsChannelAsync(NewsChannelCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description NewsChannelCreationProperties properties the channel creation properties. CancellationToken cancellationToken Returns Type Description Task < INewsChannel > a task that represents the asynchronous operation. The task result is the created channel. | Improve this Doc View Source CreateNewsChannelAsync(Action<NewsChannelCreationProperties>, CancellationToken) Creates a new news channel asynchronously. Declaration Task<INewsChannel> CreateNewsChannelAsync(Action<NewsChannelCreationProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < NewsChannelCreationProperties > action the action to construct the properties for the channel. CancellationToken cancellationToken Returns Type Description Task < INewsChannel > a task that represents the asynchronous operation. The task result is the created channel. | Improve this Doc View Source CreateStoreChannelAsync(StoreChannelCreationProperties, CancellationToken) Creates a new store channel asynchronously. Declaration Task<IStoreChannel> CreateStoreChannelAsync(StoreChannelCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description StoreChannelCreationProperties properties the channel creation properties. CancellationToken cancellationToken Returns Type Description Task < IStoreChannel > a task that represents the asynchronous operation. The task result is the created channel. | Improve this Doc View Source CreateStoreChannelAsync(Action<StoreChannelCreationProperties>, CancellationToken) Creates a new store channel asynchronously. Declaration Task<IStoreChannel> CreateStoreChannelAsync(Action<StoreChannelCreationProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < StoreChannelCreationProperties > action the action to construct the properties for the channel. CancellationToken cancellationToken Returns Type Description Task < IStoreChannel > a task that represents the asynchronous operation. The task result is the created channel. | Improve this Doc View Source CreateTextChannelAsync(TextChannelCreationProperties, CancellationToken) Creates a new text channel asynchronously. Declaration Task<ITextChannel> CreateTextChannelAsync(TextChannelCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TextChannelCreationProperties properties the channel creation properties. CancellationToken cancellationToken Returns Type Description Task < ITextChannel > a task that represents the asynchronous operation. The task result is the created channel. | Improve this Doc View Source CreateTextChannelAsync(Action<TextChannelCreationProperties>, CancellationToken) Creates a new text channel asynchronously. Declaration Task<ITextChannel> CreateTextChannelAsync(Action<TextChannelCreationProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < TextChannelCreationProperties > action the action to construct the properties for the channel. CancellationToken cancellationToken Returns Type Description Task < ITextChannel > a task that represents the asynchronous operation. The task result is the created channel. | Improve this Doc View Source CreateVoiceChannelAsync(VoiceChannelCreationProperties, CancellationToken) Creates a new voice channel asynchronously. Declaration Task<IVoiceChannel> CreateVoiceChannelAsync(VoiceChannelCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description VoiceChannelCreationProperties properties the channel creation properties. CancellationToken cancellationToken Returns Type Description Task < IVoiceChannel > a task that represents the asynchronous operation. The task result is the created channel. | Improve this Doc View Source CreateVoiceChannelAsync(Action<VoiceChannelCreationProperties>, CancellationToken) Creates a new voice channel asynchronously. Declaration Task<IVoiceChannel> CreateVoiceChannelAsync(Action<VoiceChannelCreationProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < VoiceChannelCreationProperties > action the action to construct the properties for the channel. CancellationToken cancellationToken Returns Type Description Task < IVoiceChannel > a task that represents the asynchronous operation. The task result is the created channel. | Improve this Doc View Source GetChannelAsync(Snowflake, CacheBehavior, CancellationToken) Gets the channel specified by id asynchronously. Declaration ValueTask<IGuildChannel> GetChannelAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id the snowflake identifier of the target channel. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IGuildChannel > a task that represents the asynchronous operation. The task result is the channel. | Improve this Doc View Source GetChannelAsync<TChannel>(Snowflake, CacheBehavior, CancellationToken) Gets the voice channel specified by id asynchronously. Declaration ValueTask<TChannel> GetChannelAsync<TChannel>(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) where TChannel : IGuildChannel Parameters Type Name Description Snowflake id the snowflake identifier of the target voice channel. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask <TChannel> a task that represents the asynchronous operation. The task result is the voice channel. Type Parameters Name Description TChannel the type of the channel. | Improve this Doc View Source GetChannelsAsync(CacheBehavior, CancellationToken) Gets the channels asynchronously. Declaration ValueTask<IEnumerable<IGuildChannel>> GetChannelsAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IEnumerable < IGuildChannel >> a task that represents the asynchronous operation. The task result is an enumerable that enumerates through the channels. | Improve this Doc View Source GetChannelsAsync<TChannel>(CacheBehavior, CancellationToken) Gets all channels of the specified TChannel asynchronously. Declaration ValueTask<IEnumerable<TChannel>> GetChannelsAsync<TChannel>(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) where TChannel : IGuildChannel Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IEnumerable <TChannel>> a task that represents the asynchronous operation. The task result is an enumerable that enumerates through the channels. Type Parameters Name Description TChannel the type of the channel. | Improve this Doc View Source GetNewsChannelAsync(Snowflake, CacheBehavior, CancellationToken) Gets the announcement channel specified by id asynchronously. Declaration ValueTask<INewsChannel> GetNewsChannelAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id the snowflake identifier of the target announcement channel. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < INewsChannel > a task that represents the asynchronous operation. The task result is the announcement channel. | Improve this Doc View Source GetNewsChannelsAsync(CacheBehavior, CancellationToken) Gets all announcement / news channels asynchronously. Declaration ValueTask<IEnumerable<INewsChannel>> GetNewsChannelsAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IEnumerable < INewsChannel >> a task that represents the asynchronous operation. The task result is an enumerable that enumerates through the channels. | Improve this Doc View Source GetStoreChannelAsync(Snowflake, CacheBehavior, CancellationToken) Gets the store channel specified by id asynchronously. Declaration ValueTask<IStoreChannel> GetStoreChannelAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id the snowflake identifier of the target store channel. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IStoreChannel > a task that represents the asynchronous operation. The task result is the store channel. | Improve this Doc View Source GetStoreChannelsAsync(CacheBehavior, CancellationToken) Gets all store channels asynchronously. Declaration ValueTask<IEnumerable<IStoreChannel>> GetStoreChannelsAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IEnumerable < IStoreChannel >> a task that represents the asynchronous operation. The task result is an enumerable that enumerates through the channels. | Improve this Doc View Source GetTextChannelAsync(Snowflake, CacheBehavior, CancellationToken) Gets the text channel specified by id asynchronously. Declaration ValueTask<ITextChannel> GetTextChannelAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id the snowflake identifier of the target text channel. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < ITextChannel > a task that represents the asynchronous operation. The task result is the text channel. | Improve this Doc View Source GetTextChannelsAsync(CacheBehavior, CancellationToken) Gets all text channels asynchronously. Declaration ValueTask<IEnumerable<ITextChannel>> GetTextChannelsAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IEnumerable < ITextChannel >> a task that represents the asynchronous operation. The task result is an enumerable that enumerates through the channels. | Improve this Doc View Source GetVoiceChannelAsync(Snowflake, CacheBehavior, CancellationToken) Gets the voice channel specified by id asynchronously. Declaration ValueTask<IVoiceChannel> GetVoiceChannelAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id the snowflake identifier of the target voice channel. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IVoiceChannel > a task that represents the asynchronous operation. The task result is the voice channel. | Improve this Doc View Source GetVoiceChannelsAsync(CacheBehavior, CancellationToken) Gets all voice channels asynchronously. Declaration ValueTask<IEnumerable<IVoiceChannel>> GetVoiceChannelsAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IEnumerable < IVoiceChannel >> a task that represents the asynchronous operation. The task result is an enumerable that enumerates through the channels."
  },
  "api/Strade.Entities.ICreationProperties.html": {
    "href": "api/Strade.Entities.ICreationProperties.html",
    "title": "Interface ICreationProperties | Strade Developer Documentation",
    "keywords": "Interface ICreationProperties Interface for entity creation options. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface ICreationProperties Methods | Improve this Doc View Source Validate() Validates the properties. Declaration void Validate()"
  },
  "api/Strade.Entities.IDeletable.html": {
    "href": "api/Strade.Entities.IDeletable.html",
    "title": "Interface IDeletable | Strade Developer Documentation",
    "keywords": "Interface IDeletable Interface for deletable entities. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IDeletable Methods | Improve this Doc View Source DeleteAsync(CancellationToken) Deletes the entity asynchronously. Declaration Task DeleteAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation."
  },
  "api/Strade.Entities.IDiscordEntity.html": {
    "href": "api/Strade.Entities.IDiscordEntity.html",
    "title": "Interface IDiscordEntity | Strade Developer Documentation",
    "keywords": "Interface IDiscordEntity Interface for all discord entities. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IDiscordEntity Properties | Improve this Doc View Source Client Gets the base client the entity is bound to. Declaration IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient the base client the entity is bound to."
  },
  "api/Strade.Entities.IEmote.html": {
    "href": "api/Strade.Entities.IEmote.html",
    "title": "Interface IEmote | Strade Developer Documentation",
    "keywords": "Interface IEmote Interface for emote types. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IEmote Properties | Improve this Doc View Source Format Gets the emote format / emote string representation (e.g. Unicode representation or formatted emote). Declaration string Format { get; } Property Value Type Description String the emote format / emote string representation (e.g. Unicode representation or formatted emote). | Improve this Doc View Source Name Gets the emote display name (e.g. Unicode or display name). Declaration string Name { get; } Property Value Type Description String the emote display name (e.g. Unicode or display name). | Improve this Doc View Source QualifiedName Gets the qualified name of the emote (e.g. name:id ). Declaration string QualifiedName { get; } Property Value Type Description String the qualified name of the emote (e.g. name:id )."
  },
  "api/Strade.Entities.IGroupChannel.html": {
    "href": "api/Strade.Entities.IGroupChannel.html",
    "title": "Interface IGroupChannel | Strade Developer Documentation",
    "keywords": "Interface IGroupChannel Represents a private group channel. A group channel (or often referred as Group DM) is a channel that has multiple participants. A group channel is not bound to a guild. Inherited Members IRecipientChannel.Recipients IMessageChannel.DeleteMessagesAsync(Int32, Int32, CancellationToken) IMessageChannel.DeleteMessagesAsync(IEnumerable<Snowflake>, CancellationToken) IMessageChannel.DeleteMessagesAsync(IEnumerable<IMessage>, CancellationToken) IMessageChannel.GetFirstMessageAsync(CancellationToken) IMessageChannel.GetFirstMessagesAsync(Int32, CancellationToken) IMessageChannel.GetFirstMessagesChunkedAsync(Int32, CancellationToken) IMessageChannel.GetLastMessageAsync(CancellationToken) IMessageChannel.GetMessageAsync(Snowflake, CancellationToken) IMessageChannel.GetMessagesAfterAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesAfterAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesAfterChunkedAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesAfterChunkedAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesAroundAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesAroundAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesAroundChunkedAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesAroundChunkedAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesAsync(Int32, CancellationToken) IMessageChannel.GetMessagesBeforeAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesBeforeAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesBeforeChunkedAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesBeforeChunkedAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesChunkedAsync(Int32, CancellationToken) IMessageChannel.GetPinnedMessagesAsync(CancellationToken) IMessageChannel.SendFileAsync(String, String, String, EmbedMessage, Boolean, CancellationToken) IMessageChannel.SendFileAsync(FileInfo, String, String, EmbedMessage, Boolean, CancellationToken) IMessageChannel.SendFileAsync(ArraySegment<Byte>, String, String, EmbedMessage, Boolean, CancellationToken) IMessageChannel.SendFileAsync(Stream, String, String, EmbedMessage, Boolean, Boolean, CancellationToken) IMessageChannel.SendMessageAsync(MessageCreationProperties, CancellationToken) IMessageChannel.SendMessageAsync(String, EmbedMessage, Boolean, CancellationToken) IMessageChannel.SendMessageAsync(EmbedMessage, Boolean, CancellationToken) IMessageChannel.StartTyping() IMessageChannel.StartTyping(TimeSpan) IMessageChannel.TriggerTypingAsync(CancellationToken) IChannel.Name IChannel.Type IIdentifiable<Snowflake>.Id IDiscordEntity.Client IDeletable.DeleteAsync(CancellationToken) IUpdateable<ChannelModel>.Update(ChannelModel) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IGroupChannel : IRecipientChannel, IMessageChannel, IChannel, ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IDeletable, IUpdateable<ChannelModel> Properties | Improve this Doc View Source Owner Gets the user that owns the group channel. Declaration User Owner { get; } Property Value Type Description User the user that owns the group channel. Methods | Improve this Doc View Source AddRecipientAsync(User, GroupChannelRecipientCreationProperties, CancellationToken) Adds a specified user asynchronously. Declaration Task AddRecipientAsync(User user, GroupChannelRecipientCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description User user the user. GroupChannelRecipientCreationProperties properties the properties. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source AddRecipientAsync(User, Action<GroupChannelRecipientCreationProperties>, CancellationToken) Adds a specified user asynchronously. Declaration Task AddRecipientAsync(User user, Action<GroupChannelRecipientCreationProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description User user the user. Action < GroupChannelRecipientCreationProperties > action the action used to configure the properties. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source RemoveRecipientAsync(User, CancellationToken) Removes a specified user asynchronously. Declaration Task RemoveRecipientAsync(User user, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description User user the user. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation."
  },
  "api/Strade.Entities.IGuild.html": {
    "href": "api/Strade.Entities.IGuild.html",
    "title": "Interface IGuild | Strade Developer Documentation",
    "keywords": "Interface IGuild The guild structure. Inherited Members IHasIcon.HasIcon IHasIcon.IconHash IHasIcon.IconUrl IHasIcon.BuildIconUrl(ImageFormat, Nullable<Int32>) IModifiable<GuildModifyProperties>.ModifyAsync(GuildModifyProperties, CancellationToken) IModifiable<GuildModifyProperties>.ModifyAsync(Action<GuildModifyProperties>, CancellationToken) IDeletable.DeleteAsync(CancellationToken) IChannelContainer.CreateCategoryAsync(CategoryCreationProperties, CancellationToken) IChannelContainer.CreateCategoryAsync(Action<CategoryCreationProperties>, CancellationToken) IChannelContainer.CreateChannelAsync(GuildChannelCreationProperties, CancellationToken) IChannelContainer.GetCategoriesAsync(CacheBehavior, CancellationToken) IChannelContainer.GetCategoryAsync(Snowflake, CacheBehavior, CancellationToken) IChannelParent.CreateChannelAsync(NestedChannelCreationProperties, CancellationToken) IChannelParent.CreateNewsChannelAsync(Action<NewsChannelCreationProperties>, CancellationToken) IChannelParent.CreateNewsChannelAsync(NewsChannelCreationProperties, CancellationToken) IChannelParent.CreateStoreChannelAsync(Action<StoreChannelCreationProperties>, CancellationToken) IChannelParent.CreateStoreChannelAsync(StoreChannelCreationProperties, CancellationToken) IChannelParent.CreateTextChannelAsync(Action<TextChannelCreationProperties>, CancellationToken) IChannelParent.CreateTextChannelAsync(TextChannelCreationProperties, CancellationToken) IChannelParent.CreateVoiceChannelAsync(Action<VoiceChannelCreationProperties>, CancellationToken) IChannelParent.CreateVoiceChannelAsync(VoiceChannelCreationProperties, CancellationToken) IChannelParent.GetChannelAsync<TChannel>(Snowflake, CacheBehavior, CancellationToken) IChannelParent.GetChannelAsync(Snowflake, CacheBehavior, CancellationToken) IChannelParent.GetChannelsAsync(CacheBehavior, CancellationToken) IChannelParent.GetChannelsAsync<TChannel>(CacheBehavior, CancellationToken) IChannelParent.GetNewsChannelAsync(Snowflake, CacheBehavior, CancellationToken) IChannelParent.GetNewsChannelsAsync(CacheBehavior, CancellationToken) IChannelParent.GetStoreChannelAsync(Snowflake, CacheBehavior, CancellationToken) IChannelParent.GetStoreChannelsAsync(CacheBehavior, CancellationToken) IChannelParent.GetTextChannelAsync(Snowflake, CacheBehavior, CancellationToken) IChannelParent.GetTextChannelsAsync(CacheBehavior, CancellationToken) IChannelParent.GetVoiceChannelAsync(Snowflake, CacheBehavior, CancellationToken) IChannelParent.GetVoiceChannelsAsync(CacheBehavior, CancellationToken) IIdentifiable<Snowflake>.Id IDiscordEntity.Client IUpdateable<GuildModel>.Update(GuildModel) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IGuild : IHasIcon, IModifiable<GuildModifyProperties>, IDeletable, IChannelContainer, IChannelParent, ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IUpdateable<GuildModel> Remarks More details can be found on https://discord.com/developers/docs/resources/guild#guild-object-guild-structure [external, Discord Developer Documentation]. Properties | Improve this Doc View Source AfkChannelId Gets the snowflake identifier of the guild's AFK channel; or null if the guild has no assigned AFK channel. Declaration Snowflake? AfkChannelId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the guild's AFK channel; or null if the guild has no assigned AFK channel. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also AfkTimeout GetAfkChannelAsync(CacheBehavior, CancellationToken) HasAfkChannel | Improve this Doc View Source AfkTimeout Gets the guild's AFK timeout when members are moved into the channel specified by AfkChannelId . Declaration TimeSpan? AfkTimeout { get; } Property Value Type Description Nullable < TimeSpan > the guild's AFK timeout when members are moved into the channel specified by AfkChannelId in seconds. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also AfkChannelId GetAfkChannelAsync(CacheBehavior, CancellationToken) HasAfkChannel | Improve this Doc View Source ApplicationId Gets the snowflake identifier of the application that has created the guild; or null if the guild was not created by an application. Declaration Snowflake? ApplicationId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the guild's AFK channel; or null if the guild has no assigned AFK channel. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also OwnerId | Improve this Doc View Source AreMembersDownloaded Gets a value indicating whether all guild members were downloaded from this guild. Declaration bool AreMembersDownloaded { get; } Property Value Type Description Boolean a value indicating whether all guild members were downloaded from this guild. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. See Also DownloadedMemberCount DownloadMembersAsync(CancellationToken) GetMembersAsync(Boolean, CancellationToken) | Improve this Doc View Source BannerHash Gets a String that contains the hash of the banner image of the guild; or null if the guild has no banner. Declaration string BannerHash { get; } Property Value Type Description String a String that contains the hash of the banner image of the guild; or null if the guild has no banner. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also BuildBannerUrl(ImageFormat, Nullable<Int32>) BannerUrl HasBanner | Improve this Doc View Source BannerUrl Gets the URI of the banner of the guild; or null if the guild has no banner. Declaration Uri BannerUrl { get; } Property Value Type Description Uri the URI of the banner of the guild; or null if the guild has no banner. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also BuildBannerUrl(ImageFormat, Nullable<Int32>) BannerHash HasBanner | Improve this Doc View Source BoostCount Gets the number of Nitro boosts made on this guild. Declaration int BoostCount { get; } Property Value Type Description Int32 the number of Nitro boosts made on this guild. Remarks If the guild is unavailable ( IsUnavailable ) then 0 is returned. | Improve this Doc View Source BoostTier Gets the guild's boost tier indicating what premium features this guild has. Declaration GuildBoostTier BoostTier { get; } Property Value Type Description GuildBoostTier the guild's boost tier indicating what premium features this guild has. Remarks If the guild is unavailable ( IsUnavailable ) then None is returned. | Improve this Doc View Source CanHaveAnimatedIcon Gets a value indicating whether the guild has the AnimatedIcon feature. Declaration bool CanHaveAnimatedIcon { get; } Property Value Type Description Boolean a value indicating whether the guild has the AnimatedIcon feature. See Also HasFeature(String) | Improve this Doc View Source CanHaveBanner Gets a value indicating whether the guild has the Banner feature. Declaration bool CanHaveBanner { get; } Property Value Type Description Boolean a value indicating whether the guild has the Banner feature. See Also HasFeature(String) | Improve this Doc View Source CanHaveVanityUrl Gets a value indicating whether the guild has the VanityUrl feature. Declaration bool CanHaveVanityUrl { get; } Property Value Type Description Boolean a value indicating whether the guild has the VanityUrl feature. See Also HasFeature(String) | Improve this Doc View Source DefaultMessageNotificationLevel Gets the default message notification level for this guild. Declaration MessageNotificationLevel DefaultMessageNotificationLevel { get; } Property Value Type Description MessageNotificationLevel the default message notification level for this guild. Remarks If the guild is unavailable ( IsUnavailable ) then AllMessages is returned. | Improve this Doc View Source Description Gets the guild's description; or null if the guild has no description. Declaration string Description { get; } Property Value Type Description String the guild's description; or null if the guild has no description. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. | Improve this Doc View Source DiscoverySplashHash Gets a String that contains the hash of the discovery splash image of the guild; or null if the guild has no discovery splash. Declaration string DiscoverySplashHash { get; } Property Value Type Description String a String that contains the hash of the discovery splash image of the guild; or null if the guild has discovery splash. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also BuildDiscoverySplashUrl(ImageFormat, Nullable<Int32>) DiscoverySplashUrl HasDiscoverySplash | Improve this Doc View Source DiscoverySplashUrl Gets the URI for the discovery splash image of the guild; or null if the guild has no banner. Declaration Uri DiscoverySplashUrl { get; } Property Value Type Description Uri the URI for the discovery splash of the guild; or null if the guild has no discovery splash. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also BuildBannerUrl(ImageFormat, Nullable<Int32>) DiscoverySplashHash HasDiscoverySplash | Improve this Doc View Source DownloadedMemberCount Gets the number of downloaded members from this guild. Declaration int DownloadedMemberCount { get; } Property Value Type Description Int32 the number of downloaded members from this guild. Remarks If the guild is unavailable ( IsUnavailable ) then 0 is returned. See Also AreMembersDownloaded DownloadMembersAsync(CancellationToken) GetMembersAsync(Boolean, CancellationToken) | Improve this Doc View Source Emotes Gets a read-only list of emotes the guild has. Declaration IReadOnlyList<GuildEmote> Emotes { get; } Property Value Type Description IReadOnlyList < GuildEmote > a read-only list of emotes the guild has. Remarks If the guild is unavailable ( IsUnavailable ) then an empty array ( Empty<T>() ) is returned. | Improve this Doc View Source EveryoneRole Gets the @everyone -Role of the guild. Declaration IRole EveryoneRole { get; } Property Value Type Description IRole the @everyone -Role of the guild. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. | Improve this Doc View Source ExplicitContentFilterLevel Gets the explicit content filter level enabled in the guild. Declaration ExplicitContentFilterLevel ExplicitContentFilterLevel { get; } Property Value Type Description ExplicitContentFilterLevel the explicit content filter level enabled in the guild. Remarks If the guild is unavailable ( IsUnavailable ) then Disabled is returned. | Improve this Doc View Source Features Gets a read-only list that contains the enabled features of this guild. Declaration IReadOnlyList<string> Features { get; } Property Value Type Description IReadOnlyList < String > a read-only list that contains the enabled features of this guild. Remarks If the guild is unavailable ( IsUnavailable ) then an empty array ( Empty<T>() ) is returned. See Also HasFeature(String) | Improve this Doc View Source HasAfkChannel Gets a value indicating whether this guild has an assigned AFK channel. Declaration bool HasAfkChannel { get; } Property Value Type Description Boolean a value indicating whether this guild has an assigned AFK channel. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. See Also AfkChannelId AfkTimeout GetAfkChannelAsync(CacheBehavior, CancellationToken) | Improve this Doc View Source HasBanner Gets a value indicating whether this guild has a banner image. Declaration bool HasBanner { get; } Property Value Type Description Boolean a value indicating whether this guild has a banner image. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. See Also BuildBannerUrl(ImageFormat, Nullable<Int32>) BannerUrl BannerHash | Improve this Doc View Source HasDiscoverySplash Gets a value indicating whether this guild has a discovery splash image. Declaration bool HasDiscoverySplash { get; } Property Value Type Description Boolean a value indicating whether this guild has a discovery splash image. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. See Also BuildDiscoverySplashUrl(ImageFormat, Nullable<Int32>) DiscoverySplashUrl DiscoverySplashHash | Improve this Doc View Source HasPublicUpdatesChannel Gets a value indicating whether this guild has an assigned public updates channel. Declaration bool HasPublicUpdatesChannel { get; } Property Value Type Description Boolean a value indicating whether this guild has an assigned public updates channel. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. See Also PublicUpdatesChannelId GetPublicUpdatesChannelAsync(CacheBehavior, CancellationToken) | Improve this Doc View Source HasRulesChannel Gets a value indicating whether this guild has an assigned rules channel. Declaration bool HasRulesChannel { get; } Property Value Type Description Boolean a value indicating whether this guild has an assigned rules channel. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. See Also RulesChannelId GetRulesChannelAsync(CacheBehavior, CancellationToken) | Improve this Doc View Source HasSplash Gets a value indicating whether this guild has a splash image. Declaration bool HasSplash { get; } Property Value Type Description Boolean a value indicating whether this guild has a splash image. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. See Also BuildSplashUrl(ImageFormat, Nullable<Int32>) SplashUrl SplashHash | Improve this Doc View Source HasSystemChannel Gets a value indicating whether this guild has an assigned system channel. Declaration bool HasSystemChannel { get; } Property Value Type Description Boolean a value indicating whether this guild has an assigned system channel. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. See Also SystemChannelId SystemChannelFlags GetSystemChannelAsync(CacheBehavior, CancellationToken) | Improve this Doc View Source HasVipRegions Gets a value indicating whether the guild has the VipRegions feature. Declaration bool HasVipRegions { get; } Property Value Type Description Boolean a value indicating whether the guild has the VipRegions feature. See Also HasFeature(String) | Improve this Doc View Source HasWidgetChannel Gets a value indicating whether this guild has an assigned widget channel. Declaration bool HasWidgetChannel { get; } Property Value Type Description Boolean a value indicating whether this guild has an assigned widget channel. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. See Also WidgetChannelId IsWidgetEnabled GetWidgetChannelAsync(CacheBehavior, CancellationToken) GetWidgetImage(WidgetStyle) | Improve this Doc View Source IsBoostMessageEnabled Gets a value indicating whether the boost message is enabled in the guild. Declaration bool IsBoostMessageEnabled { get; } Property Value Type Description Boolean a value indicating whether the boost message is enabled in the guild. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. See Also SystemChannelFlags | Improve this Doc View Source IsCommerce Gets a value indicating whether the guild has the Commerce feature. Declaration bool IsCommerce { get; } Property Value Type Description Boolean a value indicating whether the guild has the Commerce feature. See Also HasFeature(String) | Improve this Doc View Source IsCommunity Gets a value indicating whether the guild has the Community feature. Declaration bool IsCommunity { get; } Property Value Type Description Boolean a value indicating whether the guild has the Community feature. See Also HasFeature(String) | Improve this Doc View Source IsDiscoverable Gets a value indicating whether the guild has the Discoverable feature. Declaration bool IsDiscoverable { get; } Property Value Type Description Boolean a value indicating whether the guild has the Discoverable feature. See Also HasFeature(String) | Improve this Doc View Source IsLazy Gets a value indicating whether members of this guild are lazy loaded. Declaration bool IsLazy { get; } Property Value Type Description Boolean a value indicating whether members of this guild are lazy loaded. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. | Improve this Doc View Source IsOwner Gets a value indicating whether the current client user is the owner of the guild. Declaration bool IsOwner { get; } Property Value Type Description Boolean a value indicating whether the current client user is the owner of the guild. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. | Improve this Doc View Source IsPartnered Gets a value indicating whether the guild has the Partnered feature. Declaration bool IsPartnered { get; } Property Value Type Description Boolean a value indicating whether the guild has the Partnered feature. See Also HasFeature(String) | Improve this Doc View Source IsRelayEnabled Gets a value indicating whether the guild has the RelayEnabled feature. Declaration bool IsRelayEnabled { get; } Property Value Type Description Boolean a value indicating whether the guild has the RelayEnabled feature. See Also HasFeature(String) | Improve this Doc View Source IsRelayForced Gets a value indicating whether the guild has the ForceRelay feature. Declaration bool IsRelayForced { get; } Property Value Type Description Boolean a value indicating whether the guild has the ForceRelay feature. See Also HasFeature(String) | Improve this Doc View Source IsUnavailable Gets a value indicating whether the guild is unavailable (e.g. due server outage, etc.). Declaration bool IsUnavailable { get; } Property Value Type Description Boolean a value indicating whether the guild is unavailable (e.g. due server outage, etc.). | Improve this Doc View Source IsVerified Gets a value indicating whether the guild has the Verified feature. Declaration bool IsVerified { get; } Property Value Type Description Boolean a value indicating whether the guild has the Verified feature. See Also HasFeature(String) | Improve this Doc View Source IsWelcomeMessageEnabled Gets a value indicating whether the welcome message is enabled in the guild. Declaration bool IsWelcomeMessageEnabled { get; } Property Value Type Description Boolean a value indicating whether the welcome message is enabled in the guild. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. See Also SystemChannelFlags | Improve this Doc View Source IsWelcomeScreenEnabled Gets a value indicating whether the guild has the WelcomeScreenEnabled feature. Declaration bool IsWelcomeScreenEnabled { get; } Property Value Type Description Boolean a value indicating whether the guild has the WelcomeScreenEnabled feature. See Also HasFeature(String) | Improve this Doc View Source IsWidgetEnabled Gets a value indicating whether the widget is enabled in this guild. Declaration bool IsWidgetEnabled { get; } Property Value Type Description Boolean a value indicating whether the widget is enabled in this guild. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. See Also WidgetChannelId HasWidgetChannel GetWidgetChannelAsync(CacheBehavior, CancellationToken) GetWidgetImage(WidgetStyle) | Improve this Doc View Source MaximumMembers Gets the maximum allowed member count for this guild. Declaration int? MaximumMembers { get; } Property Value Type Description Nullable < Int32 > the maximum allowed member count for this guild. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. | Improve this Doc View Source MaximumPresences Gets the maximum number of presences returned for the guild. Declaration int MaximumPresences { get; } Property Value Type Description Int32 the maximum number of presences returned for the guild. Remarks If the guild is unavailable ( IsUnavailable ) then 0 is returned. | Improve this Doc View Source MaximumVideoChannelUsers Gets the maximum number of concurrent video channel users in a voice channel for this guild. Declaration int? MaximumVideoChannelUsers { get; } Property Value Type Description Nullable < Int32 > the maximum number of concurrent video channel users in a voice channel for this guild. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. | Improve this Doc View Source MultiFactorAuthenticationLevel Gets the multi-factor authentication level required for administrative operations for this guild. Declaration MultiFactorAuthenticationLevel MultiFactorAuthenticationLevel { get; } Property Value Type Description MultiFactorAuthenticationLevel the multi-factor authentication level required for administrative operations for this guild. Remarks If MultiFactorAuthenticationLevel is Elevated then administrators on the server require 2-factor authentication on their account to execute administrative operations. If the guild is unavailable ( IsUnavailable ) then None is returned. | Improve this Doc View Source Name Gets the name of the guild. Declaration string Name { get; } Property Value Type Description String the name of the guild. Remarks If the guild is unavailable ( IsUnavailable ) then an empty string ( Empty ) is returned. | Improve this Doc View Source OwnerId Gets the snowflake identifier of the guild owner. Declaration Snowflake OwnerId { get; } Property Value Type Description Snowflake the snowflake identifier of the guild owner. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also ApplicationId | Improve this Doc View Source PreferredCulture Gets the preferred culture/locale ( CultureInfo ) for this guild; or null if no preferred culture is set. Declaration CultureInfo PreferredCulture { get; } Property Value Type Description CultureInfo the preferred culture/locale ( CultureInfo ) for this guild; or null if no preferred culture is set. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. | Improve this Doc View Source PublicUpdatesChannelId Gets the snowflake identifier of the assigned public updates channel of the guild; or null if no public updates channel is set. Declaration Snowflake? PublicUpdatesChannelId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the assigned public updates channel of the guild; or null if no public updates channel is set. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also GetPublicUpdatesChannelAsync(CacheBehavior, CancellationToken) HasPublicUpdatesChannel | Improve this Doc View Source Roles Gets an enumerable ( IEnumerable<T> ) that enumerates through the guild's roles. Declaration IEnumerable<IRole> Roles { get; } Property Value Type Description IEnumerable < IRole > an enumerable ( IEnumerable<T> ) that enumerates through the guild's roles. Remarks If the guild is unavailable ( IsUnavailable ) then an empty enumerable ( Empty<TResult>() ) is returned. | Improve this Doc View Source RulesChannelId Gets the snowflake identifier of the assigned rules channel of the guild; or null if no rules channel is set. Declaration Snowflake? RulesChannelId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the assigned rules channel of the guild; or null if no rules channel is set. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also HasRulesChannel GetRulesChannelAsync(CacheBehavior, CancellationToken) | Improve this Doc View Source SplashHash Gets the hash of the splash (if null , the entity has no splash). Declaration string SplashHash { get; } Property Value Type Description String the hash of the splash (if null , the entity has no splash). Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also BuildSplashUrl(ImageFormat, Nullable<Int32>) SplashUrl | Improve this Doc View Source SplashUrl Gets the URL of the splash (if null , the entity has no splash). Declaration Uri SplashUrl { get; } Property Value Type Description Uri the URL of the splash (if null , the entity has no splash). Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also BuildSplashUrl(ImageFormat, Nullable<Int32>) SplashHash | Improve this Doc View Source SystemChannelFlags Gets a set of flags for the guild's system channel. Declaration SystemChannelFlags SystemChannelFlags { get; } Property Value Type Description SystemChannelFlags a set of flags for the guild's system channel. Remarks If the guild is unavailable ( IsUnavailable ) then None is returned. See Also SystemChannelId HasSystemChannel IsWelcomeMessageEnabled IsBoostMessageEnabled GetSystemChannelAsync(CacheBehavior, CancellationToken) | Improve this Doc View Source SystemChannelId Gets the snowflake identifier of the assigned system channel of the guild; or null if no system channel is set. Declaration Snowflake? SystemChannelId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the assigned system channel of the guild; or null if no system channel is set. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also SystemChannelFlags HasSystemChannel GetSystemChannelAsync(CacheBehavior, CancellationToken) | Improve this Doc View Source VanityCode Gets the guild's vanity invite code; or null if no vanity invite enabled is set for the guild. Declaration string VanityCode { get; } Property Value Type Description String the guild's vanity invite code; or null if no vanity invite enabled is set for the guild. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also VanityUrl | Improve this Doc View Source VanityUrl Gets the guild's vanity invite URL used to join the guild; or null if no vanity invite enabled is set for the guild. Declaration Uri VanityUrl { get; } Property Value Type Description Uri the guild's vanity invite URL used to join the guild; or null if no vanity invite enabled is set for the guild. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also VanityCode | Improve this Doc View Source VerificationLevel Gets the verification level required for new members for the guild. Declaration VerificationLevel VerificationLevel { get; } Property Value Type Description VerificationLevel the verification level required for new members for the guild. Remarks If the guild is unavailable ( IsUnavailable ) then None is returned. | Improve this Doc View Source VoiceRegionId Gets the voice region identifier set for the guild. Declaration string VoiceRegionId { get; } Property Value Type Description String the voice region identifier set for the guild. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also GetVoiceRegionAsync(CancellationToken) | Improve this Doc View Source WidgetChannelId Gets the snowflake identifier of the assigned widget channel of the guild; or null if no widget channel is set. Declaration Snowflake? WidgetChannelId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the assigned widget channel of the guild; or null if no widget channel is set. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also IsWidgetEnabled HasWidgetChannel GetWidgetChannelAsync(CacheBehavior, CancellationToken) GetWidgetImage(WidgetStyle) Methods | Improve this Doc View Source AddMemberAsync(Snowflake, MemberCreationProperties, CancellationToken) Adds a member to the guild asynchronously. Declaration Task AddMemberAsync(Snowflake userId, MemberCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake userId the snowflake identifier of the user to add to the guild. MemberCreationProperties properties the properties for creating the member. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified properties are null . See Also AddMemberAsync(Snowflake, MemberCreationProperties, CancellationToken) AddMemberAsync(User, Action<MemberCreationProperties>, CancellationToken) AddMemberAsync(User, MemberCreationProperties, CancellationToken) | Improve this Doc View Source AddMemberAsync(Snowflake, Action<MemberCreationProperties>, CancellationToken) Adds a member to the guild asynchronously. Declaration Task AddMemberAsync(Snowflake userId, Action<MemberCreationProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake userId the snowflake identifier of the user to add to the guild. Action < MemberCreationProperties > action the action used to configure the properties for creating the member. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified action is null . See Also AddMemberAsync(Snowflake, MemberCreationProperties, CancellationToken) AddMemberAsync(User, Action<MemberCreationProperties>, CancellationToken) AddMemberAsync(User, MemberCreationProperties, CancellationToken) | Improve this Doc View Source AddMemberAsync(User, MemberCreationProperties, CancellationToken) Adds a member to the guild asynchronously. Declaration Task AddMemberAsync(User user, MemberCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description User user the user to add to the guild. MemberCreationProperties properties the properties for creating the member. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified properties are null . See Also AddMemberAsync(Snowflake, Action<MemberCreationProperties>, CancellationToken) AddMemberAsync(Snowflake, MemberCreationProperties, CancellationToken) AddMemberAsync(User, Action<MemberCreationProperties>, CancellationToken) | Improve this Doc View Source AddMemberAsync(User, Action<MemberCreationProperties>, CancellationToken) Adds a member to the guild asynchronously. Declaration Task AddMemberAsync(User user, Action<MemberCreationProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description User user the user to add to the guild. Action < MemberCreationProperties > action the action used to configure the properties for creating the member. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified action is null . See Also AddMemberAsync(Snowflake, Action<MemberCreationProperties>, CancellationToken) AddMemberAsync(Snowflake, MemberCreationProperties, CancellationToken) AddMemberAsync(User, MemberCreationProperties, CancellationToken) | Improve this Doc View Source BeginPruneAsync(BeginPruneProperties, CancellationToken) Begins a guild prune asynchronously. Declaration Task<PruneInformation?> BeginPruneAsync(BeginPruneProperties properties = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description BeginPruneProperties properties the prune properties. CancellationToken cancellationToken Returns Type Description Task < Nullable < PruneInformation >> a task that represents the asynchronous operation. The task result is the guild prune information; or null if properties is null or ComputePruneCount is false . See Also BeginPruneAsync(Action<BeginPruneProperties>, CancellationToken) GetPruneInformationAsync(Action<PruneProperties>, CancellationToken) GetPruneInformationAsync(PruneProperties, CancellationToken) | Improve this Doc View Source BeginPruneAsync(Action<BeginPruneProperties>, CancellationToken) Begins a guild prune asynchronously. Declaration Task<PruneInformation?> BeginPruneAsync(Action<BeginPruneProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < BeginPruneProperties > action the action used to configure the prune properties. CancellationToken cancellationToken Returns Type Description Task < Nullable < PruneInformation >> a task that represents the asynchronous operation. The task result is the guild prune information; or if ComputePruneCount is false . Exceptions Type Condition ArgumentNullException thrown if the specified action is null . See Also BeginPruneAsync(BeginPruneProperties, CancellationToken) GetPruneInformationAsync(Action<PruneProperties>, CancellationToken) GetPruneInformationAsync(PruneProperties, CancellationToken) | Improve this Doc View Source BuildBannerUrl(ImageFormat, Nullable<Int32>) Builds the guild's banner URL. Declaration Uri BuildBannerUrl(ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description ImageFormat format the format of the splash. Nullable < Int32 > size the banner size; if null then the default size is used. Returns Type Description Uri the banner URL; or null if the guild has no banner image. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified format is not specified in the ImageFormat enumeration. ArgumentOutOfRangeException thrown if the specified format is not supported. ArgumentOutOfRangeException thrown if the specified size is less than 16 pixels. ArgumentOutOfRangeException thrown if the specified size is greater than 2048 pixels. ArgumentOutOfRangeException thrown if the specified size is not a power of two. See Also BannerHash BannerUrl HasBanner | Improve this Doc View Source BuildDiscoverySplashUrl(ImageFormat, Nullable<Int32>) Builds the guild's discovery splash URL. Declaration Uri BuildDiscoverySplashUrl(ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description ImageFormat format the format of the splash. Nullable < Int32 > size the discovery splash size; if null then the default size is used. Returns Type Description Uri the discovery splash URL; or null if the guild has no discovery splash image. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified format is not specified in the ImageFormat enumeration. ArgumentOutOfRangeException thrown if the specified format is not supported. ArgumentOutOfRangeException thrown if the specified size is less than 16 pixels. ArgumentOutOfRangeException thrown if the specified size is greater than 2048 pixels. ArgumentOutOfRangeException thrown if the specified size is not a power of two. See Also DiscoverySplashHash DiscoverySplashUrl HasDiscoverySplash | Improve this Doc View Source BuildSplashUrl(ImageFormat, Nullable<Int32>) Builds the guild's splash URL. Declaration Uri BuildSplashUrl(ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description ImageFormat format the format of the splash. Nullable < Int32 > size the splash size; if null then the default size is used. Returns Type Description Uri the splash URL; or null if the guild has no splash image. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified format is not specified in the ImageFormat enumeration. ArgumentOutOfRangeException thrown if the specified format is not supported. ArgumentOutOfRangeException thrown if the specified size is less than 16 pixels. ArgumentOutOfRangeException thrown if the specified size is greater than 2048 pixels. ArgumentOutOfRangeException thrown if the specified size is not a power of two. See Also SplashHash SplashUrl HasSplash | Improve this Doc View Source CreateEmojiAsync(EmojiCreationProperties, CancellationToken) Creates a new emoji asynchronously. Declaration Task<GuildEmote> CreateEmojiAsync(EmojiCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description EmojiCreationProperties properties the creation properties. CancellationToken cancellationToken Returns Type Description Task < GuildEmote > a task that represents the asynchronous operation. The task result is the created entity. Exceptions Type Condition ArgumentNullException thrown if the specified properties are null . See Also CreateEmojiAsync(EmojiCreationProperties, CancellationToken) | Improve this Doc View Source CreateEmojiAsync(Action<EmojiCreationProperties>, CancellationToken) Creates a new emoji asynchronously. Declaration Task<GuildEmote> CreateEmojiAsync(Action<EmojiCreationProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < EmojiCreationProperties > action the creation action. CancellationToken cancellationToken Returns Type Description Task < GuildEmote > a task that represents the asynchronous operation. The task result is the created entity. Exceptions Type Condition ArgumentNullException thrown if the specified action is null . See Also CreateEmojiAsync(Action<EmojiCreationProperties>, CancellationToken) | Improve this Doc View Source CreateIntegrationAsync(GuildIntegrationCreationProperties, CancellationToken) Creates a new guild integration asynchronously. Declaration Task<GuildIntegration> CreateIntegrationAsync(GuildIntegrationCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GuildIntegrationCreationProperties properties the creation properties. CancellationToken cancellationToken Returns Type Description Task < GuildIntegration > a task that represents the asynchronous operation. The task result is the created guild integration. Exceptions Type Condition ArgumentNullException thrown if the specified properties are null . See Also CreateIntegrationAsync(Action<GuildIntegrationCreationProperties>, CancellationToken) | Improve this Doc View Source CreateIntegrationAsync(Action<GuildIntegrationCreationProperties>, CancellationToken) Creates a new guild integration asynchronously. Declaration Task<GuildIntegration> CreateIntegrationAsync(Action<GuildIntegrationCreationProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < GuildIntegrationCreationProperties > action the creation action. CancellationToken cancellationToken Returns Type Description Task < GuildIntegration > a task that represents the asynchronous operation. The task result is the created guild integration. Exceptions Type Condition ArgumentNullException thrown if the specified action is null . See Also CreateIntegrationAsync(GuildIntegrationCreationProperties, CancellationToken) | Improve this Doc View Source CreateRoleAsync(RoleCreationProperties, CancellationToken) Creates a new role asynchronously. Declaration Task<IRole> CreateRoleAsync(RoleCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description RoleCreationProperties properties the creation properties. CancellationToken cancellationToken Returns Type Description Task < IRole > a task that represents the asynchronous operation. The task result is the created entity. Exceptions Type Condition ArgumentNullException thrown if the specified properties are null . See Also CreateRoleAsync(Action<RoleCreationProperties>, CancellationToken) | Improve this Doc View Source CreateRoleAsync(Action<RoleCreationProperties>, CancellationToken) Creates a new role asynchronously. Declaration Task<IRole> CreateRoleAsync(Action<RoleCreationProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < RoleCreationProperties > action the creation action. CancellationToken cancellationToken Returns Type Description Task < IRole > a task that represents the asynchronous operation. The task result is the created entity. Exceptions Type Condition ArgumentNullException thrown if the specified action is null . See Also CreateRoleAsync(RoleCreationProperties, CancellationToken) | Improve this Doc View Source DownloadMembersAsync(CancellationToken) Downloads all guild members asynchronously. Declaration ValueTask<IEnumerable<Member>> DownloadMembersAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask < IEnumerable < Member >> a task that represents the asynchronous operation. The task result is an enumerable that enumerates through the downloaded members. See Also DownloadedMemberCount AreMembersDownloaded GetMembersAsync(Boolean, CancellationToken) | Improve this Doc View Source GetAfkChannelAsync(CacheBehavior, CancellationToken) Gets the AFK channel of the guild; or null if there is no explicit AFK channel asynchronously. Declaration ValueTask<IVoiceChannel> GetAfkChannelAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IVoiceChannel > a task that represents the asynchronous operation. The task result is the channel. See Also AfkChannelId AfkTimeout GetAfkChannelAsync(CacheBehavior, CancellationToken) | Improve this Doc View Source GetAuditLogAsync(AuditLogProperties, CancellationToken) Gets the audit log of the guild asynchronously. Declaration Task<IAuditLog> GetAuditLogAsync(AuditLogProperties properties = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description AuditLogProperties properties the audit log properties; or null to use the default request properties. CancellationToken cancellationToken Returns Type Description Task < IAuditLog > a task that represents the asynchronous operation. The task result is the audit log. See Also GetAuditLogEntriesAsync(AuditLogProperties, CancellationToken) GetAuditLogEntriesChunkedAsync(AuditLogProperties, CancellationToken) | Improve this Doc View Source GetAuditLogEntriesAsync(AuditLogProperties, CancellationToken) Gets all audit log entries chunked for the guild asynchronously. Declaration IAsyncEnumerable<AuditLogEntry> GetAuditLogEntriesAsync(AuditLogProperties properties = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description AuditLogProperties properties the audit log properties; or null to use the default request properties. CancellationToken cancellationToken Returns Type Description IAsyncEnumerable < AuditLogEntry > the audit log entries. See Also GetAuditLogEntriesAsync(AuditLogProperties, CancellationToken) GetAuditLogEntriesChunkedAsync(AuditLogProperties, CancellationToken) | Improve this Doc View Source GetAuditLogEntriesChunkedAsync(AuditLogProperties, CancellationToken) Gets all audit log entries chunked for the guild asynchronously. Declaration IAsyncEnumerable<IReadOnlyList<AuditLogEntry>> GetAuditLogEntriesChunkedAsync(AuditLogProperties properties = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description AuditLogProperties properties the audit log properties; or null to use the default request properties. CancellationToken cancellationToken Returns Type Description IAsyncEnumerable < IReadOnlyList < AuditLogEntry >> the audit log entries. See Also GetAuditLogEntriesAsync(AuditLogProperties, CancellationToken) GetAuditLogEntriesChunkedAsync(AuditLogProperties, CancellationToken) | Improve this Doc View Source GetBanAsync(Snowflake, CancellationToken) Gets the ban for the user specified by userId asynchronously. Declaration Task<Ban> GetBanAsync(Snowflake userId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake userId the snowflake identifier of the user to get the ban for. CancellationToken cancellationToken Returns Type Description Task < Ban > a task that represents the asynchronous operation. The task result is the ban; or null if the user is not banned. See Also GetBansAsync(CancellationToken) GetBanAsync(User, CancellationToken) | Improve this Doc View Source GetBanAsync(User, CancellationToken) Gets the ban for the specified user asynchronously. Declaration Task<Ban> GetBanAsync(User user, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description User user the user to get the ban for. CancellationToken cancellationToken Returns Type Description Task < Ban > a task that represents the asynchronous operation. The task result is the ban; or null if the user is not banned. Exceptions Type Condition ArgumentNullException thrown if the specified user is null . See Also GetBansAsync(CancellationToken) GetBanAsync(Snowflake, CancellationToken) | Improve this Doc View Source GetBansAsync(CancellationToken) Gets the bans in the guild asynchronously. Declaration Task<IReadOnlyList<Ban>> GetBansAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < Ban >> a task that represents the asynchronous operation. The task result is a read-only list containing the bans. See Also GetBanAsync(User, CancellationToken) GetBanAsync(Snowflake, CancellationToken) | Improve this Doc View Source GetIntegrationsAsync(CancellationToken) Gets all guilds integrations asynchronously. Declaration Task<IReadOnlyList<GuildIntegration>> GetIntegrationsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < GuildIntegration >> a task that represents the asynchronous operation. The task result is a list of guild integrations in the guild. | Improve this Doc View Source GetInvitesAsync(CancellationToken) Gets all invites asynchronously. Declaration Task<IReadOnlyList<InviteInformation>> GetInvitesAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < InviteInformation >> a task that represents the asynchronous operation. The task result is a list of invites in the guild. | Improve this Doc View Source GetMemberAsync(Snowflake, CacheBehavior, CancellationToken) Gets a member of the guild asynchronously. Declaration ValueTask<Member> GetMemberAsync(Snowflake userId, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake userId the snowflake identifier of the user to request the member data for. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < Member > a task that represents the asynchronous operation. The task result is guild member. See Also DownloadedMemberCount AreMembersDownloaded DownloadMembersAsync(CancellationToken) GetMembersAsync(Boolean, CancellationToken) GetMemberAsync(Snowflake, CacheBehavior, CancellationToken) | Improve this Doc View Source GetMembersAsync(Boolean, CancellationToken) Gets all guild members asynchronously. Declaration ValueTask<IEnumerable<Member>> GetMembersAsync(bool download = true, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Boolean download a value indicating whether to download missing members. CancellationToken cancellationToken Returns Type Description ValueTask < IEnumerable < Member >> a task that represents the asynchronous operation. The task result is an enumerable that enumerates through the guild members. See Also DownloadedMemberCount AreMembersDownloaded DownloadMembersAsync(CancellationToken) GetMemberAsync(Snowflake, CacheBehavior, CancellationToken) | Improve this Doc View Source GetPermissionsAsync(CancellationToken) Gets the permissions for the client user asynchronously. Declaration ValueTask<PermissionSet> GetPermissionsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask < PermissionSet > a task that represents the asynchronous operation. The task result is the permission set for the client user in the guild. | Improve this Doc View Source GetPruneInformationAsync(PruneProperties, CancellationToken) Gets the prune information for the guild asynchronously. Declaration Task<PruneInformation> GetPruneInformationAsync(PruneProperties properties = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description PruneProperties properties the prune properties. CancellationToken cancellationToken Returns Type Description Task < PruneInformation > a task that represents the asynchronous operation. The task result is the prune information. See Also GetPruneInformationAsync(Action<PruneProperties>, CancellationToken) BeginPruneAsync(Action<BeginPruneProperties>, CancellationToken) BeginPruneAsync(BeginPruneProperties, CancellationToken) | Improve this Doc View Source GetPruneInformationAsync(Action<PruneProperties>, CancellationToken) Gets the prune information for the guild asynchronously. Declaration Task<PruneInformation> GetPruneInformationAsync(Action<PruneProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < PruneProperties > action the action used to configure the prune properties. CancellationToken cancellationToken Returns Type Description Task < PruneInformation > a task that represents the asynchronous operation. The task result is the prune information. Exceptions Type Condition ArgumentNullException thrown if the specified action is null . See Also GetPruneInformationAsync(PruneProperties, CancellationToken) BeginPruneAsync(Action<BeginPruneProperties>, CancellationToken) BeginPruneAsync(BeginPruneProperties, CancellationToken) | Improve this Doc View Source GetPublicUpdatesChannelAsync(CacheBehavior, CancellationToken) Gets the public updates channel of the guild; or null if not present asynchronously. Declaration ValueTask<ITextChannel> GetPublicUpdatesChannelAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < ITextChannel > a task that represents the asynchronous operation. The task result is the public updates channel; or null if no public updates channel is set. See Also PublicUpdatesChannelId HasPublicUpdatesChannel | Improve this Doc View Source GetRole(Snowflake) Gets a role specified by the specified id . Declaration IRole GetRole(Snowflake id) Parameters Type Name Description Snowflake id the snowflake identifier of the role to get. Returns Type Description IRole the role; or null if the role was not found. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. | Improve this Doc View Source GetRulesChannelAsync(CacheBehavior, CancellationToken) Gets the rules channel of the guild; or null if not present asynchronously. Declaration ValueTask<ITextChannel> GetRulesChannelAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < ITextChannel > a task that represents the asynchronous operation. The task result is the rules channel; or null if no rules channel is set. See Also HasRulesChannel RulesChannelId | Improve this Doc View Source GetSystemChannelAsync(CacheBehavior, CancellationToken) Gets the system channel of the guild; or null if not present asynchronously. Declaration ValueTask<ITextChannel> GetSystemChannelAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < ITextChannel > a task that represents the asynchronous operation. The task result is the system channel; or null if no system channel is set. See Also SystemChannelId SystemChannelFlags HasSystemChannel | Improve this Doc View Source GetVanityInviteAsync(CancellationToken) Gets the vanity invite for the guild asynchronously. Declaration Task<VanityInvite> GetVanityInviteAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < VanityInvite > a task that represents the asynchronous operation. The task result is the vanity invite for the guild. | Improve this Doc View Source GetVoiceRegionAsync(CancellationToken) Gets the guild voice region asynchronously. Declaration Task<VoiceRegion> GetVoiceRegionAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < VoiceRegion > a task that represents the asynchronous operation. The task result is the voice region. See Also VoiceRegionId GetVoiceRegionsAsync(CancellationToken) | Improve this Doc View Source GetVoiceRegionsAsync(CancellationToken) Gets a list of available voice regions for the guild asynchronously. Declaration Task<IReadOnlyList<VoiceRegion>> GetVoiceRegionsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < VoiceRegion >> a task that represents the asynchronous operation. The task result is a list of available voice regions for the guild. See Also GetVoiceRegionAsync(CancellationToken) | Improve this Doc View Source GetWidgetChannelAsync(CacheBehavior, CancellationToken) Gets the embed channel of the guild; or null if not present asynchronously. Declaration ValueTask<IGuildChannel> GetWidgetChannelAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IGuildChannel > a task that represents the asynchronous operation. The task result is the channel. See Also WidgetChannelId IsWidgetEnabled HasWidgetChannel GetWidgetImage(WidgetStyle) | Improve this Doc View Source GetWidgetImage(WidgetStyle) Gets the URI for the guild widget image with the specified widgetStyle . Declaration Uri GetWidgetImage(WidgetStyle widgetStyle) Parameters Type Name Description WidgetStyle widgetStyle the style for the widget image. Returns Type Description Uri the URI for the guild widget image with the specified widgetStyle . Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified widget style ( widgetStyle ) is not defined in the WidgetStyle enumeration. See Also WidgetChannelId IsWidgetEnabled HasWidgetChannel GetWidgetChannelAsync(CacheBehavior, CancellationToken) | Improve this Doc View Source HasFeature(String) Gets a value indicating whether the guild has the specified feature . Declaration bool HasFeature(string feature) Parameters Type Name Description String feature the feature to check for. Returns Type Description Boolean a value indicating whether the guild has the specified feature . See Also Features | Improve this Doc View Source LeaveAsync(CancellationToken) Leaves the guild asynchronously. Declaration Task LeaveAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source ModifyNicknameAsync(String, CancellationToken) Modifies the current user's nickname on the guild asynchronously. Declaration Task ModifyNicknameAsync(string nickname, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String nickname the new nickname for the user. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified nickname is null . ArgumentException thrown if the specified nickname is invalid (see IsValid(String) ). | Improve this Doc View Source ModifyWidgetAsync(GuildWidgetModifyProperties, CancellationToken) Modifies the guild embed asynchronously. Declaration Task ModifyWidgetAsync(GuildWidgetModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GuildWidgetModifyProperties properties the properties to use to modify the guild embed. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified properties are null . See Also ModifyWidgetAsync(Action<GuildWidgetModifyProperties>, CancellationToken) | Improve this Doc View Source ModifyWidgetAsync(Action<GuildWidgetModifyProperties>, CancellationToken) Modifies the guild embed asynchronously. Declaration Task ModifyWidgetAsync(Action<GuildWidgetModifyProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < GuildWidgetModifyProperties > action the action used to configure the properties to use to modify the guild embed. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified action is null . See Also ModifyWidgetAsync(GuildWidgetModifyProperties, CancellationToken) | Improve this Doc View Source UnbanAsync(Snowflake, CancellationToken) Unbans the user specified by the specified userId asynchronously. Declaration Task UnbanAsync(Snowflake userId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake userId the snowflake identifier of the user to unban. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. See Also UnbanAsync(User, CancellationToken) | Improve this Doc View Source UnbanAsync(User, CancellationToken) Unbans the specified user asynchronously. Declaration Task UnbanAsync(User user, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description User user the user to unban. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified user is null . See Also UnbanAsync(Snowflake, CancellationToken) | Improve this Doc View Source UpdateChannelPositionsAsync(IReadOnlyList<ChannelPositionUpdate>, CancellationToken) Updates channel positions in the guild asynchronously. Declaration Task UpdateChannelPositionsAsync(IReadOnlyList<ChannelPositionUpdate> positionUpdates, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IReadOnlyList < ChannelPositionUpdate > positionUpdates a list of position updates to do. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified positionUpdates list is null . InvalidOperationException thrown if less than two position updates are specified. | Improve this Doc View Source UpdateRolePositionsAsync(IReadOnlyList<RolePositionUpdate>, CancellationToken) Updates role positions in the guild asynchronously. Declaration Task UpdateRolePositionsAsync(IReadOnlyList<RolePositionUpdate> positionUpdates, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IReadOnlyList < RolePositionUpdate > positionUpdates a list of position updates to do. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified positionUpdates list is null . Extension Methods GuildExtensions.DisconnectVoiceAsync(IGuild, CancellationToken)"
  },
  "api/Strade.Entities.IGuildChannel.html": {
    "href": "api/Strade.Entities.IGuildChannel.html",
    "title": "Interface IGuildChannel | Strade Developer Documentation",
    "keywords": "Interface IGuildChannel Interface for channels that are bound to a guild. Inherited Members IChannel.Type IIdentifiable<Snowflake>.Id IDiscordEntity.Client IDeletable.DeleteAsync(CancellationToken) IUpdateable<ChannelModel>.Update(ChannelModel) IMentionable.Mention Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IGuildChannel : IChannel, ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IDeletable, IUpdateable<ChannelModel>, IMentionable Properties | Improve this Doc View Source GuildId Gets the snowflake identifier of the associated guild. Declaration Snowflake GuildId { get; } Property Value Type Description Snowflake the snowflake identifier of the associated guild. | Improve this Doc View Source Name Gets the channel name. Declaration string Name { get; } Property Value Type Description String the channel name. | Improve this Doc View Source Overwrites Gets the explicit channel permission overwrites. Declaration IReadOnlyList<PermissionOverwrite> Overwrites { get; } Property Value Type Description IReadOnlyList < PermissionOverwrite > the explicit channel permission overwrites. | Improve this Doc View Source Position Gets the channel position / order (ascending). Declaration int Position { get; } Property Value Type Description Int32 the channel position / order (ascending). Methods | Improve this Doc View Source DeleteChannelOverwriteAsync(IRole, CancellationToken) Deletes the channel overwrite for the specified role asynchronously. Declaration Task DeleteChannelOverwriteAsync(IRole role, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IRole role the role to remove the permission overwrite for. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified role is null . | Improve this Doc View Source DeleteChannelOverwriteAsync(Member, CancellationToken) Deletes the channel overwrite for the specified member asynchronously. Declaration Task DeleteChannelOverwriteAsync(Member member, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Member member the member to remove the permission overwrite for. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified member is null . | Improve this Doc View Source EditPermissionsAsync(IRole, PermissionSet, PermissionSet, CancellationToken) Edits the permissions (overwrite) for the specified role asynchronously. Declaration Task EditPermissionsAsync(IRole role, PermissionSet allowedPermissions, PermissionSet deniedPermissions, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IRole role the role to update the permissions for. PermissionSet allowedPermissions a set of permissions allowed for the specified role . PermissionSet deniedPermissions a set of permissions denied for the specified role . CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified role is null . | Improve this Doc View Source EditPermissionsAsync(Member, PermissionSet, PermissionSet, CancellationToken) Edits the permissions (overwrite) for the specified member asynchronously. Declaration Task EditPermissionsAsync(Member member, PermissionSet allowedPermissions, PermissionSet deniedPermissions, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Member member the member to update the permissions for. PermissionSet allowedPermissions a set of permissions allowed for the specified member . PermissionSet deniedPermissions a set of permissions denied for the specified member . CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified member is null . | Improve this Doc View Source GetGuildAsync(CacheBehavior, CancellationToken) Gets the guild the channel is in asynchronously. Declaration ValueTask<IGuild> GetGuildAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IGuild > a task that represents the asynchronous operation. The task result is the guild the channel is in. | Improve this Doc View Source GetInvitesAsync(CancellationToken) Gets the invites for the channel asynchronously. Declaration Task<IReadOnlyList<InviteInformation>> GetInvitesAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < InviteInformation >> a task that represents the asynchronous operation. The task result is a read-only list that contains the invites. | Improve this Doc View Source ModifyAsync(GuildChannelModifyProperties, CancellationToken) Declaration Task ModifyAsync(GuildChannelModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GuildChannelModifyProperties properties CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/Strade.Entities.IGuildMessageChannel.html": {
    "href": "api/Strade.Entities.IGuildMessageChannel.html",
    "title": "Interface IGuildMessageChannel | Strade Developer Documentation",
    "keywords": "Interface IGuildMessageChannel Inherited Members INestedChannel.HasParent INestedChannel.ParentId INestedChannel.CreateInviteAsync(InviteCreationProperties, CancellationToken) INestedChannel.CreateInviteAsync(Action<InviteCreationProperties>, CancellationToken) INestedChannel.ModifyAsync(NestedChannelModifyProperties, CancellationToken) INestedChannel.GetParentAsync(CacheBehavior, CancellationToken) IGuildChannel.GuildId IGuildChannel.Name IGuildChannel.Overwrites IGuildChannel.Position IGuildChannel.DeleteChannelOverwriteAsync(Member, CancellationToken) IGuildChannel.DeleteChannelOverwriteAsync(IRole, CancellationToken) IGuildChannel.EditPermissionsAsync(Member, PermissionSet, PermissionSet, CancellationToken) IGuildChannel.EditPermissionsAsync(IRole, PermissionSet, PermissionSet, CancellationToken) IGuildChannel.GetGuildAsync(CacheBehavior, CancellationToken) IGuildChannel.GetInvitesAsync(CancellationToken) IGuildChannel.ModifyAsync(GuildChannelModifyProperties, CancellationToken) IMentionable.Mention IMessageChannel.DeleteMessagesAsync(Int32, Int32, CancellationToken) IMessageChannel.DeleteMessagesAsync(IEnumerable<Snowflake>, CancellationToken) IMessageChannel.DeleteMessagesAsync(IEnumerable<IMessage>, CancellationToken) IMessageChannel.GetFirstMessageAsync(CancellationToken) IMessageChannel.GetFirstMessagesAsync(Int32, CancellationToken) IMessageChannel.GetFirstMessagesChunkedAsync(Int32, CancellationToken) IMessageChannel.GetLastMessageAsync(CancellationToken) IMessageChannel.GetMessageAsync(Snowflake, CancellationToken) IMessageChannel.GetMessagesAfterAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesAfterAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesAfterChunkedAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesAfterChunkedAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesAroundAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesAroundAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesAroundChunkedAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesAroundChunkedAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesAsync(Int32, CancellationToken) IMessageChannel.GetMessagesBeforeAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesBeforeAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesBeforeChunkedAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesBeforeChunkedAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesChunkedAsync(Int32, CancellationToken) IMessageChannel.GetPinnedMessagesAsync(CancellationToken) IMessageChannel.SendFileAsync(String, String, String, EmbedMessage, Boolean, CancellationToken) IMessageChannel.SendFileAsync(FileInfo, String, String, EmbedMessage, Boolean, CancellationToken) IMessageChannel.SendFileAsync(ArraySegment<Byte>, String, String, EmbedMessage, Boolean, CancellationToken) IMessageChannel.SendFileAsync(Stream, String, String, EmbedMessage, Boolean, Boolean, CancellationToken) IMessageChannel.SendMessageAsync(MessageCreationProperties, CancellationToken) IMessageChannel.SendMessageAsync(String, EmbedMessage, Boolean, CancellationToken) IMessageChannel.SendMessageAsync(EmbedMessage, Boolean, CancellationToken) IMessageChannel.StartTyping() IMessageChannel.StartTyping(TimeSpan) IMessageChannel.TriggerTypingAsync(CancellationToken) IChannel.Type IIdentifiable<Snowflake>.Id IDiscordEntity.Client IDeletable.DeleteAsync(CancellationToken) IUpdateable<ChannelModel>.Update(ChannelModel) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IGuildMessageChannel : INestedChannel, IGuildChannel, IMentionable, IMessageChannel, IChannel, ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IDeletable, IUpdateable<ChannelModel> Methods | Improve this Doc View Source CreateWebhookAsync(WebhookCreationProperties, CancellationToken) Declaration Task<Webhook> CreateWebhookAsync(WebhookCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description WebhookCreationProperties properties CancellationToken cancellationToken Returns Type Description Task < Webhook > | Improve this Doc View Source GetWebhookAsync(Snowflake, String, CancellationToken) Declaration Task<Webhook> GetWebhookAsync(Snowflake webhookId, string token, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake webhookId String token CancellationToken cancellationToken Returns Type Description Task < Webhook > | Improve this Doc View Source GetWebhookAsync(Snowflake, CancellationToken) Declaration Task<Webhook> GetWebhookAsync(Snowflake webhookId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake webhookId CancellationToken cancellationToken Returns Type Description Task < Webhook > | Improve this Doc View Source GetWebhooksAsync(CancellationToken) Declaration Task<IReadOnlyList<Webhook>> GetWebhooksAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < Webhook >>"
  },
  "api/Strade.Entities.IHasAvatar.html": {
    "href": "api/Strade.Entities.IHasAvatar.html",
    "title": "Interface IHasAvatar | Strade Developer Documentation",
    "keywords": "Interface IHasAvatar Interface for discord entities with an optional avatar. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IHasAvatar Properties | Improve this Doc View Source AvatarHash Gets the hash of the avatar (if null , the entity has no avatar). Declaration string AvatarHash { get; } Property Value Type Description String the hash of the avatar (if null , the entity has no avatar). | Improve this Doc View Source AvatarUrl Gets the URL of the avatar (if null , the entity has no avatar). Declaration Uri AvatarUrl { get; } Property Value Type Description Uri the URL of the avatar (if null , the entity has no avatar). | Improve this Doc View Source HasAvatar Gets a value indicating whether the entity has an avatar. Declaration bool HasAvatar { get; } Property Value Type Description Boolean a value indicating whether the entity has an avatar. Methods | Improve this Doc View Source BuildAvatarUrl(ImageFormat, Nullable<Int32>) Builds an avatar URL. Declaration Uri BuildAvatarUrl(ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description ImageFormat format the format of the avatar. Nullable < Int32 > size the avatar size; if null then the default size is used. Returns Type Description Uri the avatar URL; or null if the AvatarHash is null . Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified format is not specified in the ImageFormat enumeration. ArgumentOutOfRangeException thrown if the specified format is not supported. ArgumentOutOfRangeException thrown if the specified size is less than 16 pixels. ArgumentOutOfRangeException thrown if the specified size is greater than 2048 pixels. ArgumentOutOfRangeException thrown if the specified size is not a power of two."
  },
  "api/Strade.Entities.IHasDescription.html": {
    "href": "api/Strade.Entities.IHasDescription.html",
    "title": "Interface IHasDescription | Strade Developer Documentation",
    "keywords": "Interface IHasDescription Interface for discord entities with a description. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IHasDescription Properties | Improve this Doc View Source Description Gets the description of the entity. Declaration string Description { get; } Property Value Type Description String the description of the entity."
  },
  "api/Strade.Entities.IHasIcon.html": {
    "href": "api/Strade.Entities.IHasIcon.html",
    "title": "Interface IHasIcon | Strade Developer Documentation",
    "keywords": "Interface IHasIcon Interface for discord entities with an optional icon. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IHasIcon Properties | Improve this Doc View Source HasIcon Gets a value indicating whether the entity has an icon. Declaration bool HasIcon { get; } Property Value Type Description Boolean a value indicating whether the entity has an icon. | Improve this Doc View Source IconHash Gets the hash of the icon (if null , the entity has no icon). Declaration string IconHash { get; } Property Value Type Description String the hash of the icon (if null , the entity has no icon). | Improve this Doc View Source IconUrl Gets the URL of the icon (if null , the entity has no icon). Declaration Uri IconUrl { get; } Property Value Type Description Uri the URL of the icon (if null , the entity has no icon). Methods | Improve this Doc View Source BuildIconUrl(ImageFormat, Nullable<Int32>) Builds an icon URL. Declaration Uri BuildIconUrl(ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description ImageFormat format the format of the icon. Nullable < Int32 > size the icon size; if null then the default size is used. Returns Type Description Uri the icon URL; or null if the IconHash is null . Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified format is not specified in the ImageFormat enumeration. ArgumentOutOfRangeException thrown if the specified format is not supported. ArgumentOutOfRangeException thrown if the specified size is less than 16 pixels. ArgumentOutOfRangeException thrown if the specified size is greater than 2048 pixels. ArgumentOutOfRangeException thrown if the specified size is not a power of two."
  },
  "api/Strade.Entities.ImageData.html": {
    "href": "api/Strade.Entities.ImageData.html",
    "title": "Class ImageData | Strade Developer Documentation",
    "keywords": "Class ImageData Represents an object that holds Base64 encoded image data. Inheritance Object ImageData Implements IDisposable ICloneable < ImageData > ICloneable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(ImageDataJsonConverter))] public sealed class ImageData : IDisposable, ICloneable<ImageData>, ICloneable Constructors | Improve this Doc View Source ImageData(ArraySegment<Byte>, ImageFormat) Declaration public ImageData(ArraySegment<byte> buffer, ImageFormat format = ImageFormat.Png) Parameters Type Name Description ArraySegment < Byte > buffer ImageFormat format | Improve this Doc View Source ImageData(ArrayPool<Byte>, ArraySegment<Byte>, ImageFormat) Declaration public ImageData(ArrayPool<byte> arrayPool, ArraySegment<byte> buffer, ImageFormat format = ImageFormat.Png) Parameters Type Name Description ArrayPool < Byte > arrayPool ArraySegment < Byte > buffer ImageFormat format | Improve this Doc View Source ImageData(ReadOnlyMemory<Byte>, ImageFormat) Initializes a new instance of the ImageData class. Declaration public ImageData(ReadOnlyMemory<byte> data, ImageFormat format = ImageFormat.Png) Parameters Type Name Description ReadOnlyMemory < Byte > data the raw image data. ImageFormat format the image format. Properties | Improve this Doc View Source Data Gets the raw image data. Declaration public ReadOnlyMemory<byte> Data { get; } Property Value Type Description ReadOnlyMemory < Byte > the raw image data. | Improve this Doc View Source Format Gets the image format. Declaration public ImageFormat Format { get; } Property Value Type Description ImageFormat the image format. | Improve this Doc View Source IsPooled Declaration public bool IsPooled { get; } Property Value Type Description Boolean | Improve this Doc View Source MimeType Declaration public string MimeType { get; } Property Value Type Description String Methods | Improve this Doc View Source Clone() Declaration public ImageData Clone() Returns Type Description ImageData | Improve this Doc View Source CopyTo(Memory<Byte>) Copies the encoded image data to the specified buffer . Declaration public int CopyTo(Memory<byte> buffer) Parameters Type Name Description Memory < Byte > buffer the buffer to copy to. Returns Type Description Int32 the number of bytes written. | Improve this Doc View Source CopyTo(Span<Byte>) Copies the encoded image data to the specified buffer . Declaration public int CopyTo(Span<byte> buffer) Parameters Type Name Description Span < Byte > buffer the buffer to copy to. Returns Type Description Int32 the number of bytes written. | Improve this Doc View Source DetectFormat(String) Detects the image format based on the specified fileExtension . Declaration public static ImageFormat DetectFormat(string fileExtension) Parameters Type Name Description String fileExtension the file extension to recognize. Returns Type Description ImageFormat the image format. Exceptions Type Condition InvalidOperationException thrown if the specified fileExtension was not recognized. ArgumentNullException thrown if the specified fileExtension is null . | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source FromEncoded(ReadOnlyMemory<Byte>) Declaration public static ImageData FromEncoded(ReadOnlyMemory<byte> buffer) Parameters Type Name Description ReadOnlyMemory < Byte > buffer Returns Type Description ImageData | Improve this Doc View Source FromEncoded(ReadOnlySpan<Byte>) Declaration public static ImageData FromEncoded(ReadOnlySpan<byte> buffer) Parameters Type Name Description ReadOnlySpan < Byte > buffer Returns Type Description ImageData | Improve this Doc View Source FromFile(String) Creates an ImageData from the file specified by path with automatic detection of the image format by the file extension. Declaration public static ImageData FromFile(string path) Parameters Type Name Description String path the absolute path to the file to read out. Returns Type Description ImageData the image data. Exceptions Type Condition InvalidOperationException thrown if the file extension of the specified path could not be recognized. ArgumentNullException thrown if the specified path is null . | Improve this Doc View Source FromFile(String, ImageFormat) Creates an ImageData from the file specified by path . Declaration public static ImageData FromFile(string path, ImageFormat format) Parameters Type Name Description String path the absolute path to the file to read out. ImageFormat format the image format. Returns Type Description ImageData the image data. Exceptions Type Condition NotSupportedException thrown if the specified format is not supported. ArgumentNullException thrown if the specified path is null . | Improve this Doc View Source FromFileAsync(String, ImageFormat, CancellationToken) Creates an ImageData from the file specified by path asynchronously. Declaration public static Task<ImageData> FromFileAsync(string path, ImageFormat format, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String path the absolute path to the file to read out. ImageFormat format the image format. CancellationToken cancellationToken Returns Type Description Task < ImageData > a task that represents the asynchronous operation. The task result is the image data. Exceptions Type Condition NotSupportedException thrown if the specified format is not supported. ArgumentNullException thrown if the specified path is null . | Improve this Doc View Source FromFileAsync(String, CancellationToken) Creates an ImageData from the file specified by path asynchronously with automatic detection of the image format by the file extension. Declaration public static Task<ImageData> FromFileAsync(string path, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String path the absolute path to the file to read out. CancellationToken cancellationToken Returns Type Description Task < ImageData > a task that represents the asynchronous operation. The task result is the image data. Exceptions Type Condition InvalidOperationException thrown if the file extension of the specified path could not be recognized. ArgumentNullException thrown if the specified path is null . | Improve this Doc View Source FromStream(Stream, ImageFormat, Boolean) Creates an ImageData from the specified stream . Declaration public static ImageData FromStream(Stream stream, ImageFormat format, bool leaveOpen = false) Parameters Type Name Description Stream stream the stream to read out. ImageFormat format the image format. Boolean leaveOpen a value indicating whether the stream should be left open after finishing reading it. Returns Type Description ImageData the image data. Exceptions Type Condition NotSupportedException thrown if the specified format is not supported. ArgumentNullException thrown if the specified stream is null . | Improve this Doc View Source FromStreamAsync(Stream, ImageFormat, Boolean, CancellationToken) Creates an ImageData from the specified stream asynchronously. Declaration public static Task<ImageData> FromStreamAsync(Stream stream, ImageFormat format, bool leaveOpen = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Stream stream the stream to read out. ImageFormat format the image format. Boolean leaveOpen a value indicating whether the stream should be left open after finishing reading it. CancellationToken cancellationToken Returns Type Description Task < ImageData > a task that represents the asynchronous operation. The task result is the image data. Exceptions Type Condition NotSupportedException thrown if the specified format is not supported. ArgumentNullException thrown if the specified stream is null . | Improve this Doc View Source FromUriAsync(Uri, ImageFormat, HttpClient, CancellationToken) Creates an ImageData from the specified requestUri asynchronously. Declaration public static Task<ImageData> FromUriAsync(Uri requestUri, ImageFormat format, HttpClient client, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Uri requestUri the request URI to send the request to. ImageFormat format the image format. HttpClient client the HTTP client to use for the request. CancellationToken cancellationToken Returns Type Description Task < ImageData > a task that represents the asynchronous operation. The task result is the image data. Exceptions Type Condition NotSupportedException thrown if the specified format is not supported. ArgumentNullException thrown if the specified requestUri is null . ArgumentNullException thrown if the specified client is null . | Improve this Doc View Source FromUriAsync(Uri, ImageFormat, CancellationToken) Creates an ImageData from the specified requestUri asynchronously. Declaration public static Task<ImageData> FromUriAsync(Uri requestUri, ImageFormat format, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Uri requestUri the request URI to send the request to. ImageFormat format the image format. CancellationToken cancellationToken Returns Type Description Task < ImageData > a task that represents the asynchronous operation. The task result is the image data. Exceptions Type Condition NotSupportedException thrown if the specified format is not supported. ArgumentNullException thrown if the specified requestUri is null . | Improve this Doc View Source GetFileExtension(ImageFormat) Gets the file extension for the specified format . Declaration public static string GetFileExtension(ImageFormat format) Parameters Type Name Description ImageFormat format the image format. Returns Type Description String the file extension name for the specified format . Remarks Jpeg \".jpeg\" Png \".png\" WebP \".webp\" Gif \".gif\" Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified format is not supported. | Improve this Doc View Source GetMaximumLength() Gets the maximum length that the image data could acquire in a byte buffer. Declaration public int GetMaximumLength() Returns Type Description Int32 the maximum length that the image data could acquire in a byte buffer. | Improve this Doc View Source ToFormat(String) Converts the specified mimeType to an ImageFormat . Declaration public static ImageFormat? ToFormat(string mimeType) Parameters Type Name Description String mimeType the mime type. Returns Type Description Nullable < ImageFormat > the corresponding image format; or null if no format matched. | Improve this Doc View Source ToMimeType(ImageFormat) Converts an ImageFormat to the corresponding mime type. Declaration public static string ToMimeType(ImageFormat format = ImageFormat.Png) Parameters Type Name Description ImageFormat format the image format. Returns Type Description String the corresponding mime type; or null if the specified format does not correspond a mime type. | Improve this Doc View Source TryDetectFormat(String, out ImageFormat) Declaration public static bool TryDetectFormat(string fileExtension, out ImageFormat format) Parameters Type Name Description String fileExtension ImageFormat format Returns Type Description Boolean | Improve this Doc View Source TryFromEncoded(ReadOnlyMemory<Byte>, out ImageData) Declaration public static bool TryFromEncoded(ReadOnlyMemory<byte> buffer, out ImageData imageData) Parameters Type Name Description ReadOnlyMemory < Byte > buffer ImageData imageData Returns Type Description Boolean | Improve this Doc View Source TryFromEncoded(ReadOnlySpan<Byte>, out ImageData) Declaration public static bool TryFromEncoded(ReadOnlySpan<byte> buffer, out ImageData imageData) Parameters Type Name Description ReadOnlySpan < Byte > buffer ImageData imageData Returns Type Description Boolean Explicit Interface Implementations | Improve this Doc View Source ICloneable.Clone() Declaration object ICloneable.Clone() Returns Type Description Object Implements System.IDisposable ICloneable<TSelf> System.ICloneable"
  },
  "api/Strade.Entities.ImageFormat.html": {
    "href": "api/Strade.Entities.ImageFormat.html",
    "title": "Enum ImageFormat | Strade Developer Documentation",
    "keywords": "Enum ImageFormat A set of different CDN image formats. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public enum ImageFormat Remarks More details can be found on https://discord.com/developers/docs/reference#image-formatting-image-formats [external, Discord Developer Documentation]. Fields Name Description Gif Denotes that the image format is GIF / Animated. Jpeg Denotes that the image format is JPEG. Png Denotes that the image format is PNG. WebP Denotes that the image format is WebP. Extension Methods EnumExtensions.GetName<ImageFormat>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.IMentionable.html": {
    "href": "api/Strade.Entities.IMentionable.html",
    "title": "Interface IMentionable | Strade Developer Documentation",
    "keywords": "Interface IMentionable Interface for mentionable discord entities. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IMentionable Properties | Improve this Doc View Source Mention Gets a string used to mention the entity. Declaration string Mention { get; } Property Value Type Description String a string used to mention the entity."
  },
  "api/Strade.Entities.IMessage.html": {
    "href": "api/Strade.Entities.IMessage.html",
    "title": "Interface IMessage | Strade Developer Documentation",
    "keywords": "Interface IMessage Represents a message. Inherited Members IDeletable.DeleteAsync(CancellationToken) IIdentifiable<Snowflake>.Id IModifiable<MessageModifyProperties>.ModifyAsync(MessageModifyProperties, CancellationToken) IModifiable<MessageModifyProperties>.ModifyAsync(Action<MessageModifyProperties>, CancellationToken) IDiscordEntity.Client IUpdateable<MessageModel>.Update(MessageModel) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IMessage : IDeletable, ISnowflakeEntity, IIdentifiable<Snowflake>, IModifiable<MessageModifyProperties>, IDiscordEntity, IUpdateable<MessageModel> Remarks More details can be found on https://discord.com/developers/docs/resources/channel#message-object-structure [external, Discord Developer Documentation]. Properties | Improve this Doc View Source Activity Gets the activity (used for rich presence-related chat embeds). Declaration MessageActivity? Activity { get; } Property Value Type Description Nullable < MessageActivity > the activity (used for rich presence-related chat embeds). | Improve this Doc View Source Application Gets information about the rich presence-application that send the message. Declaration MessageApplication Application { get; } Property Value Type Description MessageApplication information about the rich presence-application that send the message. | Improve this Doc View Source Attachments Gets the attached files within the message. Declaration IReadOnlyList<MessageAttachment> Attachments { get; } Property Value Type Description IReadOnlyList < MessageAttachment > the attached files within the message. | Improve this Doc View Source Author Gets the message author. Note that the author may be a webhook or application user if the message was send by an application / webhook. Declaration User Author { get; } Property Value Type Description User the message author. Note that the author may be a webhook or application user if the message was send by an application / webhook. | Improve this Doc View Source CallInformation Gets the call information. Declaration CallInformation CallInformation { get; } Property Value Type Description CallInformation the call information; or null if not present. | Improve this Doc View Source ChannelId Gets the snowflake identifier of the channel the message was sent in. Declaration Snowflake ChannelId { get; } Property Value Type Description Snowflake the snowflake identifier of the channel the message was sent in. | Improve this Doc View Source Content Gets the raw message content. Declaration string Content { get; } Property Value Type Description String the raw message content. | Improve this Doc View Source CreatedAt Gets the UTC time offset when the message was sent. Declaration DateTimeOffset CreatedAt { get; } Property Value Type Description DateTimeOffset the UTC time offset when the message was sent. | Improve this Doc View Source Embeds Gets the embedded messages within the message. Declaration IReadOnlyList<EmbedMessage> Embeds { get; } Property Value Type Description IReadOnlyList < EmbedMessage > the embedded messages within the message. | Improve this Doc View Source Flags Gets the message flags. Declaration MessageFlags Flags { get; } Property Value Type Description MessageFlags the message flags. | Improve this Doc View Source GuildId Gets the option guild snowflake identifier of the guild the message was sent in. Declaration Snowflake? GuildId { get; } Property Value Type Description Nullable < Snowflake > the option guild snowflake identifier of the guild the message was sent in; or null if the message was not sent in a guild. | Improve this Doc View Source IsEdited Gets a value indicating whether the message was edited. Declaration bool IsEdited { get; } Property Value Type Description Boolean a value indicating whether the message was edited. | Improve this Doc View Source IsMentioningEveryone Gets a value indicating whether the message mentions everyone. Declaration bool IsMentioningEveryone { get; } Property Value Type Description Boolean a value indicating whether the message mentions everyone. | Improve this Doc View Source IsPinned Gets a value indicating whether the message is pinned. Declaration bool IsPinned { get; } Property Value Type Description Boolean a value indicating whether the message is pinned. | Improve this Doc View Source IsTextToSpeech Gets a value indicating whether the message is a text-to-speech message. Declaration bool IsTextToSpeech { get; } Property Value Type Description Boolean a value indicating whether the message is a text-to-speech message. | Improve this Doc View Source LastEditedAt Gets the UTC time offset when the message was edited. Declaration DateTimeOffset? LastEditedAt { get; } Property Value Type Description Nullable < DateTimeOffset > the UTC time offset when the message was edited; or null if the message was not edited. | Improve this Doc View Source MentionedChannels Declaration IReadOnlyList<ChannelMention> MentionedChannels { get; } Property Value Type Description IReadOnlyList < ChannelMention > | Improve this Doc View Source MentionedRoles Declaration IReadOnlyList<Snowflake> MentionedRoles { get; } Property Value Type Description IReadOnlyList < Snowflake > | Improve this Doc View Source MentionedUsers Declaration IReadOnlyList<UserMention> MentionedUsers { get; } Property Value Type Description IReadOnlyList < UserMention > | Improve this Doc View Source Nonce Gets the message nonce used for validation whether a message was send. Declaration string Nonce { get; } Property Value Type Description String the message nonce used for validation whether a message was send; or null if no nonce is provided. | Improve this Doc View Source Reactions Gets a list of the reactions made to the message. Declaration IReadOnlyList<MessageReaction> Reactions { get; } Property Value Type Description IReadOnlyList < MessageReaction > a list of the reactions made to the message. | Improve this Doc View Source Reference Gets a reference to the origin message from which the actual message was cross-posted from. Available if the IsCrosspost is set in Flags . Declaration MessageReference Reference { get; } Property Value Type Description MessageReference a reference to the origin message from which the actual message was cross-posted from. Available if the IsCrosspost is set in Flags . | Improve this Doc View Source Stickers Gets a read-only list containing the stickers attached with the message. Declaration IReadOnlyList<Sticker> Stickers { get; } Property Value Type Description IReadOnlyList < Sticker > a read-only list containing the stickers attached with the message. | Improve this Doc View Source Type Gets the type of the message. Declaration MessageType Type { get; } Property Value Type Description MessageType the type of the message. | Improve this Doc View Source WebhookId Gets the snowflake identifier of the webhook that send the message. If null , then the message was not send by a webhook. Declaration Snowflake? WebhookId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the webhook that send the message. If null , then the message was not send by a webhook. Methods | Improve this Doc View Source AddReactionAsync(IEmote, CancellationToken) Adds the specified emote as a reaction to the message asynchronously. Declaration Task AddReactionAsync(IEmote emote, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IEmote emote the emote. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source AddReactionsAsync(IEnumerable<IEmote>, CancellationToken) Adds the specified emotes as reactions to the message asynchronously. Declaration Task AddReactionsAsync(IEnumerable<IEmote> emotes, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IEnumerable < IEmote > emotes the emotes to add. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source ClearReactionsAsync(CancellationToken) Clears all reactions from message asynchronously. Declaration Task ClearReactionsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source CrosspostAsync(CancellationToken) Crossposts / publishes the message asynchronously. Declaration Task CrosspostAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Remarks Note this operation is only valid on messages that were sent in an announcement / news channel. | Improve this Doc View Source DeleteOwnReactionAsync(IEmote, CancellationToken) Deletes the specified emote from the message asynchronously. Declaration Task DeleteOwnReactionAsync(IEmote emote, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IEmote emote the emote. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source DeleteReactionAsync(User, IEmote, CancellationToken) Deletes the specified emote made by the specified user from the message asynchronously. Declaration Task DeleteReactionAsync(User user, IEmote emote, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description User user the user. IEmote emote the emote. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source DeleteReactionsAsync(IEmote, CancellationToken) Deletes all reactions with the specified emote asynchronously. Declaration Task DeleteReactionsAsync(IEmote emote, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IEmote emote the emote type. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source GetChannelAsync(CacheBehavior, CancellationToken) Gets the channel the message ( IMessage ) is from; or null if the channel is not present asynchronously. Declaration ValueTask<IMessageChannel> GetChannelAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IMessageChannel > a task that represents the asynchronous operation. The task result is the channel the message ( IMessage ) is from; or null if the channel is not present. | Improve this Doc View Source GetGuildAsync(CacheBehavior, CancellationToken) Gets the guild the message ( IMessage ) is from; or null if the message was not sent in a guild. Declaration ValueTask<IGuild> GetGuildAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IGuild > a task that represents the asynchronous operation. The task result is the guild the message ( IMessage ) is from; or null if the message was not sent in a guild. | Improve this Doc View Source GetMemberAsync(CacheBehavior, CancellationToken) Gets the member the message was sent from asynchronously. Declaration ValueTask<Member> GetMemberAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < Member > a task that represents the asynchronous operation. The task result the member the message was sent from; or null if the message was not sent in a guild. | Improve this Doc View Source PinAsync(CancellationToken) Pins the message asynchronously. Declaration Task PinAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source ReplyAsync(EmbedMessage, Boolean, CancellationToken) Sends a reply to the message asynchronously. Declaration Task<IMessage> ReplyAsync(EmbedMessage embed, bool textToSpeech = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description EmbedMessage embed the attached message embed. Boolean textToSpeech a value indicating whether the message should be a TTS (Text-To-Speech) message. CancellationToken cancellationToken Returns Type Description Task < IMessage > a task that represents the asynchronous operation. The task result is the message send. | Improve this Doc View Source ReplyAsync(MessageCreationProperties, CancellationToken) Sends a reply to the message asynchronously. Declaration Task<IMessage> ReplyAsync(MessageCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description MessageCreationProperties properties the channel properties. CancellationToken cancellationToken Returns Type Description Task < IMessage > a task that represents the asynchronous operation. The task result is the message send. | Improve this Doc View Source ReplyAsync(String, EmbedMessage, Boolean, CancellationToken) Sends a reply to the message asynchronously. Declaration Task<IMessage> ReplyAsync(string content, EmbedMessage embed = null, bool textToSpeech = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String content the message content. EmbedMessage embed the attached message embed. Boolean textToSpeech a value indicating whether the message should be a TTS (Text-To-Speech) message. CancellationToken cancellationToken Returns Type Description Task < IMessage > a task that represents the asynchronous operation. The task result is the message send. | Improve this Doc View Source UnpinAsync(CancellationToken) Unpins the message asynchronously. Declaration Task UnpinAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation."
  },
  "api/Strade.Entities.IMessageChannel.html": {
    "href": "api/Strade.Entities.IMessageChannel.html",
    "title": "Interface IMessageChannel | Strade Developer Documentation",
    "keywords": "Interface IMessageChannel Interface for channels where messages can be send to. Inherited Members IChannel.Name IChannel.Type IIdentifiable<Snowflake>.Id IDiscordEntity.Client IDeletable.DeleteAsync(CancellationToken) IUpdateable<ChannelModel>.Update(ChannelModel) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IMessageChannel : IChannel, ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IDeletable, IUpdateable<ChannelModel> Methods | Improve this Doc View Source DeleteMessagesAsync(IEnumerable<IMessage>, CancellationToken) Deletes the all messages specified by messages asynchronously. Declaration Task<int> DeleteMessagesAsync(IEnumerable<IMessage> messages, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IEnumerable < IMessage > messages an enumerable that enumerates through the messages to delete. CancellationToken cancellationToken Returns Type Description Task < Int32 > a task that represents the asynchronous operation. The task result is the number of total messages deleted. | Improve this Doc View Source DeleteMessagesAsync(IEnumerable<Snowflake>, CancellationToken) Deletes the all messages specified by messages asynchronously. Declaration Task<int> DeleteMessagesAsync(IEnumerable<Snowflake> messages, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IEnumerable < Snowflake > messages an enumerable that enumerates through the snowflake identifiers of the messages to delete. CancellationToken cancellationToken Returns Type Description Task < Int32 > a task that represents the asynchronous operation. The task result is the number of total messages deleted. | Improve this Doc View Source DeleteMessagesAsync(Int32, Int32, CancellationToken) Deletes the last count -messages from the channel asynchronously. Declaration Task<int> DeleteMessagesAsync(int count, int chunkSize = 100, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Int32 count the number of messages to delete. Int32 chunkSize the chunk size (recommended: 100 ). CancellationToken cancellationToken Returns Type Description Task < Int32 > a task that represents the asynchronous operation. The task result is the number of total messages deleted. | Improve this Doc View Source GetFirstMessageAsync(CancellationToken) Declaration Task<IMessage> GetFirstMessageAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IMessage > | Improve this Doc View Source GetFirstMessagesAsync(Int32, CancellationToken) Declaration IAsyncEnumerable<IMessage> GetFirstMessagesAsync(int limit = 100, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Int32 limit CancellationToken cancellationToken Returns Type Description IAsyncEnumerable < IMessage > | Improve this Doc View Source GetFirstMessagesChunkedAsync(Int32, CancellationToken) Declaration IAsyncEnumerable<IReadOnlyList<IMessage>> GetFirstMessagesChunkedAsync(int limit = 100, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Int32 limit CancellationToken cancellationToken Returns Type Description IAsyncEnumerable < IReadOnlyList < IMessage >> | Improve this Doc View Source GetLastMessageAsync(CancellationToken) Declaration Task<IMessage> GetLastMessageAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IMessage > | Improve this Doc View Source GetMessageAsync(Snowflake, CancellationToken) Gets a message asynchronously. Declaration ValueTask<IMessage> GetMessageAsync(Snowflake messageId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake messageId the message snowflake identifier. CancellationToken cancellationToken Returns Type Description ValueTask < IMessage > a task that represents the asynchronous operation. The task result is the message. | Improve this Doc View Source GetMessagesAfterAsync(IMessage, Int32, CancellationToken) Gets an enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent after the specified message message in the channel asynchronously. Declaration IAsyncEnumerable<IMessage> GetMessagesAfterAsync(IMessage message, int limit = 100, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessage message the message. Int32 limit the maximum number of messages to return. CancellationToken cancellationToken Returns Type Description IAsyncEnumerable < IMessage > an enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent after the specified message in the channel. | Improve this Doc View Source GetMessagesAfterAsync(Snowflake, Int32, CancellationToken) Gets an enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent after the message specified by messageId in the channel asynchronously. Declaration IAsyncEnumerable<IMessage> GetMessagesAfterAsync(Snowflake messageId, int limit = 100, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake messageId the snowflake identifier of the message. Int32 limit the maximum number of messages to return. CancellationToken cancellationToken Returns Type Description IAsyncEnumerable < IMessage > an enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent after the message specified by messageId in the channel. | Improve this Doc View Source GetMessagesAfterChunkedAsync(IMessage, Int32, CancellationToken) Gets an enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent after the specified message message in the channel asynchronously. Declaration IAsyncEnumerable<IReadOnlyList<IMessage>> GetMessagesAfterChunkedAsync(IMessage message, int limit = 100, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessage message the message. Int32 limit the maximum number of messages to return. CancellationToken cancellationToken Returns Type Description IAsyncEnumerable < IReadOnlyList < IMessage >> an enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent after the specified message in the channel. | Improve this Doc View Source GetMessagesAfterChunkedAsync(Snowflake, Int32, CancellationToken) Gets an enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent after the message specified by messageId in the channel asynchronously. Declaration IAsyncEnumerable<IReadOnlyList<IMessage>> GetMessagesAfterChunkedAsync(Snowflake messageId, int limit = 100, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake messageId the snowflake identifier of the message. Int32 limit the maximum number of messages to return. CancellationToken cancellationToken Returns Type Description IAsyncEnumerable < IReadOnlyList < IMessage >> an enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent after the message specified by messageId in the channel. | Improve this Doc View Source GetMessagesAroundAsync(IMessage, Int32, CancellationToken) Gets an enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent around the specified message message in the channel asynchronously. Declaration IAsyncEnumerable<IMessage> GetMessagesAroundAsync(IMessage message, int limit = 100, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessage message the message. Int32 limit the maximum number of messages to return. CancellationToken cancellationToken Returns Type Description IAsyncEnumerable < IMessage > an enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent around the specified message in the channel. | Improve this Doc View Source GetMessagesAroundAsync(Snowflake, Int32, CancellationToken) Gets an enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent around the message specified by messageId in the channel asynchronously. Declaration IAsyncEnumerable<IMessage> GetMessagesAroundAsync(Snowflake messageId, int limit = 100, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake messageId the snowflake identifier of the message. Int32 limit the maximum number of messages to return. CancellationToken cancellationToken Returns Type Description IAsyncEnumerable < IMessage > an enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent around the message specified by messageId in the channel. | Improve this Doc View Source GetMessagesAroundChunkedAsync(IMessage, Int32, CancellationToken) Gets an enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent around the specified message message in the channel asynchronously. Declaration IAsyncEnumerable<IReadOnlyList<IMessage>> GetMessagesAroundChunkedAsync(IMessage message, int limit = 100, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessage message the message. Int32 limit the maximum number of messages to return. CancellationToken cancellationToken Returns Type Description IAsyncEnumerable < IReadOnlyList < IMessage >> an enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent around the specified message in the channel. | Improve this Doc View Source GetMessagesAroundChunkedAsync(Snowflake, Int32, CancellationToken) Gets an enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent around the message specified by messageId in the channel asynchronously. Declaration IAsyncEnumerable<IReadOnlyList<IMessage>> GetMessagesAroundChunkedAsync(Snowflake messageId, int limit = 100, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake messageId the snowflake identifier of the message. Int32 limit the maximum number of messages to return. CancellationToken cancellationToken Returns Type Description IAsyncEnumerable < IReadOnlyList < IMessage >> an enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent around the message specified by messageId in the channel. | Improve this Doc View Source GetMessagesAsync(Int32, CancellationToken) Gets an async enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent in the channel asynchronously. Declaration IAsyncEnumerable<IMessage> GetMessagesAsync(int limit = 100, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Int32 limit the maximum number of messages to return. CancellationToken cancellationToken Returns Type Description IAsyncEnumerable < IMessage > an async enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent in the channel. | Improve this Doc View Source GetMessagesBeforeAsync(IMessage, Int32, CancellationToken) Gets an enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent before the specified message message in the channel asynchronously. Declaration IAsyncEnumerable<IMessage> GetMessagesBeforeAsync(IMessage message, int limit = 100, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessage message the message. Int32 limit the maximum number of messages to return. CancellationToken cancellationToken Returns Type Description IAsyncEnumerable < IMessage > an enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent before the specified message in the channel. | Improve this Doc View Source GetMessagesBeforeAsync(Snowflake, Int32, CancellationToken) Gets an enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent before the message specified by messageId in the channel asynchronously. Declaration IAsyncEnumerable<IMessage> GetMessagesBeforeAsync(Snowflake messageId, int limit = 100, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake messageId the snowflake identifier of the message. Int32 limit the maximum number of messages to return. CancellationToken cancellationToken Returns Type Description IAsyncEnumerable < IMessage > an enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent before the message specified by messageId in the channel. | Improve this Doc View Source GetMessagesBeforeChunkedAsync(IMessage, Int32, CancellationToken) Gets an enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent before the specified message message in the channel asynchronously. Declaration IAsyncEnumerable<IReadOnlyList<IMessage>> GetMessagesBeforeChunkedAsync(IMessage message, int limit = 100, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessage message the message. Int32 limit the maximum number of messages to return. CancellationToken cancellationToken Returns Type Description IAsyncEnumerable < IReadOnlyList < IMessage >> an enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent before the specified message in the channel. | Improve this Doc View Source GetMessagesBeforeChunkedAsync(Snowflake, Int32, CancellationToken) Gets an enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent before the message specified by messageId in the channel asynchronously. Declaration IAsyncEnumerable<IReadOnlyList<IMessage>> GetMessagesBeforeChunkedAsync(Snowflake messageId, int limit = 100, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake messageId the snowflake identifier of the message. Int32 limit the maximum number of messages to return. CancellationToken cancellationToken Returns Type Description IAsyncEnumerable < IReadOnlyList < IMessage >> an enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent before the message specified by messageId in the channel. | Improve this Doc View Source GetMessagesChunkedAsync(Int32, CancellationToken) Gets an async enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent in the channel asynchronously. Declaration IAsyncEnumerable<IReadOnlyList<IMessage>> GetMessagesChunkedAsync(int limit = 100, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Int32 limit the maximum number of messages to return. CancellationToken cancellationToken Returns Type Description IAsyncEnumerable < IReadOnlyList < IMessage >> an async enumerable ( IAsyncEnumerable<T> ) that enumerates through the messages sent in the channel. | Improve this Doc View Source GetPinnedMessagesAsync(CancellationToken) Gets all pinned messages sent in the channel asynchronously. Declaration Task<IReadOnlyList<IMessage>> GetPinnedMessagesAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < IMessage >> a task that represents the asynchronous operation. The task result is a list that contains the messages retrieved. | Improve this Doc View Source SendFileAsync(ArraySegment<Byte>, String, String, EmbedMessage, Boolean, CancellationToken) Sends a message with a file attachment asynchronously. Declaration Task<IMessage> SendFileAsync(ArraySegment<byte> data, string filename, string content = null, EmbedMessage embed = null, bool textToSpeech = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description ArraySegment < Byte > data the file data. String filename the filename for the file. String content the message content. EmbedMessage embed the attached message embed. Boolean textToSpeech a value indicating whether the message should be a TTS (Text-To-Speech) message. CancellationToken cancellationToken Returns Type Description Task < IMessage > a task that represents the asynchronous operation. The task result is the message send. | Improve this Doc View Source SendFileAsync(FileInfo, String, String, EmbedMessage, Boolean, CancellationToken) Sends a message with a file attachment asynchronously. Declaration Task<IMessage> SendFileAsync(FileInfo fileInfo, string filename = null, string content = null, EmbedMessage embed = null, bool textToSpeech = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description FileInfo fileInfo the file to send. String filename the filename for the file, if null is specified then the file name of the specified fileInfo is used. String content the message content. EmbedMessage embed the attached message embed. Boolean textToSpeech a value indicating whether the message should be a TTS (Text-To-Speech) message. CancellationToken cancellationToken Returns Type Description Task < IMessage > a task that represents the asynchronous operation. The task result is the message send. | Improve this Doc View Source SendFileAsync(Stream, String, String, EmbedMessage, Boolean, Boolean, CancellationToken) Sends a message with a file attachment asynchronously. Declaration Task<IMessage> SendFileAsync(Stream stream, string filename, string content = null, EmbedMessage embed = null, bool textToSpeech = false, bool leaveOpen = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Stream stream the stream to read the file data from to send. String filename the filename for the file. String content the message content. EmbedMessage embed the attached message embed. Boolean textToSpeech a value indicating whether the message should be a TTS (Text-To-Speech) message. Boolean leaveOpen a value indicating whether the specified stream should be left open after the file was send. CancellationToken cancellationToken Returns Type Description Task < IMessage > a task that represents the asynchronous operation. The task result is the message send. | Improve this Doc View Source SendFileAsync(String, String, String, EmbedMessage, Boolean, CancellationToken) Sends a message with a file attachment asynchronously. Declaration Task<IMessage> SendFileAsync(string path, string filename = null, string content = null, EmbedMessage embed = null, bool textToSpeech = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String path the path to the file to send. String filename the filename for the file, if null is specified then the file name of the specified path is used. String content the message content. EmbedMessage embed the attached message embed. Boolean textToSpeech a value indicating whether the message should be a TTS (Text-To-Speech) message. CancellationToken cancellationToken Returns Type Description Task < IMessage > a task that represents the asynchronous operation. The task result is the message send. | Improve this Doc View Source SendMessageAsync(EmbedMessage, Boolean, CancellationToken) Sends a message asynchronously. Declaration Task<IMessage> SendMessageAsync(EmbedMessage embed, bool textToSpeech = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description EmbedMessage embed the attached message embed. Boolean textToSpeech a value indicating whether the message should be a TTS (Text-To-Speech) message. CancellationToken cancellationToken Returns Type Description Task < IMessage > a task that represents the asynchronous operation. The task result is the message send. | Improve this Doc View Source SendMessageAsync(MessageCreationProperties, CancellationToken) Sends a message asynchronously. Declaration Task<IMessage> SendMessageAsync(MessageCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description MessageCreationProperties properties the channel properties. CancellationToken cancellationToken Returns Type Description Task < IMessage > a task that represents the asynchronous operation. The task result is the message send. | Improve this Doc View Source SendMessageAsync(String, EmbedMessage, Boolean, CancellationToken) Sends a message asynchronously. Declaration Task<IMessage> SendMessageAsync(string content, EmbedMessage embed = null, bool textToSpeech = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String content the message content. EmbedMessage embed the attached message embed. Boolean textToSpeech a value indicating whether the message should be a TTS (Text-To-Speech) message. CancellationToken cancellationToken Returns Type Description Task < IMessage > a task that represents the asynchronous operation. The task result is the message send. | Improve this Doc View Source StartTyping() Creates a typing indicator for the channel. Declaration ITypingIndicator StartTyping() Returns Type Description ITypingIndicator the typing indicator instance; stops triggering when disposed. | Improve this Doc View Source StartTyping(TimeSpan) Creates a typing indicator for the channel. Declaration ITypingIndicator StartTyping(TimeSpan interval) Parameters Type Name Description TimeSpan interval the trigger interval. Returns Type Description ITypingIndicator the typing indicator instance; stops triggering when disposed. | Improve this Doc View Source TriggerTypingAsync(CancellationToken) Triggers the typing indicator in the channel asynchronously. Declaration Task TriggerTypingAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation."
  },
  "api/Strade.Entities.IModifiable-1.html": {
    "href": "api/Strade.Entities.IModifiable-1.html",
    "title": "Interface IModifiable<TProperties> | Strade Developer Documentation",
    "keywords": "Interface IModifiable<TProperties> Interface for modifiable entities. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IModifiable<TProperties> where TProperties : IModifyProperties Type Parameters Name Description TProperties the modification properties. Methods | Improve this Doc View Source ModifyAsync(TProperties, CancellationToken) Modifies the entity asynchronously. Declaration Task ModifyAsync(TProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TProperties properties the properties to use to modify the entity. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source ModifyAsync(Action<TProperties>, CancellationToken) Modifies the entity asynchronously. Declaration Task ModifyAsync(Action<TProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action <TProperties> action the action to configure the properties. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation."
  },
  "api/Strade.Entities.IModifyProperties.html": {
    "href": "api/Strade.Entities.IModifyProperties.html",
    "title": "Interface IModifyProperties | Strade Developer Documentation",
    "keywords": "Interface IModifyProperties Interface for modification options. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IModifyProperties Methods | Improve this Doc View Source Validate() Validates the properties. Declaration void Validate()"
  },
  "api/Strade.Entities.INestedChannel.html": {
    "href": "api/Strade.Entities.INestedChannel.html",
    "title": "Interface INestedChannel | Strade Developer Documentation",
    "keywords": "Interface INestedChannel Interface for nest-able channels. Inherited Members IGuildChannel.GuildId IGuildChannel.Name IGuildChannel.Overwrites IGuildChannel.Position IGuildChannel.DeleteChannelOverwriteAsync(Member, CancellationToken) IGuildChannel.DeleteChannelOverwriteAsync(IRole, CancellationToken) IGuildChannel.EditPermissionsAsync(Member, PermissionSet, PermissionSet, CancellationToken) IGuildChannel.EditPermissionsAsync(IRole, PermissionSet, PermissionSet, CancellationToken) IGuildChannel.GetGuildAsync(CacheBehavior, CancellationToken) IGuildChannel.GetInvitesAsync(CancellationToken) IGuildChannel.ModifyAsync(GuildChannelModifyProperties, CancellationToken) IChannel.Type IIdentifiable<Snowflake>.Id IDiscordEntity.Client IDeletable.DeleteAsync(CancellationToken) IUpdateable<ChannelModel>.Update(ChannelModel) IMentionable.Mention Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface INestedChannel : IGuildChannel, IChannel, ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IDeletable, IUpdateable<ChannelModel>, IMentionable Properties | Improve this Doc View Source HasParent Gets a value indicating whether the channel has a parent / whether the channel is nested. Declaration bool HasParent { get; } Property Value Type Description Boolean a value indicating whether the channel has a parent / whether the channel is nested. | Improve this Doc View Source ParentId Gets the snowflake identifier of the parent channel. Declaration Snowflake? ParentId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the parent channel; if null the channel has no parent. Methods | Improve this Doc View Source CreateInviteAsync(InviteCreationProperties, CancellationToken) Creates an invite for the channel asynchronously. Declaration Task<Invite> CreateInviteAsync(InviteCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description InviteCreationProperties properties the properties. CancellationToken cancellationToken Returns Type Description Task < Invite > a task that represents the asynchronous operation. The task result is the invite created. | Improve this Doc View Source CreateInviteAsync(Action<InviteCreationProperties>, CancellationToken) Creates an invite for the channel asynchronously. Declaration Task<Invite> CreateInviteAsync(Action<InviteCreationProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < InviteCreationProperties > action the action used to create the invite properties. CancellationToken cancellationToken Returns Type Description Task < Invite > a task that represents the asynchronous operation. The task result is the invite created. | Improve this Doc View Source GetParentAsync(CacheBehavior, CancellationToken) Gets the channel parent asynchronously. Declaration ValueTask<ICategory> GetParentAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < ICategory > a task that represents the asynchronous operation. The task result is the parent category of the channel; or null if the channel has no parent category. | Improve this Doc View Source ModifyAsync(NestedChannelModifyProperties, CancellationToken) Declaration Task ModifyAsync(NestedChannelModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description NestedChannelModifyProperties properties CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/Strade.Entities.INewsChannel.html": {
    "href": "api/Strade.Entities.INewsChannel.html",
    "title": "Interface INewsChannel | Strade Developer Documentation",
    "keywords": "Interface INewsChannel Represents a news channel object. A news channel is a channel that is capable of being followed by another channel that means a channel that follows an announcement channel gets messages published in the announcement channel. Inherited Members INsfwChannel.IsNsfw ITopicChannel.Topic IGuildMessageChannel.CreateWebhookAsync(WebhookCreationProperties, CancellationToken) IGuildMessageChannel.GetWebhookAsync(Snowflake, String, CancellationToken) IGuildMessageChannel.GetWebhookAsync(Snowflake, CancellationToken) IGuildMessageChannel.GetWebhooksAsync(CancellationToken) INestedChannel.HasParent INestedChannel.ParentId INestedChannel.CreateInviteAsync(InviteCreationProperties, CancellationToken) INestedChannel.CreateInviteAsync(Action<InviteCreationProperties>, CancellationToken) INestedChannel.ModifyAsync(NestedChannelModifyProperties, CancellationToken) INestedChannel.GetParentAsync(CacheBehavior, CancellationToken) IGuildChannel.GuildId IGuildChannel.Name IGuildChannel.Overwrites IGuildChannel.Position IGuildChannel.DeleteChannelOverwriteAsync(Member, CancellationToken) IGuildChannel.DeleteChannelOverwriteAsync(IRole, CancellationToken) IGuildChannel.EditPermissionsAsync(Member, PermissionSet, PermissionSet, CancellationToken) IGuildChannel.EditPermissionsAsync(IRole, PermissionSet, PermissionSet, CancellationToken) IGuildChannel.GetGuildAsync(CacheBehavior, CancellationToken) IGuildChannel.GetInvitesAsync(CancellationToken) IGuildChannel.ModifyAsync(GuildChannelModifyProperties, CancellationToken) IMentionable.Mention IMessageChannel.DeleteMessagesAsync(Int32, Int32, CancellationToken) IMessageChannel.DeleteMessagesAsync(IEnumerable<Snowflake>, CancellationToken) IMessageChannel.DeleteMessagesAsync(IEnumerable<IMessage>, CancellationToken) IMessageChannel.GetFirstMessageAsync(CancellationToken) IMessageChannel.GetFirstMessagesAsync(Int32, CancellationToken) IMessageChannel.GetFirstMessagesChunkedAsync(Int32, CancellationToken) IMessageChannel.GetLastMessageAsync(CancellationToken) IMessageChannel.GetMessageAsync(Snowflake, CancellationToken) IMessageChannel.GetMessagesAfterAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesAfterAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesAfterChunkedAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesAfterChunkedAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesAroundAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesAroundAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesAroundChunkedAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesAroundChunkedAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesAsync(Int32, CancellationToken) IMessageChannel.GetMessagesBeforeAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesBeforeAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesBeforeChunkedAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesBeforeChunkedAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesChunkedAsync(Int32, CancellationToken) IMessageChannel.GetPinnedMessagesAsync(CancellationToken) IMessageChannel.SendFileAsync(String, String, String, EmbedMessage, Boolean, CancellationToken) IMessageChannel.SendFileAsync(FileInfo, String, String, EmbedMessage, Boolean, CancellationToken) IMessageChannel.SendFileAsync(ArraySegment<Byte>, String, String, EmbedMessage, Boolean, CancellationToken) IMessageChannel.SendFileAsync(Stream, String, String, EmbedMessage, Boolean, Boolean, CancellationToken) IMessageChannel.SendMessageAsync(MessageCreationProperties, CancellationToken) IMessageChannel.SendMessageAsync(String, EmbedMessage, Boolean, CancellationToken) IMessageChannel.SendMessageAsync(EmbedMessage, Boolean, CancellationToken) IMessageChannel.StartTyping() IMessageChannel.StartTyping(TimeSpan) IMessageChannel.TriggerTypingAsync(CancellationToken) IChannel.Type IIdentifiable<Snowflake>.Id IDiscordEntity.Client IDeletable.DeleteAsync(CancellationToken) IUpdateable<ChannelModel>.Update(ChannelModel) IModifiable<NewsChannelModifyProperties>.ModifyAsync(NewsChannelModifyProperties, CancellationToken) IModifiable<NewsChannelModifyProperties>.ModifyAsync(Action<NewsChannelModifyProperties>, CancellationToken) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface INewsChannel : INsfwChannel, ITopicChannel, IGuildMessageChannel, INestedChannel, IGuildChannel, IMentionable, IMessageChannel, IChannel, ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IDeletable, IUpdateable<ChannelModel>, IModifiable<NewsChannelModifyProperties> Remarks More details can be found on https://discord.com/developers/docs/resources/channel#channel-object-channel-structure [external, Discord Developer Documentation]. Methods | Improve this Doc View Source FollowChannelAsync(ChannelFollowProperties, CancellationToken) Declaration Task<FollowedChannel> FollowChannelAsync(ChannelFollowProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description ChannelFollowProperties properties CancellationToken cancellationToken Returns Type Description Task < FollowedChannel > | Improve this Doc View Source FollowChannelAsync(Snowflake, CancellationToken) Declaration Task<FollowedChannel> FollowChannelAsync(Snowflake targetChannelId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake targetChannelId CancellationToken cancellationToken Returns Type Description Task < FollowedChannel > | Improve this Doc View Source FollowChannelAsync(Action<ChannelFollowProperties>, CancellationToken) Declaration Task<FollowedChannel> FollowChannelAsync(Action<ChannelFollowProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < ChannelFollowProperties > action CancellationToken cancellationToken Returns Type Description Task < FollowedChannel >"
  },
  "api/Strade.Entities.INsfwChannel.html": {
    "href": "api/Strade.Entities.INsfwChannel.html",
    "title": "Interface INsfwChannel | Strade Developer Documentation",
    "keywords": "Interface INsfwChannel Interface for channels with NSFW (not safe for work / 18+) support. Inherited Members IChannel.Name IChannel.Type IIdentifiable<Snowflake>.Id IDiscordEntity.Client IDeletable.DeleteAsync(CancellationToken) IUpdateable<ChannelModel>.Update(ChannelModel) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface INsfwChannel : IChannel, ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IDeletable, IUpdateable<ChannelModel> Properties | Improve this Doc View Source IsNsfw Gets a value indicating whether the channel is a NSFW (not safe for work / 18+) channel. Declaration bool IsNsfw { get; } Property Value Type Description Boolean a value indicating whether the channel is a NSFW (not safe for work / 18+) channel."
  },
  "api/Strade.Entities.IntegrationAccount.html": {
    "href": "api/Strade.Entities.IntegrationAccount.html",
    "title": "Class IntegrationAccount | Strade Developer Documentation",
    "keywords": "Class IntegrationAccount Represents the structure of an integration account object. Inheritance Object IntegrationAccount Implements IIdentifiable < String > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class IntegrationAccount : IIdentifiable<string> Remarks More details can be found on https://discord.com/developers/docs/resources/guild#integration-account-object [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source IntegrationAccount(IntegrationAccountModel) Declaration public IntegrationAccount(IntegrationAccountModel model) Parameters Type Name Description IntegrationAccountModel model | Improve this Doc View Source IntegrationAccount(String, String) Declaration public IntegrationAccount(string id, string name) Parameters Type Name Description String id String name Properties | Improve this Doc View Source Id Gets the id of the account. Declaration public string Id { get; } Property Value Type Description String the id of the account. | Improve this Doc View Source Name Gets the name of the account. Declaration public string Name { get; } Property Value Type Description String the name of the account. Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Entities.Interaction.html": {
    "href": "api/Strade.Entities.Interaction.html",
    "title": "Class Interaction | Strade Developer Documentation",
    "keywords": "Class Interaction Inheritance Object Interaction Implements ISnowflakeEntity IIdentifiable < Snowflake > IDiscordEntity Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class Interaction : ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity Constructors | Improve this Doc View Source Interaction(IDiscordRestClient, InteractionModel) Declaration public Interaction(IDiscordRestClient client, InteractionModel model) Parameters Type Name Description IDiscordRestClient client InteractionModel model Properties | Improve this Doc View Source ChannelId Gets the snowflake identifier of the channel the interaction was sent from. Declaration public Snowflake ChannelId { get; } Property Value Type Description Snowflake the snowflake identifier of the channel the interaction was sent from. | Improve this Doc View Source Client Declaration public IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient | Improve this Doc View Source Data Gets the command data payload. Declaration public InteractionCommandData Data { get; } Property Value Type Description InteractionCommandData the command data payload. | Improve this Doc View Source GuildId Gets the snowflake identifier of the guild the interaction was sent from. Declaration public Snowflake GuildId { get; } Property Value Type Description Snowflake the snowflake identifier of the guild the interaction was sent from. | Improve this Doc View Source Id Gets the snowflake identifier of the interaction. Declaration public Snowflake Id { get; } Property Value Type Description Snowflake the snowflake identifier of the interaction. | Improve this Doc View Source Member Gets a model of the member that invoked the interaction. Declaration public Member Member { get; } Property Value Type Description Member a model of the member that invoked the interaction. | Improve this Doc View Source Token Gets the continuation token for responding to the interaction. Declaration public string Token { get; } Property Value Type Description String the continuation token for responding to the interaction. | Improve this Doc View Source Type Gets the type of the interaction. Declaration public InteractionType Type { get; } Property Value Type Description InteractionType the type of the interaction. | Improve this Doc View Source Version Gets the version for the interaction. Declaration public int Version { get; } Property Value Type Description Int32 the version for the interaction. Implements ISnowflakeEntity IIdentifiable<TIdentifier> IDiscordEntity"
  },
  "api/Strade.Entities.InteractionCommandData.html": {
    "href": "api/Strade.Entities.InteractionCommandData.html",
    "title": "Class InteractionCommandData | Strade Developer Documentation",
    "keywords": "Class InteractionCommandData Inheritance Object InteractionCommandData Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class InteractionCommandData Constructors | Improve this Doc View Source InteractionCommandData(ApplicationCommandInteractionDataModel) Declaration public InteractionCommandData(ApplicationCommandInteractionDataModel model) Parameters Type Name Description ApplicationCommandInteractionDataModel model Properties | Improve this Doc View Source Id Gets the snowflake identifier of the command invoked. Declaration public Snowflake Id { get; } Property Value Type Description Snowflake the snowflake identifier of the command invoked. | Improve this Doc View Source Name Gets the name of the command invoked. Declaration public string Name { get; } Property Value Type Description String the name of the command invoked. | Improve this Doc View Source Options Gets a read-only list containing the parameters and values supplied from the user. Declaration public IReadOnlyList<InteractionCommandOptionData> Options { get; } Property Value Type Description IReadOnlyList < InteractionCommandOptionData > a read-only list containing the parameters and values supplied from the user."
  },
  "api/Strade.Entities.InteractionCommandOptionData.html": {
    "href": "api/Strade.Entities.InteractionCommandOptionData.html",
    "title": "Class InteractionCommandOptionData | Strade Developer Documentation",
    "keywords": "Class InteractionCommandOptionData Inheritance Object InteractionCommandOptionData Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class InteractionCommandOptionData Constructors | Improve this Doc View Source InteractionCommandOptionData(ApplicationCommandInteractionDataOptionModel) Declaration public InteractionCommandOptionData(ApplicationCommandInteractionDataOptionModel model) Parameters Type Name Description ApplicationCommandInteractionDataOptionModel model Properties | Improve this Doc View Source Name Gets the name of the parameter. Declaration public string Name { get; } Property Value Type Description String the name of the parameter. | Improve this Doc View Source Options Gets a read-only list containing the options, only present if the option is a group or subcommand. Declaration public IReadOnlyList<InteractionCommandOptionData> Options { get; } Property Value Type Description IReadOnlyList < InteractionCommandOptionData > a read-only list containing the options, only present if the option is a group or subcommand. | Improve this Doc View Source RawValue Gets the value of the option. Declaration public JsonElement RawValue { get; } Property Value Type Description JsonElement the value of the option."
  },
  "api/Strade.Entities.InteractionResponseCreationProperties.html": {
    "href": "api/Strade.Entities.InteractionResponseCreationProperties.html",
    "title": "Class InteractionResponseCreationProperties | Strade Developer Documentation",
    "keywords": "Class InteractionResponseCreationProperties Inheritance Object InteractionResponseCreationProperties Implements ICreationProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(InteractionResponseCreationPropertiesJsonConverter))] public sealed class InteractionResponseCreationProperties : ICreationProperties Properties | Improve this Doc View Source Data Gets or sets the callback response. Declaration public InteractionResponseData Data { get; set; } Property Value Type Description InteractionResponseData the callback response. | Improve this Doc View Source Type Gets or sets the type of the response. Declaration public InteractionResponseType Type { get; set; } Property Value Type Description InteractionResponseType the type of the response. Methods | Improve this Doc View Source Validate() Declaration public void Validate() Implements ICreationProperties"
  },
  "api/Strade.Entities.InteractionResponseData.html": {
    "href": "api/Strade.Entities.InteractionResponseData.html",
    "title": "Class InteractionResponseData | Strade Developer Documentation",
    "keywords": "Class InteractionResponseData Inheritance Object InteractionResponseData Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class InteractionResponseData Properties | Improve this Doc View Source Content Gets or sets the content of the response message. Declaration [JsonPropertyName(\"content\")] public Optional<string> Content { get; set; } Property Value Type Description Optional < String > the content of the response message. | Improve this Doc View Source Embeds Gets or sets a read-only list of embeds to response with. Declaration [JsonPropertyName(\"embeds\")] public Optional<IReadOnlyList<EmbedMessage>> Embeds { get; set; } Property Value Type Description Optional < IReadOnlyList < EmbedMessage >> a read-only list of embeds to response with. | Improve this Doc View Source Flags Gets or sets the message flags. Declaration [JsonPropertyName(\"flags\")] public Optional<MessageFlags> Flags { get; set; } Property Value Type Description Optional < MessageFlags > the message flags. | Improve this Doc View Source IsTextToSpeech Gets or sets a value indicating whether the response should be a text-to-speech message. Declaration [JsonPropertyName(\"tts\")] public Optional<bool> IsTextToSpeech { get; set; } Property Value Type Description Optional < Boolean > a value indicating whether the response should be a text-to-speech message. | Improve this Doc View Source Mentions Gets or sets a structure controlling the mention parsing behavior. Declaration [JsonPropertyName(\"allowed_mentions\")] public Optional<MentionProperties> Mentions { get; set; } Property Value Type Description Optional < MentionProperties > a structure controlling the mention parsing behavior."
  },
  "api/Strade.Entities.InteractionResponseType.html": {
    "href": "api/Strade.Entities.InteractionResponseType.html",
    "title": "Enum InteractionResponseType | Strade Developer Documentation",
    "keywords": "Enum InteractionResponseType Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public enum InteractionResponseType : byte Fields Name Description Acknowledge AcknowledgeWithSource ChannelMessage ChannelMessageWithSource Pong Extension Methods EnumExtensions.GetName<InteractionResponseType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.InteractionType.html": {
    "href": "api/Strade.Entities.InteractionType.html",
    "title": "Enum InteractionType | Strade Developer Documentation",
    "keywords": "Enum InteractionType Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public enum InteractionType : byte Fields Name Description ApplicationCommand Ping Extension Methods EnumExtensions.GetName<InteractionType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.Invite.html": {
    "href": "api/Strade.Entities.Invite.html",
    "title": "Class Invite | Strade Developer Documentation",
    "keywords": "Class Invite Represents a discord invite. Inheritance Object Invite InviteInformation Implements IDiscordEntity IIdentifiable < String > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public class Invite : IDiscordEntity, IIdentifiable<string> Remarks More details can be found on https://discord.com/developers/docs/resources/invite#invite-object [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source Invite(IDiscordRestClient, InviteModel) Declaration public Invite(IDiscordRestClient client, InviteModel model) Parameters Type Name Description IDiscordRestClient client InviteModel model Properties | Improve this Doc View Source ApproximateMembers Gets the number of approximate members of total members; if present. Declaration public int? ApproximateMembers { get; } Property Value Type Description Nullable < Int32 > the number of approximate members of total members; if present. | Improve this Doc View Source ApproximateOnlineMembers Gets the number of approximate members of online members; if present. Declaration public int? ApproximateOnlineMembers { get; } Property Value Type Description Nullable < Int32 > the number of approximate members of online members; if present. | Improve this Doc View Source Channel Gets the channel preview the invite shows. Declaration public ChannelPreview Channel { get; } Property Value Type Description ChannelPreview the channel preview the invite shows. | Improve this Doc View Source Client Declaration public IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient | Improve this Doc View Source Code Gets the unique invitation code. Declaration public string Code { get; } Property Value Type Description String the unique invitation code. | Improve this Doc View Source Guild Gets the guild preview the invite shows. Declaration public GuildPreview Guild { get; } Property Value Type Description GuildPreview the guild preview the invite shows. | Improve this Doc View Source Inviter Gets the user that created the invite. Declaration public User Inviter { get; } Property Value Type Description User the user that created the invite. | Improve this Doc View Source TargetUser Gets the target user that invite shows. Declaration public User TargetUser { get; } Property Value Type Description User the target user that invite shows. | Improve this Doc View Source TargetUserType Gets the type of the target user for the invite. Declaration public TargetUserType? TargetUserType { get; } Property Value Type Description Nullable < TargetUserType > the type of the target user for the invite. | Improve this Doc View Source Url Declaration public Uri Url { get; } Property Value Type Description Uri Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IIdentifiable<String>.Id Gets the identifier of the entity. Declaration string IIdentifiable<string>.Id { get; } Returns Type Description String the identifier of the entity. Implements IDiscordEntity IIdentifiable<TIdentifier>"
  },
  "api/Strade.Entities.InviteCreationProperties.html": {
    "href": "api/Strade.Entities.InviteCreationProperties.html",
    "title": "Class InviteCreationProperties | Strade Developer Documentation",
    "keywords": "Class InviteCreationProperties The creation properties ( ICreationProperties ) for an invite. Inheritance Object InviteCreationProperties Implements ICreationProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class InviteCreationProperties : ICreationProperties Properties | Improve this Doc View Source GrantsTemporaryMembership Gets or sets the a value indicating whether the invite grants temporary membership. Declaration [JsonPropertyName(\"temporary\")] public Optional<bool> GrantsTemporaryMembership { get; set; } Property Value Type Description Optional < Boolean > the a value indicating whether the invite grants temporary membership. | Improve this Doc View Source IsUnique Gets or sets a value indicating whether an unique invite should be enforced. Declaration [JsonPropertyName(\"unique\")] public Optional<bool> IsUnique { get; set; } Property Value Type Description Optional < Boolean > a value indicating whether an unique invite should be enforced. | Improve this Doc View Source MaximumAge Gets or sets the duration in seconds after which the invite expires. Declaration [JsonPropertyName(\"max_age\")] public Optional<int> MaximumAge { get; set; } Property Value Type Description Optional < Int32 > the duration in seconds after which the invite expires. | Improve this Doc View Source MaximumUses Gets or sets the maximum number of uses the invite can be used. Declaration [JsonPropertyName(\"max_uses\")] public Optional<int> MaximumUses { get; set; } Property Value Type Description Optional < Int32 > the maximum number of uses the invite can be used. | Improve this Doc View Source TargetUserId Gets or sets the target user the invite is for. Declaration [JsonPropertyName(\"target_user\")] public Optional<Snowflake> TargetUserId { get; set; } Property Value Type Description Optional < Snowflake > the target user the invite is for. | Improve this Doc View Source TargetUserType Gets or sets the type of target user for the invite. Declaration [JsonPropertyName(\"target_user_type\")] public Optional<TargetUserType> TargetUserType { get; set; } Property Value Type Description Optional < TargetUserType > the type of target user for the invite. Methods | Improve this Doc View Source Validate() Declaration public void Validate() Implements ICreationProperties"
  },
  "api/Strade.Entities.InviteInformation.html": {
    "href": "api/Strade.Entities.InviteInformation.html",
    "title": "Class InviteInformation | Strade Developer Documentation",
    "keywords": "Class InviteInformation Represents an invite with invite meta-data. Inheritance Object Invite InviteInformation Implements IDiscordEntity IIdentifiable < String > Inherited Members Invite.ApproximateMembers Invite.ApproximateOnlineMembers Invite.Channel Invite.Client Invite.Code Invite.Guild Invite.Inviter Invite.TargetUser Invite.TargetUserType Invite.Url Invite.IIdentifiable<String>.Id Invite.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class InviteInformation : Invite, IDiscordEntity, IIdentifiable<string> Constructors | Improve this Doc View Source InviteInformation(IDiscordRestClient, InviteWithMetadataModel) Declaration public InviteInformation(IDiscordRestClient client, InviteWithMetadataModel model) Parameters Type Name Description IDiscordRestClient client InviteWithMetadataModel model Properties | Improve this Doc View Source CreatedAt Gets the time when the invite was created. Declaration public DateTimeOffset CreatedAt { get; } Property Value Type Description DateTimeOffset the time when the invite was created. | Improve this Doc View Source GrantsTemporaryMembership Gets a value indicating whether the invite grants temporary membership. Declaration public bool GrantsTemporaryMembership { get; } Property Value Type Description Boolean a value indicating whether the invite grants temporary membership. | Improve this Doc View Source MaximumAge Gets the duration in seconds after which the invite expires. Declaration public int MaximumAge { get; } Property Value Type Description Int32 the duration in seconds after which the invite expires. | Improve this Doc View Source MaximumUses Gets the maximum number of uses the invite can be used. Declaration public int MaximumUses { get; } Property Value Type Description Int32 the maximum number of uses the invite can be used. | Improve this Doc View Source Uses Gets the number of times the invite has been used. Declaration public int Uses { get; } Property Value Type Description Int32 the number of times the invite has been used. Implements IDiscordEntity IIdentifiable<TIdentifier>"
  },
  "api/Strade.Entities.InviteProperties.html": {
    "href": "api/Strade.Entities.InviteProperties.html",
    "title": "Class InviteProperties | Strade Developer Documentation",
    "keywords": "Class InviteProperties Inheritance Object InviteProperties Implements IRetrieveProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class InviteProperties : IRetrieveProperties Properties | Improve this Doc View Source IncludeCounts Gets or sets a value indicating whether the invite should contain approximate member counts. Declaration public bool IncludeCounts { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source BuildQuery() Declaration public QueryParameterCollection BuildQuery() Returns Type Description QueryParameterCollection | Improve this Doc View Source Validate() Declaration public void Validate() Implements IRetrieveProperties"
  },
  "api/Strade.Entities.IOwnable-1.html": {
    "href": "api/Strade.Entities.IOwnable-1.html",
    "title": "Interface IOwnable<TOwner> | Strade Developer Documentation",
    "keywords": "Interface IOwnable<TOwner> Interface for discord entities that can have an owner. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IOwnable<TOwner> Type Parameters Name Description TOwner the type of the owner. Properties | Improve this Doc View Source Owner Gets the owner of the entity. Declaration TOwner Owner { get; } Property Value Type Description TOwner the owner of the entity."
  },
  "api/Strade.Entities.IPrivateChannel.html": {
    "href": "api/Strade.Entities.IPrivateChannel.html",
    "title": "Interface IPrivateChannel | Strade Developer Documentation",
    "keywords": "Interface IPrivateChannel Represents a private channel. Inherited Members IRecipientChannel.Recipients IMessageChannel.DeleteMessagesAsync(Int32, Int32, CancellationToken) IMessageChannel.DeleteMessagesAsync(IEnumerable<Snowflake>, CancellationToken) IMessageChannel.DeleteMessagesAsync(IEnumerable<IMessage>, CancellationToken) IMessageChannel.GetFirstMessageAsync(CancellationToken) IMessageChannel.GetFirstMessagesAsync(Int32, CancellationToken) IMessageChannel.GetFirstMessagesChunkedAsync(Int32, CancellationToken) IMessageChannel.GetLastMessageAsync(CancellationToken) IMessageChannel.GetMessageAsync(Snowflake, CancellationToken) IMessageChannel.GetMessagesAfterAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesAfterAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesAfterChunkedAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesAfterChunkedAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesAroundAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesAroundAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesAroundChunkedAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesAroundChunkedAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesAsync(Int32, CancellationToken) IMessageChannel.GetMessagesBeforeAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesBeforeAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesBeforeChunkedAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesBeforeChunkedAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesChunkedAsync(Int32, CancellationToken) IMessageChannel.GetPinnedMessagesAsync(CancellationToken) IMessageChannel.SendFileAsync(String, String, String, EmbedMessage, Boolean, CancellationToken) IMessageChannel.SendFileAsync(FileInfo, String, String, EmbedMessage, Boolean, CancellationToken) IMessageChannel.SendFileAsync(ArraySegment<Byte>, String, String, EmbedMessage, Boolean, CancellationToken) IMessageChannel.SendFileAsync(Stream, String, String, EmbedMessage, Boolean, Boolean, CancellationToken) IMessageChannel.SendMessageAsync(MessageCreationProperties, CancellationToken) IMessageChannel.SendMessageAsync(String, EmbedMessage, Boolean, CancellationToken) IMessageChannel.SendMessageAsync(EmbedMessage, Boolean, CancellationToken) IMessageChannel.StartTyping() IMessageChannel.StartTyping(TimeSpan) IMessageChannel.TriggerTypingAsync(CancellationToken) IChannel.Name IChannel.Type IIdentifiable<Snowflake>.Id IDiscordEntity.Client IDeletable.DeleteAsync(CancellationToken) IUpdateable<ChannelModel>.Update(ChannelModel) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IPrivateChannel : IRecipientChannel, IMessageChannel, IChannel, ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IDeletable, IUpdateable<ChannelModel> Properties | Improve this Doc View Source Recipient Gets the channel recipient. Declaration User Recipient { get; } Property Value Type Description User the channel recipient."
  },
  "api/Strade.Entities.IRecipientChannel.html": {
    "href": "api/Strade.Entities.IRecipientChannel.html",
    "title": "Interface IRecipientChannel | Strade Developer Documentation",
    "keywords": "Interface IRecipientChannel Interface for channels with multiple recipients. Inherited Members IChannel.Name IChannel.Type IIdentifiable<Snowflake>.Id IDiscordEntity.Client IDeletable.DeleteAsync(CancellationToken) IUpdateable<ChannelModel>.Update(ChannelModel) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IRecipientChannel : IChannel, ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IDeletable, IUpdateable<ChannelModel> Properties | Improve this Doc View Source Recipients Gets a read-only list that contains the channel recipients. Declaration IReadOnlyList<User> Recipients { get; } Property Value Type Description IReadOnlyList < User > a read-only list that contains the channel recipients."
  },
  "api/Strade.Entities.IRetrieveProperties.html": {
    "href": "api/Strade.Entities.IRetrieveProperties.html",
    "title": "Interface IRetrieveProperties | Strade Developer Documentation",
    "keywords": "Interface IRetrieveProperties Interface for retrieve properties. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IRetrieveProperties Methods | Improve this Doc View Source BuildQuery() Builds the query parameters for the properties. Declaration QueryParameterCollection BuildQuery() Returns Type Description QueryParameterCollection the query parameters. | Improve this Doc View Source Validate() Validates the properties. Declaration void Validate()"
  },
  "api/Strade.Entities.IRole.html": {
    "href": "api/Strade.Entities.IRole.html",
    "title": "Interface IRole | Strade Developer Documentation",
    "keywords": "Interface IRole The role structure. Inherited Members IIdentifiable<Snowflake>.Id IDiscordEntity.Client IMentionable.Mention IModifiable<RoleModifyProperties>.ModifyAsync(RoleModifyProperties, CancellationToken) IModifiable<RoleModifyProperties>.ModifyAsync(Action<RoleModifyProperties>, CancellationToken) IDeletable.DeleteAsync(CancellationToken) IUpdateable<RoleModel>.Update(RoleModel) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IRole : ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IMentionable, IModifiable<RoleModifyProperties>, IDeletable, IUpdateable<RoleModel> Remarks More details can be found on https://discord.com/developers/docs/topics/permissions#role-object-role-structure [external, Discord Developer Documentation]. Properties | Improve this Doc View Source Color Gets the role color. Declaration Color Color { get; } Property Value Type Description Color the role color. | Improve this Doc View Source GuildId Gets the snowflake identifier of the guild the role is from. Declaration Snowflake GuildId { get; } Property Value Type Description Snowflake the snowflake identifier of the guild the role is from. | Improve this Doc View Source IsEveryone Gets a value indicating whether the role is the everyone role of the guild. Declaration bool IsEveryone { get; } Property Value Type Description Boolean a value indicating whether the role is the everyone role of the guild. | Improve this Doc View Source IsHoisted Gets a value indicating whether the role is pinned in the user listing. Declaration bool IsHoisted { get; } Property Value Type Description Boolean a value indicating whether the role is pinned in the user listing. | Improve this Doc View Source IsManaged Gets a value indicating whether the role is managed by an integration. Declaration bool IsManaged { get; } Property Value Type Description Boolean a value indicating whether the role is managed by an integration. | Improve this Doc View Source IsMentionable Gets a value indicating whether the role is mentionable. Declaration bool IsMentionable { get; } Property Value Type Description Boolean a value indicating whether the role is mentionable. | Improve this Doc View Source Name Gets the name of the role. Declaration string Name { get; } Property Value Type Description String the name of the role. | Improve this Doc View Source Permissions Gets the role permissions. Declaration PermissionSet Permissions { get; } Property Value Type Description PermissionSet the role permissions. | Improve this Doc View Source Position Gets the position of the role. Declaration int Position { get; } Property Value Type Description Int32 the position of the role."
  },
  "api/Strade.Entities.ISnowflakeEntity.html": {
    "href": "api/Strade.Entities.ISnowflakeEntity.html",
    "title": "Interface ISnowflakeEntity | Strade Developer Documentation",
    "keywords": "Interface ISnowflakeEntity Interface for discord entities with an associated snowflake identifier. Inherited Members IIdentifiable<Snowflake>.Id IDiscordEntity.Client Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface ISnowflakeEntity : IIdentifiable<Snowflake>, IDiscordEntity"
  },
  "api/Strade.Entities.IStoreChannel.html": {
    "href": "api/Strade.Entities.IStoreChannel.html",
    "title": "Interface IStoreChannel | Strade Developer Documentation",
    "keywords": "Interface IStoreChannel The interface for a store channel. Inherited Members INsfwChannel.IsNsfw IGuildMessageChannel.CreateWebhookAsync(WebhookCreationProperties, CancellationToken) IGuildMessageChannel.GetWebhookAsync(Snowflake, String, CancellationToken) IGuildMessageChannel.GetWebhookAsync(Snowflake, CancellationToken) IGuildMessageChannel.GetWebhooksAsync(CancellationToken) INestedChannel.HasParent INestedChannel.ParentId INestedChannel.CreateInviteAsync(InviteCreationProperties, CancellationToken) INestedChannel.CreateInviteAsync(Action<InviteCreationProperties>, CancellationToken) INestedChannel.ModifyAsync(NestedChannelModifyProperties, CancellationToken) INestedChannel.GetParentAsync(CacheBehavior, CancellationToken) IGuildChannel.GuildId IGuildChannel.Name IGuildChannel.Overwrites IGuildChannel.Position IGuildChannel.DeleteChannelOverwriteAsync(Member, CancellationToken) IGuildChannel.DeleteChannelOverwriteAsync(IRole, CancellationToken) IGuildChannel.EditPermissionsAsync(Member, PermissionSet, PermissionSet, CancellationToken) IGuildChannel.EditPermissionsAsync(IRole, PermissionSet, PermissionSet, CancellationToken) IGuildChannel.GetGuildAsync(CacheBehavior, CancellationToken) IGuildChannel.GetInvitesAsync(CancellationToken) IGuildChannel.ModifyAsync(GuildChannelModifyProperties, CancellationToken) IMentionable.Mention IMessageChannel.DeleteMessagesAsync(Int32, Int32, CancellationToken) IMessageChannel.DeleteMessagesAsync(IEnumerable<Snowflake>, CancellationToken) IMessageChannel.DeleteMessagesAsync(IEnumerable<IMessage>, CancellationToken) IMessageChannel.GetFirstMessageAsync(CancellationToken) IMessageChannel.GetFirstMessagesAsync(Int32, CancellationToken) IMessageChannel.GetFirstMessagesChunkedAsync(Int32, CancellationToken) IMessageChannel.GetLastMessageAsync(CancellationToken) IMessageChannel.GetMessageAsync(Snowflake, CancellationToken) IMessageChannel.GetMessagesAfterAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesAfterAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesAfterChunkedAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesAfterChunkedAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesAroundAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesAroundAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesAroundChunkedAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesAroundChunkedAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesAsync(Int32, CancellationToken) IMessageChannel.GetMessagesBeforeAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesBeforeAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesBeforeChunkedAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesBeforeChunkedAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesChunkedAsync(Int32, CancellationToken) IMessageChannel.GetPinnedMessagesAsync(CancellationToken) IMessageChannel.SendFileAsync(String, String, String, EmbedMessage, Boolean, CancellationToken) IMessageChannel.SendFileAsync(FileInfo, String, String, EmbedMessage, Boolean, CancellationToken) IMessageChannel.SendFileAsync(ArraySegment<Byte>, String, String, EmbedMessage, Boolean, CancellationToken) IMessageChannel.SendFileAsync(Stream, String, String, EmbedMessage, Boolean, Boolean, CancellationToken) IMessageChannel.SendMessageAsync(MessageCreationProperties, CancellationToken) IMessageChannel.SendMessageAsync(String, EmbedMessage, Boolean, CancellationToken) IMessageChannel.SendMessageAsync(EmbedMessage, Boolean, CancellationToken) IMessageChannel.StartTyping() IMessageChannel.StartTyping(TimeSpan) IMessageChannel.TriggerTypingAsync(CancellationToken) IChannel.Type IIdentifiable<Snowflake>.Id IDiscordEntity.Client IDeletable.DeleteAsync(CancellationToken) IUpdateable<ChannelModel>.Update(ChannelModel) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IStoreChannel : INsfwChannel, IGuildMessageChannel, INestedChannel, IGuildChannel, IMentionable, IMessageChannel, IChannel, ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IDeletable, IUpdateable<ChannelModel>"
  },
  "api/Strade.Entities.ITeam.html": {
    "href": "api/Strade.Entities.ITeam.html",
    "title": "Interface ITeam | Strade Developer Documentation",
    "keywords": "Interface ITeam Represents the structure of a team object. Inherited Members IHasIcon.HasIcon IHasIcon.IconHash IHasIcon.IconUrl IHasIcon.BuildIconUrl(ImageFormat, Nullable<Int32>) IIdentifiable<Snowflake>.Id IDiscordEntity.Client Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface ITeam : IHasIcon, ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity Remarks More details can be found on https://discord.com/developers/docs/topics/teams#data-models-team-object [external, Discord Developer Documentation]. Properties | Improve this Doc View Source Members Gets a list of the members in the team. Declaration IReadOnlyList<ITeamMember> Members { get; } Property Value Type Description IReadOnlyList < ITeamMember > a list of the members in the team. | Improve this Doc View Source Owner Gets the owner of the team. Declaration ITeamMember Owner { get; } Property Value Type Description ITeamMember the owner of the team."
  },
  "api/Strade.Entities.ITeamMember.html": {
    "href": "api/Strade.Entities.ITeamMember.html",
    "title": "Interface ITeamMember | Strade Developer Documentation",
    "keywords": "Interface ITeamMember Represents the structure of a team member object. Inherited Members IDiscordEntity.Client Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface ITeamMember : IDiscordEntity Remarks More details can be found on https://discord.com/developers/docs/topics/teams#data-models-team-members-object [external, Discord Developer Documentation]. Properties | Improve this Doc View Source MembershipStatus Gets the membership status of the team member. Declaration MembershipStatus MembershipStatus { get; } Property Value Type Description MembershipStatus the membership status of the team member. | Improve this Doc View Source Permissions Gets the permissions set of the team member. Declaration IReadOnlyList<string> Permissions { get; } Property Value Type Description IReadOnlyList < String > the permissions set of the team member. | Improve this Doc View Source User Gets the user information of the team member. Declaration User User { get; } Property Value Type Description User the user information of the team member."
  },
  "api/Strade.Entities.ITextChannel.html": {
    "href": "api/Strade.Entities.ITextChannel.html",
    "title": "Interface ITextChannel | Strade Developer Documentation",
    "keywords": "Interface ITextChannel Represents a text channel object. Inherited Members INsfwChannel.IsNsfw ITopicChannel.Topic IModifiable<TextChannelModifyProperties>.ModifyAsync(TextChannelModifyProperties, CancellationToken) IModifiable<TextChannelModifyProperties>.ModifyAsync(Action<TextChannelModifyProperties>, CancellationToken) IGuildMessageChannel.CreateWebhookAsync(WebhookCreationProperties, CancellationToken) IGuildMessageChannel.GetWebhookAsync(Snowflake, String, CancellationToken) IGuildMessageChannel.GetWebhookAsync(Snowflake, CancellationToken) IGuildMessageChannel.GetWebhooksAsync(CancellationToken) INestedChannel.HasParent INestedChannel.ParentId INestedChannel.CreateInviteAsync(InviteCreationProperties, CancellationToken) INestedChannel.CreateInviteAsync(Action<InviteCreationProperties>, CancellationToken) INestedChannel.ModifyAsync(NestedChannelModifyProperties, CancellationToken) INestedChannel.GetParentAsync(CacheBehavior, CancellationToken) IGuildChannel.GuildId IGuildChannel.Name IGuildChannel.Overwrites IGuildChannel.Position IGuildChannel.DeleteChannelOverwriteAsync(Member, CancellationToken) IGuildChannel.DeleteChannelOverwriteAsync(IRole, CancellationToken) IGuildChannel.EditPermissionsAsync(Member, PermissionSet, PermissionSet, CancellationToken) IGuildChannel.EditPermissionsAsync(IRole, PermissionSet, PermissionSet, CancellationToken) IGuildChannel.GetGuildAsync(CacheBehavior, CancellationToken) IGuildChannel.GetInvitesAsync(CancellationToken) IGuildChannel.ModifyAsync(GuildChannelModifyProperties, CancellationToken) IMentionable.Mention IMessageChannel.DeleteMessagesAsync(Int32, Int32, CancellationToken) IMessageChannel.DeleteMessagesAsync(IEnumerable<Snowflake>, CancellationToken) IMessageChannel.DeleteMessagesAsync(IEnumerable<IMessage>, CancellationToken) IMessageChannel.GetFirstMessageAsync(CancellationToken) IMessageChannel.GetFirstMessagesAsync(Int32, CancellationToken) IMessageChannel.GetFirstMessagesChunkedAsync(Int32, CancellationToken) IMessageChannel.GetLastMessageAsync(CancellationToken) IMessageChannel.GetMessageAsync(Snowflake, CancellationToken) IMessageChannel.GetMessagesAfterAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesAfterAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesAfterChunkedAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesAfterChunkedAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesAroundAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesAroundAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesAroundChunkedAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesAroundChunkedAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesAsync(Int32, CancellationToken) IMessageChannel.GetMessagesBeforeAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesBeforeAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesBeforeChunkedAsync(Snowflake, Int32, CancellationToken) IMessageChannel.GetMessagesBeforeChunkedAsync(IMessage, Int32, CancellationToken) IMessageChannel.GetMessagesChunkedAsync(Int32, CancellationToken) IMessageChannel.GetPinnedMessagesAsync(CancellationToken) IMessageChannel.SendFileAsync(String, String, String, EmbedMessage, Boolean, CancellationToken) IMessageChannel.SendFileAsync(FileInfo, String, String, EmbedMessage, Boolean, CancellationToken) IMessageChannel.SendFileAsync(ArraySegment<Byte>, String, String, EmbedMessage, Boolean, CancellationToken) IMessageChannel.SendFileAsync(Stream, String, String, EmbedMessage, Boolean, Boolean, CancellationToken) IMessageChannel.SendMessageAsync(MessageCreationProperties, CancellationToken) IMessageChannel.SendMessageAsync(String, EmbedMessage, Boolean, CancellationToken) IMessageChannel.SendMessageAsync(EmbedMessage, Boolean, CancellationToken) IMessageChannel.StartTyping() IMessageChannel.StartTyping(TimeSpan) IMessageChannel.TriggerTypingAsync(CancellationToken) IChannel.Type IIdentifiable<Snowflake>.Id IDiscordEntity.Client IDeletable.DeleteAsync(CancellationToken) IUpdateable<ChannelModel>.Update(ChannelModel) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface ITextChannel : INsfwChannel, ITopicChannel, IModifiable<TextChannelModifyProperties>, IGuildMessageChannel, INestedChannel, IGuildChannel, IMentionable, IMessageChannel, IChannel, ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IDeletable, IUpdateable<ChannelModel> Remarks More details can be found on https://discord.com/developers/docs/resources/channel#channel-object-channel-structure [external, Discord Developer Documentation]. Properties | Improve this Doc View Source RateLimitPerUser Gets the number of seconds a user has to wait before sending another message. Declaration int RateLimitPerUser { get; } Property Value Type Description Int32 the number of seconds a user has to wait before sending another message (ranges from 0 to 21600 ; bots and users with the permission ManageMessages or ManageChannels are unaffected from the message send rate limit)."
  },
  "api/Strade.Entities.ITopicChannel.html": {
    "href": "api/Strade.Entities.ITopicChannel.html",
    "title": "Interface ITopicChannel | Strade Developer Documentation",
    "keywords": "Interface ITopicChannel Interface for channels with topics. Inherited Members IChannel.Name IChannel.Type IIdentifiable<Snowflake>.Id IDiscordEntity.Client IDeletable.DeleteAsync(CancellationToken) IUpdateable<ChannelModel>.Update(ChannelModel) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface ITopicChannel : IChannel, ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IDeletable, IUpdateable<ChannelModel> Properties | Improve this Doc View Source Topic Gets the channel topic. Declaration string Topic { get; } Property Value Type Description String the channel topic."
  },
  "api/Strade.Entities.ITypingIndicator.html": {
    "href": "api/Strade.Entities.ITypingIndicator.html",
    "title": "Interface ITypingIndicator | Strade Developer Documentation",
    "keywords": "Interface ITypingIndicator An utility interface for managing the channel typing indicator. Inherited Members IDisposable.Dispose() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface ITypingIndicator : IDisposable Properties | Improve this Doc View Source Channel Gets the channel where the typing indicator is triggered. Declaration IMessageChannel Channel { get; } Property Value Type Description IMessageChannel the channel where the typing indicator is triggered. | Improve this Doc View Source Interval Gets the trigger interval. Declaration TimeSpan Interval { get; } Property Value Type Description TimeSpan the trigger interval. | Improve this Doc View Source IsTyping Gets a value indicating whether the typing indicator is sending typing events. Declaration bool IsTyping { get; } Property Value Type Description Boolean a value indicating whether the typing indicator is sending typing events."
  },
  "api/Strade.Entities.IUpdateable-1.html": {
    "href": "api/Strade.Entities.IUpdateable-1.html",
    "title": "Interface IUpdateable<TModel> | Strade Developer Documentation",
    "keywords": "Interface IUpdateable<TModel> An interface that entities should inherit from which can be updated from a model. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IUpdateable<in TModel> where TModel : class Type Parameters Name Description TModel the type of models. Methods | Improve this Doc View Source Update(TModel) Updates the entity using the specified model. Declaration void Update(TModel model) Parameters Type Name Description TModel model the model."
  },
  "api/Strade.Entities.IVoiceChannel.html": {
    "href": "api/Strade.Entities.IVoiceChannel.html",
    "title": "Interface IVoiceChannel | Strade Developer Documentation",
    "keywords": "Interface IVoiceChannel Represents a voice channel object. Inherited Members INestedChannel.HasParent INestedChannel.ParentId INestedChannel.CreateInviteAsync(InviteCreationProperties, CancellationToken) INestedChannel.CreateInviteAsync(Action<InviteCreationProperties>, CancellationToken) INestedChannel.ModifyAsync(NestedChannelModifyProperties, CancellationToken) INestedChannel.GetParentAsync(CacheBehavior, CancellationToken) IGuildChannel.GuildId IGuildChannel.Name IGuildChannel.Overwrites IGuildChannel.Position IGuildChannel.DeleteChannelOverwriteAsync(Member, CancellationToken) IGuildChannel.DeleteChannelOverwriteAsync(IRole, CancellationToken) IGuildChannel.EditPermissionsAsync(Member, PermissionSet, PermissionSet, CancellationToken) IGuildChannel.EditPermissionsAsync(IRole, PermissionSet, PermissionSet, CancellationToken) IGuildChannel.GetGuildAsync(CacheBehavior, CancellationToken) IGuildChannel.GetInvitesAsync(CancellationToken) IGuildChannel.ModifyAsync(GuildChannelModifyProperties, CancellationToken) IChannel.Type IIdentifiable<Snowflake>.Id IDiscordEntity.Client IDeletable.DeleteAsync(CancellationToken) IUpdateable<ChannelModel>.Update(ChannelModel) IMentionable.Mention IModifiable<VoiceChannelModifyProperties>.ModifyAsync(VoiceChannelModifyProperties, CancellationToken) IModifiable<VoiceChannelModifyProperties>.ModifyAsync(Action<VoiceChannelModifyProperties>, CancellationToken) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IVoiceChannel : INestedChannel, IGuildChannel, IChannel, ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IDeletable, IUpdateable<ChannelModel>, IMentionable, IModifiable<VoiceChannelModifyProperties> Remarks More details can be found on https://discord.com/developers/docs/resources/channel#channel-object-channel-structure [external, Discord Developer Documentation]. Properties | Improve this Doc View Source Bitrate Gets the channel bitrate. Declaration int Bitrate { get; } Property Value Type Description Int32 the channel bitrate. | Improve this Doc View Source UserLimit Gets the number of maximum allowed users in the channels. Declaration int UserLimit { get; } Property Value Type Description Int32 the number of maximum allowed users in the channels. Extension Methods VoiceChannelExtensions.ConnectAsync(IVoiceChannel, Boolean, Boolean, CancellationToken) VoiceChannelExtensions.DisconnectAsync(IVoiceChannel, CancellationToken) VoiceChannelExtensions.GetMembers(IVoiceChannel) VoiceChannelExtensions.GetVoiceStates(IVoiceChannel) VoiceChannelExtensions.IsEmpty(IVoiceChannel)"
  },
  "api/Strade.Entities.IWebhookMessage.html": {
    "href": "api/Strade.Entities.IWebhookMessage.html",
    "title": "Interface IWebhookMessage | Strade Developer Documentation",
    "keywords": "Interface IWebhookMessage Inherited Members IMessage.Activity IMessage.Application IMessage.Attachments IMessage.Author IMessage.CallInformation IMessage.ChannelId IMessage.Content IMessage.CreatedAt IMessage.Embeds IMessage.Flags IMessage.GuildId IMessage.IsEdited IMessage.IsMentioningEveryone IMessage.IsPinned IMessage.IsTextToSpeech IMessage.LastEditedAt IMessage.MentionedChannels IMessage.MentionedRoles IMessage.MentionedUsers IMessage.Nonce IMessage.Reactions IMessage.Reference IMessage.Stickers IMessage.Type IMessage.AddReactionAsync(IEmote, CancellationToken) IMessage.AddReactionsAsync(IEnumerable<IEmote>, CancellationToken) IMessage.ClearReactionsAsync(CancellationToken) IMessage.CrosspostAsync(CancellationToken) IMessage.DeleteOwnReactionAsync(IEmote, CancellationToken) IMessage.DeleteReactionAsync(User, IEmote, CancellationToken) IMessage.DeleteReactionsAsync(IEmote, CancellationToken) IMessage.GetChannelAsync(CacheBehavior, CancellationToken) IMessage.GetGuildAsync(CacheBehavior, CancellationToken) IMessage.GetMemberAsync(CacheBehavior, CancellationToken) IMessage.PinAsync(CancellationToken) IMessage.ReplyAsync(MessageCreationProperties, CancellationToken) IMessage.ReplyAsync(String, EmbedMessage, Boolean, CancellationToken) IMessage.ReplyAsync(EmbedMessage, Boolean, CancellationToken) IMessage.UnpinAsync(CancellationToken) IDeletable.DeleteAsync(CancellationToken) IIdentifiable<Snowflake>.Id IModifiable<MessageModifyProperties>.ModifyAsync(MessageModifyProperties, CancellationToken) IModifiable<MessageModifyProperties>.ModifyAsync(Action<MessageModifyProperties>, CancellationToken) IDiscordEntity.Client IUpdateable<MessageModel>.Update(MessageModel) IModifiable<WebhookMessageModifyProperties>.ModifyAsync(WebhookMessageModifyProperties, CancellationToken) IModifiable<WebhookMessageModifyProperties>.ModifyAsync(Action<WebhookMessageModifyProperties>, CancellationToken) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public interface IWebhookMessage : IMessage, IDeletable, ISnowflakeEntity, IIdentifiable<Snowflake>, IModifiable<MessageModifyProperties>, IDiscordEntity, IUpdateable<MessageModel>, IModifiable<WebhookMessageModifyProperties> Properties | Improve this Doc View Source WebhookId Declaration Snowflake WebhookId { get; } Property Value Type Description Snowflake | Improve this Doc View Source WebhookToken Declaration string WebhookToken { get; } Property Value Type Description String"
  },
  "api/Strade.Entities.KnownColor.html": {
    "href": "api/Strade.Entities.KnownColor.html",
    "title": "Enum KnownColor | Strade Developer Documentation",
    "keywords": "Enum KnownColor A set of known colors. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public enum KnownColor : byte Fields Name Description Blue Denotes that the color is Blue . DarkBlue Denotes that the color is Dark Blue . DarkerGray Denotes that the color is Darker Gray . DarkGold Denotes that the color is Dark Gold . DarkGray Denotes that the color is Dark Gray . DarkGreen Denotes that the color is Dark Green . DarkMagenta Denotes that the color is Dark Magenta . DarkOrange Denotes that the color is Dark Orange . DarkPurple Denotes that the color is Dark Purple . DarkRed Denotes that the color is Dark Red . DarkTeal Denotes that the color is Dark Teal . Default Denotes that the color is the default color. Gold Denotes that the color is Gold . Green Denotes that the color is Green . LighterGray Denotes that the color is Lighter Gray . LightGray Denotes that the color is Light Gray . Magenta Denotes that the color is Magenta . Orange Denotes that the color is Orange . Purple Denotes that the color is Purple . Red Denotes that the color is Red . Teal Denotes that the color is Teal . Unknown Denotes that the color is unknown. See Also FromKnownColor(KnownColor) KnownColor IsKnown Color(KnownColor) Extension Methods EnumExtensions.GetName<KnownColor>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.Member.html": {
    "href": "api/Strade.Entities.Member.html",
    "title": "Class Member | Strade Developer Documentation",
    "keywords": "Class Member The guild member structure. Inheritance Object Member Implements IUpdateable < MemberModel > ISnowflakeEntity IIdentifiable < Snowflake > IDiscordEntity IMentionable IModifiable < MemberModifyProperties > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class Member : IUpdateable<MemberModel>, ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IMentionable, IModifiable<MemberModifyProperties> Remarks More details can be found on https://discord.com/developers/docs/resources/guild#guild-member-object-guild-member-structure [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source Member(IDiscordRestClient, MemberModel, Snowflake, User) Declaration public Member(IDiscordRestClient client, MemberModel model, Snowflake guildId, User user = null) Parameters Type Name Description IDiscordRestClient client MemberModel model Snowflake guildId User user Properties | Improve this Doc View Source Client Declaration public IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient | Improve this Doc View Source GuildId Gets the snowflake identifier of the guild. Declaration public Snowflake GuildId { get; } Property Value Type Description Snowflake the snowflake identifier of the guild. | Improve this Doc View Source HasBoostedServer Gets a value indicating whether the guild member has boosted the server with Nitro boost. Declaration public bool HasBoostedServer { get; } Property Value Type Description Boolean a value indicating whether the guild member has boosted the server with Nitro boost. | Improve this Doc View Source Id Gets the user / member identifier. Declaration public Snowflake Id { get; } Property Value Type Description Snowflake the user / member identifier. | Improve this Doc View Source IsDeafened Gets a value indicating whether the member is deafened server-wide. Declaration public bool IsDeafened { get; } Property Value Type Description Boolean a value indicating whether the member is deafened server-wide. | Improve this Doc View Source IsMuted Gets a value indicating whether the member is muted server-wide. Declaration public bool IsMuted { get; } Property Value Type Description Boolean a value indicating whether the member is muted server-wide. | Improve this Doc View Source JoinedAt Gets the time when the member has joined the guild. Declaration public DateTimeOffset JoinedAt { get; } Property Value Type Description DateTimeOffset the time when the member has joined the guild. | Improve this Doc View Source Mention Declaration public string Mention { get; } Property Value Type Description String | Improve this Doc View Source Name Gets the safe name of the member (if the member has no nickname then the username is used instead). Declaration public string Name { get; } Property Value Type Description String the safe name of the member (if the member has no nickname then the username is used instead). | Improve this Doc View Source Nickname Gets the nickname of the user. Declaration public string Nickname { get; } Property Value Type Description String the nickname of the user (if null the user has no explicit nickname). | Improve this Doc View Source PremiumSince Gets the time when the user has boosted the server with Nitro. Declaration public DateTimeOffset? PremiumSince { get; } Property Value Type Description Nullable < DateTimeOffset > the time when the user has boosted the server with Nitro; if null then the member has not boosted the server with Nitro. | Improve this Doc View Source RoleIds Gets a list of snowflake identifiers referring to the assigned roles of the member. Declaration public IReadOnlyList<Snowflake> RoleIds { get; } Property Value Type Description IReadOnlyList < Snowflake > a list of snowflake identifiers referring to the assigned roles of the member. | Improve this Doc View Source User Gets the associated user. Declaration public User User { get; } Property Value Type Description User the associated user. Methods | Improve this Doc View Source AddRoleAsync(IRole, CancellationToken) Adds the role to the specified to the member asynchronously. Declaration public Task AddRoleAsync(IRole role, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IRole role the role to add. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified role is null . | Improve this Doc View Source BanAsync(MemberBanCreationProperties, CancellationToken) Bans the member from the guild asynchronously. Declaration public Task BanAsync(MemberBanCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description MemberBanCreationProperties properties the properties. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source BanAsync(Action<MemberBanCreationProperties>, CancellationToken) Bans the member from the guild asynchronously. Declaration public Task BanAsync(Action<MemberBanCreationProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < MemberBanCreationProperties > action the action used to configure the properties. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source GetGuildAsync(CacheBehavior, CancellationToken) Gets the guild the member is in asynchronously. Declaration public ValueTask<IGuild> GetGuildAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IGuild > a task that represents the asynchronous operation. The task result is the guild. | Improve this Doc View Source GetRolesAsync(CacheBehavior, CancellationToken) Gets the roles of the member asynchronously. Declaration public Task<IEnumerable<IRole>> GetRolesAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description Task < IEnumerable < IRole >> a task that represents the asynchronous operation. The task result is the roles of the member. | Improve this Doc View Source KickAsync(CancellationToken) Kicks the member from the guild asynchronously. Declaration public Task KickAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source ModifyAsync(MemberModifyProperties, CancellationToken) Declaration public Task ModifyAsync(MemberModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description MemberModifyProperties properties CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ModifyAsync(Action<MemberModifyProperties>, CancellationToken) Declaration public Task ModifyAsync(Action<MemberModifyProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < MemberModifyProperties > action CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source RemoveRoleAsync(IRole, CancellationToken) Removes the role to the specified to the member asynchronously. Declaration public Task RemoveRoleAsync(IRole role, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IRole role the role to remove. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified role is null . | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IUpdateable<MemberModel>.Update(MemberModel) Declaration void IUpdateable<MemberModel>.Update(MemberModel model) Parameters Type Name Description MemberModel model Implements IUpdateable<TModel> ISnowflakeEntity IIdentifiable<TIdentifier> IDiscordEntity IMentionable IModifiable<TProperties> Extension Methods MemberExtensions.GetVoiceState(Member)"
  },
  "api/Strade.Entities.MemberBanCreationProperties.html": {
    "href": "api/Strade.Entities.MemberBanCreationProperties.html",
    "title": "Class MemberBanCreationProperties | Strade Developer Documentation",
    "keywords": "Class MemberBanCreationProperties The ICreationProperties for creating a guild ban ( Ban ). Inheritance Object MemberBanCreationProperties Implements IRetrieveProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class MemberBanCreationProperties : IRetrieveProperties Properties | Improve this Doc View Source DeleteMessageDays Gets or sets the number of days to delete messages from the user. Declaration public Optional<int> DeleteMessageDays { get; set; } Property Value Type Description Optional < Int32 > the number of days to delete messages from the user (must be in range of 0 - 7 ). | Improve this Doc View Source Reason Gets or sets the ban reason. Declaration public Optional<string> Reason { get; set; } Property Value Type Description Optional < String > the ban reason. Methods | Improve this Doc View Source BuildQuery() Declaration public QueryParameterCollection BuildQuery() Returns Type Description QueryParameterCollection | Improve this Doc View Source Validate() Declaration public void Validate() Implements IRetrieveProperties"
  },
  "api/Strade.Entities.MemberCreationProperties.html": {
    "href": "api/Strade.Entities.MemberCreationProperties.html",
    "title": "Class MemberCreationProperties | Strade Developer Documentation",
    "keywords": "Class MemberCreationProperties The ICreationProperties for adding a member ( Member ) to a guild ( IGuild ). Inheritance Object MemberCreationProperties Implements ICreationProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class MemberCreationProperties : ICreationProperties Properties | Improve this Doc View Source AccessToken Gets or sets the access token of the member that granted your application the guilds.join scope. Declaration [JsonPropertyName(\"access_token\")] public string AccessToken { get; set; } Property Value Type Description String the access token of the member that granted your application the guilds.join scope. | Improve this Doc View Source IsDeafened Gets or sets a value indicating whether the user should be deafened. Declaration [JsonPropertyName(\"deaf\")] public bool IsDeafened { get; set; } Property Value Type Description Boolean a value indicating whether the user should be deafened. | Improve this Doc View Source IsMuted Gets or sets a value indicating whether the user should be muted. Declaration [JsonPropertyName(\"mute\")] public bool IsMuted { get; set; } Property Value Type Description Boolean a value indicating whether the user should be muted. | Improve this Doc View Source Nickname Gets or sets the user's nickname. Declaration [JsonPropertyName(\"nick\")] public string Nickname { get; set; } Property Value Type Description String the user's nickname. | Improve this Doc View Source Roles Gets or sets the user role assignments. Declaration [JsonPropertyName(\"roles\")] public IReadOnlyList<Snowflake> Roles { get; set; } Property Value Type Description IReadOnlyList < Snowflake > the user role assignments. Methods | Improve this Doc View Source Validate() Declaration public void Validate() Implements ICreationProperties"
  },
  "api/Strade.Entities.MemberDisconnectAuditLogOptions.html": {
    "href": "api/Strade.Entities.MemberDisconnectAuditLogOptions.html",
    "title": "Class MemberDisconnectAuditLogOptions | Strade Developer Documentation",
    "keywords": "Class MemberDisconnectAuditLogOptions Inheritance Object MemberDisconnectAuditLogOptions Implements IAuditLogOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class MemberDisconnectAuditLogOptions : IAuditLogOptions Constructors | Improve this Doc View Source MemberDisconnectAuditLogOptions(AuditLogEntryOptionsModel) Declaration public MemberDisconnectAuditLogOptions(AuditLogEntryOptionsModel model) Parameters Type Name Description AuditLogEntryOptionsModel model Properties | Improve this Doc View Source Count Gets the number of members disconnected. Declaration public int Count { get; } Property Value Type Description Int32 the number of members disconnected. Implements IAuditLogOptions"
  },
  "api/Strade.Entities.MemberDownloadProperties.html": {
    "href": "api/Strade.Entities.MemberDownloadProperties.html",
    "title": "Class MemberDownloadProperties | Strade Developer Documentation",
    "keywords": "Class MemberDownloadProperties Inheritance Object MemberDownloadProperties Implements IRetrieveProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class MemberDownloadProperties : IRetrieveProperties Properties | Improve this Doc View Source AfterUserId Gets or sets the highest user snowflake identifier of the previous page downloaded. Declaration public Optional<Snowflake> AfterUserId { get; set; } Property Value Type Description Optional < Snowflake > | Improve this Doc View Source Limit Gets or sets the number of members to download (1-1000). Declaration public Optional<int> Limit { get; set; } Property Value Type Description Optional < Int32 > Methods | Improve this Doc View Source BuildQuery() Declaration public QueryParameterCollection BuildQuery() Returns Type Description QueryParameterCollection | Improve this Doc View Source Validate() Declaration public void Validate() Implements IRetrieveProperties"
  },
  "api/Strade.Entities.MemberModifyProperties.html": {
    "href": "api/Strade.Entities.MemberModifyProperties.html",
    "title": "Class MemberModifyProperties | Strade Developer Documentation",
    "keywords": "Class MemberModifyProperties The IModifyProperties for modifying a guild member. Inheritance Object MemberModifyProperties Implements IModifyProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class MemberModifyProperties : IModifyProperties Properties | Improve this Doc View Source IsDeafened Gets or sets a value indicating whether the user is deafened in voice channels (the user must be a in a voice channel). Declaration [JsonPropertyName(\"deaf\")] public Optional<bool> IsDeafened { get; set; } Property Value Type Description Optional < Boolean > a value indicating whether the user is deafened in voice channels (the user must be a in a voice channel). | Improve this Doc View Source IsMuted Gets or sets a value indicating whether the user is muted in voice channels (the user must be a in a voice channel). Declaration [JsonPropertyName(\"mute\")] public Optional<bool> IsMuted { get; set; } Property Value Type Description Optional < Boolean > a value indicating whether the user is muted in voice channels (the user must be a in a voice channel). | Improve this Doc View Source Nickname Gets or sets the nickname of the user. Declaration [JsonPropertyName(\"nick\")] public Optional<string> Nickname { get; set; } Property Value Type Description Optional < String > the nickname of the user. | Improve this Doc View Source Roles Gets or sets the roles the user is in. Declaration [JsonPropertyName(\"roles\")] public Optional<IReadOnlyList<Snowflake>> Roles { get; set; } Property Value Type Description Optional < IReadOnlyList < Snowflake >> the roles the user is in. | Improve this Doc View Source VoiceChannelId Gets or sets the snowflake identifier of the target channel. Declaration [JsonPropertyName(\"channel_id\")] public Optional<Snowflake?> VoiceChannelId { get; set; } Property Value Type Description Optional < Nullable < Snowflake >> the snowflake identifier of the target channel; if null then the client is disconnected from the voice channel. Methods | Improve this Doc View Source Validate() Declaration public void Validate() Implements IModifyProperties"
  },
  "api/Strade.Entities.MemberMoveAuditLogOptions.html": {
    "href": "api/Strade.Entities.MemberMoveAuditLogOptions.html",
    "title": "Class MemberMoveAuditLogOptions | Strade Developer Documentation",
    "keywords": "Class MemberMoveAuditLogOptions Inheritance Object MemberMoveAuditLogOptions Implements IAuditLogOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class MemberMoveAuditLogOptions : IAuditLogOptions Constructors | Improve this Doc View Source MemberMoveAuditLogOptions(AuditLogEntryOptionsModel) Declaration public MemberMoveAuditLogOptions(AuditLogEntryOptionsModel model) Parameters Type Name Description AuditLogEntryOptionsModel model Properties | Improve this Doc View Source ChannelId Gets the snowflake identifier of the voice channel moved to. Declaration public Snowflake ChannelId { get; } Property Value Type Description Snowflake the snowflake identifier of the voice channel moved to. | Improve this Doc View Source Members Gets the number of members moved. Declaration public int Members { get; } Property Value Type Description Int32 the number of members moved. Implements IAuditLogOptions"
  },
  "api/Strade.Entities.MemberPruneAuditLogOptions.html": {
    "href": "api/Strade.Entities.MemberPruneAuditLogOptions.html",
    "title": "Class MemberPruneAuditLogOptions | Strade Developer Documentation",
    "keywords": "Class MemberPruneAuditLogOptions Inheritance Object MemberPruneAuditLogOptions Implements IAuditLogOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class MemberPruneAuditLogOptions : IAuditLogOptions Constructors | Improve this Doc View Source MemberPruneAuditLogOptions(AuditLogEntryOptionsModel) Declaration public MemberPruneAuditLogOptions(AuditLogEntryOptionsModel model) Parameters Type Name Description AuditLogEntryOptionsModel model Properties | Improve this Doc View Source DeleteMemberDays Gets the number of days pruned. Declaration public int DeleteMemberDays { get; } Property Value Type Description Int32 the number of days pruned. | Improve this Doc View Source MembersRemoved Gets the number of total members removed during the prune. Declaration public int MembersRemoved { get; } Property Value Type Description Int32 the number of total members removed during the prune. Implements IAuditLogOptions"
  },
  "api/Strade.Entities.MembershipStatus.html": {
    "href": "api/Strade.Entities.MembershipStatus.html",
    "title": "Enum MembershipStatus | Strade Developer Documentation",
    "keywords": "Enum MembershipStatus Represents a membership state / status. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(NumericEnumConverter<MembershipStatus>))] public enum MembershipStatus : byte Remarks More details can be found on https://discord.com/developers/docs/topics/teams#data-models-membership-state-enum [external, Discord Developer Documentation]. Fields Name Description Accepted Denotes that the member is accepted. Invited Denotes that the member is invited, but not accepted. Extension Methods EnumExtensions.GetName<MembershipStatus>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.MentionProperties.html": {
    "href": "api/Strade.Entities.MentionProperties.html",
    "title": "Class MentionProperties | Strade Developer Documentation",
    "keywords": "Class MentionProperties Inheritance Object MentionProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(MentionPropertiesJsonConverter))] public sealed class MentionProperties Properties | Improve this Doc View Source MentionEveryone Declaration public bool MentionEveryone { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ReplyUser Declaration public Optional<bool> ReplyUser { get; set; } Property Value Type Description Optional < Boolean > | Improve this Doc View Source RoleIds Declaration public IReadOnlyList<Snowflake> RoleIds { get; set; } Property Value Type Description IReadOnlyList < Snowflake > | Improve this Doc View Source UserIds Declaration public IReadOnlyList<Snowflake> UserIds { get; set; } Property Value Type Description IReadOnlyList < Snowflake >"
  },
  "api/Strade.Entities.MentionType.html": {
    "href": "api/Strade.Entities.MentionType.html",
    "title": "Enum MentionType | Strade Developer Documentation",
    "keywords": "Enum MentionType Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(StringEnumConverter<MentionType>))] public enum MentionType : byte Fields Name Description Everyone Roles Users Extension Methods EnumExtensions.GetName<MentionType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.MessageActivity.html": {
    "href": "api/Strade.Entities.MessageActivity.html",
    "title": "Struct MessageActivity | Strade Developer Documentation",
    "keywords": "Struct MessageActivity Represents a message activity. Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public struct MessageActivity Remarks More details can be found on https://discord.com/developers/docs/resources/channel#message-activity-object-structure [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source MessageActivity(MessageActivityType, String) Declaration public MessageActivity(MessageActivityType type, string partyId) Parameters Type Name Description MessageActivityType type String partyId | Improve this Doc View Source MessageActivity(MessageActivityModel) Declaration public MessageActivity(MessageActivityModel model) Parameters Type Name Description MessageActivityModel model Properties | Improve this Doc View Source PartyId Gets the associated rich-presence party identifier. Declaration public string PartyId { get; } Property Value Type Description String the associated rich-presence party identifier. | Improve this Doc View Source Type Gets the type of the message activity. Declaration public MessageActivityType Type { get; } Property Value Type Description MessageActivityType the type of the message activity."
  },
  "api/Strade.Entities.MessageActivityType.html": {
    "href": "api/Strade.Entities.MessageActivityType.html",
    "title": "Enum MessageActivityType | Strade Developer Documentation",
    "keywords": "Enum MessageActivityType A set of message activity types. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(NumericEnumConverter<MessageActivityType>))] public enum MessageActivityType : byte Remarks More details can be found on https://discord.com/developers/docs/resources/channel#message-object-message-activity-types [external, Discord Developer Documentation]. Fields Name Description Join Denotes that the message activity type is \"Join\" . JoinRequest Denotes that the message activity type is \"JoinRequest\" . Listen Denotes that the message activity type is \"Listen\" . Spectate Denotes that the message activity type is \"Spectate\" . Extension Methods EnumExtensions.GetName<MessageActivityType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.MessageApplication.html": {
    "href": "api/Strade.Entities.MessageApplication.html",
    "title": "Class MessageApplication | Strade Developer Documentation",
    "keywords": "Class MessageApplication Represents a message application object. Inheritance Object MessageApplication Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class MessageApplication Remarks More details can be found on https://discord.com/developers/docs/resources/channel#message-application-object-structure [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source MessageApplication(MessageApplicationModel) Declaration public MessageApplication(MessageApplicationModel model) Parameters Type Name Description MessageApplicationModel model Properties | Improve this Doc View Source CoverImage Gets the cover image hash of the referenced application. Declaration public string CoverImage { get; } Property Value Type Description String the cover image hash of the referenced application. | Improve this Doc View Source Description Gets the description of the referenced application. Declaration public string Description { get; } Property Value Type Description String the description of the referenced application. | Improve this Doc View Source IconId Gets the icon identifier of the reference application. Declaration public string IconId { get; } Property Value Type Description String the icon identifier of the reference application. | Improve this Doc View Source Id Gets the snowflake identifier of the referenced application. Declaration public Snowflake Id { get; } Property Value Type Description Snowflake the snowflake identifier of the referenced application. | Improve this Doc View Source Name Gets the name of the reference application. Declaration public string Name { get; } Property Value Type Description String the name of the reference application. Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Strade.Entities.MessageAttachment.html": {
    "href": "api/Strade.Entities.MessageAttachment.html",
    "title": "Class MessageAttachment | Strade Developer Documentation",
    "keywords": "Class MessageAttachment Represents a message attachment. Inheritance Object MessageAttachment Implements IAttachment ISnowflakeEntity IIdentifiable < Snowflake > IDiscordEntity Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class MessageAttachment : IAttachment, ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity Remarks More details can be found on https://discord.com/developers/docs/resources/channel#attachment-object-attachment-structure [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source MessageAttachment(IDiscordRestClient, MessageAttachmentModel) Declaration public MessageAttachment(IDiscordRestClient client, MessageAttachmentModel model) Parameters Type Name Description IDiscordRestClient client MessageAttachmentModel model Properties | Improve this Doc View Source Client Declaration public IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient | Improve this Doc View Source Filename Declaration public string Filename { get; } Property Value Type Description String | Improve this Doc View Source Id Declaration public Snowflake Id { get; } Property Value Type Description Snowflake | Improve this Doc View Source Image Declaration public AttachmentImage? Image { get; } Property Value Type Description Nullable < AttachmentImage > | Improve this Doc View Source ProxiedUrl Gets the proxied URL for the attachment. Declaration public Uri ProxiedUrl { get; } Property Value Type Description Uri the proxied URL for the attachment. | Improve this Doc View Source Size Gets the total file size in bytes. Declaration public long Size { get; } Property Value Type Description Int64 the total file size in bytes. | Improve this Doc View Source Url Gets the URL of the attachment. Declaration public Uri Url { get; } Property Value Type Description Uri the URL of the attachment. Methods | Improve this Doc View Source CreateContentStreamAsync(CancellationToken) Declaration public Task<Stream> CreateContentStreamAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < Stream > | Improve this Doc View Source DownloadAsync(FileInfo, CancellationToken) Declaration public Task DownloadAsync(FileInfo file, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description FileInfo file CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source DownloadAsync(String, CancellationToken) Declaration public Task DownloadAsync(string path, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String path CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements IAttachment ISnowflakeEntity IIdentifiable<TIdentifier> IDiscordEntity"
  },
  "api/Strade.Entities.MessageBulkDeleteAuditLogOptions.html": {
    "href": "api/Strade.Entities.MessageBulkDeleteAuditLogOptions.html",
    "title": "Class MessageBulkDeleteAuditLogOptions | Strade Developer Documentation",
    "keywords": "Class MessageBulkDeleteAuditLogOptions Inheritance Object MessageBulkDeleteAuditLogOptions Implements IAuditLogOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class MessageBulkDeleteAuditLogOptions : IAuditLogOptions Constructors | Improve this Doc View Source MessageBulkDeleteAuditLogOptions(AuditLogEntryOptionsModel) Declaration public MessageBulkDeleteAuditLogOptions(AuditLogEntryOptionsModel model) Parameters Type Name Description AuditLogEntryOptionsModel model Properties | Improve this Doc View Source Count Gets the number of messages deleted. Declaration public int Count { get; } Property Value Type Description Int32 the number of messages deleted. Implements IAuditLogOptions"
  },
  "api/Strade.Entities.MessageCreationProperties.html": {
    "href": "api/Strade.Entities.MessageCreationProperties.html",
    "title": "Class MessageCreationProperties | Strade Developer Documentation",
    "keywords": "Class MessageCreationProperties The ICreationProperties for a Strade.Entities.Message . Inheritance Object MessageCreationProperties InteractionsMessageCreationProperties Implements ICreationProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public class MessageCreationProperties : ICreationProperties Properties | Improve this Doc View Source Attachments Gets or sets a list of additional attachments. Declaration public Optional<IReadOnlyCollection<IAttachment>> Attachments { get; set; } Property Value Type Description Optional < IReadOnlyCollection < IAttachment >> | Improve this Doc View Source Content Gets or sets the message content. Declaration public Optional<string> Content { get; set; } Property Value Type Description Optional < String > the message content. | Improve this Doc View Source Embed Gets or sets the embed message attached to the message. Declaration public virtual Optional<EmbedMessage> Embed { get; set; } Property Value Type Description Optional < EmbedMessage > the embed message attached to the message. | Improve this Doc View Source File Gets or sets an attachment for a file. Declaration public Optional<IAttachment> File { get; set; } Property Value Type Description Optional < IAttachment > an attachment for a file. | Improve this Doc View Source Mentions Gets or sets the mention properties for the message. Declaration public Optional<MentionProperties> Mentions { get; set; } Property Value Type Description Optional < MentionProperties > the mention properties for the message. | Improve this Doc View Source Nonce Gets or sets the message nonce which can be used for optimistic message sending. Declaration public Optional<string> Nonce { get; set; } Property Value Type Description Optional < String > the message nonce which can be used for optimistic message sending. | Improve this Doc View Source ReferencedMessage Gets or sets the message to reply to / to reference. Declaration public Optional<MessageReference> ReferencedMessage { get; set; } Property Value Type Description Optional < MessageReference > the message to reply to / to reference. | Improve this Doc View Source TextToSpeech Gets or sets a value indicating whether the message should be a TTS (Text-To-Speech) message. Declaration public Optional<bool> TextToSpeech { get; set; } Property Value Type Description Optional < Boolean > a value indicating whether the message should be a TTS (Text-To-Speech) message. Methods | Improve this Doc View Source Validate() Declaration public virtual void Validate() Implements ICreationProperties"
  },
  "api/Strade.Entities.MessageDeleteAuditLogOptions.html": {
    "href": "api/Strade.Entities.MessageDeleteAuditLogOptions.html",
    "title": "Class MessageDeleteAuditLogOptions | Strade Developer Documentation",
    "keywords": "Class MessageDeleteAuditLogOptions Inheritance Object MessageDeleteAuditLogOptions Implements IAuditLogOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class MessageDeleteAuditLogOptions : IAuditLogOptions Constructors | Improve this Doc View Source MessageDeleteAuditLogOptions(AuditLogEntryOptionsModel) Declaration public MessageDeleteAuditLogOptions(AuditLogEntryOptionsModel model) Parameters Type Name Description AuditLogEntryOptionsModel model Properties | Improve this Doc View Source ChannelId Gets the snowflake identifier of the channel the message was deleted from. Declaration public Snowflake ChannelId { get; } Property Value Type Description Snowflake the snowflake identifier of the channel the message was deleted from. Implements IAuditLogOptions"
  },
  "api/Strade.Entities.MessageFlags.html": {
    "href": "api/Strade.Entities.MessageFlags.html",
    "title": "Enum MessageFlags | Strade Developer Documentation",
    "keywords": "Enum MessageFlags A set of message flags. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [Flags] [JsonConverter(typeof(NumericEnumConverter<MessageFlags>))] public enum MessageFlags : byte Remarks More details can be found on https://discord.com/developers/docs/resources/channel#message-object-message-flags [external, Discord Developer Documentation]. Fields Name Description Crossposted Denotes that the message has been published to subscribed channels (via Channel Following). Ephemeral Denotes that the message is an ephemeral message (a message that only the users sees, only works for interactions). IsCrosspost Denotes that the message originated from a message in another channel (via Channel Following). None Denotes that the message has no special flags. SourceMessageDeleted Denotes that the source message for the crosspost has been deleted. SuppressEmbeds Denotes that the message should not include any embeds when serializing the message. Urgent Denotes that the message came from the urgent message system. Extension Methods EnumExtensions.GetName<MessageFlags>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.MessageModifyProperties.html": {
    "href": "api/Strade.Entities.MessageModifyProperties.html",
    "title": "Class MessageModifyProperties | Strade Developer Documentation",
    "keywords": "Class MessageModifyProperties The IModifyProperties for a Strade.Entities.Message entity. Inheritance Object MessageModifyProperties Implements IModifyProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class MessageModifyProperties : IModifyProperties Properties | Improve this Doc View Source Content Gets or sets the message content. Declaration [JsonPropertyName(\"content\")] public Optional<string> Content { get; set; } Property Value Type Description Optional < String > the message content. | Improve this Doc View Source Embed Gets or sets the embed message attached to the message. Declaration [JsonPropertyName(\"embed\")] public Optional<EmbedMessage> Embed { get; set; } Property Value Type Description Optional < EmbedMessage > the embed message attached to the message. | Improve this Doc View Source Flags Gets or sets the message flags. (only the SuppressEmbeds can be set / unset). Declaration [JsonPropertyName(\"flags\")] public Optional<MessageFlags> Flags { get; set; } Property Value Type Description Optional < MessageFlags > the message flags. (only the SuppressEmbeds can be set / unset). | Improve this Doc View Source Mentions Gets or sets the mention properties for the message. Declaration [JsonPropertyName(\"allowed_mentions\")] public Optional<MentionProperties> Mentions { get; set; } Property Value Type Description Optional < MentionProperties > the mention properties for the message. Methods | Improve this Doc View Source Validate() Declaration public void Validate() Implements IModifyProperties"
  },
  "api/Strade.Entities.MessageNotificationLevel.html": {
    "href": "api/Strade.Entities.MessageNotificationLevel.html",
    "title": "Enum MessageNotificationLevel | Strade Developer Documentation",
    "keywords": "Enum MessageNotificationLevel A set of discord's default message notification levels. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(NumericEnumConverter<MessageNotificationLevel>))] public enum MessageNotificationLevel : byte Remarks More details can be found on https://discord.com/developers/docs/resources/guild#guild-object-default-message-notification-level [external, Discord Developer Documentation]. Fields Name Description AllMessages Denotes that a notification is sent when a message was sent. OnlyMentions Denotes that a notification is sent when the member is mentioned in a message. Extension Methods EnumExtensions.GetName<MessageNotificationLevel>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.MessagePinAuditLogOptions.html": {
    "href": "api/Strade.Entities.MessagePinAuditLogOptions.html",
    "title": "Class MessagePinAuditLogOptions | Strade Developer Documentation",
    "keywords": "Class MessagePinAuditLogOptions Inheritance Object MessagePinAuditLogOptions Implements IAuditLogOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class MessagePinAuditLogOptions : IAuditLogOptions Constructors | Improve this Doc View Source MessagePinAuditLogOptions(AuditLogEntryOptionsModel) Declaration public MessagePinAuditLogOptions(AuditLogEntryOptionsModel model) Parameters Type Name Description AuditLogEntryOptionsModel model Properties | Improve this Doc View Source ChannelId Gets the snowflake identifier of the channel the message was unpinned/pinned. Declaration public Snowflake ChannelId { get; } Property Value Type Description Snowflake the snowflake identifier of the channel the message was unpinned/pinned. | Improve this Doc View Source MessageId Gets the snowflake identifier of the message pinned/unpinned. Declaration public Snowflake MessageId { get; } Property Value Type Description Snowflake the snowflake identifier of the message pinned/unpinned. Implements IAuditLogOptions"
  },
  "api/Strade.Entities.MessageProperties.html": {
    "href": "api/Strade.Entities.MessageProperties.html",
    "title": "Class MessageProperties | Strade Developer Documentation",
    "keywords": "Class MessageProperties Inheritance Object MessageProperties Implements IRetrieveProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class MessageProperties : IRetrieveProperties Properties | Improve this Doc View Source AfterMessageId Declaration public Optional<Snowflake> AfterMessageId { get; set; } Property Value Type Description Optional < Snowflake > | Improve this Doc View Source AroundMessageId Declaration public Optional<Snowflake> AroundMessageId { get; set; } Property Value Type Description Optional < Snowflake > | Improve this Doc View Source BeforeMessageId Declaration public Optional<Snowflake> BeforeMessageId { get; set; } Property Value Type Description Optional < Snowflake > | Improve this Doc View Source Limit Declaration public Optional<int> Limit { get; set; } Property Value Type Description Optional < Int32 > Methods | Improve this Doc View Source BuildQuery() Declaration public QueryParameterCollection BuildQuery() Returns Type Description QueryParameterCollection | Improve this Doc View Source Validate() Declaration public void Validate() Implements IRetrieveProperties"
  },
  "api/Strade.Entities.MessageReaction.html": {
    "href": "api/Strade.Entities.MessageReaction.html",
    "title": "Class MessageReaction | Strade Developer Documentation",
    "keywords": "Class MessageReaction Represents a message reaction object. Inheritance Object MessageReaction Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class MessageReaction Remarks More details can be found on https://discord.com/developers/docs/resources/channel#reaction-object [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source MessageReaction(IEmote, Int32, Boolean) Declaration public MessageReaction(IEmote emote, int count, bool hasReacted = false) Parameters Type Name Description IEmote emote Int32 count Boolean hasReacted | Improve this Doc View Source MessageReaction(MessageReactionModel) Declaration public MessageReaction(MessageReactionModel model) Parameters Type Name Description MessageReactionModel model Properties | Improve this Doc View Source Count Gets a number indicating how many times the Emote has been used to react. Declaration public int Count { get; } Property Value Type Description Int32 a number indicating how many times the Emote has been used to react. | Improve this Doc View Source Emote Gets the emote reacted with. Declaration public IEmote Emote { get; } Property Value Type Description IEmote the emote reacted with. | Improve this Doc View Source HasReacted Gets a value indicating whether the bot user has reacted with the Emote . Declaration public bool HasReacted { get; } Property Value Type Description Boolean a value indicating whether the bot user has reacted with the Emote . Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Strade.Entities.MessageReference.html": {
    "href": "api/Strade.Entities.MessageReference.html",
    "title": "Class MessageReference | Strade Developer Documentation",
    "keywords": "Class MessageReference Represents a message reference object. Inheritance Object MessageReference Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class MessageReference Remarks More details can be found on https://discord.com/developers/docs/resources/channel#message-reference-object-structure [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source MessageReference(MessageReferenceModel) Declaration public MessageReference(MessageReferenceModel model) Parameters Type Name Description MessageReferenceModel model | Improve this Doc View Source MessageReference(Nullable<Snowflake>, Nullable<Snowflake>, Nullable<Snowflake>) Declaration public MessageReference(Snowflake? messageId = default(Snowflake? ), Snowflake? channelId = default(Snowflake? ), Snowflake? guildId = default(Snowflake? )) Parameters Type Name Description Nullable < Snowflake > messageId Nullable < Snowflake > channelId Nullable < Snowflake > guildId Properties | Improve this Doc View Source ChannelId Gets the snowflake identifier of the channel the referenced message was sent in. Declaration public Snowflake? ChannelId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the channel the referenced message was sent in. | Improve this Doc View Source GuildId Gets the snowflake identifier of the guild the referenced message was sent in. Declaration public Snowflake? GuildId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the guild the referenced message was sent in. | Improve this Doc View Source MessageId Gets the snowflake identifier of the referenced message. Declaration public Snowflake? MessageId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the referenced message. Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Strade.Entities.MessageType.html": {
    "href": "api/Strade.Entities.MessageType.html",
    "title": "Enum MessageType | Strade Developer Documentation",
    "keywords": "Enum MessageType A set of different message types. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(NumericEnumConverter<MessageType>))] public enum MessageType : byte Remarks More details can be found on https://discord.com/developers/docs/resources/channel#message-object-message-types [external, Discord Developer Documentation]. Fields Name Description Call Denotes that the message is a call was made. ChannelFollowAdd Denotes that the message is a message that shows that a channel follow was added. ChannelIconChange Denotes that the message is a message that shows that the channel icon was changed. ChannelNameChange Denotes that the message is a message that shows that the channel name was changed. ChannelPinnedMessage Denotes that the message is a message that shows that a message was pinned in the channel. Default Denotes that the message is a default user message. GuildDiscoveryDisqualified Denotes that the guild was disqualified for guild discovery. GuildDiscoveryGracePeriodFinalWarning Denotes that the guild received it's final warning for the discovery grace period. GuildDiscoveryGracePeriodInitialWarning Denotes that the guild received it's initial warning for the discovery grace period. GuildDiscoveryRequalified Denotes that the guild was re-qualified for guild discovery. GuildMemberJoin Denotes that the message is a message that shows that a member joined the guild. RecipientAdd Denotes that the message is a message that shows that a recipient was added to the channel. RecipientRemove Denotes that the message is a message that shows that a recipient was removed from the channel. Reply Denotes that the user has replied to a message. UserPremiumGuildSubscription Denotes that the message is a message that shows that a member made a premium guild subscription. UserPremiumGuildSubscriptionTier1 Denotes that the message is a message that shows that a member made a premium guild subscription 1. UserPremiumGuildSubscriptionTier2 Denotes that the message is a message that shows that a member made a premium guild subscription 2. UserPremiumGuildSubscriptionTier3 Denotes that the message is a message that shows that a member made a premium guild subscription 3. Extension Methods EnumExtensions.GetName<MessageType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.MultiFactorAuthenticationLevel.html": {
    "href": "api/Strade.Entities.MultiFactorAuthenticationLevel.html",
    "title": "Enum MultiFactorAuthenticationLevel | Strade Developer Documentation",
    "keywords": "Enum MultiFactorAuthenticationLevel The multi-factor authentication level enumeration. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(NumericEnumConverter<MultiFactorAuthenticationLevel>))] public enum MultiFactorAuthenticationLevel : byte Remarks More details can be found on https://discord.com/developers/docs/resources/guild#guild-object-mfa-level [external, Discord Developer Documentation]. Fields Name Description Elevated Denotes that multi-factor authentication is required for administrative guild actions. None Denotes that no multi-factor authentication is required for administrative guild actions. Extension Methods EnumExtensions.GetName<MultiFactorAuthenticationLevel>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.NestedChannelCreationProperties.html": {
    "href": "api/Strade.Entities.NestedChannelCreationProperties.html",
    "title": "Class NestedChannelCreationProperties | Strade Developer Documentation",
    "keywords": "Class NestedChannelCreationProperties Abstraction for the ICreationProperties for nested guild channels. Inheritance Object GuildChannelCreationProperties NestedChannelCreationProperties NewsChannelCreationProperties StoreChannelCreationProperties TextChannelCreationProperties VoiceChannelCreationProperties Implements ICreationProperties Inherited Members GuildChannelCreationProperties.Name GuildChannelCreationProperties.PermissionOverwrites GuildChannelCreationProperties.Position GuildChannelCreationProperties.Type GuildChannelCreationProperties.Validate() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public abstract class NestedChannelCreationProperties : GuildChannelCreationProperties, ICreationProperties Properties | Improve this Doc View Source ParentId Gets or sets the channel parent category. Declaration [JsonPropertyName(\"parent_id\")] public Optional<Snowflake> ParentId { get; set; } Property Value Type Description Optional < Snowflake > the channel parent category. Implements ICreationProperties"
  },
  "api/Strade.Entities.NestedChannelModifyProperties.html": {
    "href": "api/Strade.Entities.NestedChannelModifyProperties.html",
    "title": "Class NestedChannelModifyProperties | Strade Developer Documentation",
    "keywords": "Class NestedChannelModifyProperties The IModifyProperties for a nested channel (see https://discord.com/developers/docs/resources/channel#modify-channel for more details on modifying channels). Inheritance Object GuildChannelModifyProperties NestedChannelModifyProperties NewsChannelModifyProperties StoreChannelModifyProperties TextChannelModifyProperties VoiceChannelModifyProperties Implements IModifyProperties Inherited Members GuildChannelModifyProperties.Name GuildChannelModifyProperties.PermissionOverwrites GuildChannelModifyProperties.Position GuildChannelModifyProperties.Validate() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public abstract class NestedChannelModifyProperties : GuildChannelModifyProperties, IModifyProperties Properties | Improve this Doc View Source ParentId Gets or sets the channel parent category. Declaration [JsonPropertyName(\"parent_id\")] public Optional<Snowflake> ParentId { get; set; } Property Value Type Description Optional < Snowflake > the channel parent category. Implements IModifyProperties"
  },
  "api/Strade.Entities.NewsChannelCreationProperties.html": {
    "href": "api/Strade.Entities.NewsChannelCreationProperties.html",
    "title": "Class NewsChannelCreationProperties | Strade Developer Documentation",
    "keywords": "Class NewsChannelCreationProperties Inheritance Object GuildChannelCreationProperties NestedChannelCreationProperties NewsChannelCreationProperties Implements ICreationProperties Inherited Members NestedChannelCreationProperties.ParentId GuildChannelCreationProperties.Name GuildChannelCreationProperties.PermissionOverwrites GuildChannelCreationProperties.Position GuildChannelCreationProperties.Validate() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class NewsChannelCreationProperties : NestedChannelCreationProperties, ICreationProperties Properties | Improve this Doc View Source IsNsfw Gets or sets a value indicating whether the text channel should be a NSFW channel. Declaration [JsonPropertyName(\"nsfw\")] public Optional<bool> IsNsfw { get; set; } Property Value Type Description Optional < Boolean > a value indicating whether the text channel should be a NSFW channel. | Improve this Doc View Source Topic Gets or sets the channel topic. Declaration [JsonPropertyName(\"topic\")] public Optional<string> Topic { get; set; } Property Value Type Description Optional < String > the channel topic. | Improve this Doc View Source Type Declaration public override ChannelType Type { get; } Property Value Type Description ChannelType Overrides GuildChannelCreationProperties.Type Implements ICreationProperties"
  },
  "api/Strade.Entities.NewsChannelModifyProperties.html": {
    "href": "api/Strade.Entities.NewsChannelModifyProperties.html",
    "title": "Class NewsChannelModifyProperties | Strade Developer Documentation",
    "keywords": "Class NewsChannelModifyProperties Inheritance Object GuildChannelModifyProperties NestedChannelModifyProperties NewsChannelModifyProperties Implements IModifyProperties Inherited Members NestedChannelModifyProperties.ParentId GuildChannelModifyProperties.Name GuildChannelModifyProperties.PermissionOverwrites GuildChannelModifyProperties.Position GuildChannelModifyProperties.Validate() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class NewsChannelModifyProperties : NestedChannelModifyProperties, IModifyProperties Properties | Improve this Doc View Source IsNsfw Gets or sets a value indicating whether the text channel should be a NSFW channel. Declaration [JsonPropertyName(\"nsfw\")] public Optional<bool> IsNsfw { get; set; } Property Value Type Description Optional < Boolean > a value indicating whether the text channel should be a NSFW channel. | Improve this Doc View Source Topic Gets or sets the channel topic. Declaration [JsonPropertyName(\"topic\")] public Optional<string> Topic { get; set; } Property Value Type Description Optional < String > the channel topic. Implements IModifyProperties"
  },
  "api/Strade.Entities.Optional-1.html": {
    "href": "api/Strade.Entities.Optional-1.html",
    "title": "Struct Optional<T> | Strade Developer Documentation",
    "keywords": "Struct Optional<T> Represents a structure that holds an optional object. Implements IEquatable < Optional <T>> Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(OptionalJsonConverterFactory))] public struct Optional<T> : IEquatable<Optional<T>> Type Parameters Name Description T the type of the value. Constructors | Improve this Doc View Source Optional(T) Initializes a new instance of the Optional<T> struct. Declaration public Optional(T value) Parameters Type Name Description T value the value. Properties | Improve this Doc View Source IsPresent Gets a value indicating whether the optional value is present. Declaration public bool IsPresent { get; } Property Value Type Description Boolean a value indicating whether the optional value is present. | Improve this Doc View Source Value Gets the inner value of the optional. Declaration public T Value { get; } Property Value Type Description T the inner value of the optional. Methods | Improve this Doc View Source Equals(Optional<T>) Checks the equality between the current and the specified other instance. Declaration public bool Equals(Optional<T> other) Parameters Type Name Description Optional <T> other the other optional. Returns Type Description Boolean a value indicating whether the current and the specified other instance are equal. | Improve this Doc View Source Equals(Object) Checks the equality between the current instance and the specified obj . Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj the other object. Returns Type Description Boolean a value indicating whether the current instance and the specified obj are equal. Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Gets the hash code of the object. Declaration public override int GetHashCode() Returns Type Description Int32 the hash code of the object. Overrides ValueType.GetHashCode() | Improve this Doc View Source GetOr(T) Declaration public T GetOr(T fallback) Parameters Type Name Description T fallback Returns Type Description T | Improve this Doc View Source GetOrDefault() Declaration public T GetOrDefault() Returns Type Description T | Improve this Doc View Source ToOptional(T) Creates an optional for the specified value . Declaration public Optional<T> ToOptional(T value) Parameters Type Name Description T value the value. Returns Type Description Optional <T> an optional for the specified value . Operators | Improve this Doc View Source Equality(Optional<T>, Optional<T>) Checks the equality between the specified left Optional<T> and the specified right Optional<T> . Declaration public static bool operator ==(Optional<T> left, Optional<T> right) Parameters Type Name Description Optional <T> left the left-hand Optional<T> to check. Optional <T> right the right-hand Optional<T> to check. Returns Type Description Boolean a value indicating whether the specified left Optional<T> and the specified right Optional<T> are equal. | Improve this Doc View Source Implicit(T to Optional<T>) Implicit operator for converting a value to an Optional<T> . Declaration public static implicit operator Optional<T>(T value) Parameters Type Name Description T value the value to convert. Returns Type Description Optional <T> | Improve this Doc View Source Inequality(Optional<T>, Optional<T>) Checks the equality between the specified left Optional<T> and the specified right Optional<T> . Declaration public static bool operator !=(Optional<T> left, Optional<T> right) Parameters Type Name Description Optional <T> left the left-hand Optional<T> to check. Optional <T> right the right-hand Optional<T> to check. Returns Type Description Boolean a value indicating whether the specified left Optional<T> and the specified right Optional<T> are NOT equal. Implements System.IEquatable<T>"
  },
  "api/Strade.Entities.OverwriteAuditLogOptions.html": {
    "href": "api/Strade.Entities.OverwriteAuditLogOptions.html",
    "title": "Class OverwriteAuditLogOptions | Strade Developer Documentation",
    "keywords": "Class OverwriteAuditLogOptions Inheritance Object OverwriteAuditLogOptions Implements IAuditLogOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class OverwriteAuditLogOptions : IAuditLogOptions Constructors | Improve this Doc View Source OverwriteAuditLogOptions(AuditLogEntryOptionsModel) Declaration public OverwriteAuditLogOptions(AuditLogEntryOptionsModel model) Parameters Type Name Description AuditLogEntryOptionsModel model Properties | Improve this Doc View Source EntityId Gets the snowflake identifier of the target entity the overwrite is for. Declaration public Snowflake EntityId { get; } Property Value Type Description Snowflake the snowflake identifier of the target entity the overwrite is for. | Improve this Doc View Source EntityType Gets the type of the overwrite applied to the entity. Declaration public PermissionOverwriteTarget EntityType { get; } Property Value Type Description PermissionOverwriteTarget the type of the overwrite applied to the entity. | Improve this Doc View Source RoleName Gets the name of the role the overwrite is for; or null if the overwrite is not for a role. Declaration public string RoleName { get; } Property Value Type Description String the name of the role the overwrite is for; or null if the overwrite is not for a role. Implements IAuditLogOptions"
  },
  "api/Strade.Entities.PartySize.html": {
    "href": "api/Strade.Entities.PartySize.html",
    "title": "Struct PartySize | Strade Developer Documentation",
    "keywords": "Struct PartySize Represents a party size object. Implements IEquatable < PartySize > Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(PartySizeJsonConverter))] public struct PartySize : IEquatable<PartySize> Constructors | Improve this Doc View Source PartySize(Int32, Int32) Initializes a new instance of the PartySize struct. Declaration public PartySize(int currentSize, int maximumSize) Parameters Type Name Description Int32 currentSize the size of the party. Int32 maximumSize the maximum size of the party. | Improve this Doc View Source PartySize(Int32[]) Initializes a new instance of the PartySize struct. Declaration public PartySize(int[] data) Parameters Type Name Description Int32 [] data the array to read the current and maximum size of the party from, the array must contain 2 integers. Exceptions Type Condition ArgumentNullException thrown if the specified data array is null . ArgumentException thrown if the specified data is smaller than 2 integers. Properties | Improve this Doc View Source CurrentSize Gets the size of the party. Declaration public int CurrentSize { get; } Property Value Type Description Int32 the size of the party. | Improve this Doc View Source MaximumSize Gets the maximum size of the party. Declaration public int MaximumSize { get; } Property Value Type Description Int32 the maximum size of the party. Methods | Improve this Doc View Source Equals(PartySize) Declaration public bool Equals(PartySize other) Parameters Type Name Description PartySize other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source ToArray() Creates an array containing the current size and the maximum size of the party. Declaration public int[] ToArray() Returns Type Description Int32 [] the array. Operators | Improve this Doc View Source Equality(PartySize, PartySize) Declaration public static bool operator ==(PartySize left, PartySize right) Parameters Type Name Description PartySize left PartySize right Returns Type Description Boolean | Improve this Doc View Source Inequality(PartySize, PartySize) Declaration public static bool operator !=(PartySize left, PartySize right) Parameters Type Name Description PartySize left PartySize right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Entities.PermissionHelper.html": {
    "href": "api/Strade.Entities.PermissionHelper.html",
    "title": "Class PermissionHelper | Strade Developer Documentation",
    "keywords": "Class PermissionHelper An utility class that helps with calculating nested permissions. Inheritance Object PermissionHelper Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public static class PermissionHelper Methods | Improve this Doc View Source ComputeBasePermissions(IGuild, Member) Computes the permissions for the specified member in the specified guild . Declaration public static PermissionSet ComputeBasePermissions(IGuild guild, Member member) Parameters Type Name Description IGuild guild the guild. Member member the member to compute permissions for. Returns Type Description PermissionSet the computed permissions. Exceptions Type Condition ArgumentNullException thrown if the specified guild is null . ArgumentNullException thrown if the specified member is null . | Improve this Doc View Source ComputeOverwrites(PermissionSet, Member, IGuildChannel) Computes the permissions (including permission overwrites from the specified channel ) for the specified member . Declaration public static PermissionSet ComputeOverwrites(PermissionSet basePermissions, Member member, IGuildChannel channel) Parameters Type Name Description PermissionSet basePermissions the computed permission set (use ComputeBasePermissions(IGuild, Member) ). Member member the member to compute permissions for. IGuildChannel channel the channel to compute permissions for. Returns Type Description PermissionSet the computed permissions. Exceptions Type Condition ArgumentNullException thrown if the specified member is null . ArgumentNullException thrown if the specified channel is null . | Improve this Doc View Source ComputePermissions(IGuild, Member, IGuildChannel) Computes the permissions (including permission overwrites from the specified channel ) for the specified member in the specified guild . Declaration public static PermissionSet ComputePermissions(IGuild guild, Member member, IGuildChannel channel) Parameters Type Name Description IGuild guild the guild. Member member the member to compute permissions for. IGuildChannel channel the channel to compute permissions for. Returns Type Description PermissionSet the computed permissions. Exceptions Type Condition ArgumentNullException thrown if the specified guild is null . ArgumentNullException thrown if the specified member is null . ArgumentNullException thrown if the specified channel is null ."
  },
  "api/Strade.Entities.PermissionOverwrite.html": {
    "href": "api/Strade.Entities.PermissionOverwrite.html",
    "title": "Class PermissionOverwrite | Strade Developer Documentation",
    "keywords": "Class PermissionOverwrite Represents a permission overwrite. Inheritance Object PermissionOverwrite Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(PermissionOverwriteJsonConverter))] public sealed class PermissionOverwrite Constructors | Improve this Doc View Source PermissionOverwrite(IRole, PermissionSet, PermissionSet) Declaration public PermissionOverwrite(IRole role, PermissionSet allowed, PermissionSet denied) Parameters Type Name Description IRole role PermissionSet allowed PermissionSet denied | Improve this Doc View Source PermissionOverwrite(Member, PermissionSet, PermissionSet) Declaration public PermissionOverwrite(Member member, PermissionSet allowed, PermissionSet denied) Parameters Type Name Description Member member PermissionSet allowed PermissionSet denied | Improve this Doc View Source PermissionOverwrite(Snowflake, PermissionOverwriteTarget, PermissionSet, PermissionSet) Declaration public PermissionOverwrite(Snowflake targetId, PermissionOverwriteTarget target, PermissionSet allowed, PermissionSet denied) Parameters Type Name Description Snowflake targetId PermissionOverwriteTarget target PermissionSet allowed PermissionSet denied Properties | Improve this Doc View Source Allowed Gets the permission set containing the allowed permissions for the overwrite. Declaration public PermissionSet Allowed { get; } Property Value Type Description PermissionSet the permission set containing the allowed permissions for the overwrite. | Improve this Doc View Source Denied Gets the permission set containing the denied permissions for the overwrite. Declaration public PermissionSet Denied { get; } Property Value Type Description PermissionSet the permission set containing the denied permissions for the overwrite. | Improve this Doc View Source Target Gets the type of the overwritten entity. Declaration public PermissionOverwriteTarget Target { get; } Property Value Type Description PermissionOverwriteTarget the type of the overwritten entity. | Improve this Doc View Source TargetId Gets the snowflake identifier of the target. Declaration public Snowflake TargetId { get; } Property Value Type Description Snowflake the snowflake identifier of the target."
  },
  "api/Strade.Entities.PermissionOverwriteTarget.html": {
    "href": "api/Strade.Entities.PermissionOverwriteTarget.html",
    "title": "Enum PermissionOverwriteTarget | Strade Developer Documentation",
    "keywords": "Enum PermissionOverwriteTarget A set of Target types. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(NumericEnumConverter<PermissionOverwriteTarget>))] public enum PermissionOverwriteTarget : byte Fields Name Description Member Denotes that the PermissionOverwrite refers to a guild member. Role Denotes that the PermissionOverwrite refers to a role. Extension Methods EnumExtensions.GetName<PermissionOverwriteTarget>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.Permissions.html": {
    "href": "api/Strade.Entities.Permissions.html",
    "title": "Enum Permissions | Strade Developer Documentation",
    "keywords": "Enum Permissions A set of discord's permissions. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [Flags] [JsonConverter(typeof(NumericEnumConverter<Permissions>))] public enum Permissions : ulong Remarks More details can be found on https://discord.com/developers/docs/topics/permissions [external, Discord Developer Documentation]. Fields Name Description AddReactions Denotes that the user is allowed to add new reactions to messages. Administrator Denotes that user has all permissions and also bypasses channel permission overwrites. AttachFiles Denotes that the user is allowed to upload files to a message. BanMembers Denotes that the user is allowed to ban members from the guild. ChangeNickname Denotes that the user is allowed to modify its own nickname. Connect Denotes that the user is allowed to join voice channels. CreateInstantInvite Denotes that the user can create instant invites. DeafenMembers Denotes that the user is allowed to deaf members in a voice channel. EmbedLinks Denotes that the messages send by the user are automatically embedded (e.g. Video Links, etc.). KickMembers Denotes that the user is allowed to kick members from the guild. ManageChannels Denotes that the user is allowed to manage and edit channels. ManageEmojis Denotes that the user is allowed to manage and edit emojis. ManageGuild Denotes that the user is allowed to edit and manage the guild. ManageMessages Denotes that the user is allowed to delete messages from other users. ManageNicknames Denotes that the user is allowed to modify nicknames of other guild members. ManageRoles Denotes that the user is allowed to manage and edit guild roles. ManageWebhooks Denotes that the user is allowed to manage and edit the guild webhooks. MentionEveryone Denotes that the user is allowed to mention all users in a channel (with @everyone) and to mention all online users in a channel (with @here). MoveMembers Denotes that the user is allowed to move members between voice channels. MuteMembers Denotes that the user is allowed to mute members in a voice channel. None Denotes that the user has no permissions. PrioritySpeaker Denotes that the user is allowed to use the priority speaker in a voice channel. ReadMessageHistory Denotes that the user is allowed to read past message history. SendMessages Denotes that the user is allowed to send messages in a text channel. SendTextToSpeechMessages Denotes that the user is allowed to send Text-To-Speech (TTS) messages (in Discord Client messages prefixed with the /tts command). Speak Denotes that the user is allowed to speak in a voice channel. Stream Denotes that the user is allowed to go live. UseExternalEmojis Denotes that the user is allowed to use custom emojis from other guilds. UseVoiceActivityDetection Denotes that the user is allowed to use VAD (Voice-Activity-Detection) in a voice channel. ViewAuditLog Denotes that the user is allowed to view the guild audit logs. ViewChannel Denotes that the user is allowed to view a channel (which includes reading messages in text channels). Extension Methods EnumExtensions.GetName<Permissions>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.PermissionSet.html": {
    "href": "api/Strade.Entities.PermissionSet.html",
    "title": "Struct PermissionSet | Strade Developer Documentation",
    "keywords": "Struct PermissionSet A helper struct for a permission set. Implements IEquatable < PermissionSet > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(PermissionSetJsonConverter))] public struct PermissionSet : IEquatable<PermissionSet> Constructors | Improve this Doc View Source PermissionSet(Permissions) Initializes a new instance of the PermissionSet struct. Declaration public PermissionSet(Permissions permission) Parameters Type Name Description Permissions permission the permission. | Improve this Doc View Source PermissionSet(UInt64) Initializes a new instance of the PermissionSet struct. Declaration public PermissionSet(ulong value) Parameters Type Name Description UInt64 value the permission value. Fields | Improve this Doc View Source Empty Gets an empty permission set. Declaration public static readonly PermissionSet Empty Field Value Type Description PermissionSet Properties | Improve this Doc View Source CanAddReactions Gets a value indicating whether the user is allowed to add new reactions to messages. Declaration public bool CanAddReactions { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to add new reactions to messages. | Improve this Doc View Source CanAttachFiles Gets a value indicating whether the user is allowed to upload files to a message. Declaration public bool CanAttachFiles { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to upload files to a message. | Improve this Doc View Source CanBanMembers Gets a value indicating whether the user is allowed to ban members from the guild. Declaration public bool CanBanMembers { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to ban members from the guild. | Improve this Doc View Source CanChangeNickname Gets a value indicating whether the user is allowed to modify its own nickname. Declaration public bool CanChangeNickname { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to modify its own nickname. | Improve this Doc View Source CanConnect Gets a value indicating whether the user is allowed to join voice channels. Declaration public bool CanConnect { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to join voice channels. | Improve this Doc View Source CanCreateInstantInvites Gets a value indicating whether the user can create instant invites. Declaration public bool CanCreateInstantInvites { get; } Property Value Type Description Boolean a value indicating whether the user can create instant invites. | Improve this Doc View Source CanDeafenMembers Gets a value indicating whether the user is allowed to deaf members in a voice channel. Declaration public bool CanDeafenMembers { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to deaf members in a voice channel. | Improve this Doc View Source CanEmbedLinks Gets a value indicating whether the messages send by the user are automatically embedded (e.g. Video Links, etc.). Declaration public bool CanEmbedLinks { get; } Property Value Type Description Boolean a value indicating whether the messages send by the user are automatically embedded (e.g. Video Links, etc.) | Improve this Doc View Source CanKickMembers Gets a value indicating whether the user is allowed to kick members from the guild. Declaration public bool CanKickMembers { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to kick members from the guild. | Improve this Doc View Source CanManageChannels Gets a value indicating whether the user is allowed to manage and edit channels. Declaration public bool CanManageChannels { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to manage and edit channels. | Improve this Doc View Source CanManageEmojis Gets a value indicating whether the user is allowed to manage and edit emojis. Declaration public bool CanManageEmojis { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to manage and edit emojis. | Improve this Doc View Source CanManageGuild Gets a value indicating whether the user is allowed to edit and manage the guild. Declaration public bool CanManageGuild { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to edit and manage the guild. | Improve this Doc View Source CanManageMessages Gets a value indicating whether the user is allowed to delete messages from other users. Declaration public bool CanManageMessages { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to delete messages from other users. | Improve this Doc View Source CanManageNicknames Gets a value indicating whether the user is allowed to modify nicknames of other guild members. Declaration public bool CanManageNicknames { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to modify nicknames of other guild members. | Improve this Doc View Source CanManageRoles Gets a value indicating whether the user is allowed to manage and edit guild roles. Declaration public bool CanManageRoles { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to manage and edit guild roles. | Improve this Doc View Source CanManageWebhooks Gets a value indicating whether the user is allowed to manage and edit the guild webhooks. Declaration public bool CanManageWebhooks { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to manage and edit the guild webhooks. | Improve this Doc View Source CanMentionEveryone Gets a value indicating whether the user is allowed to mention all users in a channel (with @everyone) and to mention all online users in a channel (with @here). Declaration public bool CanMentionEveryone { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to mention all users in a channel (with @everyone) and to mention all online users in a channel (with @here). | Improve this Doc View Source CanMoveMembers Gets a value indicating whether the user is allowed to move members between voice channels. Declaration public bool CanMoveMembers { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to move members between voice channels. | Improve this Doc View Source CanMuteMembers Gets a value indicating whether the user is allowed to mute members in a voice channel. Declaration public bool CanMuteMembers { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to mute members in a voice channel. | Improve this Doc View Source CanReadMessageHistory Gets a value indicating whether the user is allowed to read past message history. Declaration public bool CanReadMessageHistory { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to read past message history. | Improve this Doc View Source CanSendMessages Gets a value indicating whether the user is allowed to send messages in a text channel. Declaration public bool CanSendMessages { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to send messages in a text channel. | Improve this Doc View Source CanSendTextToSpeechMessages Gets a value indicating whether the user is allowed to send Text-To-Speech (TTS) messages (in Discord Client messages prefixed with the /tts command). Declaration public bool CanSendTextToSpeechMessages { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to send Text-To-Speech (TTS) messages (in Discord Client messages prefixed with the /tts command). | Improve this Doc View Source CanSpeak Gets a value indicating whether the user is allowed to speak in a voice channel. Declaration public bool CanSpeak { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to speak in a voice channel. | Improve this Doc View Source CanStream Gets a value indicating whether the user is allowed to go live. Declaration public bool CanStream { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to go live. | Improve this Doc View Source CanUseExternalEmojis Gets a value indicating whether the user is allowed to use custom emojis from other guilds. Declaration public bool CanUseExternalEmojis { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to use custom emojis from other guilds. | Improve this Doc View Source CanUseVoiceActivityDetection Gets a value indicating whether the user is allowed to use VAD (Voice-Activity-Detection) in a voice channel. Declaration public bool CanUseVoiceActivityDetection { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to use VAD (Voice-Activity-Detection) in a voice channel. | Improve this Doc View Source CanViewAuditLog Gets a value indicating whether the user is allowed to view the guild audit logs. Declaration public bool CanViewAuditLog { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to view the guild audit logs. | Improve this Doc View Source CanViewChannel Gets a value indicating whether the user is allowed to view a channel (which includes reading messages in text channels). Declaration public bool CanViewChannel { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to view a channel (which includes reading messages in text channels). | Improve this Doc View Source HasAdministrator Gets a value indicating whether user has all permissions and also bypasses channel permission overwrites. Declaration public bool HasAdministrator { get; } Property Value Type Description Boolean a value indicating whether user has all permissions and also bypasses channel permission overwrites. | Improve this Doc View Source HasPrioritySpeaker Gets a value indicating whether the user is allowed to use the priority speaker in a voice channel. Declaration public bool HasPrioritySpeaker { get; } Property Value Type Description Boolean a value indicating whether the user is allowed to use the priority speaker in a voice channel. | Improve this Doc View Source Value Gets the raw permission value. Declaration public ulong Value { get; } Property Value Type Description UInt64 the raw permission value. Methods | Improve this Doc View Source Equals(PermissionSet) Declaration public bool Equals(PermissionSet other) Parameters Type Name Description PermissionSet other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source HasPermission(Permissions) Gets a value indicating whether the specified permission is set. Declaration public bool HasPermission(Permissions permission) Parameters Type Name Description Permissions permission the permission to check. Returns Type Description Boolean a value indicating whether the specified permission is set. | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(PermissionSet, PermissionSet) Declaration public static bool operator ==(PermissionSet left, PermissionSet right) Parameters Type Name Description PermissionSet left PermissionSet right Returns Type Description Boolean | Improve this Doc View Source Inequality(PermissionSet, PermissionSet) Declaration public static bool operator !=(PermissionSet left, PermissionSet right) Parameters Type Name Description PermissionSet left PermissionSet right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Entities.PremiumType.html": {
    "href": "api/Strade.Entities.PremiumType.html",
    "title": "Enum PremiumType | Strade Developer Documentation",
    "keywords": "Enum PremiumType A set of discord's premium types. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(NumericEnumConverter<PremiumType>))] public enum PremiumType : byte Remarks More details can be found on https://discord.com/developers/docs/resources/user#user-object-premium-types [external, Discord Developer Documentation]. Fields Name Description Nitro Denotes that the user subscribed to Discord Nitro. NitroClassic Denotes that the user subscribed to Discord Nitro Classic. None Denotes that the user has not subscribed to Discord Nitro (Classic). Extension Methods EnumExtensions.GetName<PremiumType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.Presence.html": {
    "href": "api/Strade.Entities.Presence.html",
    "title": "Class Presence | Strade Developer Documentation",
    "keywords": "Class Presence Represents an user presence. Inheritance Object Presence Implements ICloneable < Presence > ICloneable IUpdateable < PresenceModel > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class Presence : ICloneable<Presence>, ICloneable, IUpdateable<PresenceModel> Constructors | Improve this Doc View Source Presence(PresenceModel) Declaration public Presence(PresenceModel model) Parameters Type Name Description PresenceModel model Properties | Improve this Doc View Source Activities Gets an enumerable that yields through the presence activities; or null if there are no activities. Declaration public IEnumerable<Activity> Activities { get; } Property Value Type Description IEnumerable < Activity > an enumerable that yields through the presence activities; or null if there are no activities. | Improve this Doc View Source IdleSince Gets the UTC time point since the user is in idle; or null if the user is not idle. Declaration public DateTimeOffset? IdleSince { get; } Property Value Type Description Nullable < DateTimeOffset > the UTC time point since the user is in idle; or null if the user is not idle. | Improve this Doc View Source IsIdle Gets a value indicating whether the user is in idle. Declaration public bool IsIdle { get; } Property Value Type Description Boolean a value indicating whether the user is in idle. | Improve this Doc View Source Status Gets the current status of the user. Declaration public UserStatus Status { get; } Property Value Type Description UserStatus the current status of the user. Methods | Improve this Doc View Source Clone() Declaration public Presence Clone() Returns Type Description Presence | Improve this Doc View Source Update(PresenceModel) Declaration public void Update(PresenceModel model) Parameters Type Name Description PresenceModel model Explicit Interface Implementations | Improve this Doc View Source ICloneable.Clone() Declaration object ICloneable.Clone() Returns Type Description Object Implements ICloneable<TSelf> System.ICloneable IUpdateable<TModel>"
  },
  "api/Strade.Entities.PresenceBuilder.html": {
    "href": "api/Strade.Entities.PresenceBuilder.html",
    "title": "Class PresenceBuilder | Strade Developer Documentation",
    "keywords": "Class PresenceBuilder Builder for Presence objects. Inheritance Object PresenceBuilder Implements IBuilder < Presence > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class PresenceBuilder : IBuilder<Presence> Constructors | Improve this Doc View Source PresenceBuilder() Initializes a new instance of the PresenceBuilder class. Declaration public PresenceBuilder() | Improve this Doc View Source PresenceBuilder(Presence) Initializes a new instance of the PresenceBuilder class. Declaration public PresenceBuilder(Presence prototype) Parameters Type Name Description Presence prototype the object to use as a prototype / template. Remarks The passed prototype is not affected when any changes are made using the builder instance. The builder will copy the data from the prototype . Exceptions Type Condition ArgumentNullException thrown if the specified prototype is null . Properties | Improve this Doc View Source Activities Declaration public IEnumerable<Activity> Activities { get; set; } Property Value Type Description IEnumerable < Activity > | Improve this Doc View Source Status Gets or sets the presence status. Declaration public UserStatus Status { get; set; } Property Value Type Description UserStatus the presence status. Remarks Note if idle is specified then the \"since\" time is set to the actual UTC time. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified value is not defined in the UserStatus enumeration. Methods | Improve this Doc View Source AsDoNotDisturb() Sets the user status to DoNotDisturb . Declaration public PresenceBuilder AsDoNotDisturb() Returns Type Description PresenceBuilder the current PresenceBuilder instance. | Improve this Doc View Source AsIdle(Nullable<DateTimeOffset>) Sets the user status to Idle . Declaration public PresenceBuilder AsIdle(DateTimeOffset? since = default(DateTimeOffset? )) Parameters Type Name Description Nullable < DateTimeOffset > since the date time offset (UTC) when the entity became idle; or null to use the current time. Returns Type Description PresenceBuilder the current PresenceBuilder instance. | Improve this Doc View Source AsOffline() Sets the user status to Invisible . Declaration public PresenceBuilder AsOffline() Returns Type Description PresenceBuilder the current PresenceBuilder instance. | Improve this Doc View Source AsOnline() Sets the user status to Online . Declaration public PresenceBuilder AsOnline() Returns Type Description PresenceBuilder the current PresenceBuilder instance. | Improve this Doc View Source Build() Declaration public Presence Build() Returns Type Description Presence | Improve this Doc View Source Reset() Declaration public void Reset() | Improve this Doc View Source WithActivity(Activity) Declaration public PresenceBuilder WithActivity(Activity activity) Parameters Type Name Description Activity activity Returns Type Description PresenceBuilder | Improve this Doc View Source WithActivity(ActivityBuilder) Adds an activity for the presence. Declaration public PresenceBuilder WithActivity(ActivityBuilder activityBuilder) Parameters Type Name Description ActivityBuilder activityBuilder the builder to use. Returns Type Description PresenceBuilder the current PresenceBuilder instance. Exceptions Type Condition ArgumentNullException thrown if the specified activityBuilder is null . | Improve this Doc View Source WithActivity(Action<ActivityBuilder>) Adds an the activity for the presence. Declaration public PresenceBuilder WithActivity(Action<ActivityBuilder> action) Parameters Type Name Description Action < ActivityBuilder > action the action used to configure the ActivityBuilder . Returns Type Description PresenceBuilder the current PresenceBuilder instance. Exceptions Type Condition ArgumentNullException thrown if the specified action is null . Implements IBuilder<TResult>"
  },
  "api/Strade.Entities.PrivateChannelCreationProperties.html": {
    "href": "api/Strade.Entities.PrivateChannelCreationProperties.html",
    "title": "Class PrivateChannelCreationProperties | Strade Developer Documentation",
    "keywords": "Class PrivateChannelCreationProperties The ICreationProperties for a private direct message channel. Inheritance Object PrivateChannelCreationProperties Implements ICreationProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class PrivateChannelCreationProperties : ICreationProperties Properties | Improve this Doc View Source RecipientId Gets or sets the channel recipient. Declaration [JsonPropertyName(\"recipient_id\")] public Snowflake RecipientId { get; set; } Property Value Type Description Snowflake the channel recipient. Methods | Improve this Doc View Source Validate() Declaration public void Validate() Implements ICreationProperties"
  },
  "api/Strade.Entities.PruneInformation.html": {
    "href": "api/Strade.Entities.PruneInformation.html",
    "title": "Struct PruneInformation | Strade Developer Documentation",
    "keywords": "Struct PruneInformation Represents the structure of member prune information. Implements IEquatable < PruneInformation > Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public struct PruneInformation : IEquatable<PruneInformation> Constructors | Improve this Doc View Source PruneInformation(Int32) Initializes a new instance of the PruneInformation struct. Declaration public PruneInformation(int prunedMembers) Parameters Type Name Description Int32 prunedMembers the number of members that are affected by the prune. Properties | Improve this Doc View Source PrunedMembers Gets the number of members that are affected by the prune. Declaration public int PrunedMembers { get; } Property Value Type Description Int32 the number of members that are affected by the prune. Methods | Improve this Doc View Source Equals(PruneInformation) Declaration public bool Equals(PruneInformation other) Parameters Type Name Description PruneInformation other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(PruneInformation, PruneInformation) Declaration public static bool operator ==(PruneInformation left, PruneInformation right) Parameters Type Name Description PruneInformation left PruneInformation right Returns Type Description Boolean | Improve this Doc View Source Inequality(PruneInformation, PruneInformation) Declaration public static bool operator !=(PruneInformation left, PruneInformation right) Parameters Type Name Description PruneInformation left PruneInformation right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Entities.PruneProperties.html": {
    "href": "api/Strade.Entities.PruneProperties.html",
    "title": "Class PruneProperties | Strade Developer Documentation",
    "keywords": "Class PruneProperties Inheritance Object PruneProperties Implements IRetrieveProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class PruneProperties : IRetrieveProperties Properties | Improve this Doc View Source Days Declaration public Optional<int> Days { get; set; } Property Value Type Description Optional < Int32 > | Improve this Doc View Source Roles Declaration public Optional<IReadOnlyList<Snowflake>> Roles { get; set; } Property Value Type Description Optional < IReadOnlyList < Snowflake >> Methods | Improve this Doc View Source BuildQuery() Declaration public QueryParameterCollection BuildQuery() Returns Type Description QueryParameterCollection | Improve this Doc View Source Validate() Declaration public void Validate() Implements IRetrieveProperties"
  },
  "api/Strade.Entities.RestGuild.html": {
    "href": "api/Strade.Entities.RestGuild.html",
    "title": "Class RestGuild | Strade Developer Documentation",
    "keywords": "Class RestGuild Inheritance Object BaseGuild RestGuild Implements IGuild IHasIcon IModifiable < GuildModifyProperties > IDeletable IChannelContainer IChannelParent ISnowflakeEntity IIdentifiable < Snowflake > IDiscordEntity IUpdateable < GuildModel > Inherited Members BaseGuild.AfkChannelId BaseGuild.AfkTimeout BaseGuild.ApplicationId BaseGuild.BannerHash BaseGuild.BannerUrl BaseGuild.BoostCount BaseGuild.BoostTier BaseGuild.CanHaveAnimatedIcon BaseGuild.CanHaveBanner BaseGuild.CanHaveVanityUrl BaseGuild.Client BaseGuild.DefaultMessageNotificationLevel BaseGuild.Description BaseGuild.DiscoverySplashHash BaseGuild.DiscoverySplashUrl BaseGuild.DownloadedMemberCount BaseGuild.Emotes BaseGuild.EveryoneRole BaseGuild.ExplicitContentFilterLevel BaseGuild.Features BaseGuild.HasAfkChannel BaseGuild.HasBanner BaseGuild.HasDiscoverySplash BaseGuild.HasIcon BaseGuild.HasPublicUpdatesChannel BaseGuild.HasRulesChannel BaseGuild.HasSplash BaseGuild.HasSystemChannel BaseGuild.HasVipRegions BaseGuild.HasWidgetChannel BaseGuild.IconHash BaseGuild.IconUrl BaseGuild.Id BaseGuild.IsBoostMessageEnabled BaseGuild.IsCommerce BaseGuild.IsCommunity BaseGuild.IsDiscoverable BaseGuild.IsLazy BaseGuild.IsOwner BaseGuild.IsPartnered BaseGuild.IsRelayEnabled BaseGuild.IsRelayForced BaseGuild.IsUnavailable BaseGuild.IsVerified BaseGuild.IsWelcomeMessageEnabled BaseGuild.IsWelcomeScreenEnabled BaseGuild.IsWidgetEnabled BaseGuild.MaximumMembers BaseGuild.MaximumPresences BaseGuild.MaximumVideoChannelUsers BaseGuild.MultiFactorAuthenticationLevel BaseGuild.Name BaseGuild.OwnerId BaseGuild.PreferredCulture BaseGuild.PublicUpdatesChannelId BaseGuild.Roles BaseGuild.RulesChannelId BaseGuild.SplashHash BaseGuild.SplashUrl BaseGuild.SystemChannelFlags BaseGuild.SystemChannelId BaseGuild.VanityCode BaseGuild.VanityUrl BaseGuild.VerificationLevel BaseGuild.VoiceRegionId BaseGuild.WidgetChannelId BaseGuild.ChannelsMap BaseGuild.MembersMap BaseGuild.RolesMap BaseGuild.AddMemberAsync(Snowflake, MemberCreationProperties, CancellationToken) BaseGuild.AddMemberAsync(User, MemberCreationProperties, CancellationToken) BaseGuild.AddMemberAsync(Snowflake, Action<MemberCreationProperties>, CancellationToken) BaseGuild.AddMemberAsync(User, Action<MemberCreationProperties>, CancellationToken) BaseGuild.BeginPruneAsync(BeginPruneProperties, CancellationToken) BaseGuild.BeginPruneAsync(Action<BeginPruneProperties>, CancellationToken) BaseGuild.BuildBannerUrl(ImageFormat, Nullable<Int32>) BaseGuild.BuildDiscoverySplashUrl(ImageFormat, Nullable<Int32>) BaseGuild.BuildIconUrl(ImageFormat, Nullable<Int32>) BaseGuild.BuildSplashUrl(ImageFormat, Nullable<Int32>) BaseGuild.CreateCategoryAsync(CategoryCreationProperties, CancellationToken) BaseGuild.CreateCategoryAsync(Action<CategoryCreationProperties>, CancellationToken) BaseGuild.CreateChannelAsync(GuildChannelCreationProperties, CancellationToken) BaseGuild.CreateChannelAsync(NestedChannelCreationProperties, CancellationToken) BaseGuild.CreateEmojiAsync(EmojiCreationProperties, CancellationToken) BaseGuild.CreateEmojiAsync(Action<EmojiCreationProperties>, CancellationToken) BaseGuild.CreateIntegrationAsync(GuildIntegrationCreationProperties, CancellationToken) BaseGuild.CreateIntegrationAsync(Action<GuildIntegrationCreationProperties>, CancellationToken) BaseGuild.CreateNewsChannelAsync(Action<NewsChannelCreationProperties>, CancellationToken) BaseGuild.CreateNewsChannelAsync(NewsChannelCreationProperties, CancellationToken) BaseGuild.CreateRoleAsync(RoleCreationProperties, CancellationToken) BaseGuild.CreateRoleAsync(Action<RoleCreationProperties>, CancellationToken) BaseGuild.CreateStoreChannelAsync(Action<StoreChannelCreationProperties>, CancellationToken) BaseGuild.CreateStoreChannelAsync(StoreChannelCreationProperties, CancellationToken) BaseGuild.CreateTextChannelAsync(TextChannelCreationProperties, CancellationToken) BaseGuild.CreateTextChannelAsync(Action<TextChannelCreationProperties>, CancellationToken) BaseGuild.CreateVoiceChannelAsync(VoiceChannelCreationProperties, CancellationToken) BaseGuild.CreateVoiceChannelAsync(Action<VoiceChannelCreationProperties>, CancellationToken) BaseGuild.DeleteAsync(CancellationToken) BaseGuild.GetAfkChannelAsync(CacheBehavior, CancellationToken) BaseGuild.GetAuditLogAsync(AuditLogProperties, CancellationToken) BaseGuild.GetAuditLogEntriesAsync(AuditLogProperties, CancellationToken) BaseGuild.GetAuditLogEntriesChunkedAsync(AuditLogProperties, CancellationToken) BaseGuild.GetBanAsync(Snowflake, CancellationToken) BaseGuild.GetBanAsync(User, CancellationToken) BaseGuild.GetBansAsync(CancellationToken) BaseGuild.GetCategoriesAsync(CacheBehavior, CancellationToken) BaseGuild.GetCategoryAsync(Snowflake, CacheBehavior, CancellationToken) BaseGuild.GetChannelAsync<TChannel>(Snowflake, CacheBehavior, CancellationToken) BaseGuild.GetChannelAsync(Snowflake, CacheBehavior, CancellationToken) BaseGuild.GetChannelsAsync(CacheBehavior, CancellationToken) BaseGuild.GetChannelsAsync<TChannel>(CacheBehavior, CancellationToken) BaseGuild.GetIntegrationsAsync(CancellationToken) BaseGuild.GetInvitesAsync(CancellationToken) BaseGuild.GetMemberAsync(Snowflake, CacheBehavior, CancellationToken) BaseGuild.GetNewsChannelAsync(Snowflake, CacheBehavior, CancellationToken) BaseGuild.GetNewsChannelsAsync(CacheBehavior, CancellationToken) BaseGuild.GetPermissionsAsync(CancellationToken) BaseGuild.GetPruneInformationAsync(PruneProperties, CancellationToken) BaseGuild.GetPruneInformationAsync(Action<PruneProperties>, CancellationToken) BaseGuild.GetPublicUpdatesChannelAsync(CacheBehavior, CancellationToken) BaseGuild.GetRole(Snowflake) BaseGuild.GetRulesChannelAsync(CacheBehavior, CancellationToken) BaseGuild.GetStoreChannelAsync(Snowflake, CacheBehavior, CancellationToken) BaseGuild.GetStoreChannelsAsync(CacheBehavior, CancellationToken) BaseGuild.GetSystemChannelAsync(CacheBehavior, CancellationToken) BaseGuild.GetTextChannelAsync(Snowflake, CacheBehavior, CancellationToken) BaseGuild.GetTextChannelsAsync(CacheBehavior, CancellationToken) BaseGuild.GetVanityInviteAsync(CancellationToken) BaseGuild.GetVoiceChannelAsync(Snowflake, CacheBehavior, CancellationToken) BaseGuild.GetVoiceChannelsAsync(CacheBehavior, CancellationToken) BaseGuild.GetVoiceRegionAsync(CancellationToken) BaseGuild.GetVoiceRegionsAsync(CancellationToken) BaseGuild.GetWidgetChannelAsync(CacheBehavior, CancellationToken) BaseGuild.GetWidgetImage(WidgetStyle) BaseGuild.HasFeature(String) BaseGuild.LeaveAsync(CancellationToken) BaseGuild.ModifyAsync(GuildModifyProperties, CancellationToken) BaseGuild.ModifyAsync(Action<GuildModifyProperties>, CancellationToken) BaseGuild.ModifyNicknameAsync(String, CancellationToken) BaseGuild.ModifyWidgetAsync(Action<GuildWidgetModifyProperties>, CancellationToken) BaseGuild.ModifyWidgetAsync(GuildWidgetModifyProperties, CancellationToken) BaseGuild.ToString() BaseGuild.UnbanAsync(User, CancellationToken) BaseGuild.UnbanAsync(Snowflake, CancellationToken) BaseGuild.UpdateChannelPositionsAsync(IReadOnlyList<ChannelPositionUpdate>, CancellationToken) BaseGuild.UpdateRolePositionsAsync(IReadOnlyList<RolePositionUpdate>, CancellationToken) BaseGuild.IUpdateable<GuildModel>.Update(GuildModel) BaseGuild.EnsureAvailable() BaseGuild.Update(GuildModel) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class RestGuild : BaseGuild, IGuild, IHasIcon, IModifiable<GuildModifyProperties>, IDeletable, IChannelContainer, IChannelParent, ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IUpdateable<GuildModel> Constructors | Improve this Doc View Source RestGuild(IDiscordRestClient, GuildModel) Declaration public RestGuild(IDiscordRestClient client, GuildModel model) Parameters Type Name Description IDiscordRestClient client GuildModel model Properties | Improve this Doc View Source AreMembersDownloaded Declaration public override bool AreMembersDownloaded { get; } Property Value Type Description Boolean Overrides BaseGuild.AreMembersDownloaded Methods | Improve this Doc View Source DownloadMembersAsync(CancellationToken) Declaration public override ValueTask<IEnumerable<Member>> DownloadMembersAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask < IEnumerable < Member >> Overrides BaseGuild.DownloadMembersAsync(CancellationToken) | Improve this Doc View Source GetMembersAsync(Boolean, CancellationToken) Declaration public override ValueTask<IEnumerable<Member>> GetMembersAsync(bool download = true, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Boolean download CancellationToken cancellationToken Returns Type Description ValueTask < IEnumerable < Member >> Overrides BaseGuild.GetMembersAsync(Boolean, CancellationToken) Implements IGuild IHasIcon IModifiable<TProperties> IDeletable IChannelContainer IChannelParent ISnowflakeEntity IIdentifiable<TIdentifier> IDiscordEntity IUpdateable<TModel> Extension Methods GuildExtensions.DisconnectVoiceAsync(IGuild, CancellationToken)"
  },
  "api/Strade.Entities.RoleCreationProperties.html": {
    "href": "api/Strade.Entities.RoleCreationProperties.html",
    "title": "Class RoleCreationProperties | Strade Developer Documentation",
    "keywords": "Class RoleCreationProperties The ICreationProperties for a role. Inheritance Object RoleCreationProperties Implements ICreationProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class RoleCreationProperties : ICreationProperties Properties | Improve this Doc View Source Color Gets or sets the color for the role; if default the default role color is used. Declaration [JsonPropertyName(\"color\")] public Optional<Color> Color { get; set; } Property Value Type Description Optional < Color > the color for the role; if default the default role color is used. | Improve this Doc View Source IsHoist Gets or sets a value indicating whether the role should be displayed separately in the sidebar. Declaration [JsonPropertyName(\"hoist\")] public bool IsHoist { get; set; } Property Value Type Description Boolean a value indicating whether the role should be displayed separately in the sidebar. | Improve this Doc View Source IsMentionable Gets or sets a value indicating whether the role should be mentionable. Declaration [JsonPropertyName(\"mentionable\")] public bool IsMentionable { get; set; } Property Value Type Description Boolean a value indicating whether the role should be mentionable. | Improve this Doc View Source Name Gets or sets the display name of the role; if default \"new role\" is used. Declaration [JsonPropertyName(\"name\")] public Optional<string> Name { get; set; } Property Value Type Description Optional < String > the display name of the role; if default \"new role\" is used. | Improve this Doc View Source Permissions Gets or sets the permissions of the role; if default the permissions of the @everyone role of the guild is used. Declaration [JsonPropertyName(\"permissions\")] public Optional<Permissions> Permissions { get; set; } Property Value Type Description Optional < Permissions > the permissions of the role; if default the permissions of the @everyone role of the guild is used. Methods | Improve this Doc View Source Validate() Validates the properties. Declaration public void Validate() Implements ICreationProperties"
  },
  "api/Strade.Entities.RoleInformation.html": {
    "href": "api/Strade.Entities.RoleInformation.html",
    "title": "Class RoleInformation | Strade Developer Documentation",
    "keywords": "Class RoleInformation Inheritance Object RoleInformation Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class RoleInformation Constructors | Improve this Doc View Source RoleInformation(RoleInformationModel) Declaration public RoleInformation(RoleInformationModel model) Parameters Type Name Description RoleInformationModel model Properties | Improve this Doc View Source Id Declaration public Snowflake Id { get; } Property Value Type Description Snowflake | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source ToString() Builds a String representation of the Strade.Entities.Role instance. Declaration public override string ToString() Returns Type Description String a String representation of the Strade.Entities.Role instance. Overrides Object.ToString()"
  },
  "api/Strade.Entities.RoleModifyProperties.html": {
    "href": "api/Strade.Entities.RoleModifyProperties.html",
    "title": "Class RoleModifyProperties | Strade Developer Documentation",
    "keywords": "Class RoleModifyProperties The IModifyProperties for a role. Inheritance Object RoleModifyProperties Implements IModifyProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class RoleModifyProperties : IModifyProperties Properties | Improve this Doc View Source Color Gets or sets the color for the role; if default the default role color is used. Declaration [JsonPropertyName(\"color\")] public Optional<Color> Color { get; set; } Property Value Type Description Optional < Color > the color for the role; if default the default role color is used. | Improve this Doc View Source IsHoist Gets or sets a value indicating whether the role should be displayed separately in the sidebar. Declaration [JsonPropertyName(\"hoist\")] public Optional<bool> IsHoist { get; set; } Property Value Type Description Optional < Boolean > a value indicating whether the role should be displayed separately in the sidebar. | Improve this Doc View Source IsMentionable Gets or sets a value indicating whether the role should be mentionable. Declaration [JsonPropertyName(\"mentionable\")] public Optional<bool> IsMentionable { get; set; } Property Value Type Description Optional < Boolean > a value indicating whether the role should be mentionable. | Improve this Doc View Source Name Gets or sets the display name of the role; if default \"new role\" is used. Declaration [JsonPropertyName(\"name\")] public Optional<string> Name { get; set; } Property Value Type Description Optional < String > the display name of the role; if default \"new role\" is used. | Improve this Doc View Source Permissions Gets or sets the permissions of the role; if default the permissions of the @everyone role of the guild is used. Declaration [JsonPropertyName(\"permissions\")] public Optional<Permissions> Permissions { get; set; } Property Value Type Description Optional < Permissions > the permissions of the role; if default the permissions of the @everyone role of the guild is used. Methods | Improve this Doc View Source Validate() Validates the properties. Declaration public void Validate() Implements IModifyProperties"
  },
  "api/Strade.Entities.RolePositionUpdate.html": {
    "href": "api/Strade.Entities.RolePositionUpdate.html",
    "title": "Class RolePositionUpdate | Strade Developer Documentation",
    "keywords": "Class RolePositionUpdate Represents a structure used to update roles position. Inheritance Object RolePositionUpdate Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class RolePositionUpdate Constructors | Improve this Doc View Source RolePositionUpdate(Snowflake, Int32) Initializes a new instance of the RolePositionUpdate class. Declaration public RolePositionUpdate(Snowflake roleId, int position) Parameters Type Name Description Snowflake roleId a reference to the role to update. Int32 position the new channel position. Properties | Improve this Doc View Source Position Gets the new channel position. Declaration [JsonPropertyName(\"position\")] public int Position { get; } Property Value Type Description Int32 the new channel position. | Improve this Doc View Source RoleId Gets a reference to the role to update. Declaration [JsonPropertyName(\"id\")] public Snowflake RoleId { get; } Property Value Type Description Snowflake a reference to the role to update."
  },
  "api/Strade.Entities.ShardingInformation.html": {
    "href": "api/Strade.Entities.ShardingInformation.html",
    "title": "Struct ShardingInformation | Strade Developer Documentation",
    "keywords": "Struct ShardingInformation Holds the information that is required for enabling sharding. Implements IEquatable < ShardingInformation > Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(ShardingInformationJsonConverter))] public struct ShardingInformation : IEquatable<ShardingInformation> Constructors | Improve this Doc View Source ShardingInformation(Int32, Int32) Initializes a new instance of the ShardingInformation struct. Declaration public ShardingInformation(int currentShard, int totalShards) Parameters Type Name Description Int32 currentShard the current shard number (zero-based). Int32 totalShards the number of total shards. | Improve this Doc View Source ShardingInformation(Int32[]) Initializes a new instance of the ShardingInformation struct. Declaration public ShardingInformation(int[] shardingInformation) Parameters Type Name Description Int32 [] shardingInformation an integer array with 2 integers (the number of the current shard and the number of total shards.) Exceptions Type Condition ArgumentNullException thrown if the specified shardingInformation is null . ArgumentException thrown if the specified shardingInformation does not contain 2 elements. Properties | Improve this Doc View Source CurrentShard Gets the number of the current shard. Declaration public int CurrentShard { get; } Property Value Type Description Int32 the number of the current shard. | Improve this Doc View Source IsMainShard Gets a value indicating whether the sharding information references the main shard. The main shard will receive private (direct message) notifications from users. Declaration public bool IsMainShard { get; } Property Value Type Description Boolean a value indicating whether the sharding information references the main shard. The main shard will receive private (direct message) notifications from users. | Improve this Doc View Source TotalShards Gets the number of total shards. Declaration public int TotalShards { get; } Property Value Type Description Int32 the number of total shards. Methods | Improve this Doc View Source Equals(ShardingInformation) Declaration public bool Equals(ShardingInformation other) Parameters Type Name Description ShardingInformation other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source IsGuildServed(Snowflake) Gets a value indicating whether the guild specified by guildId is served by the current shard. Declaration public bool IsGuildServed(Snowflake guildId) Parameters Type Name Description Snowflake guildId the guild snowflake identifier to check. Returns Type Description Boolean a value indicating whether the guild specified by guildId is served by the current shard. Operators | Improve this Doc View Source Equality(ShardingInformation, ShardingInformation) Declaration public static bool operator ==(ShardingInformation left, ShardingInformation right) Parameters Type Name Description ShardingInformation left ShardingInformation right Returns Type Description Boolean | Improve this Doc View Source Inequality(ShardingInformation, ShardingInformation) Declaration public static bool operator !=(ShardingInformation left, ShardingInformation right) Parameters Type Name Description ShardingInformation left ShardingInformation right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Entities.Snowflake.html": {
    "href": "api/Strade.Entities.Snowflake.html",
    "title": "Struct Snowflake | Strade Developer Documentation",
    "keywords": "Struct Snowflake A structure representing a discord snowflake. Implements IEquatable < Snowflake > IComparable < Snowflake > IComparable Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(SnowflakeJsonConverter))] public struct Snowflake : IEquatable<Snowflake>, IComparable<Snowflake>, IComparable Remarks More details can be found on https://discord.com/developers/docs/reference#snowflakes [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source Snowflake(DateTimeOffset) Initializes a new instance of the Snowflake struct. Declaration public Snowflake(DateTimeOffset timestamp) Parameters Type Name Description DateTimeOffset timestamp the timestamp. | Improve this Doc View Source Snowflake(DateTimeOffset, Byte, Byte, UInt16) Initializes a new instance of the Snowflake struct. Declaration public Snowflake(DateTimeOffset timestamp, byte internalWorkerId, byte internalProcessId, ushort incrementValue) Parameters Type Name Description DateTimeOffset timestamp the timestamp. Byte internalWorkerId the internal worker identifier. Byte internalProcessId the internal process identifier. UInt16 incrementValue the incrementation value. | Improve this Doc View Source Snowflake(UInt64) Initializes a new instance of the Snowflake struct. Declaration public Snowflake(ulong value) Parameters Type Name Description UInt64 value the snowflake value. Fields | Improve this Doc View Source MaxIncrementValue The maximum value for IncrementValue . Declaration public const ushort MaxIncrementValue = 4095 Field Value Type Description UInt16 | Improve this Doc View Source MaxInternalProcessId The maximum value for InternalProcessId . Declaration public const byte MaxInternalProcessId = 31 Field Value Type Description Byte | Improve this Doc View Source MaxInternalWorkerId The maximum value for InternalWorkerId . Declaration public const byte MaxInternalWorkerId = 31 Field Value Type Description Byte | Improve this Doc View Source MaxTimestampValue The maximum value for TimestampValue . Declaration public const long MaxTimestampValue = 4398046511103L Field Value Type Description Int64 | Improve this Doc View Source MinIncrementValue The minimum value for IncrementValue . Declaration public const ushort MinIncrementValue = 0 Field Value Type Description UInt16 | Improve this Doc View Source MinInternalProcessId The minimum value for InternalProcessId . Declaration public const byte MinInternalProcessId = 0 Field Value Type Description Byte | Improve this Doc View Source MinInternalWorkerId The minimum value for InternalWorkerId . Declaration public const byte MinInternalWorkerId = 0 Field Value Type Description Byte | Improve this Doc View Source MinTimestampValue The minimum value for TimestampValue . Declaration public const long MinTimestampValue = 0L Field Value Type Description Int64 Properties | Improve this Doc View Source DiscordEpoch Gets the date time offset of the Discord Epoch ( 01.01.2015 00:00:00 +00:00 ). Declaration public static DateTimeOffset DiscordEpoch { get; } Property Value Type Description DateTimeOffset | Improve this Doc View Source IncrementValue Gets an incrementation value. Declaration public ushort IncrementValue { get; } Property Value Type Description UInt16 | Improve this Doc View Source InternalProcessId Gets the internal process identifier that is passed with the snowflake. Declaration public byte InternalProcessId { get; } Property Value Type Description Byte | Improve this Doc View Source InternalWorkerId Gets the internal worker identifier that is passed with the snowflake. Declaration public byte InternalWorkerId { get; } Property Value Type Description Byte | Improve this Doc View Source SnowflakeId Gets the snowflake identifier (used for pagination). Declaration public int SnowflakeId { get; } Property Value Type Description Int32 | Improve this Doc View Source Timestamp Gets the DateTimeOffset when the snowflake was generated. Declaration public DateTimeOffset Timestamp { get; } Property Value Type Description DateTimeOffset | Improve this Doc View Source TimestampValue Gets the timestamp value (milliseconds since the UNIX epoch). Declaration public long TimestampValue { get; } Property Value Type Description Int64 | Improve this Doc View Source Value Gets the snowflake value. Declaration public ulong Value { get; } Property Value Type Description UInt64 Methods | Improve this Doc View Source CompareTo(Snowflake) Declaration public int CompareTo(Snowflake other) Parameters Type Name Description Snowflake other Returns Type Description Int32 | Improve this Doc View Source CompareTo(Object) Declaration public int CompareTo(object obj) Parameters Type Name Description Object obj Returns Type Description Int32 | Improve this Doc View Source Equals(Snowflake) Checks the equality between the current snowflake and the specified other . Declaration public bool Equals(Snowflake other) Parameters Type Name Description Snowflake other the Snowflake to check the equality between. Returns Type Description Boolean a value indicating whether the current snowflake and the specified other are equal. | Improve this Doc View Source Equals(Object) Checks the equality between the current snowflake and the specified obj . Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj the object to check the equality between. Returns Type Description Boolean a value indicating whether the current snowflake and the specified obj are equal. Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Gets the hash code of the Snowflake . Declaration public override int GetHashCode() Returns Type Description Int32 the hash code of the Snowflake . Overrides ValueType.GetHashCode() | Improve this Doc View Source IsValidTimestamp(DateTimeOffset) Checks whether the specified timestamp is valid. Declaration public static bool IsValidTimestamp(DateTimeOffset timestamp) Parameters Type Name Description DateTimeOffset timestamp the timestamp. Returns Type Description Boolean a value indicating whether the specified timestamp is valid. | Improve this Doc View Source Parse(String) Parses a snowflake from the specified value . Declaration public static Snowflake Parse(string value) Parameters Type Name Description String value the snowflake string. Returns Type Description Snowflake the parsed snowflake. | Improve this Doc View Source ToSnowflake(UInt64) Declaration public static Snowflake ToSnowflake(ulong value) Parameters Type Name Description UInt64 value Returns Type Description Snowflake | Improve this Doc View Source ToString() Gets a String representation of the snowflake. Declaration public override string ToString() Returns Type Description String a String representation of the snowflake. Overrides ValueType.ToString() | Improve this Doc View Source ToUInt64(Snowflake) Declaration public static ulong ToUInt64(Snowflake snowflake) Parameters Type Name Description Snowflake snowflake Returns Type Description UInt64 | Improve this Doc View Source TryParse(String, out Snowflake) Tries to parse a snowflake from the specified value . Declaration public static bool TryParse(string value, out Snowflake snowflake) Parameters Type Name Description String value the snowflake string. Snowflake snowflake the snowflake parsed. Returns Type Description Boolean a value indicating whether the snowflake could be parsed. Operators | Improve this Doc View Source Equality(Snowflake, Snowflake) Checks the equality between the specified left Snowflake and the specified right Snowflake . Declaration public static bool operator ==(Snowflake left, Snowflake right) Parameters Type Name Description Snowflake left the left-hand Snowflake to check. Snowflake right the right-hand Snowflake to check. Returns Type Description Boolean a value indicating whether the specified left Snowflake and the specified right Snowflake are equal. | Improve this Doc View Source GreaterThan(Snowflake, Snowflake) Declaration public static bool operator>(Snowflake left, Snowflake right) Parameters Type Name Description Snowflake left Snowflake right Returns Type Description Boolean | Improve this Doc View Source GreaterThanOrEqual(Snowflake, Snowflake) Declaration public static bool operator >=(Snowflake left, Snowflake right) Parameters Type Name Description Snowflake left Snowflake right Returns Type Description Boolean | Improve this Doc View Source Implicit(Snowflake to UInt64) Implicit operator for converting a Snowflake value to an UInt64 . Declaration public static implicit operator ulong (Snowflake snowflake) Parameters Type Name Description Snowflake snowflake the value to convert. Returns Type Description UInt64 | Improve this Doc View Source Implicit(UInt64 to Snowflake) Implicit operator for converting an UInt64 value to a Snowflake . Declaration public static implicit operator Snowflake(ulong value) Parameters Type Name Description UInt64 value the value to convert. Returns Type Description Snowflake | Improve this Doc View Source Inequality(Snowflake, Snowflake) Checks the equality between the specified left Snowflake and the specified right Snowflake . Declaration public static bool operator !=(Snowflake left, Snowflake right) Parameters Type Name Description Snowflake left the left-hand Snowflake to check. Snowflake right the right-hand Snowflake to check. Returns Type Description Boolean a value indicating whether the specified left Snowflake and the specified right Snowflake are NOT equal. | Improve this Doc View Source LessThan(Snowflake, Snowflake) Declaration public static bool operator <(Snowflake left, Snowflake right) Parameters Type Name Description Snowflake left Snowflake right Returns Type Description Boolean | Improve this Doc View Source LessThanOrEqual(Snowflake, Snowflake) Declaration public static bool operator <=(Snowflake left, Snowflake right) Parameters Type Name Description Snowflake left Snowflake right Returns Type Description Boolean Implements System.IEquatable<T> System.IComparable<T> System.IComparable"
  },
  "api/Strade.Entities.Sticker.html": {
    "href": "api/Strade.Entities.Sticker.html",
    "title": "Class Sticker | Strade Developer Documentation",
    "keywords": "Class Sticker Inheritance Object Sticker Implements ISnowflakeEntity IIdentifiable < Snowflake > IDiscordEntity Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class Sticker : ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity Constructors | Improve this Doc View Source Sticker(IDiscordRestClient, MessageStickerModel) Declaration public Sticker(IDiscordRestClient client, MessageStickerModel model) Parameters Type Name Description IDiscordRestClient client MessageStickerModel model Properties | Improve this Doc View Source AssetHash Declaration public string AssetHash { get; } Property Value Type Description String | Improve this Doc View Source Client Declaration public IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description String | Improve this Doc View Source Format Declaration public StickerFormatType Format { get; } Property Value Type Description StickerFormatType | Improve this Doc View Source Id Declaration public Snowflake Id { get; } Property Value Type Description Snowflake | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source PackId Declaration public Snowflake PackId { get; } Property Value Type Description Snowflake | Improve this Doc View Source PreviewAssetHash Declaration public string PreviewAssetHash { get; } Property Value Type Description String | Improve this Doc View Source Tags Declaration public IReadOnlyList<string> Tags { get; } Property Value Type Description IReadOnlyList < String > Implements ISnowflakeEntity IIdentifiable<TIdentifier> IDiscordEntity"
  },
  "api/Strade.Entities.StickerFormatType.html": {
    "href": "api/Strade.Entities.StickerFormatType.html",
    "title": "Enum StickerFormatType | Strade Developer Documentation",
    "keywords": "Enum StickerFormatType Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public enum StickerFormatType : byte Fields Name Description Apng Lottie Png Extension Methods EnumExtensions.GetName<StickerFormatType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.StoreChannelCreationProperties.html": {
    "href": "api/Strade.Entities.StoreChannelCreationProperties.html",
    "title": "Class StoreChannelCreationProperties | Strade Developer Documentation",
    "keywords": "Class StoreChannelCreationProperties Inheritance Object GuildChannelCreationProperties NestedChannelCreationProperties StoreChannelCreationProperties Implements ICreationProperties Inherited Members NestedChannelCreationProperties.ParentId GuildChannelCreationProperties.Name GuildChannelCreationProperties.PermissionOverwrites GuildChannelCreationProperties.Position GuildChannelCreationProperties.Validate() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class StoreChannelCreationProperties : NestedChannelCreationProperties, ICreationProperties Properties | Improve this Doc View Source IsNsfw Gets or sets a value indicating whether the text channel should be a NSFW channel. Declaration [JsonPropertyName(\"nsfw\")] public Optional<bool> IsNsfw { get; set; } Property Value Type Description Optional < Boolean > a value indicating whether the text channel should be a NSFW channel. | Improve this Doc View Source Type Declaration public override ChannelType Type { get; } Property Value Type Description ChannelType Overrides GuildChannelCreationProperties.Type Implements ICreationProperties"
  },
  "api/Strade.Entities.StoreChannelModifyProperties.html": {
    "href": "api/Strade.Entities.StoreChannelModifyProperties.html",
    "title": "Class StoreChannelModifyProperties | Strade Developer Documentation",
    "keywords": "Class StoreChannelModifyProperties Inheritance Object GuildChannelModifyProperties NestedChannelModifyProperties StoreChannelModifyProperties Implements IModifyProperties Inherited Members NestedChannelModifyProperties.ParentId GuildChannelModifyProperties.Name GuildChannelModifyProperties.PermissionOverwrites GuildChannelModifyProperties.Position GuildChannelModifyProperties.Validate() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class StoreChannelModifyProperties : NestedChannelModifyProperties, IModifyProperties Properties | Improve this Doc View Source IsNsfw Gets or sets a value indicating whether the text channel should be a NSFW channel. Declaration [JsonPropertyName(\"nsfw\")] public Optional<bool> IsNsfw { get; set; } Property Value Type Description Optional < Boolean > a value indicating whether the text channel should be a NSFW channel. Implements IModifyProperties"
  },
  "api/Strade.Entities.SystemChannelFlags.html": {
    "href": "api/Strade.Entities.SystemChannelFlags.html",
    "title": "Enum SystemChannelFlags | Strade Developer Documentation",
    "keywords": "Enum SystemChannelFlags A list of possible system channel flags. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [Flags] [JsonConverter(typeof(NumericEnumConverter<SystemChannelFlags>))] public enum SystemChannelFlags : byte Fields Name Description NoGuildBoost Denotes that no guild / nitro boost message is sent when a member boosts the guild. None Denotes that no flags are applied on the system channel. NoWelcomeMessage Denotes that no welcome message is sent when a new member joins the guild. Extension Methods EnumExtensions.GetName<SystemChannelFlags>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.TargetUserType.html": {
    "href": "api/Strade.Entities.TargetUserType.html",
    "title": "Enum TargetUserType | Strade Developer Documentation",
    "keywords": "Enum TargetUserType A set of the target user type definitions. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(NumericEnumConverter<TargetUserType>))] public enum TargetUserType : byte Remarks More details can be found on https://discord.com/developers/docs/resources/invite#invite-object-target-user-type [external, Discord Developer Documentation]. Fields Name Description Stream Denotes that the target user type is \"Stream\" . Extension Methods EnumExtensions.GetName<TargetUserType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.TextChannelCreationProperties.html": {
    "href": "api/Strade.Entities.TextChannelCreationProperties.html",
    "title": "Class TextChannelCreationProperties | Strade Developer Documentation",
    "keywords": "Class TextChannelCreationProperties The ICreationProperties for a text channel ( Strade.Entities.TextChannel ). Inheritance Object GuildChannelCreationProperties NestedChannelCreationProperties TextChannelCreationProperties Implements ICreationProperties Inherited Members NestedChannelCreationProperties.ParentId GuildChannelCreationProperties.Name GuildChannelCreationProperties.PermissionOverwrites GuildChannelCreationProperties.Position GuildChannelCreationProperties.Validate() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class TextChannelCreationProperties : NestedChannelCreationProperties, ICreationProperties Properties | Improve this Doc View Source IsNsfw Gets or sets a value indicating whether the text channel should be a NSFW channel. Declaration [JsonPropertyName(\"nsfw\")] public Optional<bool> IsNsfw { get; set; } Property Value Type Description Optional < Boolean > a value indicating whether the text channel should be a NSFW channel. | Improve this Doc View Source RateLimitPerUser Gets or sets the number of seconds a user has to wait before sending another message. Declaration [JsonPropertyName(\"rate_limit_per_user\")] public Optional<int> RateLimitPerUser { get; set; } Property Value Type Description Optional < Int32 > the number of seconds a user has to wait before sending another message (ranges from 0 to 21600 ; bots and users with the permission ManageMessages or ManageChannels are unaffected from the message send rate limit). | Improve this Doc View Source Topic Gets or sets the channel topic. Declaration [JsonPropertyName(\"topic\")] public Optional<string> Topic { get; set; } Property Value Type Description Optional < String > the channel topic. | Improve this Doc View Source Type Declaration [JsonPropertyName(\"type\")] public override ChannelType Type { get; } Property Value Type Description ChannelType Overrides GuildChannelCreationProperties.Type Implements ICreationProperties"
  },
  "api/Strade.Entities.TextChannelModifyProperties.html": {
    "href": "api/Strade.Entities.TextChannelModifyProperties.html",
    "title": "Class TextChannelModifyProperties | Strade Developer Documentation",
    "keywords": "Class TextChannelModifyProperties The IModifyProperties for a text channel (see https://discord.com/developers/docs/resources/channel#modify-channel for more details on modifying channels). Inheritance Object GuildChannelModifyProperties NestedChannelModifyProperties TextChannelModifyProperties Implements IModifyProperties Inherited Members NestedChannelModifyProperties.ParentId GuildChannelModifyProperties.Name GuildChannelModifyProperties.PermissionOverwrites GuildChannelModifyProperties.Position GuildChannelModifyProperties.Validate() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class TextChannelModifyProperties : NestedChannelModifyProperties, IModifyProperties Properties | Improve this Doc View Source IsNsfw Gets or sets a value indicating whether the text channel should be a NSFW channel. Declaration [JsonPropertyName(\"nsfw\")] public Optional<bool> IsNsfw { get; set; } Property Value Type Description Optional < Boolean > a value indicating whether the text channel should be a NSFW channel. | Improve this Doc View Source RateLimitPerUser Gets or sets the number of seconds a user has to wait before sending another message. Declaration [JsonPropertyName(\"rate_limit_per_user\")] public Optional<int> RateLimitPerUser { get; set; } Property Value Type Description Optional < Int32 > the number of seconds a user has to wait before sending another message (ranges from 0 to 21600 ; bots and users with the permission ManageMessages or ManageChannels are unaffected from the message send rate limit). | Improve this Doc View Source Topic Gets or sets the channel topic. Declaration [JsonPropertyName(\"topic\")] public Optional<string> Topic { get; set; } Property Value Type Description Optional < String > the channel topic. Implements IModifyProperties"
  },
  "api/Strade.Entities.User.html": {
    "href": "api/Strade.Entities.User.html",
    "title": "Class User | Strade Developer Documentation",
    "keywords": "Class User Represents an user object. Inheritance Object User CurrentUser Implements IHasAvatar ISnowflakeEntity IIdentifiable < Snowflake > IDiscordEntity IMentionable IUpdateable < UserModel > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public class User : IHasAvatar, ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IMentionable, IUpdateable<UserModel> Remarks More details can be found on https://discord.com/developers/docs/resources/user#user-object-user-structure [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source User(IDiscordRestClient, UserModel, Nullable<UserType>) Declaration public User(IDiscordRestClient client, UserModel model, UserType? explicitType = default(UserType? )) Parameters Type Name Description IDiscordRestClient client UserModel model Nullable < UserType > explicitType Properties | Improve this Doc View Source AvatarHash Declaration public string AvatarHash { get; } Property Value Type Description String | Improve this Doc View Source AvatarUrl Declaration public Uri AvatarUrl { get; } Property Value Type Description Uri | Improve this Doc View Source Client Declaration public IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient | Improve this Doc View Source Discriminator Gets the user's discriminator. Declaration public string Discriminator { get; } Property Value Type Description String the user's discriminator. | Improve this Doc View Source DiscriminatorValue Gets the parsed discriminator value. Declaration public ushort DiscriminatorValue { get; } Property Value Type Description UInt16 the parsed discriminator value. | Improve this Doc View Source Flags Gets the user flags. Declaration public UserFlags Flags { get; } Property Value Type Description UserFlags the user flags. | Improve this Doc View Source HasAvatar Declaration public bool HasAvatar { get; } Property Value Type Description Boolean | Improve this Doc View Source Id Gets the snowflake identifier of the user. Declaration public Snowflake Id { get; } Property Value Type Description Snowflake the snowflake identifier of the user. | Improve this Doc View Source IsBot Gets a value indicating whether the user is a bot. Declaration public bool IsBot { get; } Property Value Type Description Boolean a value indicating whether the user is a bot. | Improve this Doc View Source IsSystem Gets a value indicating whether the user is a system user. Declaration public bool IsSystem { get; } Property Value Type Description Boolean a value indicating whether the user is a system user. | Improve this Doc View Source IsWebhook Gets a value indicating whether the user is a Webhook user. Declaration public bool IsWebhook { get; } Property Value Type Description Boolean a value indicating whether the user is a Webhook user. | Improve this Doc View Source Mention Declaration public string Mention { get; } Property Value Type Description String | Improve this Doc View Source Presence Gets the presence of the user, or null if not available. Declaration public Presence Presence { get; } Property Value Type Description Presence the presence of the user, or null if not available. | Improve this Doc View Source QualifiedName Gets the fully-qualified name of the user (\"Username#xxxx\"). Declaration public string QualifiedName { get; } Property Value Type Description String the fully-qualified name of the user (\"Username#xxxx\"). | Improve this Doc View Source Type Gets the type of the user. Declaration public UserType Type { get; } Property Value Type Description UserType the type of the user. | Improve this Doc View Source Username Gets the username of the user. Declaration public string Username { get; } Property Value Type Description String the username of the user. Methods | Improve this Doc View Source BuildAvatarUrl(ImageFormat, Nullable<Int32>) Declaration public Uri BuildAvatarUrl(ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description ImageFormat format Nullable < Int32 > size Returns Type Description Uri | Improve this Doc View Source OpenChannelAsync(CancellationToken) Opens a private channel to the user asynchronously. Declaration public Task<IPrivateChannel> OpenChannelAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IPrivateChannel > a task that represents the asynchronous operation. The task result is the private channel. Exceptions Type Condition RestRequestException thrown if an error occurs during the REST operation. | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() | Improve this Doc View Source Update(UserModel) Declaration protected virtual void Update(UserModel model) Parameters Type Name Description UserModel model Explicit Interface Implementations | Improve this Doc View Source IUpdateable<UserModel>.Update(UserModel) Declaration void IUpdateable<UserModel>.Update(UserModel model) Parameters Type Name Description UserModel model Implements IHasAvatar ISnowflakeEntity IIdentifiable<TIdentifier> IDiscordEntity IMentionable IUpdateable<TModel>"
  },
  "api/Strade.Entities.UserActivityBuilder.html": {
    "href": "api/Strade.Entities.UserActivityBuilder.html",
    "title": "Class UserActivityBuilder | Strade Developer Documentation",
    "keywords": "Class UserActivityBuilder A builder for activity objects for users. Inheritance Object ActivityBuilder < UserActivityBuilder > UserActivityBuilder Implements IBuilder < Activity > Inherited Members ActivityBuilder<UserActivityBuilder>.Name ActivityBuilder<UserActivityBuilder>.StreamUri ActivityBuilder<UserActivityBuilder>.Type ActivityBuilder<UserActivityBuilder>.WithName(String) ActivityBuilder<UserActivityBuilder>.WithStreamUri(Uri) ActivityBuilder<UserActivityBuilder>.WithType(ActivityType) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class UserActivityBuilder : ActivityBuilder<UserActivityBuilder>, IBuilder<Activity> Constructors | Improve this Doc View Source UserActivityBuilder() Initializes a new instance of the UserActivityBuilder class. Declaration public UserActivityBuilder() | Improve this Doc View Source UserActivityBuilder(Activity) Initializes a new instance of the UserActivityBuilder class. Declaration public UserActivityBuilder(Activity prototype) Parameters Type Name Description Activity prototype the activity prototype to copy the data from. Exceptions Type Condition ArgumentNullException thrown if the specified prototype is null . Properties | Improve this Doc View Source ApplicationId Gets or sets the snowflake identifier of the associated application. Declaration public Snowflake? ApplicationId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the associated application. | Improve this Doc View Source Assets Gets or sets the activity assets. Declaration public ActivityAssets Assets { get; set; } Property Value Type Description ActivityAssets the activity assets. | Improve this Doc View Source Builder Declaration protected override UserActivityBuilder Builder { get; } Property Value Type Description UserActivityBuilder Overrides Strade.Entities.ActivityBuilder<Strade.Entities.UserActivityBuilder>.Builder | Improve this Doc View Source Buttons Gets or sets a read-only list containing activity buttons that represent custom buttons that are shown in the rich presence (maximum two). Declaration public IReadOnlyList<ActivityButton> Buttons { get; set; } Property Value Type Description IReadOnlyList < ActivityButton > a read-only list containing activity buttons that represent custom buttons that are shown in the rich presence (maximum two). | Improve this Doc View Source Details Gets or sets the activity details. Declaration public string Details { get; set; } Property Value Type Description String the activity details. | Improve this Doc View Source Emote Gets or sets the emote used for the activity (only respected when Type is Custom ). Declaration public IEmote Emote { get; set; } Property Value Type Description IEmote the emote used for the activity (only respected when Type is Custom ). | Improve this Doc View Source Flags Gets or sets the activity flags. Declaration public ActivityFlags Flags { get; set; } Property Value Type Description ActivityFlags the activity flags. | Improve this Doc View Source Id Gets or sets the activity identifier. Declaration public string Id { get; set; } Property Value Type Description String the activity identifier. | Improve this Doc View Source IsGameInstance Gets or sets a value indicating whether the game is an instantiated game session. Declaration public bool IsGameInstance { get; set; } Property Value Type Description Boolean a value indicating whether the game is an instantiated game session. | Improve this Doc View Source Party Gets or sets the activity assets. Declaration public ActivityParty Party { get; set; } Property Value Type Description ActivityParty the activity assets. | Improve this Doc View Source Platform Gets or sets the platform the game represented by the activity is being played on. Declaration public ActivityPlatform? Platform { get; set; } Property Value Type Description Nullable < ActivityPlatform > the platform the game represented by the activity is being played on. | Improve this Doc View Source Secrets Gets or sets the activity secrets. Declaration public ActivitySecrets Secrets { get; set; } Property Value Type Description ActivitySecrets the activity secrets. | Improve this Doc View Source SessionId Gets or sets an identifier that represents the game or the Spotify session. Declaration public string SessionId { get; set; } Property Value Type Description String an identifier that represents the game or the Spotify session. | Improve this Doc View Source State Gets or sets the activity (game) state. Declaration public string State { get; set; } Property Value Type Description String the activity (game) state. | Improve this Doc View Source SynchronizationId Gets or sets the synchronization identifier for a song on Spotify linked with the activity. Declaration public string SynchronizationId { get; set; } Property Value Type Description String the synchronization identifier for a song on Spotify linked with the activity. | Improve this Doc View Source Timestamps Gets or sets the activity time information. Declaration public ActivityTimestamps Timestamps { get; set; } Property Value Type Description ActivityTimestamps Methods | Improve this Doc View Source Build() Declaration public override Activity Build() Returns Type Description Activity Overrides Strade.Entities.ActivityBuilder<Strade.Entities.UserActivityBuilder>.Build() | Improve this Doc View Source Reset() Declaration public override void Reset() Overrides Strade.Entities.ActivityBuilder<Strade.Entities.UserActivityBuilder>.Reset() | Improve this Doc View Source WithApplicationId(Snowflake) Sets the application identifier ( ApplicationId ) to the specified applicationId . Declaration public UserActivityBuilder WithApplicationId(Snowflake applicationId) Parameters Type Name Description Snowflake applicationId the application identifier. Returns Type Description UserActivityBuilder the UserActivityBuilder instance. | Improve this Doc View Source WithAssets(ActivityAssets) Sets the assets ( Assets ) to the specified assets . Declaration public UserActivityBuilder WithAssets(ActivityAssets assets) Parameters Type Name Description ActivityAssets assets the application assets. Returns Type Description UserActivityBuilder the UserActivityBuilder instance. | Improve this Doc View Source WithAssets(ActivityAssetsBuilder) Sets the assets ( Assets ) using the specified builder . Declaration public UserActivityBuilder WithAssets(ActivityAssetsBuilder builder) Parameters Type Name Description ActivityAssetsBuilder builder the builder used to build the activity assets. Returns Type Description UserActivityBuilder the UserActivityBuilder instance. Exceptions Type Condition ArgumentNullException thrown if the specified builder is null . | Improve this Doc View Source WithAssets(Action<ActivityAssetsBuilder>) Sets the assets ( Assets ) using the specified action . Declaration public UserActivityBuilder WithAssets(Action<ActivityAssetsBuilder> action) Parameters Type Name Description Action < ActivityAssetsBuilder > action the action to configure the builder used to build the activity assets. Returns Type Description UserActivityBuilder the UserActivityBuilder instance. Exceptions Type Condition ArgumentNullException thrown if the specified action is null . | Improve this Doc View Source WithButtons(IReadOnlyList<ActivityButton>) Declaration public UserActivityBuilder WithButtons(IReadOnlyList<ActivityButton> buttons) Parameters Type Name Description IReadOnlyList < ActivityButton > buttons Returns Type Description UserActivityBuilder | Improve this Doc View Source WithDetails(String) Sets the activity details ( Details ) to the specified details . Declaration public UserActivityBuilder WithDetails(string details) Parameters Type Name Description String details the activity details. Returns Type Description UserActivityBuilder the UserActivityBuilder instance. | Improve this Doc View Source WithEmote(IEmote) Declaration public UserActivityBuilder WithEmote(IEmote emote) Parameters Type Name Description IEmote emote Returns Type Description UserActivityBuilder | Improve this Doc View Source WithFlags(ActivityFlags) Sets the activity flags ( Flags ) to the specified flags . Declaration public UserActivityBuilder WithFlags(ActivityFlags flags) Parameters Type Name Description ActivityFlags flags the activity flags. Returns Type Description UserActivityBuilder the UserActivityBuilder instance. | Improve this Doc View Source WithId(String) Declaration public UserActivityBuilder WithId(string id) Parameters Type Name Description String id Returns Type Description UserActivityBuilder | Improve this Doc View Source WithParty(ActivityParty) Sets the activity party ( Party ) to the specified party . Declaration public UserActivityBuilder WithParty(ActivityParty party) Parameters Type Name Description ActivityParty party the activity party. Returns Type Description UserActivityBuilder the UserActivityBuilder instance. | Improve this Doc View Source WithParty(ActivityPartyBuilder) Sets the activity party ( Party ) using the specified builder . Declaration public UserActivityBuilder WithParty(ActivityPartyBuilder builder) Parameters Type Name Description ActivityPartyBuilder builder the builder used to build the activity party. Returns Type Description UserActivityBuilder the UserActivityBuilder instance. Exceptions Type Condition ArgumentNullException thrown if the specified builder is null . | Improve this Doc View Source WithParty(Action<ActivityPartyBuilder>) Sets the activity party ( Party ) using the specified action . Declaration public UserActivityBuilder WithParty(Action<ActivityPartyBuilder> action) Parameters Type Name Description Action < ActivityPartyBuilder > action the action used to build the activity party. Returns Type Description UserActivityBuilder the UserActivityBuilder instance. Exceptions Type Condition ArgumentNullException thrown if the specified action is null . | Improve this Doc View Source WithPlatform(Nullable<ActivityPlatform>) Declaration public UserActivityBuilder WithPlatform(ActivityPlatform? platform) Parameters Type Name Description Nullable < ActivityPlatform > platform Returns Type Description UserActivityBuilder | Improve this Doc View Source WithSecrets(ActivitySecrets) Sets the activity secrets ( Secrets ) to the specified secrets . Declaration public UserActivityBuilder WithSecrets(ActivitySecrets secrets) Parameters Type Name Description ActivitySecrets secrets the activity secrets. Returns Type Description UserActivityBuilder the UserActivityBuilder instance. | Improve this Doc View Source WithSecrets(ActivitySecretsBuilder) Sets the activity secrets ( Secrets ) using the specified builder . Declaration public UserActivityBuilder WithSecrets(ActivitySecretsBuilder builder) Parameters Type Name Description ActivitySecretsBuilder builder the builder used to build the activity secrets. Returns Type Description UserActivityBuilder the UserActivityBuilder instance. Exceptions Type Condition ArgumentNullException thrown if the specified builder is null . | Improve this Doc View Source WithSecrets(Action<ActivitySecretsBuilder>) Sets the activity secrets ( Secrets ) using the specified action . Declaration public UserActivityBuilder WithSecrets(Action<ActivitySecretsBuilder> action) Parameters Type Name Description Action < ActivitySecretsBuilder > action the action used to build the activity secrets. Returns Type Description UserActivityBuilder the UserActivityBuilder instance. Exceptions Type Condition ArgumentNullException thrown if the specified action is null . | Improve this Doc View Source WithState(String) Sets the game state ( State ) to the specified state . Declaration public UserActivityBuilder WithState(string state) Parameters Type Name Description String state the game state. Returns Type Description UserActivityBuilder the UserActivityBuilder instance. | Improve this Doc View Source WithSynchronizationId(String) Declaration public UserActivityBuilder WithSynchronizationId(string synchronizationId) Parameters Type Name Description String synchronizationId Returns Type Description UserActivityBuilder | Improve this Doc View Source WithTimestamps(ActivityTimestamps) Sets the game time information ( Timestamps ) to the specified time . Declaration public UserActivityBuilder WithTimestamps(ActivityTimestamps time) Parameters Type Name Description ActivityTimestamps time the game time information. Returns Type Description UserActivityBuilder the UserActivityBuilder instance. | Improve this Doc View Source WithTimestamps(ActivityTimestampsBuilder) Sets the game time information ( Timestamps ) to the specified builder . Declaration public UserActivityBuilder WithTimestamps(ActivityTimestampsBuilder builder) Parameters Type Name Description ActivityTimestampsBuilder builder the builder used to build the game time information. Returns Type Description UserActivityBuilder the UserActivityBuilder instance. Exceptions Type Condition ArgumentNullException thrown if the specified builder is null . | Improve this Doc View Source WithTimestamps(Action<ActivityTimestampsBuilder>) Sets the game time information ( Timestamps ) to the specified action . Declaration public UserActivityBuilder WithTimestamps(Action<ActivityTimestampsBuilder> action) Parameters Type Name Description Action < ActivityTimestampsBuilder > action the action used to build the game time information. Returns Type Description UserActivityBuilder the UserActivityBuilder instance. Exceptions Type Condition ArgumentNullException thrown if the specified action is null . Operators | Improve this Doc View Source Implicit(UserActivityBuilder to Activity) Gets the activity from the specified builder . Declaration public static implicit operator Activity(UserActivityBuilder builder) Parameters Type Name Description UserActivityBuilder builder the activity builder. Returns Type Description Activity See Also Build() Implements IBuilder<TResult>"
  },
  "api/Strade.Entities.UserConnection.html": {
    "href": "api/Strade.Entities.UserConnection.html",
    "title": "Class UserConnection | Strade Developer Documentation",
    "keywords": "Class UserConnection Represents a user connection. Inheritance Object UserConnection Implements IDiscordEntity IIdentifiable < String > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class UserConnection : IDiscordEntity, IIdentifiable<string> Remarks More details can be found on https://discord.com/developers/docs/resources/user#connection-object-connection-structure [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source UserConnection(IDiscordRestClient, UserConnectionModel) Declaration public UserConnection(IDiscordRestClient client, UserConnectionModel model) Parameters Type Name Description IDiscordRestClient client UserConnectionModel model Properties | Improve this Doc View Source Client Declaration public IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient | Improve this Doc View Source Id Gets the identifier of the connection account. Declaration public string Id { get; } Property Value Type Description String the identifier of the connection account. | Improve this Doc View Source IsFriendSynced Gets a value indicating whether the connection has enabled friend sync. Declaration public bool IsFriendSynced { get; } Property Value Type Description Boolean a value indicating whether the connection has enabled friend sync. | Improve this Doc View Source IsRevoked Gets a value indicating whether the connection access has been revoked. Declaration public bool IsRevoked { get; } Property Value Type Description Boolean a value indicating whether the connection access has been revoked. | Improve this Doc View Source IsVerified Gets a value indicating whether the connection is verified. Declaration public bool IsVerified { get; } Property Value Type Description Boolean a value indicating whether the connection is verified. | Improve this Doc View Source Name Gets the name of the connection account. Declaration public string Name { get; } Property Value Type Description String the name of the connection account. | Improve this Doc View Source ShowsActivity Gets a value indicating whether the connection shows activities related to the connection in presence updates. Declaration public bool ShowsActivity { get; } Property Value Type Description Boolean a value indicating whether the connection shows activities related to the connection in presence updates. | Improve this Doc View Source Type Gets the type of the service (e.g. \"twitch\" or \"youtube\" ). Declaration public string Type { get; } Property Value Type Description String the type of the service (e.g. \"twitch\" or \"youtube\" ). | Improve this Doc View Source Visibility Gets the connection visibility. Declaration public ConnectionVisibility Visibility { get; } Property Value Type Description ConnectionVisibility the connection visibility. Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements IDiscordEntity IIdentifiable<TIdentifier>"
  },
  "api/Strade.Entities.UserFlags.html": {
    "href": "api/Strade.Entities.UserFlags.html",
    "title": "Enum UserFlags | Strade Developer Documentation",
    "keywords": "Enum UserFlags Discord user flags. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [Flags] [JsonConverter(typeof(NumericEnumConverter<UserFlags>))] public enum UserFlags Remarks More details can be found on https://discord.com/developers/docs/resources/user#user-object-user-flags [external, Discord Developer Documentation]. Fields Name Description BugHunterLevel1 Denotes that the user is bug hunter (Level 1). BugHunterLevel2 Denotes that the user is a bug hunter (Level 2). DiscordEmployee Denotes that the user is a discord employee. EarlySupporter Denotes that the user is an early supporter. EarlyVerifiedBotDeveloper Denotes that the user is a early verified bot developer (became a bot developer before August 19, 2020). HouseBalance Denotes that user joined the House of Balance. HouseBravery Denotes that user joined the House of Bravery. HouseBrilliance Denotes that user joined the House of Brilliance. HypeSquadEvents Denotes that the user takes part at local discord events. None Denotes that the user has no flags. PartneredServerOwner Denotes that the user is an owner of a server that is a partner server. System Denotes that the user is a system user. TeamUser Denotes that the user is a team user. VerifiedBot Denotes that the user is a verified bot. Extension Methods EnumExtensions.GetName<UserFlags>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.UserGuildInformation.html": {
    "href": "api/Strade.Entities.UserGuildInformation.html",
    "title": "Class UserGuildInformation | Strade Developer Documentation",
    "keywords": "Class UserGuildInformation Inheritance Object UserGuildInformation Implements IDiscordEntity IHasIcon IIdentifiable < Snowflake > IDeletable IModifiable < GuildModifyProperties > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class UserGuildInformation : IDiscordEntity, IHasIcon, IIdentifiable<Snowflake>, IDeletable, IModifiable<GuildModifyProperties> Constructors | Improve this Doc View Source UserGuildInformation(IDiscordRestClient, UserGuildInformationModel) Declaration public UserGuildInformation(IDiscordRestClient client, UserGuildInformationModel model) Parameters Type Name Description IDiscordRestClient client UserGuildInformationModel model Properties | Improve this Doc View Source Client Declaration public IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient | Improve this Doc View Source Features Declaration public IReadOnlyList<string> Features { get; } Property Value Type Description IReadOnlyList < String > | Improve this Doc View Source HasIcon Declaration public bool HasIcon { get; } Property Value Type Description Boolean | Improve this Doc View Source IconHash Declaration public string IconHash { get; } Property Value Type Description String | Improve this Doc View Source IconUrl Declaration public Uri IconUrl { get; } Property Value Type Description Uri | Improve this Doc View Source Id Declaration public Snowflake Id { get; } Property Value Type Description Snowflake | Improve this Doc View Source IsOwner Declaration public bool IsOwner { get; } Property Value Type Description Boolean | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Permissions Declaration public PermissionSet Permissions { get; } Property Value Type Description PermissionSet Methods | Improve this Doc View Source BuildIconUrl(ImageFormat, Nullable<Int32>) Declaration public Uri BuildIconUrl(ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description ImageFormat format Nullable < Int32 > size Returns Type Description Uri | Improve this Doc View Source DeleteAsync(CancellationToken) Declaration public Task DeleteAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ModifyAsync(GuildModifyProperties, CancellationToken) Declaration public Task ModifyAsync(GuildModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GuildModifyProperties properties CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ModifyAsync(Action<GuildModifyProperties>, CancellationToken) Declaration public Task ModifyAsync(Action<GuildModifyProperties> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < GuildModifyProperties > action CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements IDiscordEntity IHasIcon IIdentifiable<TIdentifier> IDeletable IModifiable<TProperties>"
  },
  "api/Strade.Entities.UserGuildsDownloadProperties.html": {
    "href": "api/Strade.Entities.UserGuildsDownloadProperties.html",
    "title": "Class UserGuildsDownloadProperties | Strade Developer Documentation",
    "keywords": "Class UserGuildsDownloadProperties Inheritance Object UserGuildsDownloadProperties Implements IRetrieveProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class UserGuildsDownloadProperties : IRetrieveProperties Properties | Improve this Doc View Source AfterGuildId Declaration public Optional<Snowflake> AfterGuildId { get; set; } Property Value Type Description Optional < Snowflake > | Improve this Doc View Source BeforeGuildId Declaration public Optional<Snowflake> BeforeGuildId { get; set; } Property Value Type Description Optional < Snowflake > | Improve this Doc View Source Limit Declaration public Optional<int> Limit { get; set; } Property Value Type Description Optional < Int32 > Methods | Improve this Doc View Source BuildQuery() Declaration public QueryParameterCollection BuildQuery() Returns Type Description QueryParameterCollection | Improve this Doc View Source Validate() Declaration public void Validate() Implements IRetrieveProperties"
  },
  "api/Strade.Entities.UserMention.html": {
    "href": "api/Strade.Entities.UserMention.html",
    "title": "Class UserMention | Strade Developer Documentation",
    "keywords": "Class UserMention Represents a user mention object. Inheritance Object UserMention Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class UserMention Constructors | Improve this Doc View Source UserMention(IDiscordRestClient, MentionModel, Nullable<Snowflake>) Initializes a new instance of the UserMention class. Declaration public UserMention(IDiscordRestClient client, MentionModel model, Snowflake? guildId = default(Snowflake? )) Parameters Type Name Description IDiscordRestClient client the discord client. MentionModel model the model that contains the data for the entity. Nullable < Snowflake > guildId a snowflake identifier used to hint the user mention for which guild the member is in. Exceptions Type Condition ArgumentNullException thrown if the specified model is null . Properties | Improve this Doc View Source Member Gets the member that was mentioned; or null if the user was not mentioned in a guild. Declaration public Member Member { get; } Property Value Type Description Member the member that was mentioned; or null if the user was not mentioned in a guild. | Improve this Doc View Source User Gets the user that was mentioned. Declaration public User User { get; } Property Value Type Description User the user that was mentioned. Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Strade.Entities.UserPlatformStatus.html": {
    "href": "api/Strade.Entities.UserPlatformStatus.html",
    "title": "Class UserPlatformStatus | Strade Developer Documentation",
    "keywords": "Class UserPlatformStatus Represents a platform-dependent platform status compound. Inheritance Object UserPlatformStatus Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.dll Syntax public sealed class UserPlatformStatus Remarks More details can be found on https://discordapp.com/developers/docs/topics/gateway#client-status-object [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source UserPlatformStatus(UserPlatformStatusModel) Declaration public UserPlatformStatus(UserPlatformStatusModel model) Parameters Type Name Description UserPlatformStatusModel model | Improve this Doc View Source UserPlatformStatus(Nullable<UserStatus>, Nullable<UserStatus>, Nullable<UserStatus>) Declaration public UserPlatformStatus(UserStatus? desktop, UserStatus? mobile, UserStatus? web) Parameters Type Name Description Nullable < UserStatus > desktop Nullable < UserStatus > mobile Nullable < UserStatus > web Properties | Improve this Doc View Source Desktop Gets the user's status set for an active desktop (Windows, Linux, Mac) application session. Declaration public UserStatus? Desktop { get; } Property Value Type Description Nullable < UserStatus > the user's status set for an active desktop (Windows, Linux, Mac) application session. | Improve this Doc View Source Mobile Gets the user's status set for an active mobile (iOS, Android) application session. Declaration public UserStatus? Mobile { get; } Property Value Type Description Nullable < UserStatus > the user's status set for an active mobile (iOS, Android) application session. | Improve this Doc View Source Web Gets the user's status set for an active web (browser, bot account) application session. Declaration public UserStatus? Web { get; } Property Value Type Description Nullable < UserStatus > the user's status set for an active web (browser, bot account) application session. Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Strade.Entities.UserStatus.html": {
    "href": "api/Strade.Entities.UserStatus.html",
    "title": "Enum UserStatus | Strade Developer Documentation",
    "keywords": "Enum UserStatus A set of discord's user states. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(StringEnumConverter<UserStatus>))] public enum UserStatus : byte Fields Name Description DoNotDisturb Denotes that the user is in do not disturb mode. Idle Denotes that the user is in idle. Invisible Denotes that the user is invisible (shown as offline). Offline Denotes that the user is offline. Online Denotes that the user is online. Extension Methods EnumExtensions.GetName<UserStatus>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.UserType.html": {
    "href": "api/Strade.Entities.UserType.html",
    "title": "Enum UserType | Strade Developer Documentation",
    "keywords": "Enum UserType A set of possible user types. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public enum UserType : byte Fields Name Description Bot Denotes that the user is a bot user. System Denotes that the user represents a system user. Team Denotes that the user represents a Team user. User Denotes that the user is a real user. Webhook Denotes that the user represents a Webhook user. Extension Methods EnumExtensions.GetName<UserType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.VanityInvite.html": {
    "href": "api/Strade.Entities.VanityInvite.html",
    "title": "Class VanityInvite | Strade Developer Documentation",
    "keywords": "Class VanityInvite Represents the structure of a vanity invite. Inheritance Object VanityInvite Implements IIdentifiable < String > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class VanityInvite : IIdentifiable<string> Remarks More details can be found on https://discord.com/developers/docs/resources/invite#invite-object [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source VanityInvite(VanityInviteModel) Initializes a new instance of the VanityInvite class. Declaration public VanityInvite(VanityInviteModel model) Parameters Type Name Description VanityInviteModel model the model that contains the data for the entity. Exceptions Type Condition ArgumentNullException thrown if the specified model is null . Properties | Improve this Doc View Source Code Gets the invitation code. Declaration public string Code { get; } Property Value Type Description String the invitation code; or null if the vanity invite is not enabled in the guild. | Improve this Doc View Source Url Gets the URI used to join the guild using the vanity invite. Declaration public Uri Url { get; } Property Value Type Description Uri the URI used to join the guild using the vanity invite; or null if the vanity invite is not enabled in the guild. | Improve this Doc View Source Uses Gets the number of times the vanity invite was used. Declaration public int Uses { get; } Property Value Type Description Int32 the number of times the vanity invite was used. Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IIdentifiable<String>.Id Declaration string IIdentifiable<string>.Id { get; } Returns Type Description String Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Entities.VerificationLevel.html": {
    "href": "api/Strade.Entities.VerificationLevel.html",
    "title": "Enum VerificationLevel | Strade Developer Documentation",
    "keywords": "Enum VerificationLevel The verification level enumeration. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(NumericEnumConverter<VerificationLevel>))] public enum VerificationLevel : byte Remarks More details can be found on https://discord.com/developers/docs/resources/guild#guild-object-verification-level [external, Discord Developer Documentation]. Fields Name Description High Denotes that the member must be a member of the server for longer than 10 minutes. Low Denotes that the member must have a verified email on account. Medium Denotes that the member must be registered on Discord for longer than 5 minutes. None Denotes that the verification level is unrestricted. VeryHigh Denotes that the user must have a verified phone number. Extension Methods EnumExtensions.GetName<VerificationLevel>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.VoiceChannelCreationProperties.html": {
    "href": "api/Strade.Entities.VoiceChannelCreationProperties.html",
    "title": "Class VoiceChannelCreationProperties | Strade Developer Documentation",
    "keywords": "Class VoiceChannelCreationProperties The ICreationProperties for a voice channel ( IVoiceChannel ). Inheritance Object GuildChannelCreationProperties NestedChannelCreationProperties VoiceChannelCreationProperties Implements ICreationProperties Inherited Members NestedChannelCreationProperties.ParentId GuildChannelCreationProperties.Name GuildChannelCreationProperties.PermissionOverwrites GuildChannelCreationProperties.Position GuildChannelCreationProperties.Validate() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class VoiceChannelCreationProperties : NestedChannelCreationProperties, ICreationProperties Properties | Improve this Doc View Source Bitrate Gets or sets the channel bitrate. Declaration [JsonPropertyName(\"bitrate\")] public Optional<int> Bitrate { get; set; } Property Value Type Description Optional < Int32 > the channel bitrate. | Improve this Doc View Source Type Declaration [JsonPropertyName(\"type\")] public override ChannelType Type { get; } Property Value Type Description ChannelType Overrides GuildChannelCreationProperties.Type | Improve this Doc View Source UserLimit Gets or sets the number of maximum allowed users in the channels. Declaration [JsonPropertyName(\"user_limit\")] public Optional<int> UserLimit { get; set; } Property Value Type Description Optional < Int32 > the number of maximum allowed users in the channels. Implements ICreationProperties"
  },
  "api/Strade.Entities.VoiceChannelModifyProperties.html": {
    "href": "api/Strade.Entities.VoiceChannelModifyProperties.html",
    "title": "Class VoiceChannelModifyProperties | Strade Developer Documentation",
    "keywords": "Class VoiceChannelModifyProperties The IModifyProperties for a voice channel (see https://discord.com/developers/docs/resources/channel#modify-channel for more details on modifying channels). Inheritance Object GuildChannelModifyProperties NestedChannelModifyProperties VoiceChannelModifyProperties Implements IModifyProperties Inherited Members NestedChannelModifyProperties.ParentId GuildChannelModifyProperties.Name GuildChannelModifyProperties.PermissionOverwrites GuildChannelModifyProperties.Position GuildChannelModifyProperties.Validate() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class VoiceChannelModifyProperties : NestedChannelModifyProperties, IModifyProperties Properties | Improve this Doc View Source Bitrate Gets or sets the channel bitrate. Declaration [JsonPropertyName(\"bitrate\")] public Optional<int> Bitrate { get; set; } Property Value Type Description Optional < Int32 > the channel bitrate. | Improve this Doc View Source UserLimit Gets or sets the number of maximum allowed users in the channels. Declaration [JsonPropertyName(\"user_limit\")] public Optional<int> UserLimit { get; set; } Property Value Type Description Optional < Int32 > the number of maximum allowed users in the channels. Implements IModifyProperties"
  },
  "api/Strade.Entities.VoiceRegion.html": {
    "href": "api/Strade.Entities.VoiceRegion.html",
    "title": "Class VoiceRegion | Strade Developer Documentation",
    "keywords": "Class VoiceRegion Represents a discord voice region. Inheritance Object VoiceRegion Implements IIdentifiable < String > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class VoiceRegion : IIdentifiable<string> Remarks More details can be found on https://discord.com/developers/docs/resources/voice#voice-region-object-voice-region-structure [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source VoiceRegion(VoiceRegionModel) Initializes a new instance of the VoiceRegion class. Declaration public VoiceRegion(VoiceRegionModel model) Parameters Type Name Description VoiceRegionModel model the model that contains the data for the entity. Exceptions Type Condition ArgumentNullException thrown if the specified model is null . Properties | Improve this Doc View Source Id Gets the voice region identifier. Declaration public string Id { get; } Property Value Type Description String the voice region identifier. | Improve this Doc View Source IsCustom Gets a value indicating whether the voice region is a custom voice region (used for events, etc.). Declaration public bool IsCustom { get; } Property Value Type Description Boolean a value indicating whether the voice region is a custom voice region (used for events, etc.) | Improve this Doc View Source IsDeprecated Gets a value indicating whether the voice region is deprecated and should not be used. Declaration public bool IsDeprecated { get; } Property Value Type Description Boolean a value indicating whether the voice region is deprecated and should not be used. | Improve this Doc View Source IsOptimal Gets a value indicating whether the voice region is the closest to the current user's client. Declaration public bool IsOptimal { get; } Property Value Type Description Boolean a value indicating whether the voice region is the closest to the current user's client. | Improve this Doc View Source IsVIP Gets a value indicating whether the voice region is VIP-only server. Declaration public bool IsVIP { get; } Property Value Type Description Boolean a value indicating whether the voice region is VIP-only server. | Improve this Doc View Source Name Gets the name of the voice region. Declaration public string Name { get; } Property Value Type Description String the name of the voice region. Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Entities.VoiceServer.html": {
    "href": "api/Strade.Entities.VoiceServer.html",
    "title": "Class VoiceServer | Strade Developer Documentation",
    "keywords": "Class VoiceServer Represents a voice server. Inheritance Object VoiceServer Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.dll Syntax public sealed class VoiceServer Constructors | Improve this Doc View Source VoiceServer(VoiceServerModel) Declaration public VoiceServer(VoiceServerModel model) Parameters Type Name Description VoiceServerModel model | Improve this Doc View Source VoiceServer(String, Snowflake, String) Initializes a new instance of the VoiceServer class. Declaration public VoiceServer(string endpoint, Snowflake guildId, string token) Parameters Type Name Description String endpoint the DNS hostname of the discord voice server; or null to indicate that discord is currently acquiring a new voice server for the client's session. Snowflake guildId the guild identifier the voice server is for. String token the voice connection token; or null to indicate that discord is currently acquiring a new voice server for the client's session. Properties | Improve this Doc View Source Endpoint Gets the DNS hostname of the discord voice server; or null to indicate that discord is currently acquiring a new voice server for the client's session. Declaration public string Endpoint { get; } Property Value Type Description String the DNS hostname of the discord voice server; or null to indicate that discord is currently acquiring a new voice server for the client's session. | Improve this Doc View Source GuildId Gets the guild identifier the voice server is for. Declaration public Snowflake GuildId { get; } Property Value Type Description Snowflake the guild identifier the voice server is for. | Improve this Doc View Source Token Gets the voice connection token; or null to indicate that discord is currently acquiring a new voice server for the client's session. Declaration public string Token { get; } Property Value Type Description String the voice connection token; or null to indicate that discord is currently acquiring a new voice server for the client's session. Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Strade.Entities.VoiceState.html": {
    "href": "api/Strade.Entities.VoiceState.html",
    "title": "Class VoiceState | Strade Developer Documentation",
    "keywords": "Class VoiceState Represents a voice state object. Inheritance Object VoiceState Implements IDiscordEntity IIdentifiable < Snowflake > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class VoiceState : IDiscordEntity, IIdentifiable<Snowflake> Remarks More details can be found on https://discord.com/developers/docs/resources/voice#voice-state-object [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source VoiceState(IDiscordRestClient, VoiceStateModel, Nullable<Snowflake>) Initializes a new instance of the VoiceState class. Declaration public VoiceState(IDiscordRestClient client, VoiceStateModel model, Snowflake? guildId = default(Snowflake? )) Parameters Type Name Description IDiscordRestClient client the discord client. VoiceStateModel model the model that contains the data for the entity. Nullable < Snowflake > guildId a snowflake identifier used to hint the voice state for which guild the voice state is for. Exceptions Type Condition ArgumentNullException thrown if the specified model is null . Properties | Improve this Doc View Source ChannelId Gets the snowflake identifier of the voice channel the user connected to. Declaration public Snowflake? ChannelId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the voice channel the user connected to. | Improve this Doc View Source Client Declaration public IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient | Improve this Doc View Source GuildId Gets the snowflake identifier of the guild bound to. Declaration public Snowflake? GuildId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the guild bound to. | Improve this Doc View Source IsConnected Gets a value indicating whether the user the voice state is for is connected to a voice channel. Declaration public bool IsConnected { get; } Property Value Type Description Boolean a value indicating whether the user the voice state is for is connected to a voice channel. | Improve this Doc View Source IsDeafened Gets a value indicating whether the user the voice state is for is server / global deafened. Declaration public bool IsDeafened { get; } Property Value Type Description Boolean a value indicating whether the user the voice state is for is server / global deafened. | Improve this Doc View Source IsMuted Gets a value indicating whether the user the voice state is for is server / global muted. Declaration public bool IsMuted { get; } Property Value Type Description Boolean a value indicating whether the user the voice state is for is server / global muted. | Improve this Doc View Source IsSelfDeafened Gets a value indicating whether the user the voice state is for is local deafened. Declaration public bool IsSelfDeafened { get; } Property Value Type Description Boolean a value indicating whether the user the voice state is for is local deafened. | Improve this Doc View Source IsSelfMuted Gets a value indicating whether the user the voice state is for is local muted. Declaration public bool IsSelfMuted { get; } Property Value Type Description Boolean a value indicating whether the user the voice state is for is local muted. | Improve this Doc View Source IsStreaming Gets a value indicating whether the user the voice state is for is streaming. Declaration public bool IsStreaming { get; } Property Value Type Description Boolean a value indicating whether the user the voice state is for is streaming. | Improve this Doc View Source IsSuppressed Gets a value indicating whether the user the voice state is for is muted by the actual bot / user client. Declaration public bool IsSuppressed { get; } Property Value Type Description Boolean a value indicating whether the user the voice state is for is muted by the actual bot / user client. | Improve this Doc View Source Member Gets the member the voice state is for. Declaration public Member Member { get; } Property Value Type Description Member the member the voice state is for. | Improve this Doc View Source SessionId Gets the voice state session identifier. Declaration public string SessionId { get; } Property Value Type Description String the voice state session identifier. | Improve this Doc View Source UserId Gets the snowflake identifier of the user the voice state is for. Declaration public Snowflake UserId { get; } Property Value Type Description Snowflake the snowflake identifier of the user the voice state is for. Methods | Improve this Doc View Source GetVoiceChannelAsync(CacheBehavior, CancellationToken) Gets the voice channel asynchronously. Declaration public ValueTask<IVoiceChannel> GetVoiceChannelAsync(CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IVoiceChannel > a task that represents the asynchronous operation. The task result is the channel; or null if the user the voice state is from is not connected to a voice channel. | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IIdentifiable<Snowflake>.Id Declaration Snowflake IIdentifiable<Snowflake>.Id { get; } Returns Type Description Snowflake Implements IDiscordEntity IIdentifiable<TIdentifier>"
  },
  "api/Strade.Entities.Webhook.html": {
    "href": "api/Strade.Entities.Webhook.html",
    "title": "Class Webhook | Strade Developer Documentation",
    "keywords": "Class Webhook Represents a webhook object. Inheritance Object Webhook Implements ISnowflakeEntity IIdentifiable < Snowflake > IDiscordEntity IHasAvatar IUpdateable < WebhookModel > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class Webhook : ISnowflakeEntity, IIdentifiable<Snowflake>, IDiscordEntity, IHasAvatar, IUpdateable<WebhookModel> Remarks More details can be found on https://discord.com/developers/docs/resources/webhook#webhook-object-webhook-structure [external, Discord Developer Documentation]. Constructors | Improve this Doc View Source Webhook(IDiscordRestClient, WebhookModel) Initializes a new instance of the Webhook class. Declaration public Webhook(IDiscordRestClient client, WebhookModel model) Parameters Type Name Description IDiscordRestClient client the discord client. WebhookModel model the model that contains the data for the entity. Exceptions Type Condition ArgumentNullException thrown if the specified model is null . Properties | Improve this Doc View Source AvatarHash Declaration public string AvatarHash { get; } Property Value Type Description String | Improve this Doc View Source AvatarUrl Declaration public Uri AvatarUrl { get; } Property Value Type Description Uri | Improve this Doc View Source ChannelId Gets the snowflake identifier of the channel bound to. Declaration public Snowflake ChannelId { get; } Property Value Type Description Snowflake the snowflake identifier of the channel bound to. | Improve this Doc View Source Client Declaration public IDiscordRestClient Client { get; } Property Value Type Description IDiscordRestClient | Improve this Doc View Source GuildId Gets the snowflake identifier of the guild bound to. Declaration public Snowflake? GuildId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the guild bound to. | Improve this Doc View Source HasAvatar Declaration public bool HasAvatar { get; } Property Value Type Description Boolean | Improve this Doc View Source Id Gets the webhook identifier. Declaration public Snowflake Id { get; } Property Value Type Description Snowflake the webhook identifier. | Improve this Doc View Source Name Gets the name of the webhook. Declaration public string Name { get; } Property Value Type Description String the name of the webhook. | Improve this Doc View Source Token Gets the secure token of the webhook. Declaration public string Token { get; } Property Value Type Description String the secure token of the webhook. | Improve this Doc View Source Type Gets the type of the Webhook. Declaration public WebhookType Type { get; } Property Value Type Description WebhookType the type of the Webhook. | Improve this Doc View Source User Gets the user that created the webhook. Declaration public User User { get; } Property Value Type Description User the user that created the webhook. Methods | Improve this Doc View Source BuildAvatarUrl(ImageFormat, Nullable<Int32>) Declaration public Uri BuildAvatarUrl(ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description ImageFormat format Nullable < Int32 > size Returns Type Description Uri | Improve this Doc View Source BuildUrl(WebhookIntegrationType) Builds the Uri for pushing Webhook messages. Declaration public Uri BuildUrl(WebhookIntegrationType type = WebhookIntegrationType.None) Parameters Type Name Description WebhookIntegrationType type the type of the webhook integration to build the URI for. Returns Type Description Uri the Uri for pushing Webhook messages. | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IUpdateable<WebhookModel>.Update(WebhookModel) Declaration void IUpdateable<WebhookModel>.Update(WebhookModel model) Parameters Type Name Description WebhookModel model Implements ISnowflakeEntity IIdentifiable<TIdentifier> IDiscordEntity IHasAvatar IUpdateable<TModel>"
  },
  "api/Strade.Entities.WebhookCreationProperties.html": {
    "href": "api/Strade.Entities.WebhookCreationProperties.html",
    "title": "Class WebhookCreationProperties | Strade Developer Documentation",
    "keywords": "Class WebhookCreationProperties Inheritance Object WebhookCreationProperties Implements ICreationProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class WebhookCreationProperties : ICreationProperties Properties | Improve this Doc View Source DefaultAvatar Declaration [JsonPropertyName(\"avatar\")] public Optional<ImageData> DefaultAvatar { get; set; } Property Value Type Description Optional < ImageData > | Improve this Doc View Source Name Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Validate() Declaration public void Validate() Implements ICreationProperties"
  },
  "api/Strade.Entities.WebhookIntegrationType.html": {
    "href": "api/Strade.Entities.WebhookIntegrationType.html",
    "title": "Enum WebhookIntegrationType | Strade Developer Documentation",
    "keywords": "Enum WebhookIntegrationType A list of available webhook integration types. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public enum WebhookIntegrationType : byte Fields Name Description GitHub Denotes that the webhook URL pushes GitHub-compatible update content. None Denotes that the webhook URL pushes raw message content. Slack Denotes that the webhook URL pushes Slack-compatible update content. Extension Methods EnumExtensions.GetName<WebhookIntegrationType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.WebhookMessageCreationProperties.html": {
    "href": "api/Strade.Entities.WebhookMessageCreationProperties.html",
    "title": "Class WebhookMessageCreationProperties | Strade Developer Documentation",
    "keywords": "Class WebhookMessageCreationProperties The ICreationProperties for a webhook Strade.Entities.Message . Inheritance Object WebhookMessageCreationProperties Implements ICreationProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class WebhookMessageCreationProperties : ICreationProperties Properties | Improve this Doc View Source Content Gets or sets the message content. Declaration public Optional<string> Content { get; set; } Property Value Type Description Optional < String > | Improve this Doc View Source Embeds Gets or sets the embed messages attached to the message. Declaration public IReadOnlyList<EmbedMessage> Embeds { get; set; } Property Value Type Description IReadOnlyList < EmbedMessage > | Improve this Doc View Source File Gets or sets a stream to the file. Declaration public Optional<Stream> File { get; set; } Property Value Type Description Optional < Stream > | Improve this Doc View Source Filename Gets or sets the filename. Declaration public Optional<string> Filename { get; set; } Property Value Type Description Optional < String > | Improve this Doc View Source IsTextToSpeech Gets or sets a value indicating whether the message should be a TTS (Text-To-Speech) message. Declaration public Optional<bool> IsTextToSpeech { get; set; } Property Value Type Description Optional < Boolean > | Improve this Doc View Source Mentions Gets or sets the mention properties for the message. Declaration public Optional<MentionProperties> Mentions { get; set; } Property Value Type Description Optional < MentionProperties > the mention properties for the message. Methods | Improve this Doc View Source Validate() Validates the properties. Declaration public void Validate() Implements ICreationProperties"
  },
  "api/Strade.Entities.WebhookMessageModifyProperties.html": {
    "href": "api/Strade.Entities.WebhookMessageModifyProperties.html",
    "title": "Class WebhookMessageModifyProperties | Strade Developer Documentation",
    "keywords": "Class WebhookMessageModifyProperties The IModifyProperties for a webhook Strade.Entities.Message . Inheritance Object WebhookMessageModifyProperties Implements IModifyProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public class WebhookMessageModifyProperties : IModifyProperties Properties | Improve this Doc View Source Content Gets or sets the message content. Declaration [JsonPropertyName(\"content\")] public Optional<string> Content { get; set; } Property Value Type Description Optional < String > | Improve this Doc View Source Embeds Gets or sets the embed messages attached to the message. Declaration [JsonPropertyName(\"embeds\")] public Optional<IReadOnlyList<EmbedMessage>> Embeds { get; set; } Property Value Type Description Optional < IReadOnlyList < EmbedMessage >> | Improve this Doc View Source Mentions Gets or sets the mention properties for the message. Declaration [JsonPropertyName(\"allowed_mentions\")] public Optional<MentionProperties> Mentions { get; set; } Property Value Type Description Optional < MentionProperties > the mention properties for the message. Methods | Improve this Doc View Source Validate() Validates the properties. Declaration public void Validate() Implements IModifyProperties"
  },
  "api/Strade.Entities.WebhookModifyProperties.html": {
    "href": "api/Strade.Entities.WebhookModifyProperties.html",
    "title": "Class WebhookModifyProperties | Strade Developer Documentation",
    "keywords": "Class WebhookModifyProperties Inheritance Object WebhookModifyProperties Implements IModifyProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public sealed class WebhookModifyProperties : IModifyProperties Properties | Improve this Doc View Source ChannelId Declaration [JsonPropertyName(\"channel_id\")] public Optional<Snowflake> ChannelId { get; set; } Property Value Type Description Optional < Snowflake > | Improve this Doc View Source DefaultAvatar Declaration [JsonPropertyName(\"avatar\")] public Optional<ImageData> DefaultAvatar { get; set; } Property Value Type Description Optional < ImageData > | Improve this Doc View Source Name Declaration [JsonPropertyName(\"name\")] public Optional<string> Name { get; set; } Property Value Type Description Optional < String > Methods | Improve this Doc View Source Validate() Declaration public void Validate() Implements IModifyProperties"
  },
  "api/Strade.Entities.WebhookType.html": {
    "href": "api/Strade.Entities.WebhookType.html",
    "title": "Enum WebhookType | Strade Developer Documentation",
    "keywords": "Enum WebhookType A set of possible Webhook types. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax [JsonConverter(typeof(NumericEnumConverter<WebhookType>))] public enum WebhookType : byte Fields Name Description ChannelFollower Denotes that the webhook is a channel follower Webhook. Incoming Denotes that the webhook is an incoming webhook. Extension Methods EnumExtensions.GetName<WebhookType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Entities.WidgetStyle.html": {
    "href": "api/Strade.Entities.WidgetStyle.html",
    "title": "Enum WidgetStyle | Strade Developer Documentation",
    "keywords": "Enum WidgetStyle A set of available widget styles. Namespace : Strade.Entities Assembly : Strade.Rest.dll Syntax public enum WidgetStyle : byte Fields Name Description Banner1 Denotes that the widget should be in the banner1 widget style: Large image with guild icon, name and online count. \"POWERED BY DISCORD\" as the footer of the widget. Banner2 Denotes that the widget should be in the banner2 widget style: Smaller widget style with guild icon, name and online count. Split on the right with Discord logo. Banner3 Denotes that the widget should be in the banner3 widget style: Large image with guild icon, name and online count. In the footer, Discord logo on the left and \"Chat Now\" on the right. Banner4 Denotes that the widget should be in the banner4 widget style: Large Discord logo at the top of the widget. Guild icon, name and online count in the middle portion of the widget and a \"JOIN MY SERVER\" button at the bottom. Shield Denotes that the widget should be in the shield widget style: Shield style widget with Discord icon and guild members online count. Extension Methods EnumExtensions.GetName<WidgetStyle>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Events.AsyncEventExtensions.html": {
    "href": "api/Strade.Events.AsyncEventExtensions.html",
    "title": "Class AsyncEventExtensions | Strade Developer Documentation",
    "keywords": "Class AsyncEventExtensions Extension method for asynchronous events. Inheritance Object AsyncEventExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public static class AsyncEventExtensions Remarks See https://gist.github.com/angelobreuer/9007c5fd3b601df85a5bedb807cea35d for source. Methods | Improve this Doc View Source InvokeAsync(AsyncEventHandler, Object, EventArgs) Invokes an asynchronous event. Declaration public static Task InvokeAsync(this AsyncEventHandler eventHandler, object sender, EventArgs eventArgs = null) Parameters Type Name Description AsyncEventHandler eventHandler the asynchronous event handler. Object sender the object that is firing the event. EventArgs eventArgs the event parameters (if null then Empty is used). Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified sender is null . | Improve this Doc View Source InvokeAsync<T>(AsyncEventHandler<T>, Object, T) Invokes an asynchronous event. Declaration public static Task InvokeAsync<T>(this AsyncEventHandler<T> eventHandler, object sender, T eventArgs) Parameters Type Name Description AsyncEventHandler <T> eventHandler the asynchronous event handler. Object sender the object that is firing the event. T eventArgs the event parameters. Returns Type Description Task a task that represents the asynchronous operation. Type Parameters Name Description T the type of the event parameters. Exceptions Type Condition ArgumentNullException thrown if the specified sender is null ."
  },
  "api/Strade.Events.AsyncEventHandler.html": {
    "href": "api/Strade.Events.AsyncEventHandler.html",
    "title": "Delegate AsyncEventHandler | Strade Developer Documentation",
    "keywords": "Delegate AsyncEventHandler An asynchronous event handler. Namespace : Strade.Events Assembly : Strade.dll Syntax public delegate Task AsyncEventHandler(object sender, EventArgs eventArgs); Parameters Type Name Description Object sender the object that fired the event. EventArgs eventArgs the event arguments. Returns Type Description Task a task that represents the asynchronous operation. Remarks See https://gist.github.com/angelobreuer/9007c5fd3b601df85a5bedb807cea35d for source. Extension Methods AsyncEventExtensions.InvokeAsync(AsyncEventHandler, Object, EventArgs)"
  },
  "api/Strade.Events.AsyncEventHandler-1.html": {
    "href": "api/Strade.Events.AsyncEventHandler-1.html",
    "title": "Delegate AsyncEventHandler<T> | Strade Developer Documentation",
    "keywords": "Delegate AsyncEventHandler<T> An asynchronous event handler. Namespace : Strade.Events Assembly : Strade.dll Syntax public delegate Task AsyncEventHandler<in T>(object sender, T eventArgs); Parameters Type Name Description Object sender the object that fired the event. T eventArgs the event arguments. Returns Type Description Task a task that represents the asynchronous operation. Type Parameters Name Description T the type of the event arguments. Remarks See https://gist.github.com/angelobreuer/9007c5fd3b601df85a5bedb807cea35d for source. Extension Methods AsyncEventExtensions.InvokeAsync<T>(AsyncEventHandler<T>, Object, T)"
  },
  "api/Strade.Events.ChannelCreatedEventArgs.html": {
    "href": "api/Strade.Events.ChannelCreatedEventArgs.html",
    "title": "Class ChannelCreatedEventArgs | Strade Developer Documentation",
    "keywords": "Class ChannelCreatedEventArgs The event arguments ( EventArgs ) for the Channel Created event ( ChannelCreated ). Inheritance Object EventArgs ChannelCreatedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class ChannelCreatedEventArgs : EventArgs Remarks The event is dispatched when a channel visible to the user / bot was created. Constructors | Improve this Doc View Source ChannelCreatedEventArgs(IChannel) Initializes a new instance of the ChannelCreatedEventArgs class. Declaration public ChannelCreatedEventArgs(IChannel channel) Parameters Type Name Description IChannel channel the channel that was created. Exceptions Type Condition ArgumentNullException thrown if the specified channel is null . Properties | Improve this Doc View Source Channel Declaration public IChannel Channel { get; } Property Value Type Description IChannel See Also ChannelCreated"
  },
  "api/Strade.Events.ChannelDeletedEventArgs.html": {
    "href": "api/Strade.Events.ChannelDeletedEventArgs.html",
    "title": "Class ChannelDeletedEventArgs | Strade Developer Documentation",
    "keywords": "Class ChannelDeletedEventArgs The event arguments ( EventArgs ) for the Channel Deleted event ( ChannelDeleted ). Inheritance Object EventArgs ChannelDeletedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class ChannelDeletedEventArgs : EventArgs Remarks The event is dispatched when a channel visible to the user / bot was deleted. Constructors | Improve this Doc View Source ChannelDeletedEventArgs(DeletedEntity<Snowflake, IChannel>, ICacheable<Snowflake, Guild>) Initializes a new instance of the ChannelDeletedEventArgs class. Declaration public ChannelDeletedEventArgs(DeletedEntity<Snowflake, IChannel> channel, ICacheable<Snowflake, Guild> guild) Parameters Type Name Description DeletedEntity < Snowflake , IChannel > channel the channel that was deleted. ICacheable < Snowflake , Guild > guild the guild the entity is bound to. Exceptions Type Condition ArgumentNullException thrown if the specified channel is null . Properties | Improve this Doc View Source Channel Declaration public DeletedEntity<Snowflake, IChannel> Channel { get; } Property Value Type Description DeletedEntity < Snowflake , IChannel > | Improve this Doc View Source Guild Declaration public ICacheable<Snowflake, Guild> Guild { get; } Property Value Type Description ICacheable < Snowflake , Guild > See Also ChannelDeleted"
  },
  "api/Strade.Events.ChannelPinsUpdatedEventArgs.html": {
    "href": "api/Strade.Events.ChannelPinsUpdatedEventArgs.html",
    "title": "Class ChannelPinsUpdatedEventArgs | Strade Developer Documentation",
    "keywords": "Class ChannelPinsUpdatedEventArgs The event arguments ( EventArgs ) for the Channel Deleted event ( ChannelPinsUpdated ). Inheritance Object EventArgs ChannelPinsUpdatedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class ChannelPinsUpdatedEventArgs : EventArgs Remarks The event is dispatched when the message pins in a channel visible to the user / bot were updated. Constructors | Improve this Doc View Source ChannelPinsUpdatedEventArgs(ICacheable<Snowflake, IChannel>) Initializes a new instance of the ChannelPinsUpdatedEventArgs class. Declaration public ChannelPinsUpdatedEventArgs(ICacheable<Snowflake, IChannel> channel) Parameters Type Name Description ICacheable < Snowflake , IChannel > channel the channel in which the message pins were updated. Exceptions Type Condition ArgumentNullException thrown if the specified channel is null . Properties | Improve this Doc View Source Channel Declaration public ICacheable<Snowflake, IChannel> Channel { get; } Property Value Type Description ICacheable < Snowflake , IChannel > See Also ChannelPinsUpdated"
  },
  "api/Strade.Events.ChannelUpdatedEventArgs.html": {
    "href": "api/Strade.Events.ChannelUpdatedEventArgs.html",
    "title": "Class ChannelUpdatedEventArgs | Strade Developer Documentation",
    "keywords": "Class ChannelUpdatedEventArgs The event arguments ( EventArgs ) for the Channel Updated event ( ChannelUpdated ). Inheritance Object EventArgs ChannelUpdatedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class ChannelUpdatedEventArgs : EventArgs Remarks The event is dispatched when a channel visible to the user / bot was updated. Constructors | Improve this Doc View Source ChannelUpdatedEventArgs(IChannel) Initializes a new instance of the ChannelUpdatedEventArgs class. Declaration public ChannelUpdatedEventArgs(IChannel channel) Parameters Type Name Description IChannel channel the channel that was updated. Exceptions Type Condition ArgumentNullException thrown if the specified channel is null . Properties | Improve this Doc View Source Channel Declaration public IChannel Channel { get; } Property Value Type Description IChannel See Also ChannelUpdated"
  },
  "api/Strade.Events.ConnectionClosedEventArgs.html": {
    "href": "api/Strade.Events.ConnectionClosedEventArgs.html",
    "title": "Class ConnectionClosedEventArgs | Strade Developer Documentation",
    "keywords": "Class ConnectionClosedEventArgs Inheritance Object EventArgs ConnectionClosedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class ConnectionClosedEventArgs : EventArgs Constructors | Improve this Doc View Source ConnectionClosedEventArgs(GatewayConnection, GatewayCloseCode, String, Boolean) Declaration public ConnectionClosedEventArgs(GatewayConnection connection, GatewayCloseCode closeCode, string statusDescription, bool byRemote = false) Parameters Type Name Description GatewayConnection connection GatewayCloseCode closeCode String statusDescription Boolean byRemote Properties | Improve this Doc View Source ByRemote Declaration public bool ByRemote { get; } Property Value Type Description Boolean | Improve this Doc View Source CloseCode Declaration public GatewayCloseCode CloseCode { get; } Property Value Type Description GatewayCloseCode | Improve this Doc View Source Connection Declaration public GatewayConnection Connection { get; } Property Value Type Description GatewayConnection | Improve this Doc View Source StatusDescription Declaration public string StatusDescription { get; } Property Value Type Description String"
  },
  "api/Strade.Events.ConnectionReadyEventArgs.html": {
    "href": "api/Strade.Events.ConnectionReadyEventArgs.html",
    "title": "Class ConnectionReadyEventArgs | Strade Developer Documentation",
    "keywords": "Class ConnectionReadyEventArgs Inheritance Object EventArgs ConnectionReadyEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class ConnectionReadyEventArgs : EventArgs Constructors | Improve this Doc View Source ConnectionReadyEventArgs(GatewayConnection, UserModel, IReadOnlyList<Snowflake>, String, ShardingInformation) Declaration public ConnectionReadyEventArgs(GatewayConnection connection, UserModel user, IReadOnlyList<Snowflake> guilds, string sessionId, ShardingInformation shardingInformation) Parameters Type Name Description GatewayConnection connection UserModel user IReadOnlyList < Snowflake > guilds String sessionId ShardingInformation shardingInformation Properties | Improve this Doc View Source Connection Declaration public GatewayConnection Connection { get; } Property Value Type Description GatewayConnection | Improve this Doc View Source Guilds Declaration public IReadOnlyList<Snowflake> Guilds { get; } Property Value Type Description IReadOnlyList < Snowflake > | Improve this Doc View Source SessionId Declaration public string SessionId { get; } Property Value Type Description String | Improve this Doc View Source ShardingInformation Declaration public ShardingInformation ShardingInformation { get; } Property Value Type Description ShardingInformation | Improve this Doc View Source User Declaration public UserModel User { get; } Property Value Type Description UserModel"
  },
  "api/Strade.Events.CurrentUserUpdatedEventArgs.html": {
    "href": "api/Strade.Events.CurrentUserUpdatedEventArgs.html",
    "title": "Class CurrentUserUpdatedEventArgs | Strade Developer Documentation",
    "keywords": "Class CurrentUserUpdatedEventArgs The event arguments ( EventArgs ) for the Current User Updated event ( CurrentUserUpdated ). Inheritance Object EventArgs CurrentUserUpdatedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class CurrentUserUpdatedEventArgs : EventArgs Remarks The event is dispatched when the current user was updated. Constructors | Improve this Doc View Source CurrentUserUpdatedEventArgs(CurrentUser) Initializes a new instance of the CurrentUserUpdatedEventArgs class. Declaration public CurrentUserUpdatedEventArgs(CurrentUser user) Parameters Type Name Description CurrentUser user the updated user. Exceptions Type Condition ArgumentNullException thrown if the specified user is null . Properties | Improve this Doc View Source User Gets the updated user. Declaration public CurrentUser User { get; } Property Value Type Description CurrentUser the updated user. See Also CurrentUserUpdated"
  },
  "api/Strade.Events.EmoteReactionsClearedEventArgs.html": {
    "href": "api/Strade.Events.EmoteReactionsClearedEventArgs.html",
    "title": "Class EmoteReactionsClearedEventArgs | Strade Developer Documentation",
    "keywords": "Class EmoteReactionsClearedEventArgs The event arguments ( EventArgs ) for the Emote Reactions Cleared event ( EmoteReactionsCleared ). Inheritance Object EventArgs EmoteReactionsClearedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class EmoteReactionsClearedEventArgs : EventArgs Remarks The event is dispatched when the current user was updated. Constructors | Improve this Doc View Source EmoteReactionsClearedEventArgs(ICacheable<Snowflake, IChannel>, ICacheable<Snowflake, IMessage>, IEmote, ICacheable<Snowflake, Guild>) Declaration public EmoteReactionsClearedEventArgs(ICacheable<Snowflake, IChannel> channel, ICacheable<Snowflake, IMessage> message, IEmote emote, ICacheable<Snowflake, Guild> guild = null) Parameters Type Name Description ICacheable < Snowflake , IChannel > channel ICacheable < Snowflake , IMessage > message IEmote emote ICacheable < Snowflake , Guild > guild Properties | Improve this Doc View Source Channel Declaration public ICacheable<Snowflake, IChannel> Channel { get; } Property Value Type Description ICacheable < Snowflake , IChannel > | Improve this Doc View Source Emote Declaration public IEmote Emote { get; } Property Value Type Description IEmote | Improve this Doc View Source Guild Declaration public ICacheable<Snowflake, Guild> Guild { get; } Property Value Type Description ICacheable < Snowflake , Guild > | Improve this Doc View Source Message Declaration public ICacheable<Snowflake, IMessage> Message { get; } Property Value Type Description ICacheable < Snowflake , IMessage > See Also EmoteReactionsCleared"
  },
  "api/Strade.Events.EventDispatchInformation.html": {
    "href": "api/Strade.Events.EventDispatchInformation.html",
    "title": "Struct EventDispatchInformation | Strade Developer Documentation",
    "keywords": "Struct EventDispatchInformation Implements IEquatable < EventDispatchInformation > Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Events Assembly : Strade.dll Syntax public struct EventDispatchInformation : IEquatable<EventDispatchInformation> Constructors | Improve this Doc View Source EventDispatchInformation(Delegate, Object, EventArgs) Initializes a new instance of the EventDispatchInformation struct. Declaration public EventDispatchInformation(Delegate target, object sender, EventArgs eventArgs) Parameters Type Name Description Delegate target the target delegate to invoke the event on. the first parameter of the delegate is the sender. The second parameter are the event arguments. The return type of the delegate must be Task or any derivation of the Task class. Object sender the sender of the event to dispatch as; or null to dispatch the event as the event queue. EventArgs eventArgs the event arguments. Properties | Improve this Doc View Source EventArgs Gets the event arguments. Declaration public EventArgs EventArgs { get; } Property Value Type Description EventArgs the event arguments. | Improve this Doc View Source Sender Gets the sender of the event to dispatch as; or null to dispatch the event as the event queue.. Declaration public object Sender { get; } Property Value Type Description Object the sender of the event to dispatch as; or null to dispatch the event as the event queue.. | Improve this Doc View Source Target Gets the target delegate to invoke the event on. Declaration public Delegate Target { get; } Property Value Type Description Delegate the target delegate to invoke the event on. Remarks The first parameter of the delegate is the sender. The second parameter are the event arguments. Methods | Improve this Doc View Source Equals(EventDispatchInformation) Declaration public bool Equals(EventDispatchInformation other) Parameters Type Name Description EventDispatchInformation other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(EventDispatchInformation, EventDispatchInformation) Declaration public static bool operator ==(EventDispatchInformation left, EventDispatchInformation right) Parameters Type Name Description EventDispatchInformation left EventDispatchInformation right Returns Type Description Boolean | Improve this Doc View Source Inequality(EventDispatchInformation, EventDispatchInformation) Declaration public static bool operator !=(EventDispatchInformation left, EventDispatchInformation right) Parameters Type Name Description EventDispatchInformation left EventDispatchInformation right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Events.EventQueue.html": {
    "href": "api/Strade.Events.EventQueue.html",
    "title": "Class EventQueue | Strade Developer Documentation",
    "keywords": "Class EventQueue Inheritance Object EventQueueBase EventQueue Implements IEventQueue IDisposable IAsyncDisposable Inherited Members EventQueueBase.Dispose() EventQueueBase.DisposeAsync() EventQueueBase.Enqueue(Delegate, Object, EventArgs) EventQueueBase.EnqueueAsync<T>(AsyncEventHandler<T>, Object, T) EventQueueBase.EnqueueAsync(AsyncEventHandler, Object, EventArgs) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public class EventQueue : EventQueueBase, IEventQueue, IDisposable, IAsyncDisposable Constructors | Improve this Doc View Source EventQueue(TimeSpan, Int32, ILogger) Declaration public EventQueue(TimeSpan timeout, int workerCount = 1, ILogger logger = null) Parameters Type Name Description TimeSpan timeout Int32 workerCount ILogger logger Properties | Improve this Doc View Source ActiveWorkers Declaration public int ActiveWorkers { get; } Property Value Type Description Int32 | Improve this Doc View Source Pending Declaration public int Pending { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides EventQueueBase.Dispose(Boolean) | Improve this Doc View Source DisposeAsyncCore() Declaration protected override ValueTask DisposeAsyncCore() Returns Type Description ValueTask Overrides EventQueueBase.DisposeAsyncCore() | Improve this Doc View Source Enqueue(EventDispatchInformation) Declaration public override ValueTask Enqueue(EventDispatchInformation dispatchInformation) Parameters Type Name Description EventDispatchInformation dispatchInformation Returns Type Description ValueTask Overrides EventQueueBase.Enqueue(EventDispatchInformation) | Improve this Doc View Source FlushAsync(CancellationToken) Declaration public override ValueTask FlushAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask Overrides EventQueueBase.FlushAsync(CancellationToken) Implements IEventQueue System.IDisposable System.IAsyncDisposable"
  },
  "api/Strade.Events.EventQueueBase.html": {
    "href": "api/Strade.Events.EventQueueBase.html",
    "title": "Class EventQueueBase | Strade Developer Documentation",
    "keywords": "Class EventQueueBase Inheritance Object EventQueueBase EventQueue Implements IEventQueue IDisposable IAsyncDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public abstract class EventQueueBase : IEventQueue, IDisposable, IAsyncDisposable Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source DisposeAsync() Declaration public ValueTask DisposeAsync() Returns Type Description ValueTask | Improve this Doc View Source DisposeAsyncCore() Declaration protected virtual ValueTask DisposeAsyncCore() Returns Type Description ValueTask | Improve this Doc View Source Enqueue(EventDispatchInformation) Declaration public abstract ValueTask Enqueue(EventDispatchInformation dispatchInformation) Parameters Type Name Description EventDispatchInformation dispatchInformation Returns Type Description ValueTask | Improve this Doc View Source Enqueue(Delegate, Object, EventArgs) Declaration public ValueTask Enqueue(Delegate target, object sender, EventArgs eventArgs) Parameters Type Name Description Delegate target Object sender EventArgs eventArgs Returns Type Description ValueTask | Improve this Doc View Source EnqueueAsync(AsyncEventHandler, Object, EventArgs) Declaration public ValueTask EnqueueAsync(AsyncEventHandler eventHandler, object sender, EventArgs eventArgs) Parameters Type Name Description AsyncEventHandler eventHandler Object sender EventArgs eventArgs Returns Type Description ValueTask | Improve this Doc View Source EnqueueAsync<T>(AsyncEventHandler<T>, Object, T) Declaration public ValueTask EnqueueAsync<T>(AsyncEventHandler<T> eventHandler, object sender, T eventArgs) where T : EventArgs Parameters Type Name Description AsyncEventHandler <T> eventHandler Object sender T eventArgs Returns Type Description ValueTask Type Parameters Name Description T | Improve this Doc View Source FlushAsync(CancellationToken) Declaration public abstract ValueTask FlushAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask Implements IEventQueue System.IDisposable System.IAsyncDisposable"
  },
  "api/Strade.Events.GuildCreatedEventArgs.html": {
    "href": "api/Strade.Events.GuildCreatedEventArgs.html",
    "title": "Class GuildCreatedEventArgs | Strade Developer Documentation",
    "keywords": "Class GuildCreatedEventArgs The event arguments ( EventArgs ) for the Guild Created event ( GuildCreated ). Inheritance Object EventArgs GuildCreatedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class GuildCreatedEventArgs : EventArgs Remarks The event is dispatched when a guild visible to the user / bot was created. Constructors | Improve this Doc View Source GuildCreatedEventArgs(Guild) Initializes a new instance of the GuildCreatedEventArgs class. Declaration public GuildCreatedEventArgs(Guild guild) Parameters Type Name Description Guild guild the guild that was created. Exceptions Type Condition ArgumentNullException thrown if the specified guild is null . Properties | Improve this Doc View Source Guild Declaration public Guild Guild { get; } Property Value Type Description Guild See Also GuildCreated"
  },
  "api/Strade.Events.GuildDeletedEventArgs.html": {
    "href": "api/Strade.Events.GuildDeletedEventArgs.html",
    "title": "Class GuildDeletedEventArgs | Strade Developer Documentation",
    "keywords": "Class GuildDeletedEventArgs The event arguments ( EventArgs ) for the Guild Deleted event ( GuildDeleted ). Inheritance Object EventArgs GuildDeletedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class GuildDeletedEventArgs : EventArgs Remarks The event is dispatched when a guild visible to the user / bot was deleted or the bot / user was removed from the guild. Constructors | Improve this Doc View Source GuildDeletedEventArgs(DeletedEntity<Snowflake, Guild>, Boolean) Initializes a new instance of the GuildDeletedEventArgs class. Declaration public GuildDeletedEventArgs(DeletedEntity<Snowflake, Guild> guild, bool wasRemoved = false) Parameters Type Name Description DeletedEntity < Snowflake , Guild > guild the guild deleted. Boolean wasRemoved a value indicating whether the user / bot was removed from the guild; if false the guild was deleted; if true the user / bot was removed from the guild. Exceptions Type Condition ArgumentNullException thrown if the specified guild is null . Properties | Improve this Doc View Source Guild Declaration public DeletedEntity<Snowflake, Guild> Guild { get; } Property Value Type Description DeletedEntity < Snowflake , Guild > | Improve this Doc View Source WasRemoved Gets a value indicating whether the user / bot was removed from the guild; if false the guild was deleted; if true the user / bot was removed from the guild. Declaration public bool WasRemoved { get; } Property Value Type Description Boolean a value indicating whether the user / bot was removed from the guild; if false the guild was deleted; if true the user / bot was removed from the guild. See Also GuildDeleted"
  },
  "api/Strade.Events.GuildEmotesUpdatedEventArgs.html": {
    "href": "api/Strade.Events.GuildEmotesUpdatedEventArgs.html",
    "title": "Class GuildEmotesUpdatedEventArgs | Strade Developer Documentation",
    "keywords": "Class GuildEmotesUpdatedEventArgs The event arguments ( EventArgs ) for the Guild Emotes Updated event ( GuildEmotesUpdated ). Inheritance Object EventArgs GuildEmotesUpdatedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class GuildEmotesUpdatedEventArgs : EventArgs Remarks The event is dispatched when the emotes of a guild visible to the user / bot were updated. Constructors | Improve this Doc View Source GuildEmotesUpdatedEventArgs(ICacheable<Snowflake, Guild>, IReadOnlyList<GuildEmote>) Initializes a new instance of the GuildEmotesUpdatedEventArgs class. Declaration public GuildEmotesUpdatedEventArgs(ICacheable<Snowflake, Guild> guild, IReadOnlyList<GuildEmote> emotes) Parameters Type Name Description ICacheable < Snowflake , Guild > guild the affected guild. IReadOnlyList < GuildEmote > emotes the new guild emotes. Exceptions Type Condition ArgumentNullException thrown if the specified guild is null . ArgumentNullException thrown if the specified emotes is null . Properties | Improve this Doc View Source Emotes Gets the new guild emotes. Declaration public IReadOnlyList<GuildEmote> Emotes { get; } Property Value Type Description IReadOnlyList < GuildEmote > a list containing the new guild emotes. | Improve this Doc View Source Guild Declaration public ICacheable<Snowflake, Guild> Guild { get; } Property Value Type Description ICacheable < Snowflake , Guild > See Also GuildEmotesUpdated"
  },
  "api/Strade.Events.GuildIntegrationsUpdatedEventArgs.html": {
    "href": "api/Strade.Events.GuildIntegrationsUpdatedEventArgs.html",
    "title": "Class GuildIntegrationsUpdatedEventArgs | Strade Developer Documentation",
    "keywords": "Class GuildIntegrationsUpdatedEventArgs The event arguments ( EventArgs ) for the Guild Integrations Updated event ( GuildIntegrationsUpdated ). Inheritance Object EventArgs GuildIntegrationsUpdatedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class GuildIntegrationsUpdatedEventArgs : EventArgs Remarks The event is dispatched when the integrations of a guild visible to the user / bot were updated. Constructors | Improve this Doc View Source GuildIntegrationsUpdatedEventArgs(ICacheable<Snowflake, Guild>) Initializes a new instance of the GuildIntegrationsUpdatedEventArgs class. Declaration public GuildIntegrationsUpdatedEventArgs(ICacheable<Snowflake, Guild> guild) Parameters Type Name Description ICacheable < Snowflake , Guild > guild the guild affected. Exceptions Type Condition ArgumentNullException thrown if the specified guild is null . Properties | Improve this Doc View Source Guild Declaration public ICacheable<Snowflake, Guild> Guild { get; } Property Value Type Description ICacheable < Snowflake , Guild > See Also GuildIntegrationsUpdated"
  },
  "api/Strade.Events.GuildUpdatedEventArgs.html": {
    "href": "api/Strade.Events.GuildUpdatedEventArgs.html",
    "title": "Class GuildUpdatedEventArgs | Strade Developer Documentation",
    "keywords": "Class GuildUpdatedEventArgs The event arguments ( EventArgs ) for the Guild Updated event ( GuildUpdated ). Inheritance Object EventArgs GuildUpdatedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class GuildUpdatedEventArgs : EventArgs Remarks The event is dispatched when a guild visible to the user / bot was updated. Constructors | Improve this Doc View Source GuildUpdatedEventArgs(Guild) Initializes a new instance of the GuildUpdatedEventArgs class. Declaration public GuildUpdatedEventArgs(Guild guild) Parameters Type Name Description Guild guild the guild updated. Exceptions Type Condition ArgumentNullException thrown if the specified guild is null . Properties | Improve this Doc View Source Guild Declaration public Guild Guild { get; } Property Value Type Description Guild See Also GuildUpdated"
  },
  "api/Strade.Events.html": {
    "href": "api/Strade.Events.html",
    "title": "Namespace Strade.Events | Strade Developer Documentation",
    "keywords": "Namespace Strade.Events Classes AsyncEventExtensions Extension method for asynchronous events. ChannelCreatedEventArgs The event arguments ( EventArgs ) for the Channel Created event ( ChannelCreated ). ChannelDeletedEventArgs The event arguments ( EventArgs ) for the Channel Deleted event ( ChannelDeleted ). ChannelPinsUpdatedEventArgs The event arguments ( EventArgs ) for the Channel Deleted event ( ChannelPinsUpdated ). ChannelUpdatedEventArgs The event arguments ( EventArgs ) for the Channel Updated event ( ChannelUpdated ). ConnectionClosedEventArgs ConnectionReadyEventArgs CurrentUserUpdatedEventArgs The event arguments ( EventArgs ) for the Current User Updated event ( CurrentUserUpdated ). EmoteReactionsClearedEventArgs The event arguments ( EventArgs ) for the Emote Reactions Cleared event ( EmoteReactionsCleared ). EventQueue EventQueueBase GuildCreatedEventArgs The event arguments ( EventArgs ) for the Guild Created event ( GuildCreated ). GuildDeletedEventArgs The event arguments ( EventArgs ) for the Guild Deleted event ( GuildDeleted ). GuildEmotesUpdatedEventArgs The event arguments ( EventArgs ) for the Guild Emotes Updated event ( GuildEmotesUpdated ). GuildIntegrationsUpdatedEventArgs The event arguments ( EventArgs ) for the Guild Integrations Updated event ( GuildIntegrationsUpdated ). GuildUpdatedEventArgs The event arguments ( EventArgs ) for the Guild Updated event ( GuildUpdated ). InteractionCreatedEventArgs InviteCreatedEventArgs InviteDeletedEventArgs LatencyUpdatedEventArgs The event arguments ( EventArgs ) for the Latency Updated event ( LatencyUpdated ). MemberBannedEventArgs The event arguments ( EventArgs ) for the Member Banned event ( MemberBanned ). MemberJoinedEventArgs The event arguments ( EventArgs ) for the Member Joined event ( MemberJoined ). MemberRemovedEventArgs The event arguments ( EventArgs ) for the Member Removed event ( MemberRemoved ). MemberUnbannedEventArgs The event arguments ( EventArgs ) for the Member Unbanned event ( MemberUnbanned ). MemberUpdatedEventArgs The event arguments ( EventArgs ) for the Member Updated event ( MemberUpdated ). MessageDeletedEventArgs The event arguments ( EventArgs ) for the Message Deleted event ( MessageDeleted ). MessageReceivedEventArgs The event arguments ( EventArgs ) for the Message Received event ( MessageReceived ). MessageUpdatedEventArgs The event arguments ( EventArgs ) for the Message Updated event ( MessageUpdated ). PresenceUpdatedEventArgs The event arguments ( EventArgs ) for the Presence Updated event ( PresenceUpdated ). ReactionAddedEventArgs The event arguments ( EventArgs ) for the Reaction Added event ( ReactionAdded ). ReactionRemovedEventArgs The event arguments ( EventArgs ) for the Reaction Removed event ( ReactionRemoved ). ReactionsClearedEventArgs The event arguments ( EventArgs ) for the ReactionsCleared event. RoleCreatedEventArgs The event arguments ( EventArgs ) for the Role Created event ( RoleCreated ). RoleDeletedEventArgs The event arguments ( EventArgs ) for the Role Deleted event ( RoleDeleted ). RoleUpdatedEventArgs The event arguments ( EventArgs ) for the Role Updated event ( RoleUpdated ). TypingStartEventArgs The event arguments ( EventArgs ) for the Typing Start event ( TypingStart ). VoiceServerUpdatedEventArgs The event arguments ( EventArgs ) for the Voice Server Updated event ( VoiceServerUpdated ). VoiceStateUpdatedEventArgs The event arguments ( EventArgs ) for the Voice State Updated event ( VoiceStateUpdated ). WebhooksUpdatedEventArgs The event arguments ( EventArgs ) for the Webhooks Updated event ( WebhooksUpdated ). Structs EventDispatchInformation MessageBulkDeletionInformation Interfaces IEventQueue Delegates AsyncEventHandler An asynchronous event handler. AsyncEventHandler<T> An asynchronous event handler."
  },
  "api/Strade.Events.IEventQueue.html": {
    "href": "api/Strade.Events.IEventQueue.html",
    "title": "Interface IEventQueue | Strade Developer Documentation",
    "keywords": "Interface IEventQueue Inherited Members IDisposable.Dispose() IAsyncDisposable.DisposeAsync() Namespace : Strade.Events Assembly : Strade.dll Syntax public interface IEventQueue : IDisposable, IAsyncDisposable Methods | Improve this Doc View Source EnqueueAsync(AsyncEventHandler, Object, EventArgs) Declaration ValueTask EnqueueAsync(AsyncEventHandler eventHandler, object sender, EventArgs eventArgs) Parameters Type Name Description AsyncEventHandler eventHandler Object sender EventArgs eventArgs Returns Type Description ValueTask | Improve this Doc View Source EnqueueAsync<T>(AsyncEventHandler<T>, Object, T) Declaration ValueTask EnqueueAsync<T>(AsyncEventHandler<T> eventHandler, object sender, T eventArgs) where T : EventArgs Parameters Type Name Description AsyncEventHandler <T> eventHandler Object sender T eventArgs Returns Type Description ValueTask Type Parameters Name Description T | Improve this Doc View Source FlushAsync(CancellationToken) Declaration ValueTask FlushAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask"
  },
  "api/Strade.Events.InteractionCreatedEventArgs.html": {
    "href": "api/Strade.Events.InteractionCreatedEventArgs.html",
    "title": "Class InteractionCreatedEventArgs | Strade Developer Documentation",
    "keywords": "Class InteractionCreatedEventArgs Inheritance Object EventArgs InteractionCreatedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class InteractionCreatedEventArgs : EventArgs Constructors | Improve this Doc View Source InteractionCreatedEventArgs(Interaction) Declaration public InteractionCreatedEventArgs(Interaction interaction) Parameters Type Name Description Interaction interaction Properties | Improve this Doc View Source Interaction Declaration public Interaction Interaction { get; } Property Value Type Description Interaction"
  },
  "api/Strade.Events.InviteCreatedEventArgs.html": {
    "href": "api/Strade.Events.InviteCreatedEventArgs.html",
    "title": "Class InviteCreatedEventArgs | Strade Developer Documentation",
    "keywords": "Class InviteCreatedEventArgs Inheritance Object EventArgs InviteCreatedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class InviteCreatedEventArgs : EventArgs Constructors | Improve this Doc View Source InviteCreatedEventArgs(ICacheable<Snowflake, IChannel>, InviteInformation, ICacheable<Snowflake, Guild>) Declaration public InviteCreatedEventArgs(ICacheable<Snowflake, IChannel> channel, InviteInformation invite, ICacheable<Snowflake, Guild> guild = null) Parameters Type Name Description ICacheable < Snowflake , IChannel > channel InviteInformation invite ICacheable < Snowflake , Guild > guild Properties | Improve this Doc View Source Channel Declaration public ICacheable<Snowflake, IChannel> Channel { get; } Property Value Type Description ICacheable < Snowflake , IChannel > | Improve this Doc View Source Guild Declaration public ICacheable<Snowflake, Guild> Guild { get; } Property Value Type Description ICacheable < Snowflake , Guild > | Improve this Doc View Source Invite Declaration public InviteInformation Invite { get; } Property Value Type Description InviteInformation"
  },
  "api/Strade.Events.InviteDeletedEventArgs.html": {
    "href": "api/Strade.Events.InviteDeletedEventArgs.html",
    "title": "Class InviteDeletedEventArgs | Strade Developer Documentation",
    "keywords": "Class InviteDeletedEventArgs Inheritance Object EventArgs InviteDeletedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class InviteDeletedEventArgs : EventArgs Constructors | Improve this Doc View Source InviteDeletedEventArgs(ICacheable<Snowflake, IChannel>, String, ICacheable<Snowflake, Guild>) Declaration public InviteDeletedEventArgs(ICacheable<Snowflake, IChannel> channel, string code, ICacheable<Snowflake, Guild> guild = null) Parameters Type Name Description ICacheable < Snowflake , IChannel > channel String code ICacheable < Snowflake , Guild > guild Properties | Improve this Doc View Source Channel Declaration public ICacheable<Snowflake, IChannel> Channel { get; } Property Value Type Description ICacheable < Snowflake , IChannel > | Improve this Doc View Source Code Declaration public string Code { get; } Property Value Type Description String | Improve this Doc View Source Guild Declaration public ICacheable<Snowflake, Guild> Guild { get; } Property Value Type Description ICacheable < Snowflake , Guild >"
  },
  "api/Strade.Events.LatencyUpdatedEventArgs.html": {
    "href": "api/Strade.Events.LatencyUpdatedEventArgs.html",
    "title": "Class LatencyUpdatedEventArgs | Strade Developer Documentation",
    "keywords": "Class LatencyUpdatedEventArgs The event arguments ( EventArgs ) for the Latency Updated event ( LatencyUpdated ). Inheritance Object EventArgs LatencyUpdatedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class LatencyUpdatedEventArgs : EventArgs Remarks The event is dispatched when the client's latency was updated. Constructors | Improve this Doc View Source LatencyUpdatedEventArgs(GatewayConnection, Nullable<TimeSpan>, TimeSpan) Initializes a new instance of the LatencyUpdatedEventArgs class. Declaration public LatencyUpdatedEventArgs(GatewayConnection connection, TimeSpan? oldLatency, TimeSpan latency) Parameters Type Name Description GatewayConnection connection Nullable < TimeSpan > oldLatency the old latency. TimeSpan latency the new latency. Properties | Improve this Doc View Source Connection Declaration public GatewayConnection Connection { get; } Property Value Type Description GatewayConnection | Improve this Doc View Source Latency Gets the new latency. Declaration public TimeSpan Latency { get; } Property Value Type Description TimeSpan the new latency. | Improve this Doc View Source OldLatency Gets the old latency. Declaration public TimeSpan? OldLatency { get; } Property Value Type Description Nullable < TimeSpan > the old latency."
  },
  "api/Strade.Events.MemberBannedEventArgs.html": {
    "href": "api/Strade.Events.MemberBannedEventArgs.html",
    "title": "Class MemberBannedEventArgs | Strade Developer Documentation",
    "keywords": "Class MemberBannedEventArgs The event arguments ( EventArgs ) for the Member Banned event ( MemberBanned ). Inheritance Object EventArgs MemberBannedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class MemberBannedEventArgs : EventArgs Remarks The event is dispatched when a member was banned in a guild visible to the user / bot. Constructors | Improve this Doc View Source MemberBannedEventArgs(ICacheable<Snowflake, Guild>, User) Initializes a new instance of the MemberBannedEventArgs class. Declaration public MemberBannedEventArgs(ICacheable<Snowflake, Guild> guild, User user) Parameters Type Name Description ICacheable < Snowflake , Guild > guild the guild the user was banned / unbanned in. User user the user that was banned / unbanned. Exceptions Type Condition ArgumentNullException thrown if the specified guild is null . ArgumentNullException thrown if the specified user is null . Properties | Improve this Doc View Source Guild Declaration public ICacheable<Snowflake, Guild> Guild { get; } Property Value Type Description ICacheable < Snowflake , Guild > | Improve this Doc View Source User Declaration public User User { get; } Property Value Type Description User See Also MemberBanned"
  },
  "api/Strade.Events.MemberJoinedEventArgs.html": {
    "href": "api/Strade.Events.MemberJoinedEventArgs.html",
    "title": "Class MemberJoinedEventArgs | Strade Developer Documentation",
    "keywords": "Class MemberJoinedEventArgs The event arguments ( EventArgs ) for the Member Joined event ( MemberJoined ). Inheritance Object EventArgs MemberJoinedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class MemberJoinedEventArgs : EventArgs Remarks The event is dispatched when a member joined a guild visible to the user / bot. Constructors | Improve this Doc View Source MemberJoinedEventArgs(Member, ICacheable<Snowflake, Guild>) Initializes a new instance of the MemberJoinedEventArgs class. Declaration public MemberJoinedEventArgs(Member member, ICacheable<Snowflake, Guild> guild) Parameters Type Name Description Member member the guild member. ICacheable < Snowflake , Guild > guild the guild. Exceptions Type Condition ArgumentNullException thrown if the specified guild is null . ArgumentNullException thrown if the specified member is null . Properties | Improve this Doc View Source Guild Declaration public ICacheable<Snowflake, Guild> Guild { get; } Property Value Type Description ICacheable < Snowflake , Guild > | Improve this Doc View Source Member Declaration public Member Member { get; } Property Value Type Description Member See Also MemberJoined"
  },
  "api/Strade.Events.MemberRemovedEventArgs.html": {
    "href": "api/Strade.Events.MemberRemovedEventArgs.html",
    "title": "Class MemberRemovedEventArgs | Strade Developer Documentation",
    "keywords": "Class MemberRemovedEventArgs The event arguments ( EventArgs ) for the Member Removed event ( MemberRemoved ). Inheritance Object EventArgs MemberRemovedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class MemberRemovedEventArgs : EventArgs Remarks The event is dispatched when a member was removed from a guild visible to the user / bot. Constructors | Improve this Doc View Source MemberRemovedEventArgs(ICacheable<Snowflake, Guild>, DeletedEntity<Snowflake, Member>, User) Initializes a new instance of the MemberRemovedEventArgs class. Declaration public MemberRemovedEventArgs(ICacheable<Snowflake, Guild> guild, DeletedEntity<Snowflake, Member> member, User user) Parameters Type Name Description ICacheable < Snowflake , Guild > guild the guild. DeletedEntity < Snowflake , Member > member User user the user that was removed from the guild. Exceptions Type Condition ArgumentNullException thrown if the specified guild is null . ArgumentNullException thrown if the specified user is null . Properties | Improve this Doc View Source Guild Declaration public ICacheable<Snowflake, Guild> Guild { get; } Property Value Type Description ICacheable < Snowflake , Guild > | Improve this Doc View Source Member Declaration public DeletedEntity<Snowflake, Member> Member { get; } Property Value Type Description DeletedEntity < Snowflake , Member > | Improve this Doc View Source User Gets the user that was removed from the guild. Declaration public User User { get; } Property Value Type Description User the user that was removed from the guild. See Also MemberRemoved"
  },
  "api/Strade.Events.MemberUnbannedEventArgs.html": {
    "href": "api/Strade.Events.MemberUnbannedEventArgs.html",
    "title": "Class MemberUnbannedEventArgs | Strade Developer Documentation",
    "keywords": "Class MemberUnbannedEventArgs The event arguments ( EventArgs ) for the Member Unbanned event ( MemberUnbanned ). Inheritance Object EventArgs MemberUnbannedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class MemberUnbannedEventArgs : EventArgs Remarks The event is dispatched when a member was unbanned from a guild visible to the user / bot. Constructors | Improve this Doc View Source MemberUnbannedEventArgs(ICacheable<Snowflake, Guild>, User) Initializes a new instance of the MemberUnbannedEventArgs class. Declaration public MemberUnbannedEventArgs(ICacheable<Snowflake, Guild> guild, User user) Parameters Type Name Description ICacheable < Snowflake , Guild > guild the guild the user was unbanned in. User user the user that was unbanned. Exceptions Type Condition ArgumentNullException thrown if the specified guild is null . ArgumentNullException thrown if the specified user is null . Properties | Improve this Doc View Source Guild Declaration public ICacheable<Snowflake, Guild> Guild { get; } Property Value Type Description ICacheable < Snowflake , Guild > | Improve this Doc View Source User Declaration public User User { get; } Property Value Type Description User See Also MemberUnbanned"
  },
  "api/Strade.Events.MemberUpdatedEventArgs.html": {
    "href": "api/Strade.Events.MemberUpdatedEventArgs.html",
    "title": "Class MemberUpdatedEventArgs | Strade Developer Documentation",
    "keywords": "Class MemberUpdatedEventArgs The event arguments ( EventArgs ) for the Member Updated event ( MemberUpdated ). Inheritance Object EventArgs MemberUpdatedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class MemberUpdatedEventArgs : EventArgs Remarks The event is dispatched when a member was updated in a guild visible to the user / bot. Constructors | Improve this Doc View Source MemberUpdatedEventArgs(Member, ICacheable<Snowflake, Guild>) Initializes a new instance of the MemberUpdatedEventArgs class. Declaration public MemberUpdatedEventArgs(Member member, ICacheable<Snowflake, Guild> guild) Parameters Type Name Description Member member the updated member. ICacheable < Snowflake , Guild > guild the guild the member was updated in. Exceptions Type Condition ArgumentNullException thrown if the specified guild is null . ArgumentNullException thrown if the specified member is null . Properties | Improve this Doc View Source Guild Declaration public ICacheable<Snowflake, Guild> Guild { get; } Property Value Type Description ICacheable < Snowflake , Guild > | Improve this Doc View Source Member Declaration public Member Member { get; } Property Value Type Description Member See Also MemberUpdated"
  },
  "api/Strade.Events.MessageBulkDeletionInformation.html": {
    "href": "api/Strade.Events.MessageBulkDeletionInformation.html",
    "title": "Struct MessageBulkDeletionInformation | Strade Developer Documentation",
    "keywords": "Struct MessageBulkDeletionInformation Implements IEquatable < MessageBulkDeletionInformation > Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Events Assembly : Strade.dll Syntax public struct MessageBulkDeletionInformation : IEquatable<MessageBulkDeletionInformation> Constructors | Improve this Doc View Source MessageBulkDeletionInformation(IReadOnlyList<Snowflake>) Declaration public MessageBulkDeletionInformation(IReadOnlyList<Snowflake> messages) Parameters Type Name Description IReadOnlyList < Snowflake > messages Properties | Improve this Doc View Source IsBulk Declaration public bool IsBulk { get; } Property Value Type Description Boolean | Improve this Doc View Source Messages Declaration public IReadOnlyList<Snowflake> Messages { get; } Property Value Type Description IReadOnlyList < Snowflake > Methods | Improve this Doc View Source Equals(MessageBulkDeletionInformation) Declaration public bool Equals(MessageBulkDeletionInformation other) Parameters Type Name Description MessageBulkDeletionInformation other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(MessageBulkDeletionInformation, MessageBulkDeletionInformation) Declaration public static bool operator ==(MessageBulkDeletionInformation left, MessageBulkDeletionInformation right) Parameters Type Name Description MessageBulkDeletionInformation left MessageBulkDeletionInformation right Returns Type Description Boolean | Improve this Doc View Source Inequality(MessageBulkDeletionInformation, MessageBulkDeletionInformation) Declaration public static bool operator !=(MessageBulkDeletionInformation left, MessageBulkDeletionInformation right) Parameters Type Name Description MessageBulkDeletionInformation left MessageBulkDeletionInformation right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Events.MessageDeletedEventArgs.html": {
    "href": "api/Strade.Events.MessageDeletedEventArgs.html",
    "title": "Class MessageDeletedEventArgs | Strade Developer Documentation",
    "keywords": "Class MessageDeletedEventArgs The event arguments ( EventArgs ) for the Message Deleted event ( MessageDeleted ). Inheritance Object EventArgs MessageDeletedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class MessageDeletedEventArgs : EventArgs Remarks The event is dispatched when a message was deleted from a message channel visible to the user / bot. Constructors | Improve this Doc View Source MessageDeletedEventArgs(DeletedEntity<Snowflake, IMessage>, ICacheable<Snowflake, IChannel>, ICacheable<Snowflake, Guild>, MessageBulkDeletionInformation) Declaration public MessageDeletedEventArgs(DeletedEntity<Snowflake, IMessage> message, ICacheable<Snowflake, IChannel> channel, ICacheable<Snowflake, Guild> guild = null, MessageBulkDeletionInformation bulkInformation = default(MessageBulkDeletionInformation)) Parameters Type Name Description DeletedEntity < Snowflake , IMessage > message ICacheable < Snowflake , IChannel > channel ICacheable < Snowflake , Guild > guild MessageBulkDeletionInformation bulkInformation Properties | Improve this Doc View Source BulkDeletionInformation Gets the bulk delete operation information included with the event. Declaration public MessageBulkDeletionInformation BulkDeletionInformation { get; } Property Value Type Description MessageBulkDeletionInformation the bulk delete operation information included with the event. | Improve this Doc View Source Channel Declaration public ICacheable<Snowflake, IChannel> Channel { get; } Property Value Type Description ICacheable < Snowflake , IChannel > | Improve this Doc View Source Guild Declaration public ICacheable<Snowflake, Guild> Guild { get; } Property Value Type Description ICacheable < Snowflake , Guild > | Improve this Doc View Source IsBulkDelete Gets a value indicating whether the event is part of a bulk message delete. Declaration public bool IsBulkDelete { get; } Property Value Type Description Boolean a value indicating whether the event is part of a bulk message delete. | Improve this Doc View Source IsFirst Gets a value indicating whether this event deletes the first message in the bulk operation. Declaration public bool IsFirst { get; } Property Value Type Description Boolean a value indicating whether this event deletes the first message in the bulk operation. Remarks If this is a single message delete then true is returned. | Improve this Doc View Source Message Declaration public DeletedEntity<Snowflake, IMessage> Message { get; } Property Value Type Description DeletedEntity < Snowflake , IMessage > See Also MessageDeleted"
  },
  "api/Strade.Events.MessageReceivedEventArgs.html": {
    "href": "api/Strade.Events.MessageReceivedEventArgs.html",
    "title": "Class MessageReceivedEventArgs | Strade Developer Documentation",
    "keywords": "Class MessageReceivedEventArgs The event arguments ( EventArgs ) for the Message Received event ( MessageReceived ). Inheritance Object EventArgs MessageReceivedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class MessageReceivedEventArgs : EventArgs Remarks The event is dispatched when a message was received from a message channel visible to the user / bot. Constructors | Improve this Doc View Source MessageReceivedEventArgs(IMessage, ICacheable<Snowflake, IChannel>, ICacheable<Snowflake, Guild>) Initializes a new instance of the MessageReceivedEventArgs class. Declaration public MessageReceivedEventArgs(IMessage message, ICacheable<Snowflake, IChannel> channel, ICacheable<Snowflake, Guild> guild = null) Parameters Type Name Description IMessage message the message received. ICacheable < Snowflake , IChannel > channel the message channel the message was sent in. ICacheable < Snowflake , Guild > guild the guild the channel is in; or null if the specified channel is not a guild channel ( IGuildChannel ). Exceptions Type Condition ArgumentNullException thrown if the specified channel is null . ArgumentNullException thrown if the specified message is null . Properties | Improve this Doc View Source Channel Declaration public ICacheable<Snowflake, IChannel> Channel { get; } Property Value Type Description ICacheable < Snowflake , IChannel > | Improve this Doc View Source Guild Declaration public ICacheable<Snowflake, Guild> Guild { get; } Property Value Type Description ICacheable < Snowflake , Guild > | Improve this Doc View Source Message Declaration public IMessage Message { get; } Property Value Type Description IMessage See Also MessageReceived"
  },
  "api/Strade.Events.MessageUpdatedEventArgs.html": {
    "href": "api/Strade.Events.MessageUpdatedEventArgs.html",
    "title": "Class MessageUpdatedEventArgs | Strade Developer Documentation",
    "keywords": "Class MessageUpdatedEventArgs The event arguments ( EventArgs ) for the Message Updated event ( MessageUpdated ). Inheritance Object EventArgs MessageUpdatedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class MessageUpdatedEventArgs : EventArgs Remarks The event is dispatched when a message was updated in a message channel visible to the user / bot. Constructors | Improve this Doc View Source MessageUpdatedEventArgs(ICacheable<Snowflake, IMessage>, ICacheable<Snowflake, IChannel>, ICacheable<Snowflake, Guild>) Initializes a new instance of the MessageUpdatedEventArgs class. Declaration public MessageUpdatedEventArgs(ICacheable<Snowflake, IMessage> message, ICacheable<Snowflake, IChannel> channel, ICacheable<Snowflake, Guild> guild = null) Parameters Type Name Description ICacheable < Snowflake , IMessage > message the message updated. ICacheable < Snowflake , IChannel > channel the message channel the message was sent in. ICacheable < Snowflake , Guild > guild the guild the channel is in; or null if the specified channel is not a guild channel ( IGuildChannel ). Exceptions Type Condition ArgumentNullException thrown if the specified channel is null . ArgumentNullException thrown if the specified message is null . Properties | Improve this Doc View Source Channel Declaration public ICacheable<Snowflake, IChannel> Channel { get; } Property Value Type Description ICacheable < Snowflake , IChannel > | Improve this Doc View Source Guild Declaration public ICacheable<Snowflake, Guild> Guild { get; } Property Value Type Description ICacheable < Snowflake , Guild > | Improve this Doc View Source Message Declaration public ICacheable<Snowflake, IMessage> Message { get; } Property Value Type Description ICacheable < Snowflake , IMessage > See Also MessageUpdated"
  },
  "api/Strade.Events.PresenceUpdatedEventArgs.html": {
    "href": "api/Strade.Events.PresenceUpdatedEventArgs.html",
    "title": "Class PresenceUpdatedEventArgs | Strade Developer Documentation",
    "keywords": "Class PresenceUpdatedEventArgs The event arguments ( EventArgs ) for the Presence Updated event ( PresenceUpdated ). Inheritance Object EventArgs PresenceUpdatedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class PresenceUpdatedEventArgs : EventArgs Remarks The event is dispatched when a guild member's presence was updated. Constructors | Improve this Doc View Source PresenceUpdatedEventArgs(ICacheable<Snowflake, Guild>, Snowflake, IReadOnlyList<Activity>, UserPlatformStatus, UserStatus) Initializes a new instance of the PresenceUpdatedEventArgs class. Declaration public PresenceUpdatedEventArgs(ICacheable<Snowflake, Guild> guild, Snowflake userId, IReadOnlyList<Activity> activities, UserPlatformStatus status, UserStatus primaryStatus) Parameters Type Name Description ICacheable < Snowflake , Guild > guild the guild the user is in. Snowflake userId the snowflake identifier of the affected user. IReadOnlyList < Activity > activities the user's current activities. UserPlatformStatus status the user's platform-dependent status. UserStatus primaryStatus the user's primary online status. Exceptions Type Condition ArgumentNullException thrown if the specified activities list is null . ArgumentNullException thrown if the specified guild is null . Properties | Improve this Doc View Source Activities Gets the user's current activities. Declaration public IReadOnlyList<Activity> Activities { get; } Property Value Type Description IReadOnlyList < Activity > the user's current activities. | Improve this Doc View Source Guild Declaration public ICacheable<Snowflake, Guild> Guild { get; } Property Value Type Description ICacheable < Snowflake , Guild > | Improve this Doc View Source PrimaryStatus Gets the user's primary online status. Declaration public UserStatus PrimaryStatus { get; } Property Value Type Description UserStatus the user's primary online status. | Improve this Doc View Source Status Gets the user's platform-dependent status. Declaration public UserPlatformStatus Status { get; } Property Value Type Description UserPlatformStatus the user's platform-dependent status. | Improve this Doc View Source UserId Gets the snowflake identifier of the affected user. Declaration public Snowflake UserId { get; } Property Value Type Description Snowflake the snowflake identifier of the affected user. See Also PresenceUpdated"
  },
  "api/Strade.Events.ReactionAddedEventArgs.html": {
    "href": "api/Strade.Events.ReactionAddedEventArgs.html",
    "title": "Class ReactionAddedEventArgs | Strade Developer Documentation",
    "keywords": "Class ReactionAddedEventArgs The event arguments ( EventArgs ) for the Reaction Added event ( ReactionAdded ). Inheritance Object EventArgs ReactionAddedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class ReactionAddedEventArgs : EventArgs Remarks The event is dispatched when a reaction was added to a message that is visible to the user / bot. Constructors | Improve this Doc View Source ReactionAddedEventArgs(ICacheable<Snowflake, IChannel>, ICacheable<Snowflake, IMessage>, ICacheable<Snowflake, User>, IEmote, ICacheable<Snowflake, Guild>, Member) Declaration public ReactionAddedEventArgs(ICacheable<Snowflake, IChannel> channel, ICacheable<Snowflake, IMessage> message, ICacheable<Snowflake, User> user, IEmote emote, ICacheable<Snowflake, Guild> guild = null, Member member = null) Parameters Type Name Description ICacheable < Snowflake , IChannel > channel ICacheable < Snowflake , IMessage > message ICacheable < Snowflake , User > user IEmote emote ICacheable < Snowflake , Guild > guild Member member Properties | Improve this Doc View Source Channel Declaration public ICacheable<Snowflake, IChannel> Channel { get; } Property Value Type Description ICacheable < Snowflake , IChannel > | Improve this Doc View Source Emote Declaration public IEmote Emote { get; } Property Value Type Description IEmote | Improve this Doc View Source Guild Declaration public ICacheable<Snowflake, Guild> Guild { get; } Property Value Type Description ICacheable < Snowflake , Guild > | Improve this Doc View Source Member Declaration public Member Member { get; } Property Value Type Description Member | Improve this Doc View Source Message Declaration public ICacheable<Snowflake, IMessage> Message { get; } Property Value Type Description ICacheable < Snowflake , IMessage > | Improve this Doc View Source User Declaration public ICacheable<Snowflake, User> User { get; } Property Value Type Description ICacheable < Snowflake , User > See Also ReactionAdded"
  },
  "api/Strade.Events.ReactionRemovedEventArgs.html": {
    "href": "api/Strade.Events.ReactionRemovedEventArgs.html",
    "title": "Class ReactionRemovedEventArgs | Strade Developer Documentation",
    "keywords": "Class ReactionRemovedEventArgs The event arguments ( EventArgs ) for the Reaction Removed event ( ReactionRemoved ). Inheritance Object EventArgs ReactionRemovedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class ReactionRemovedEventArgs : EventArgs Remarks The event is dispatched when a reaction was removed from a message that is visible to the user / bot. Constructors | Improve this Doc View Source ReactionRemovedEventArgs(ICacheable<Snowflake, IChannel>, ICacheable<Snowflake, IMessage>, ICacheable<Snowflake, User>, IEmote, ICacheable<Snowflake, Guild>) Declaration public ReactionRemovedEventArgs(ICacheable<Snowflake, IChannel> channel, ICacheable<Snowflake, IMessage> message, ICacheable<Snowflake, User> user, IEmote emote, ICacheable<Snowflake, Guild> guild = null) Parameters Type Name Description ICacheable < Snowflake , IChannel > channel ICacheable < Snowflake , IMessage > message ICacheable < Snowflake , User > user IEmote emote ICacheable < Snowflake , Guild > guild Properties | Improve this Doc View Source Channel Declaration public ICacheable<Snowflake, IChannel> Channel { get; } Property Value Type Description ICacheable < Snowflake , IChannel > | Improve this Doc View Source Emote Declaration public IEmote Emote { get; } Property Value Type Description IEmote | Improve this Doc View Source Guild Declaration public ICacheable<Snowflake, Guild> Guild { get; } Property Value Type Description ICacheable < Snowflake , Guild > | Improve this Doc View Source Message Declaration public ICacheable<Snowflake, IMessage> Message { get; } Property Value Type Description ICacheable < Snowflake , IMessage > | Improve this Doc View Source User Declaration public ICacheable<Snowflake, User> User { get; } Property Value Type Description ICacheable < Snowflake , User > See Also ReactionRemoved"
  },
  "api/Strade.Events.ReactionsClearedEventArgs.html": {
    "href": "api/Strade.Events.ReactionsClearedEventArgs.html",
    "title": "Class ReactionsClearedEventArgs | Strade Developer Documentation",
    "keywords": "Class ReactionsClearedEventArgs The event arguments ( EventArgs ) for the ReactionsCleared event. Inheritance Object EventArgs ReactionsClearedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class ReactionsClearedEventArgs : EventArgs Constructors | Improve this Doc View Source ReactionsClearedEventArgs(ICacheable<Snowflake, IChannel>, ICacheable<Snowflake, IMessage>, ICacheable<Snowflake, Guild>) Declaration public ReactionsClearedEventArgs(ICacheable<Snowflake, IChannel> channel, ICacheable<Snowflake, IMessage> message, ICacheable<Snowflake, Guild> guild = null) Parameters Type Name Description ICacheable < Snowflake , IChannel > channel ICacheable < Snowflake , IMessage > message ICacheable < Snowflake , Guild > guild Properties | Improve this Doc View Source Channel Declaration public ICacheable<Snowflake, IChannel> Channel { get; } Property Value Type Description ICacheable < Snowflake , IChannel > | Improve this Doc View Source Guild Declaration public ICacheable<Snowflake, Guild> Guild { get; } Property Value Type Description ICacheable < Snowflake , Guild > | Improve this Doc View Source Message Declaration public ICacheable<Snowflake, IMessage> Message { get; } Property Value Type Description ICacheable < Snowflake , IMessage >"
  },
  "api/Strade.Events.RoleCreatedEventArgs.html": {
    "href": "api/Strade.Events.RoleCreatedEventArgs.html",
    "title": "Class RoleCreatedEventArgs | Strade Developer Documentation",
    "keywords": "Class RoleCreatedEventArgs The event arguments ( EventArgs ) for the Role Created event ( RoleCreated ). Inheritance Object EventArgs RoleCreatedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class RoleCreatedEventArgs : EventArgs Remarks The event is dispatched when a role was created in a guild visible to the user / bot. Constructors | Improve this Doc View Source RoleCreatedEventArgs(ICacheable<Snowflake, Guild>, IRole) Initializes a new instance of the RoleCreatedEventArgs class. Declaration public RoleCreatedEventArgs(ICacheable<Snowflake, Guild> guild, IRole role) Parameters Type Name Description ICacheable < Snowflake , Guild > guild the guild the role was deleted in. IRole role the guild role. Exceptions Type Condition ArgumentNullException thrown if the specified guild is null . ArgumentNullException thrown if the specified role is null . Properties | Improve this Doc View Source Guild Declaration public ICacheable<Snowflake, Guild> Guild { get; } Property Value Type Description ICacheable < Snowflake , Guild > | Improve this Doc View Source Role Declaration public IRole Role { get; } Property Value Type Description IRole See Also RoleCreated"
  },
  "api/Strade.Events.RoleDeletedEventArgs.html": {
    "href": "api/Strade.Events.RoleDeletedEventArgs.html",
    "title": "Class RoleDeletedEventArgs | Strade Developer Documentation",
    "keywords": "Class RoleDeletedEventArgs The event arguments ( EventArgs ) for the Role Deleted event ( RoleDeleted ). Inheritance Object EventArgs RoleDeletedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class RoleDeletedEventArgs : EventArgs Remarks The event is dispatched when a role was deleted in a guild visible to the user / bot. Constructors | Improve this Doc View Source RoleDeletedEventArgs(ICacheable<Snowflake, Guild>, DeletedEntity<Snowflake, IRole>) Initializes a new instance of the RoleDeletedEventArgs class. Declaration public RoleDeletedEventArgs(ICacheable<Snowflake, Guild> guild, DeletedEntity<Snowflake, IRole> role) Parameters Type Name Description ICacheable < Snowflake , Guild > guild the guild the role was deleted in. DeletedEntity < Snowflake , IRole > role the guild role. Exceptions Type Condition ArgumentNullException thrown if the specified guild is null . ArgumentNullException thrown if the specified role is null . Properties | Improve this Doc View Source Guild Declaration public ICacheable<Snowflake, Guild> Guild { get; } Property Value Type Description ICacheable < Snowflake , Guild > | Improve this Doc View Source Role Declaration public DeletedEntity<Snowflake, IRole> Role { get; } Property Value Type Description DeletedEntity < Snowflake , IRole > See Also RoleDeleted"
  },
  "api/Strade.Events.RoleUpdatedEventArgs.html": {
    "href": "api/Strade.Events.RoleUpdatedEventArgs.html",
    "title": "Class RoleUpdatedEventArgs | Strade Developer Documentation",
    "keywords": "Class RoleUpdatedEventArgs The event arguments ( EventArgs ) for the Role Updated event ( RoleUpdated ). Inheritance Object EventArgs RoleUpdatedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class RoleUpdatedEventArgs : EventArgs Remarks The event is dispatched when a role was updated in a guild visible to the user / bot. Constructors | Improve this Doc View Source RoleUpdatedEventArgs(ICacheable<Snowflake, Guild>, IRole) Initializes a new instance of the RoleUpdatedEventArgs class. Declaration public RoleUpdatedEventArgs(ICacheable<Snowflake, Guild> guild, IRole role) Parameters Type Name Description ICacheable < Snowflake , Guild > guild the guild the role was deleted in. IRole role the guild role. Exceptions Type Condition ArgumentNullException thrown if the specified guild is null . ArgumentNullException thrown if the specified role is null . Properties | Improve this Doc View Source Guild Declaration public ICacheable<Snowflake, Guild> Guild { get; } Property Value Type Description ICacheable < Snowflake , Guild > | Improve this Doc View Source Role Declaration public IRole Role { get; } Property Value Type Description IRole See Also RoleUpdated"
  },
  "api/Strade.Events.TypingStartEventArgs.html": {
    "href": "api/Strade.Events.TypingStartEventArgs.html",
    "title": "Class TypingStartEventArgs | Strade Developer Documentation",
    "keywords": "Class TypingStartEventArgs The event arguments ( EventArgs ) for the Typing Start event ( TypingStart ). Inheritance Object EventArgs TypingStartEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class TypingStartEventArgs : EventArgs Remarks The event is dispatched when a role was updated in a guild visible to the user / bot. Constructors | Improve this Doc View Source TypingStartEventArgs(ICacheable<Snowflake, User>, ICacheable<Snowflake, IChannel>, DateTimeOffset, ICacheable<Snowflake, Guild>, ICacheable<Snowflake, Member>) Declaration public TypingStartEventArgs(ICacheable<Snowflake, User> user, ICacheable<Snowflake, IChannel> channel, DateTimeOffset timestamp, ICacheable<Snowflake, Guild> guild = null, ICacheable<Snowflake, Member> member = null) Parameters Type Name Description ICacheable < Snowflake , User > user ICacheable < Snowflake , IChannel > channel DateTimeOffset timestamp ICacheable < Snowflake , Guild > guild ICacheable < Snowflake , Member > member Properties | Improve this Doc View Source Channel Declaration public ICacheable<Snowflake, IChannel> Channel { get; } Property Value Type Description ICacheable < Snowflake , IChannel > | Improve this Doc View Source Guild Declaration public ICacheable<Snowflake, Guild> Guild { get; } Property Value Type Description ICacheable < Snowflake , Guild > | Improve this Doc View Source Member Declaration public ICacheable<Snowflake, Member> Member { get; } Property Value Type Description ICacheable < Snowflake , Member > | Improve this Doc View Source Timestamp Gets the timestamp when the user started typing. Declaration public DateTimeOffset Timestamp { get; } Property Value Type Description DateTimeOffset the timestamp when the user started typing. | Improve this Doc View Source User Gets the user that started typing. Declaration public ICacheable<Snowflake, User> User { get; } Property Value Type Description ICacheable < Snowflake , User > the user that started typing. See Also TypingStart"
  },
  "api/Strade.Events.VoiceServerUpdatedEventArgs.html": {
    "href": "api/Strade.Events.VoiceServerUpdatedEventArgs.html",
    "title": "Class VoiceServerUpdatedEventArgs | Strade Developer Documentation",
    "keywords": "Class VoiceServerUpdatedEventArgs The event arguments ( EventArgs ) for the Voice Server Updated event ( VoiceServerUpdated ). Inheritance Object EventArgs VoiceServerUpdatedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class VoiceServerUpdatedEventArgs : EventArgs Remarks The event is dispatched when the voice server was updated for a guild. Constructors | Improve this Doc View Source VoiceServerUpdatedEventArgs(VoiceServer) Initializes a new instance of the VoiceServerUpdatedEventArgs class. Declaration public VoiceServerUpdatedEventArgs(VoiceServer voiceServer) Parameters Type Name Description VoiceServer voiceServer the voice server. Exceptions Type Condition ArgumentNullException thrown if the specified voiceServer is null . Properties | Improve this Doc View Source VoiceServer Gets the updated voice server. Declaration public VoiceServer VoiceServer { get; } Property Value Type Description VoiceServer the updated voice server. See Also VoiceServerUpdated"
  },
  "api/Strade.Events.VoiceStateUpdatedEventArgs.html": {
    "href": "api/Strade.Events.VoiceStateUpdatedEventArgs.html",
    "title": "Class VoiceStateUpdatedEventArgs | Strade Developer Documentation",
    "keywords": "Class VoiceStateUpdatedEventArgs The event arguments ( EventArgs ) for the Voice State Updated event ( VoiceStateUpdated ). Inheritance Object EventArgs VoiceStateUpdatedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class VoiceStateUpdatedEventArgs : EventArgs Remarks The event is dispatched when the voice state was updated for a guild member. Constructors | Improve this Doc View Source VoiceStateUpdatedEventArgs(ICacheable<Snowflake, Guild>, ICacheable<Snowflake, Member>, VoiceState, VoiceState) Initializes a new instance of the VoiceStateUpdatedEventArgs class. Declaration public VoiceStateUpdatedEventArgs(ICacheable<Snowflake, Guild> guild, ICacheable<Snowflake, Member> member, VoiceState oldVoiceState, VoiceState voiceState) Parameters Type Name Description ICacheable < Snowflake , Guild > guild the guild. ICacheable < Snowflake , Member > member the guild member. VoiceState oldVoiceState the old voice state. VoiceState voiceState the new voice state. Exceptions Type Condition ArgumentNullException thrown if the specified voiceState is null . ArgumentNullException thrown if the specified guild is null . ArgumentNullException thrown if the specified member is null . Properties | Improve this Doc View Source Guild Declaration public ICacheable<Snowflake, Guild> Guild { get; } Property Value Type Description ICacheable < Snowflake , Guild > | Improve this Doc View Source Member Declaration public ICacheable<Snowflake, Member> Member { get; } Property Value Type Description ICacheable < Snowflake , Member > | Improve this Doc View Source OldVoiceState Gets the old voice state. Declaration public VoiceState OldVoiceState { get; } Property Value Type Description VoiceState the old voice state; if present. | Improve this Doc View Source VoiceState Gets the updated voice state. Declaration public VoiceState VoiceState { get; } Property Value Type Description VoiceState the updated voice state. See Also VoiceStateUpdated"
  },
  "api/Strade.Events.WebhooksUpdatedEventArgs.html": {
    "href": "api/Strade.Events.WebhooksUpdatedEventArgs.html",
    "title": "Class WebhooksUpdatedEventArgs | Strade Developer Documentation",
    "keywords": "Class WebhooksUpdatedEventArgs The event arguments ( EventArgs ) for the Webhooks Updated event ( WebhooksUpdated ). Inheritance Object EventArgs WebhooksUpdatedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Events Assembly : Strade.dll Syntax public sealed class WebhooksUpdatedEventArgs : EventArgs Remarks The event is dispatched when the Webhooks were updated for a guild visible to the user / bot. Constructors | Improve this Doc View Source WebhooksUpdatedEventArgs(ICacheable<Snowflake, Guild>, ICacheable<Snowflake, IChannel>) Initializes a new instance of the WebhooksUpdatedEventArgs class. Declaration public WebhooksUpdatedEventArgs(ICacheable<Snowflake, Guild> guild, ICacheable<Snowflake, IChannel> channel) Parameters Type Name Description ICacheable < Snowflake , Guild > guild the guild the webhooks were updated for. ICacheable < Snowflake , IChannel > channel the affected channel. Exceptions Type Condition ArgumentNullException thrown if the specified guild is null . ArgumentNullException thrown if the specified channel is null . Properties | Improve this Doc View Source Channel Declaration public ICacheable<Snowflake, IChannel> Channel { get; } Property Value Type Description ICacheable < Snowflake , IChannel > | Improve this Doc View Source Guild Declaration public ICacheable<Snowflake, Guild> Guild { get; } Property Value Type Description ICacheable < Snowflake , Guild > See Also WebhooksUpdated"
  },
  "api/Strade.Exceptions.CacheMissException.html": {
    "href": "api/Strade.Exceptions.CacheMissException.html",
    "title": "Class CacheMissException | Strade Developer Documentation",
    "keywords": "Class CacheMissException Inheritance Object Exception CacheMissException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Exceptions Assembly : Strade.Rest.dll Syntax public class CacheMissException : Exception, ISerializable Constructors | Improve this Doc View Source CacheMissException() Declaration public CacheMissException() | Improve this Doc View Source CacheMissException(String) Declaration public CacheMissException(string message) Parameters Type Name Description String message | Improve this Doc View Source CacheMissException(String, Exception) Declaration public CacheMissException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Implements System.Runtime.Serialization.ISerializable"
  },
  "api/Strade.Exceptions.GuildNotServedException.html": {
    "href": "api/Strade.Exceptions.GuildNotServedException.html",
    "title": "Class GuildNotServedException | Strade Developer Documentation",
    "keywords": "Class GuildNotServedException Inheritance Object Exception SystemException InvalidOperationException GuildNotServedException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Exceptions Assembly : Strade.dll Syntax public sealed class GuildNotServedException : InvalidOperationException, ISerializable Constructors | Improve this Doc View Source GuildNotServedException() Initializes a new instance of the GuildNotServedException class. Declaration public GuildNotServedException() | Improve this Doc View Source GuildNotServedException(String) Initializes a new instance of the GuildNotServedException class. Declaration public GuildNotServedException(string message) Parameters Type Name Description String message the exception message. | Improve this Doc View Source GuildNotServedException(String, Exception) Initializes a new instance of the GuildNotServedException class. Declaration public GuildNotServedException(string message, Exception innerException) Parameters Type Name Description String message the exception message. Exception innerException the inner exception. Implements System.Runtime.Serialization.ISerializable"
  },
  "api/Strade.Exceptions.GuildUnavailableException.html": {
    "href": "api/Strade.Exceptions.GuildUnavailableException.html",
    "title": "Class GuildUnavailableException | Strade Developer Documentation",
    "keywords": "Class GuildUnavailableException Inheritance Object Exception GuildUnavailableException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Exceptions Assembly : Strade.Rest.dll Syntax public sealed class GuildUnavailableException : Exception, ISerializable Constructors | Improve this Doc View Source GuildUnavailableException() Initializes a new instance of the GuildUnavailableException class. Declaration public GuildUnavailableException() | Improve this Doc View Source GuildUnavailableException(IGuild) Initializes a new instance of the GuildUnavailableException class. Declaration public GuildUnavailableException(IGuild guild) Parameters Type Name Description IGuild guild the unavailable guild. | Improve this Doc View Source GuildUnavailableException(IGuild, String) Initializes a new instance of the GuildUnavailableException class. Declaration public GuildUnavailableException(IGuild guild, string message) Parameters Type Name Description IGuild guild the unavailable guild. String message the exception message. | Improve this Doc View Source GuildUnavailableException(IGuild, String, Exception) Initializes a new instance of the GuildUnavailableException class. Declaration public GuildUnavailableException(IGuild guild, string message, Exception innerException) Parameters Type Name Description IGuild guild the unavailable guild. String message the exception message. Exception innerException the inner exception. | Improve this Doc View Source GuildUnavailableException(String) Initializes a new instance of the GuildUnavailableException class. Declaration public GuildUnavailableException(string message) Parameters Type Name Description String message the exception message. | Improve this Doc View Source GuildUnavailableException(String, Exception) Initializes a new instance of the GuildUnavailableException class. Declaration public GuildUnavailableException(string message, Exception innerException) Parameters Type Name Description String message the exception message. Exception innerException the inner exception. Properties | Improve this Doc View Source Guild Declaration public IGuild Guild { get; } Property Value Type Description IGuild Implements System.Runtime.Serialization.ISerializable"
  },
  "api/Strade.Exceptions.html": {
    "href": "api/Strade.Exceptions.html",
    "title": "Namespace Strade.Exceptions | Strade Developer Documentation",
    "keywords": "Namespace Strade.Exceptions Classes CacheMissException GuildNotServedException GuildUnavailableException MissingAccessException An exception used for operations were the client has no access to. MissingIntentException RateLimitedException An exception used for REST request failures due rate limitation. RestRequestException An exception used for REST request failures."
  },
  "api/Strade.Exceptions.MissingAccessException.html": {
    "href": "api/Strade.Exceptions.MissingAccessException.html",
    "title": "Class MissingAccessException | Strade Developer Documentation",
    "keywords": "Class MissingAccessException An exception used for operations were the client has no access to. Inheritance Object Exception RestRequestException MissingAccessException Implements ISerializable Inherited Members RestRequestException.Content RestRequestException.ErrorCode Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Exceptions Assembly : Strade.Rest.dll Syntax public class MissingAccessException : RestRequestException, ISerializable Constructors | Improve this Doc View Source MissingAccessException() Initializes a new instance of the MissingAccessException class. Declaration public MissingAccessException() | Improve this Doc View Source MissingAccessException(String) Initializes a new instance of the MissingAccessException class. Declaration public MissingAccessException(string message) Parameters Type Name Description String message the exception message. | Improve this Doc View Source MissingAccessException(String, Exception) Initializes a new instance of the MissingAccessException class. Declaration public MissingAccessException(string message, Exception innerException) Parameters Type Name Description String message the exception message. Exception innerException the inner exception. Implements System.Runtime.Serialization.ISerializable"
  },
  "api/Strade.Exceptions.MissingIntentException.html": {
    "href": "api/Strade.Exceptions.MissingIntentException.html",
    "title": "Class MissingIntentException | Strade Developer Documentation",
    "keywords": "Class MissingIntentException Inheritance Object Exception MissingIntentException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Exceptions Assembly : Strade.dll Syntax public class MissingIntentException : Exception, ISerializable Constructors | Improve this Doc View Source MissingIntentException() Declaration public MissingIntentException() | Improve this Doc View Source MissingIntentException(GatewayIntents) Declaration public MissingIntentException(GatewayIntents missingIntent) Parameters Type Name Description GatewayIntents missingIntent | Improve this Doc View Source MissingIntentException(GatewayIntents, String) Declaration public MissingIntentException(GatewayIntents missingIntent, string message) Parameters Type Name Description GatewayIntents missingIntent String message | Improve this Doc View Source MissingIntentException(GatewayIntents, String, Exception) Declaration public MissingIntentException(GatewayIntents missingIntent, string message, Exception innerException) Parameters Type Name Description GatewayIntents missingIntent String message Exception innerException | Improve this Doc View Source MissingIntentException(String) Declaration public MissingIntentException(string message) Parameters Type Name Description String message | Improve this Doc View Source MissingIntentException(String, Exception) Declaration public MissingIntentException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Properties | Improve this Doc View Source MissingIntent Declaration public GatewayIntents MissingIntent { get; } Property Value Type Description GatewayIntents Implements System.Runtime.Serialization.ISerializable"
  },
  "api/Strade.Exceptions.RateLimitedException.html": {
    "href": "api/Strade.Exceptions.RateLimitedException.html",
    "title": "Class RateLimitedException | Strade Developer Documentation",
    "keywords": "Class RateLimitedException An exception used for REST request failures due rate limitation. Inheritance Object Exception RestRequestException RateLimitedException Implements ISerializable Inherited Members RestRequestException.Content RestRequestException.ErrorCode Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Exceptions Assembly : Strade.Rest.dll Syntax public class RateLimitedException : RestRequestException, ISerializable Constructors | Improve this Doc View Source RateLimitedException() Declaration public RateLimitedException() | Improve this Doc View Source RateLimitedException(Nullable<RateLimiterBucket>) Initializes a new instance of the RateLimitedException class. Declaration public RateLimitedException(RateLimiterBucket? requestBucket = default(RateLimiterBucket? )) Parameters Type Name Description Nullable < RateLimiterBucket > requestBucket the request bucket for the request that failed. | Improve this Doc View Source RateLimitedException(String) Declaration public RateLimitedException(string message) Parameters Type Name Description String message | Improve this Doc View Source RateLimitedException(String, Exception) Declaration public RateLimitedException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException | Improve this Doc View Source RateLimitedException(String, Exception, Nullable<RateLimiterBucket>) Initializes a new instance of the RateLimitedException class. Declaration public RateLimitedException(string message, Exception innerException, RateLimiterBucket? requestBucket = default(RateLimiterBucket? )) Parameters Type Name Description String message the exception message. Exception innerException the inner exception. Nullable < RateLimiterBucket > requestBucket the request bucket for the request that failed. | Improve this Doc View Source RateLimitedException(String, Nullable<RateLimiterBucket>) Initializes a new instance of the RateLimitedException class. Declaration public RateLimitedException(string message, RateLimiterBucket? requestBucket = default(RateLimiterBucket? )) Parameters Type Name Description String message the exception message. Nullable < RateLimiterBucket > requestBucket the request bucket for the request that failed. Properties | Improve this Doc View Source RequestBucket Gets the request bucket for the request that failed. Declaration public RateLimiterBucket? RequestBucket { get; } Property Value Type Description Nullable < RateLimiterBucket > Implements System.Runtime.Serialization.ISerializable"
  },
  "api/Strade.Exceptions.RestRequestException.html": {
    "href": "api/Strade.Exceptions.RestRequestException.html",
    "title": "Class RestRequestException | Strade Developer Documentation",
    "keywords": "Class RestRequestException An exception used for REST request failures. Inheritance Object Exception RestRequestException MissingAccessException RateLimitedException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Exceptions Assembly : Strade.Rest.dll Syntax public class RestRequestException : Exception, ISerializable Constructors | Improve this Doc View Source RestRequestException() Initializes a new instance of the RestRequestException class. Declaration public RestRequestException() | Improve this Doc View Source RestRequestException(String) Initializes a new instance of the RestRequestException class. Declaration public RestRequestException(string message) Parameters Type Name Description String message the exception message. | Improve this Doc View Source RestRequestException(String, Exception) Initializes a new instance of the RestRequestException class. Declaration public RestRequestException(string message, Exception innerException) Parameters Type Name Description String message the exception message. Exception innerException the inner exception that occurred. | Improve this Doc View Source RestRequestException(String, String, Exception, RestResponseStatus) Initializes a new instance of the RestRequestException class. Declaration public RestRequestException(string message, string content = null, Exception innerException = null, RestResponseStatus errorCode = RestResponseStatus.UnknownError) Parameters Type Name Description String message the exception message. String content the response content returned. Exception innerException the inner exception. RestResponseStatus errorCode the error code that occurred. Exceptions Type Condition ArgumentNullException thrown if the specified content is null . Properties | Improve this Doc View Source Content Gets the HTTP content returned from the request. Declaration public string Content { get; } Property Value Type Description String | Improve this Doc View Source ErrorCode Gets the REST error code that occurred. Declaration public RestResponseStatus ErrorCode { get; } Property Value Type Description RestResponseStatus Implements System.Runtime.Serialization.ISerializable"
  },
  "api/Strade.Formatting.ComponentStyles.html": {
    "href": "api/Strade.Formatting.ComponentStyles.html",
    "title": "Enum ComponentStyles | Strade Developer Documentation",
    "keywords": "Enum ComponentStyles A set of supported component styles. Namespace : Strade.Formatting Assembly : Strade.Rest.dll Syntax [Flags] public enum ComponentStyles : byte Fields Name Description All Denotes that all styles are enabled. Bold Denotes that bold print is applied to the message component. Inline Denotes that the message component should be inlined in a code block. Italic Denotes that italic print is applied to the message component. None Denotes that no style is applied to the message component. Spoiler Denotes that the message component should be marked as a spoiler. Strikethrough Denotes that strike-through is applied to the message component. Underline Denotes that underline is applied to the message component. Unescaped Denotes that the message component should be unescaped. Extension Methods EnumExtensions.GetName<ComponentStyles>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Formatting.ContentUtil.html": {
    "href": "api/Strade.Formatting.ContentUtil.html",
    "title": "Class ContentUtil | Strade Developer Documentation",
    "keywords": "Class ContentUtil An utility class for building URIs to discord's Content Delivery Network (CDN). Inheritance Object ContentUtil Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Formatting Assembly : Strade.Rest.dll Syntax public static class ContentUtil Remarks More details can be found on https://discord.com/developers/docs/reference#image-formatting [external, Discord Developer Documentation]. Fields | Improve this Doc View Source CdnEndpoint The base Content Delivery Network (CDN) endpoint used when making requests for avatars, icons, etc. Declaration public const string CdnEndpoint = \"https://cdn.discordapp.com/\" Field Value Type Description String Methods | Improve this Doc View Source BuildApplicationAssetUri(UInt64, String, ImageFormat, Nullable<Int32>) Builds the application asset URI. Declaration public static Uri BuildApplicationAssetUri(ulong applicationId, string assetId, ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description UInt64 applicationId the application snowflake identifier. String assetId the asset identifier. ImageFormat format the image format to return. Nullable < Int32 > size the size of the image (16 - 2048, power of two). Returns Type Description Uri the application asset URI. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified format is not specified in the ImageFormat enumeration. ArgumentOutOfRangeException thrown if the specified size is less than 16 pixels. ArgumentOutOfRangeException thrown if the specified size is greater than 2048 pixels. ArgumentOutOfRangeException thrown if the specified size is not a power of two. ArgumentOutOfRangeException thrown if the specified format is not one of Png , Jpeg and WebP . | Improve this Doc View Source BuildApplicationIconUri(UInt64, String, ImageFormat, Nullable<Int32>) Builds the application icon URI. Declaration public static Uri BuildApplicationIconUri(ulong applicationId, string applicationIcon, ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description UInt64 applicationId the application snowflake identifier. String applicationIcon the application icon hash. ImageFormat format the image format to return. Nullable < Int32 > size the size of the image (16 - 2048, power of two). Returns Type Description Uri the application icon URI. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified format is not specified in the ImageFormat enumeration. ArgumentOutOfRangeException thrown if the specified size is less than 16 pixels. ArgumentOutOfRangeException thrown if the specified size is greater than 2048 pixels. ArgumentOutOfRangeException thrown if the specified size is not a power of two. ArgumentOutOfRangeException thrown if the specified format is not one of Png , Jpeg and WebP . | Improve this Doc View Source BuildCustomEmojiUri(String, ImageFormat, Nullable<Int32>) Builds the custom emoji URI. Declaration public static Uri BuildCustomEmojiUri(string emojiId, ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description String emojiId the emoji identifier. ImageFormat format the image format to return. Nullable < Int32 > size the size of the image (16 - 2048, power of two). Returns Type Description Uri the custom emoji URI. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified format is not specified in the ImageFormat enumeration. ArgumentOutOfRangeException thrown if the specified format is not one of Png and Gif . ArgumentOutOfRangeException thrown if the specified size is less than 16 pixels. ArgumentOutOfRangeException thrown if the specified size is greater than 2048 pixels. ArgumentOutOfRangeException thrown if the specified size is not a power of two. | Improve this Doc View Source BuildDefaultUserAvatarUri(UInt16) Builds the default user avatar URI. Declaration public static Uri BuildDefaultUserAvatarUri(ushort userDiscriminator = 0) Parameters Type Name Description UInt16 userDiscriminator the user's discriminator. Returns Type Description Uri the default user avatar URI. | Improve this Doc View Source BuildDiscoverySplashUri(UInt64, String, ImageFormat, Nullable<Int32>) Builds the guild discovery splash URI. Declaration public static Uri BuildDiscoverySplashUri(ulong guildId, string guildSplash, ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description UInt64 guildId the guild snowflake identifier. String guildSplash the guild discovery splash hash. ImageFormat format the image format to return. Nullable < Int32 > size the size of the image (16 - 2048, power of two). Returns Type Description Uri the guild discovery splash URI. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified format is not specified in the ImageFormat enumeration. ArgumentOutOfRangeException thrown if the specified size is less than 16 pixels. ArgumentOutOfRangeException thrown if the specified size is greater than 2048 pixels. ArgumentOutOfRangeException thrown if the specified size is not a power of two. ArgumentOutOfRangeException thrown if the specified format is not one of Png , Jpeg and WebP . | Improve this Doc View Source BuildGuildBannerUri(UInt64, String, ImageFormat, Nullable<Int32>) Builds the guild banner URI. Declaration public static Uri BuildGuildBannerUri(ulong guildId, string guildBanner, ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description UInt64 guildId the guild snowflake identifier. String guildBanner the guild banner hash. ImageFormat format the image format to return. Nullable < Int32 > size the size of the image (16 - 2048, power of two). Returns Type Description Uri the guild banner URI. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified format is not specified in the ImageFormat enumeration. ArgumentOutOfRangeException thrown if the specified size is less than 16 pixels. ArgumentOutOfRangeException thrown if the specified size is greater than 2048 pixels. ArgumentOutOfRangeException thrown if the specified size is not a power of two. ArgumentOutOfRangeException thrown if the specified format is not one of Png , Jpeg and WebP . | Improve this Doc View Source BuildGuildIconUri(UInt64, String, ImageFormat, Nullable<Int32>) Builds the guild icon URI. Declaration public static Uri BuildGuildIconUri(ulong guildId, string guildIcon, ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description UInt64 guildId the guild snowflake identifier. String guildIcon the guild icon hash. ImageFormat format the image format to return. Nullable < Int32 > size the size of the image (16 - 2048, power of two). Returns Type Description Uri the guild icon URI. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified format is not specified in the ImageFormat enumeration. ArgumentOutOfRangeException thrown if the specified size is less than 16 pixels. ArgumentOutOfRangeException thrown if the specified size is greater than 2048 pixels. ArgumentOutOfRangeException thrown if the specified size is not a power of two. | Improve this Doc View Source BuildGuildSplashUri(UInt64, String, ImageFormat, Nullable<Int32>) Builds the guild splash URI. Declaration public static Uri BuildGuildSplashUri(ulong guildId, string guildSplash, ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description UInt64 guildId the guild snowflake identifier. String guildSplash the guild splash hash. ImageFormat format the image format to return. Nullable < Int32 > size the size of the image (16 - 2048, power of two). Returns Type Description Uri the guild splash URI. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified format is not specified in the ImageFormat enumeration. ArgumentOutOfRangeException thrown if the specified size is less than 16 pixels. ArgumentOutOfRangeException thrown if the specified size is greater than 2048 pixels. ArgumentOutOfRangeException thrown if the specified size is not a power of two. ArgumentOutOfRangeException thrown if the specified format is not one of Png , Jpeg and WebP . | Improve this Doc View Source BuildMessageAttachmentUri(Snowflake, String, String) Declaration public static Uri BuildMessageAttachmentUri(Snowflake channelId, string attachmentId, string fileName) Parameters Type Name Description Snowflake channelId String attachmentId String fileName Returns Type Description Uri | Improve this Doc View Source BuildTeamIcon(UInt64, String, ImageFormat, Nullable<Int32>) Builds the team icon URI. Declaration public static Uri BuildTeamIcon(ulong teamId, string teamIcon, ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description UInt64 teamId the team identifier snowflake. String teamIcon the team icon hash. ImageFormat format the image format to return. Nullable < Int32 > size the size of the image (16 - 2048, power of two). Returns Type Description Uri the team icon URI. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified format is not specified in the ImageFormat enumeration. ArgumentOutOfRangeException thrown if the specified size is less than 16 pixels. ArgumentOutOfRangeException thrown if the specified size is greater than 2048 pixels. ArgumentOutOfRangeException thrown if the specified size is not a power of two. ArgumentOutOfRangeException thrown if the specified format is not one of Png , Jpeg and WebP . | Improve this Doc View Source BuildUri(String, ImageFormat, Nullable<Int32>) Builds an URI to discord's Content Delivery Network. Declaration public static Uri BuildUri(string subPath, ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description String subPath the sub-path of the endpoint. ImageFormat format the image format to return. Nullable < Int32 > size the size of the image (16 - 2048, power of two). Returns Type Description Uri the application icon URI. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified format is not specified in the ImageFormat enumeration. ArgumentOutOfRangeException thrown if the specified size is less than 16 pixels. ArgumentOutOfRangeException thrown if the specified size is greater than 2048 pixels. ArgumentOutOfRangeException thrown if the specified size is not a power of two. | Improve this Doc View Source BuildUserAvatarUri(UInt64, String, ImageFormat, Nullable<Int32>) Builds the user avatar URI. Declaration public static Uri BuildUserAvatarUri(ulong userId, string avatarHash, ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description UInt64 userId the user snowflake identifier. String avatarHash the user avatar hash. ImageFormat format the image format to return. Nullable < Int32 > size the size of the image (16 - 2048, power of two). Returns Type Description Uri the team icon URI. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified format is not specified in the ImageFormat enumeration. ArgumentOutOfRangeException thrown if the specified size is less than 16 pixels. ArgumentOutOfRangeException thrown if the specified size is greater than 2048 pixels. ArgumentOutOfRangeException thrown if the specified size is not a power of two."
  },
  "api/Strade.Formatting.FormattingUtil.html": {
    "href": "api/Strade.Formatting.FormattingUtil.html",
    "title": "Class FormattingUtil | Strade Developer Documentation",
    "keywords": "Class FormattingUtil An utility class that helps with parsing and generating mention strings. Inheritance Object FormattingUtil Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Formatting Assembly : Strade.Rest.dll Syntax public static class FormattingUtil Methods | Improve this Doc View Source Emote(Snowflake, String, Boolean) Builds the message format used for mentioning am emote with the specified id and name . Declaration public static string Emote(Snowflake id, string name, bool animated = false) Parameters Type Name Description Snowflake id the snowflake identifier of the emote to mention. String name the name of the emote to mention. Boolean animated a value indicating whether the emote is animated. Returns Type Description String the formatted string. | Improve this Doc View Source MentionChannel(Snowflake) Builds the message format used for mentioning a channel with the specified id . Declaration public static string MentionChannel(Snowflake id) Parameters Type Name Description Snowflake id the snowflake identifier of the channel to mention. Returns Type Description String the formatted string. | Improve this Doc View Source MentionMember(Snowflake) Builds the message format used for mentioning a guild member with the specified id . Declaration public static string MentionMember(Snowflake id) Parameters Type Name Description Snowflake id the snowflake identifier of the member to mention. Returns Type Description String the formatted string. | Improve this Doc View Source MentionRole(Snowflake) Builds the message format used for mentioning a role with the specified id . Declaration public static string MentionRole(Snowflake id) Parameters Type Name Description Snowflake id the snowflake identifier of the role to mention. Returns Type Description String the formatted string. | Improve this Doc View Source MentionUser(Snowflake) Builds the message format used for mentioning an user with the specified id . Declaration public static string MentionUser(Snowflake id) Parameters Type Name Description Snowflake id the snowflake identifier of the user to mention. Returns Type Description String the formatted string. | Improve this Doc View Source TryParseChannel(String, out Snowflake) Tries to parse a channel mention from the specified value . Declaration public static bool TryParseChannel(string value, out Snowflake id) Parameters Type Name Description String value the value to parse. Snowflake id the snowflake identifier of the channel mentioned in the specified value ; or default if the parsing failed. Returns Type Description Boolean a value indicating whether the parsing succeed; otherwise false . Exceptions Type Condition ArgumentNullException thrown if the specified value is null . | Improve this Doc View Source TryParseRole(String, out Snowflake) Tries to parse a role mention from the specified value . Declaration public static bool TryParseRole(string value, out Snowflake id) Parameters Type Name Description String value the value to parse. Snowflake id the snowflake identifier of the role mentioned in the specified value ; or default if the parsing failed. Returns Type Description Boolean a value indicating whether the parsing succeed; otherwise false . Exceptions Type Condition ArgumentNullException thrown if the specified value is null . | Improve this Doc View Source TryParseUser(String, out Boolean, out Snowflake) Tries to parse an user mention from the specified value . Declaration public static bool TryParseUser(string value, out bool nickname, out Snowflake id) Parameters Type Name Description String value the value to parse. Boolean nickname a value indicating whether the mention is a nickname mention. Snowflake id the snowflake identifier of the user mentioned in the specified value ; or default if the parsing failed. Returns Type Description Boolean a value indicating whether the parsing succeed; otherwise false . Exceptions Type Condition ArgumentNullException thrown if the specified value is null ."
  },
  "api/Strade.Formatting.html": {
    "href": "api/Strade.Formatting.html",
    "title": "Namespace Strade.Formatting | Strade Developer Documentation",
    "keywords": "Namespace Strade.Formatting Classes ContentUtil An utility class for building URIs to discord's Content Delivery Network (CDN). FormattingUtil An utility class that helps with parsing and generating mention strings. MessageBuilder MessageHelper Structs MessageComponent Enums ComponentStyles A set of supported component styles."
  },
  "api/Strade.Formatting.MessageBuilder.html": {
    "href": "api/Strade.Formatting.MessageBuilder.html",
    "title": "Class MessageBuilder | Strade Developer Documentation",
    "keywords": "Class MessageBuilder Inheritance Object MessageBuilder Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Formatting Assembly : Strade.Rest.dll Syntax public class MessageBuilder Constructors | Improve this Doc View Source MessageBuilder() Initializes a new instance of the MessageBuilder class. Declaration public MessageBuilder() Properties | Improve this Doc View Source Capacity Gets the capacity of the component array. Declaration public int Capacity { get; } Property Value Type Description Int32 the capacity of the component array. | Improve this Doc View Source Components Gets the actual number of MessageComponent stored in the internal array. Declaration public int Components { get; } Property Value Type Description Int32 the actual number of MessageComponent stored in the internal array. | Improve this Doc View Source Length Gets the total length in characters of the value of the MessageBuilder including text and styles. Declaration public int Length { get; } Property Value Type Description Int32 the total length in characters of the value of the MessageBuilder including text and styles. Methods | Improve this Doc View Source Append(MessageComponent) Declaration public MessageBuilder Append(MessageComponent component) Parameters Type Name Description MessageComponent component Returns Type Description MessageBuilder | Improve this Doc View Source Append(MessageComponent[]) Declaration public MessageBuilder Append(params MessageComponent[] components) Parameters Type Name Description MessageComponent [] components Returns Type Description MessageBuilder | Improve this Doc View Source Append(IReadOnlyCollection<MessageComponent>) Declaration public MessageBuilder Append(IReadOnlyCollection<MessageComponent> components) Parameters Type Name Description IReadOnlyCollection < MessageComponent > components Returns Type Description MessageBuilder | Improve this Doc View Source Append(String) Declaration public MessageBuilder Append(string value) Parameters Type Name Description String value Returns Type Description MessageBuilder | Improve this Doc View Source Append(String, ComponentStyles) Declaration public MessageBuilder Append(string value, ComponentStyles styles) Parameters Type Name Description String value ComponentStyles styles Returns Type Description MessageBuilder | Improve this Doc View Source Append(String, Int32) Declaration public MessageBuilder Append(string value, int offset) Parameters Type Name Description String value Int32 offset Returns Type Description MessageBuilder | Improve this Doc View Source Append(String, Int32, ComponentStyles) Declaration public MessageBuilder Append(string value, int offset, ComponentStyles styles) Parameters Type Name Description String value Int32 offset ComponentStyles styles Returns Type Description MessageBuilder | Improve this Doc View Source Append(String, Int32, Int32) Declaration public MessageBuilder Append(string value, int offset, int count) Parameters Type Name Description String value Int32 offset Int32 count Returns Type Description MessageBuilder | Improve this Doc View Source Append(String, Int32, Int32, ComponentStyles) Declaration public MessageBuilder Append(string value, int offset, int count, ComponentStyles styles) Parameters Type Name Description String value Int32 offset Int32 count ComponentStyles styles Returns Type Description MessageBuilder | Improve this Doc View Source AppendLine(String) Declaration public MessageBuilder AppendLine(string value) Parameters Type Name Description String value Returns Type Description MessageBuilder | Improve this Doc View Source AppendLine(String, ComponentStyles) Declaration public MessageBuilder AppendLine(string value, ComponentStyles styles) Parameters Type Name Description String value ComponentStyles styles Returns Type Description MessageBuilder | Improve this Doc View Source AppendLine(String, Int32) Declaration public MessageBuilder AppendLine(string value, int offset) Parameters Type Name Description String value Int32 offset Returns Type Description MessageBuilder | Improve this Doc View Source AppendLine(String, Int32, ComponentStyles) Declaration public MessageBuilder AppendLine(string value, int offset, ComponentStyles styles) Parameters Type Name Description String value Int32 offset ComponentStyles styles Returns Type Description MessageBuilder | Improve this Doc View Source AppendLine(String, Int32, Int32) Declaration public MessageBuilder AppendLine(string value, int offset, int count) Parameters Type Name Description String value Int32 offset Int32 count Returns Type Description MessageBuilder | Improve this Doc View Source AppendLine(String, Int32, Int32, ComponentStyles) Declaration public MessageBuilder AppendLine(string value, int offset, int count, ComponentStyles styles) Parameters Type Name Description String value Int32 offset Int32 count ComponentStyles styles Returns Type Description MessageBuilder | Improve this Doc View Source Clear() Clears the value of the MessageBuilder . Declaration public void Clear() Remarks Components are hold internally by an array, the Clear() method only resets the count of components stored in the array. If you want to clear the references as well use Reset() . See Also Reset() | Improve this Doc View Source Code(String) Declaration public MessageBuilder Code(string content) Parameters Type Name Description String content Returns Type Description MessageBuilder | Improve this Doc View Source Code(String, String, Boolean) Declaration public MessageBuilder Code(string content, string language, bool escape = true) Parameters Type Name Description String content String language Boolean escape Returns Type Description MessageBuilder | Improve this Doc View Source CopyTo(Span<Char>) Copies the value of the MessageBuilder to the specified memory . Declaration public void CopyTo(Span<char> memory) Parameters Type Name Description Span < Char > memory the memory to copy the MessageBuilder value to. | Improve this Doc View Source Emote(Emoji) Declaration public MessageBuilder Emote(Emoji emoji) Parameters Type Name Description Emoji emoji Returns Type Description MessageBuilder | Improve this Doc View Source Emote(IEmote) Declaration public MessageBuilder Emote(IEmote emote) Parameters Type Name Description IEmote emote Returns Type Description MessageBuilder | Improve this Doc View Source Mention(IMentionable) Declaration public MessageBuilder Mention(IMentionable entity) Parameters Type Name Description IMentionable entity Returns Type Description MessageBuilder | Improve this Doc View Source MentionEveryone() Declaration public MessageBuilder MentionEveryone() Returns Type Description MessageBuilder | Improve this Doc View Source MentionHere() Declaration public MessageBuilder MentionHere() Returns Type Description MessageBuilder | Improve this Doc View Source Reset() Resets the MessageBuilder to its initial state. Declaration public void Reset() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() | Improve this Doc View Source TrimExcess() Sets the capacity to the actual number of components, if that number is less than a threshold value. Declaration public void TrimExcess() Remarks The threshold is calculated using Capacity * 0.9D"
  },
  "api/Strade.Formatting.MessageComponent.html": {
    "href": "api/Strade.Formatting.MessageComponent.html",
    "title": "Struct MessageComponent | Strade Developer Documentation",
    "keywords": "Struct MessageComponent Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Formatting Assembly : Strade.Rest.dll Syntax public struct MessageComponent Constructors | Improve this Doc View Source MessageComponent(ReadOnlyMemory<Char>, ComponentStyles) Declaration public MessageComponent(ReadOnlyMemory<char> data, ComponentStyles styles = ComponentStyles.None) Parameters Type Name Description ReadOnlyMemory < Char > data ComponentStyles styles Properties | Improve this Doc View Source Data Declaration public ReadOnlyMemory<char> Data { get; } Property Value Type Description ReadOnlyMemory < Char > | Improve this Doc View Source Length Declaration public int Length { get; } Property Value Type Description Int32 | Improve this Doc View Source Styles Declaration public ComponentStyles Styles { get; } Property Value Type Description ComponentStyles Methods | Improve this Doc View Source CopyTo(Span<Char>) Declaration public int CopyTo(Span<char> memory) Parameters Type Name Description Span < Char > memory Returns Type Description Int32"
  },
  "api/Strade.Formatting.MessageHelper.html": {
    "href": "api/Strade.Formatting.MessageHelper.html",
    "title": "Class MessageHelper | Strade Developer Documentation",
    "keywords": "Class MessageHelper Inheritance Object MessageHelper Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Formatting Assembly : Strade.Rest.dll Syntax public static class MessageHelper Fields | Improve this Doc View Source EscapeCharacter Declaration public const char EscapeCharacter = '\\\\' Field Value Type Description Char Properties | Improve this Doc View Source SpecialCharacters Declaration public static IReadOnlyList<char> SpecialCharacters { get; } Property Value Type Description IReadOnlyList < Char > Methods | Improve this Doc View Source Escape(String) Declaration public static string Escape(string value) Parameters Type Name Description String value Returns Type Description String | Improve this Doc View Source IsSpecialCharacter(Char) Declaration public static bool IsSpecialCharacter(char character) Parameters Type Name Description Char character Returns Type Description Boolean"
  },
  "api/Strade.Gateway.BotGatewayInformation.html": {
    "href": "api/Strade.Gateway.BotGatewayInformation.html",
    "title": "Class BotGatewayInformation | Strade Developer Documentation",
    "keywords": "Class BotGatewayInformation Holds the information about how to connect to the gateway (for bots). Inheritance Object UserGatewayInformation BotGatewayInformation Inherited Members UserGatewayInformation.Uri Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Gateway Assembly : Strade.Rest.dll Syntax public class BotGatewayInformation : UserGatewayInformation Constructors | Improve this Doc View Source BotGatewayInformation(BotGatewayInformationModel) Declaration public BotGatewayInformation(BotGatewayInformationModel model) Parameters Type Name Description BotGatewayInformationModel model Properties | Improve this Doc View Source RecommendedShards Gets the recommended number of shards to use when connecting. Declaration public int RecommendedShards { get; } Property Value Type Description Int32 the recommended number of shards to use when connecting. | Improve this Doc View Source SessionStartInformation Gets information about how often the bot can start a session. Declaration public SessionStartInformation SessionStartInformation { get; } Property Value Type Description SessionStartInformation information about how often the bot can start a session. Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides UserGatewayInformation.ToString()"
  },
  "api/Strade.Gateway.html": {
    "href": "api/Strade.Gateway.html",
    "title": "Namespace Strade.Gateway | Strade Developer Documentation",
    "keywords": "Namespace Strade.Gateway Classes BotGatewayInformation Holds the information about how to connect to the gateway (for bots). SessionStartInformation Represents the session start limit information. UserGatewayInformation Holds the information about how to connect to the gateway (for bots and clients)."
  },
  "api/Strade.Gateway.SessionStartInformation.html": {
    "href": "api/Strade.Gateway.SessionStartInformation.html",
    "title": "Class SessionStartInformation | Strade Developer Documentation",
    "keywords": "Class SessionStartInformation Represents the session start limit information. Inheritance Object SessionStartInformation Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Gateway Assembly : Strade.Rest.dll Syntax public sealed class SessionStartInformation Constructors | Improve this Doc View Source SessionStartInformation(SessionStartInformationModel) Declaration public SessionStartInformation(SessionStartInformationModel model) Parameters Type Name Description SessionStartInformationModel model | Improve this Doc View Source SessionStartInformation(DateTimeOffset, Int32, Int32) Declaration public SessionStartInformation(DateTimeOffset resetAfter, int sessionsRemaining, int totalSessions) Parameters Type Name Description DateTimeOffset resetAfter Int32 sessionsRemaining Int32 totalSessions Properties | Improve this Doc View Source ResetAfter Gets the number of milliseconds after which the limit resets. Declaration public DateTimeOffset ResetAfter { get; } Property Value Type Description DateTimeOffset the number of milliseconds after which the limit resets. | Improve this Doc View Source SessionsRemaining Gets the number of sessions start remaining for the bot user. Declaration public int SessionsRemaining { get; } Property Value Type Description Int32 the number of sessions start remaining for the bot user. | Improve this Doc View Source TotalSessions Gets the number of total sessions the bot user is allowed to start. Declaration public int TotalSessions { get; } Property Value Type Description Int32 the number of total sessions the bot user is allowed to start."
  },
  "api/Strade.Gateway.UserGatewayInformation.html": {
    "href": "api/Strade.Gateway.UserGatewayInformation.html",
    "title": "Class UserGatewayInformation | Strade Developer Documentation",
    "keywords": "Class UserGatewayInformation Holds the information about how to connect to the gateway (for bots and clients). Inheritance Object UserGatewayInformation BotGatewayInformation Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Gateway Assembly : Strade.Rest.dll Syntax public class UserGatewayInformation Constructors | Improve this Doc View Source UserGatewayInformation(UserGatewayInformationModel) Declaration public UserGatewayInformation(UserGatewayInformationModel model) Parameters Type Name Description UserGatewayInformationModel model | Improve this Doc View Source UserGatewayInformation(String) Declaration public UserGatewayInformation(string uri) Parameters Type Name Description String uri Properties | Improve this Doc View Source Uri Gets the WebSocket URI endpoint for the discord gateway to connect to. Declaration public string Uri { get; } Property Value Type Description String the WebSocket URI endpoint for the discord gateway to connect to. Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Strade.GatewayConnection.html": {
    "href": "api/Strade.GatewayConnection.html",
    "title": "Class GatewayConnection | Strade Developer Documentation",
    "keywords": "Class GatewayConnection A minimal implementation of a WebSocket connection that is able to maintain an active connection to the discord gateway which handles control payloads, for example Hello ( Hello ) and other payloads and events required to keep connected to the discord gateway. Inheritance Object GatewayConnection Implements IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade Assembly : Strade.dll Syntax public class GatewayConnection : IDisposable Constructors | Improve this Doc View Source GatewayConnection(PayloadHandler, IWebSocket, String, DiscordClientConfiguration, JsonSerializerOptions, Nullable<ShardingInformation>, ILogger) Declaration public GatewayConnection(PayloadHandler handler, IWebSocket webSocket, string label, DiscordClientConfiguration configuration, JsonSerializerOptions serializerOptions, ShardingInformation? shardingInformation = default(ShardingInformation? ), ILogger logger = null) Parameters Type Name Description PayloadHandler handler IWebSocket webSocket String label DiscordClientConfiguration configuration JsonSerializerOptions serializerOptions Nullable < ShardingInformation > shardingInformation ILogger logger Fields | Improve this Doc View Source GatewayVersion The supported gateway version number. Declaration public const int GatewayVersion = 8 Field Value Type Description Int32 Properties | Improve this Doc View Source IsOpen Gets a value indicating whether the WebSocket connection is open. Declaration public bool IsOpen { get; } Property Value Type Description Boolean a value indicating whether the WebSocket connection is open. | Improve this Doc View Source Label Declaration public string Label { get; } Property Value Type Description String | Improve this Doc View Source Latency Declaration public TimeSpan? Latency { get; } Property Value Type Description Nullable < TimeSpan > | Improve this Doc View Source Logger Declaration public ILogger Logger { get; } Property Value Type Description ILogger | Improve this Doc View Source RateLimiter Gets the rate limiter used to reduce the rate of gateway payloads. Declaration public GatewayRateLimiter RateLimiter { get; } Property Value Type Description GatewayRateLimiter the rate limiter used to reduce the rate of gateway payloads. Remarks See also https://discord.com/developers/docs/topics/gateway#rate-limiting for more details. | Improve this Doc View Source SessionId Declaration public string SessionId { get; } Property Value Type Description String | Improve this Doc View Source ShardingInformation Declaration public ShardingInformation ShardingInformation { get; } Property Value Type Description ShardingInformation | Improve this Doc View Source WebSocket Gets the underlying WebSocket. Declaration public IWebSocket WebSocket { get; } Property Value Type Description IWebSocket the underlying WebSocket. Methods | Improve this Doc View Source CloseAsync(GatewayCloseCode, String, CancellationToken) Closes the connection to the gateway asynchronously. Declaration public Task CloseAsync(GatewayCloseCode closeCode, string reason = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GatewayCloseCode closeCode the close code indicating why the connection should be closed. String reason the reason indicating why the connection should be closed; or null to supply no reason. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Remarks If not connected this will do a no-op. | Improve this Doc View Source CloseAsync(WebSocketCloseCode, String, CancellationToken) Closes the connection to the gateway asynchronously. Declaration public Task CloseAsync(WebSocketCloseCode closeCode, string reason = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description WebSocketCloseCode closeCode the close code indicating why the connection should be closed. String reason the reason indicating why the connection should be closed; or null to supply no reason. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Remarks If not connected this will do a no-op. | Improve this Doc View Source CloseAsync(UInt16, String, CancellationToken) Closes the connection to the gateway asynchronously. Declaration public Task CloseAsync(ushort closeCode, string reason = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description UInt16 closeCode the close code indicating why the connection should be closed. String reason the reason indicating why the connection should be closed; or null to supply no reason. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Remarks If not connected this will do a no-op. | Improve this Doc View Source ConnectAsync(Uri, CancellationToken) Declaration public Task ConnectAsync(Uri uri, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Uri uri CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ConvertCloseCode(Nullable<WebSocketCloseCode>) Declaration protected static GatewayCloseCode ConvertCloseCode(WebSocketCloseCode? closeCode) Parameters Type Name Description Nullable < WebSocketCloseCode > closeCode Returns Type Description GatewayCloseCode | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source GetReconnectBehavior(GatewayCloseCode, Boolean) Declaration protected virtual GatewayReconnectBehavior GetReconnectBehavior(GatewayCloseCode closeCode, bool byRemote = false) Parameters Type Name Description GatewayCloseCode closeCode Boolean byRemote Returns Type Description GatewayReconnectBehavior | Improve this Doc View Source HandleConnectionClosedAsync(GatewayCloseCode, String, Boolean) Declaration protected virtual Task HandleConnectionClosedAsync(GatewayCloseCode closeCode, string statusDescription, bool byRemote = false) Parameters Type Name Description GatewayCloseCode closeCode String statusDescription Boolean byRemote Returns Type Description Task | Improve this Doc View Source HandleEventAsync(ref Utf8JsonReader, ref PayloadSerializationContext) Declaration protected virtual ValueTask HandleEventAsync(ref Utf8JsonReader jsonReader, ref PayloadSerializationContext serializationContext) Parameters Type Name Description Utf8JsonReader jsonReader PayloadSerializationContext serializationContext Returns Type Description ValueTask | Improve this Doc View Source HandleHeartbeatAsync(DateTimeOffset) Declaration protected virtual Task HandleHeartbeatAsync(DateTimeOffset timeReceived) Parameters Type Name Description DateTimeOffset timeReceived Returns Type Description Task | Improve this Doc View Source HandleHelloAsync(HelloPayload) Declaration protected virtual Task HandleHelloAsync(HelloPayload payload) Parameters Type Name Description HelloPayload payload Returns Type Description Task | Improve this Doc View Source HandleInvalidSessionAsync(Boolean) Declaration protected virtual Task HandleInvalidSessionAsync(bool mayResume = false) Parameters Type Name Description Boolean mayResume Returns Type Description Task | Improve this Doc View Source HandleReconnectAsync() Declaration protected virtual Task HandleReconnectAsync() Returns Type Description Task | Improve this Doc View Source InitializeHeartbeat(TimeSpan) Declaration protected virtual void InitializeHeartbeat(TimeSpan interval) Parameters Type Name Description TimeSpan interval | Improve this Doc View Source OnConnectionClosedAsync(ConnectionClosedEventArgs) Dispatches the ConnectionClosed event asynchronously. Declaration protected virtual Task OnConnectionClosedAsync(ConnectionClosedEventArgs eventArgs) Parameters Type Name Description ConnectionClosedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnLatencyUpdatedAsync(LatencyUpdatedEventArgs) Dispatches the LatencyUpdated event asynchronously. Declaration protected virtual Task OnLatencyUpdatedAsync(LatencyUpdatedEventArgs eventArgs) Parameters Type Name Description LatencyUpdatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnReadyAsync(ConnectionReadyEventArgs) Dispatches the Ready event asynchronously. Declaration protected virtual Task OnReadyAsync(ConnectionReadyEventArgs eventArgs) Parameters Type Name Description ConnectionReadyEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source ReconnectAsync(GatewayCloseCode, String, Boolean, CancellationToken) Reconnects to the gateway asynchronously. Declaration public Task ReconnectAsync(GatewayCloseCode closeCode, string reason = null, bool allowResume = true, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GatewayCloseCode closeCode the close code indicating why the connection should be closed. String reason the reason indicating why the connection should be closed; or null to supply no reason. Boolean allowResume a value indicating whether it is allowed to resume the old session if there is any. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Remarks The close code 4006 is used when reconnecting to avoid session invalidation by the discord gateway. | Improve this Doc View Source ReconnectAsync(WebSocketCloseCode, String, Boolean, CancellationToken) Reconnects to the gateway asynchronously. Declaration public Task ReconnectAsync(WebSocketCloseCode closeCode, string reason = null, bool allowResume = true, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description WebSocketCloseCode closeCode the close code indicating why the connection should be closed. String reason the reason indicating why the connection should be closed; or null to supply no reason. Boolean allowResume a value indicating whether it is allowed to resume the old session if there is any. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Remarks The close code 4006 is used when reconnecting to avoid session invalidation by the discord gateway. | Improve this Doc View Source ReconnectAsync(String, Boolean, CancellationToken) Reconnects to the gateway asynchronously. Declaration public Task ReconnectAsync(string reason = null, bool allowResume = true, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String reason the reason indicating why the connection should be closed; or null to supply no reason. Boolean allowResume a value indicating whether it is allowed to resume the old session if there is any. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Remarks The close code 4006 is used when reconnecting to avoid session invalidation by the discord gateway. | Improve this Doc View Source ReconnectAsync(UInt16, String, Boolean, CancellationToken) Reconnects to the gateway asynchronously. Declaration public Task ReconnectAsync(ushort closeCode, string reason = null, bool allowResume = true, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description UInt16 closeCode the close code indicating why the connection should be closed. String reason the reason indicating why the connection should be closed; or null to supply no reason. Boolean allowResume a value indicating whether it is allowed to resume the old session if there is any. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Remarks The close code 4006 is used when reconnecting to avoid session invalidation by the discord gateway. | Improve this Doc View Source SendAsync(OpCode, Object, CancellationToken) Declaration public Task SendAsync(OpCode opCode, object data, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description OpCode opCode Object data CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source SendHeartbeatAsync(CancellationToken) Declaration protected Task SendHeartbeatAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source SendIdentifyAsync(CancellationToken) Sends the identify payload asynchronously. Declaration protected Task SendIdentifyAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source SendResumeAsync(CancellationToken) Sends a resume payload to the gateway asynchronously. Declaration protected Task SendResumeAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source UpdatePresenceAsync(Presence, CancellationToken) Updates the client's presence asynchronously. Declaration public Task UpdatePresenceAsync(Presence presence, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Presence presence the client presence. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Events | Improve this Doc View Source ConnectionClosed Asynchronous event which is dispatched when the connection to the gateway was closed. Declaration public event AsyncEventHandler<ConnectionClosedEventArgs> ConnectionClosed Event Type Type Description AsyncEventHandler < ConnectionClosedEventArgs > | Improve this Doc View Source LatencyUpdated Asynchronous event which is dispatched when the connection's latency was updated. Declaration public event AsyncEventHandler<LatencyUpdatedEventArgs> LatencyUpdated Event Type Type Description AsyncEventHandler < LatencyUpdatedEventArgs > | Improve this Doc View Source Ready Asynchronous event which is dispatched when the connection is ready. Declaration public event AsyncEventHandler<ConnectionReadyEventArgs> Ready Event Type Type Description AsyncEventHandler < ConnectionReadyEventArgs > Implements System.IDisposable"
  },
  "api/Strade.GatewayIntents.html": {
    "href": "api/Strade.GatewayIntents.html",
    "title": "Enum GatewayIntents | Strade Developer Documentation",
    "keywords": "Enum GatewayIntents An enumeration defining all possible gateway intent flags. Namespace : Strade Assembly : Strade.dll Syntax [Flags] [JsonConverter(typeof(NumericEnumConverter<GatewayIntents>))] public enum GatewayIntents : short Remarks See https://discord.com/developers/docs/topics/gateway#list-of-intents for more details. Fields Name Description All Denotes that all intents are specified. DirectMessageReactions Denotes that the DIRECT_MESSAGE_REACTIONS intent is specified ( 1 << 13 or 8192 ). DirectMessages Denotes that the DIRECT_MESSAGES intent is specified ( 1 << 12 or 4096 ). DirectMessageTyping Denotes that the DIRECT_MESSAGE_TYPING intent is specified ( 1 << 14 or 16384 ). GuildBans Denotes that the GUILD_BANS intent is specified ( 1 << 2 or 4 ). GuildEmojis Denotes that the GUILD_EMOJIS intent is specified ( 1 << 3 or 8 ). GuildIntegrations Denotes that the GUILD_INTEGRATIONS intent is specified ( 1 << 4 or 16 ). GuildInvites Denotes that the GUILD_INVITES intent is specified ( 1 << 6 or 64 ). GuildMembers Denotes that the GUILD_MEMBERS intent is specified ( 1 << 1 or 2 ). GuildMessageReactions Denotes that the GUILD_MESSAGE_REACTIONS intent is specified ( 1 << 10 or 1024 ). GuildMessages Denotes that the GUILD_MESSAGES intent is specified ( 1 << 9 or 512 ). GuildMessageTyping Denotes that the GUILD_MESSAGE_TYPING intent is specified ( 1 << 11 or 2048 ). GuildPresences Denotes that the GUILD_PRESENCES intent is specified ( 1 << 8 or 256 ). Guilds Denotes that the GUILDS intent is specified ( 1 << 0 or 1 ). GuildVoiceStates Denotes that the GUILD_VOICE_STATES intent is specified ( 1 << 7 or 128 ). GuildWebhooks Denotes that the GUILD_INTEGRATIONS intent is specified ( 1 << 5 or 32 ). None Denotes that none intents are specified. Extension Methods EnumExtensions.GetName<GatewayIntents>() EnumExtensions.IsDefined()"
  },
  "api/Strade.GuildExtensions.html": {
    "href": "api/Strade.GuildExtensions.html",
    "title": "Class GuildExtensions | Strade Developer Documentation",
    "keywords": "Class GuildExtensions Provides extension methods for the RestGuild class. Inheritance Object GuildExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade Assembly : Strade.dll Syntax public static class GuildExtensions Methods | Improve this Doc View Source DisconnectVoiceAsync(IGuild, CancellationToken) Disconnects from the current voice channel asynchronously. Declaration public static Task DisconnectVoiceAsync(this IGuild guild, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IGuild guild the guild to disconnect from. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified guild is null ."
  },
  "api/Strade.html": {
    "href": "api/Strade.html",
    "title": "Namespace Strade | Strade Developer Documentation",
    "keywords": "Namespace Strade Classes AuthenticationCredentials An union representing authentication credentials for the Discord REST / Gateway interface. BaseDiscordRestClient Base abstraction of an IDiscordRestClient . BaseRestApiClient Basic abstraction of a discord RESTful API client. BaseRestClientConfiguration Abstraction for RESTful HTTP client configurations. DiscordClient A discord client that manages connections, sharding, caching and handling of connection events. DiscordClientConfiguration The configuration for the DiscordClient . DiscordRestApiClient The base RESTful API client for the discord RESTful API service. DiscordRestClient A client for the discord RESTful HTTP API ( https://discord.com/api/v8/ ). GatewayConnection A minimal implementation of a WebSocket connection that is able to maintain an active connection to the discord gateway which handles control payloads, for example Hello ( Hello ) and other payloads and events required to keep connected to the discord gateway. GuildExtensions Provides extension methods for the RestGuild class. MemberExtensions Provides extension methods for the Member class. MessageReactionRemoveEmojiEvent The payload for the Message Reaction Remove Emoji event. OAuth2Scope Constants for the discord's OAuth2 authorization scopes (see https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes for more details). PayloadHandler RestClientConfiguration The configuration for the DiscordRestClient class. ShardingConfiguration VoiceChannelExtensions Provides extension methods for the IVoiceChannel interface. WebhookClient WebhookUtil An utility class used for parsing Webhook URIs. Interfaces IDiscordRestClient Interface for basic discord clients. Enums AuthenticationTokenType A set of different authentication token types. GatewayIntents An enumeration defining all possible gateway intent flags."
  },
  "api/Strade.IDiscordRestClient.html": {
    "href": "api/Strade.IDiscordRestClient.html",
    "title": "Interface IDiscordRestClient | Strade Developer Documentation",
    "keywords": "Interface IDiscordRestClient Interface for basic discord clients. Inherited Members IDisposable.Dispose() Namespace : Strade Assembly : Strade.Rest.dll Syntax public interface IDiscordRestClient : IDisposable Properties | Improve this Doc View Source ApiClient Gets the underlying API client. Declaration DiscordRestApiClient ApiClient { get; } Property Value Type Description DiscordRestApiClient the underlying API client. Methods | Improve this Doc View Source CreateGuildAsync(GuildCreationProperties, CancellationToken) Creates a new guild asynchronously. Declaration Task<IGuild> CreateGuildAsync(GuildCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GuildCreationProperties properties the creation properties. CancellationToken cancellationToken Returns Type Description Task < IGuild > a task that represents the asynchronous operation. The task result is the created entity. | Improve this Doc View Source GetApplicationIdAsync(CancellationToken) Declaration ValueTask<Snowflake> GetApplicationIdAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask < Snowflake > | Improve this Doc View Source GetCategoryAsync(Snowflake, CacheBehavior, CancellationToken) Gets a category (channel) asynchronously. Declaration ValueTask<ICategory> GetCategoryAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id the channel snowflake identifier. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < ICategory > a task that represents the asynchronous operation. The task result is the category (channel). | Improve this Doc View Source GetChannelAsync(Snowflake, CacheBehavior, CancellationToken) Gets a channel asynchronously. Declaration ValueTask<IChannel> GetChannelAsync(Snowflake channelId, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the channel snowflake identifier. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IChannel > a task that represents the asynchronous operation. The task result is the channel. | Improve this Doc View Source GetChannelAsync<TChannel>(Snowflake, CacheBehavior, CancellationToken) Gets a channel asynchronously. Declaration ValueTask<TChannel> GetChannelAsync<TChannel>(Snowflake channelId, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) where TChannel : IChannel Parameters Type Name Description Snowflake channelId the channel snowflake identifier. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask <TChannel> a task that represents the asynchronous operation. The task result is the channel. Type Parameters Name Description TChannel the type of the channel. | Improve this Doc View Source GetCurrentApplicationAsync(CancellationToken) Gets the current application information asynchronously. Declaration Task<ApplicationInformation> GetCurrentApplicationAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < ApplicationInformation > a task that represents the asynchronous operation. The task result is the current user information. | Improve this Doc View Source GetCurrentUserAsync(CancellationToken) Gets the current user asynchronously. Declaration ValueTask<CurrentUser> GetCurrentUserAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask < CurrentUser > a task that represents the asynchronous operation. The task result is the current user information. | Improve this Doc View Source GetGroupChannelAsync(Snowflake, CacheBehavior, CancellationToken) Gets a group channel asynchronously. Declaration ValueTask<IGroupChannel> GetGroupChannelAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id the channel snowflake identifier. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IGroupChannel > a task that represents the asynchronous operation. The task result is the group channel. | Improve this Doc View Source GetGuildAsync(Snowflake, CacheBehavior, CancellationToken) Gets a guild asynchronously. Declaration ValueTask<IGuild> GetGuildAsync(Snowflake guildId, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the guild snowflake identifier. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IGuild > a task that represents the asynchronous operation. The task result is the guild. | Improve this Doc View Source GetInviteAsync(String, CancellationToken) Gets an invite asynchronously. Declaration Task<Invite> GetInviteAsync(string code, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String code the invite code. CancellationToken cancellationToken Returns Type Description Task < Invite > a task that represents the asynchronous operation. The task result is the invite. | Improve this Doc View Source GetMessageAsync(Snowflake, Snowflake, CancellationToken) Gets a message asynchronously. Declaration ValueTask<IMessage> GetMessageAsync(Snowflake channelId, Snowflake messageId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the channel snowflake identifier. Snowflake messageId the message snowflake identifier. CancellationToken cancellationToken Returns Type Description ValueTask < IMessage > a task that represents the asynchronous operation. The task result is the message. | Improve this Doc View Source GetNewsChannelAsync(Snowflake, CacheBehavior, CancellationToken) Gets an announcement channel asynchronously. Declaration ValueTask<INewsChannel> GetNewsChannelAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id the channel snowflake identifier. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < INewsChannel > a task that represents the asynchronous operation. The task result is the announcement channel. | Improve this Doc View Source GetOptimalVoiceRegionAsync(CancellationToken) Gets the best voice region for the client asynchronously. Declaration Task<VoiceRegion> GetOptimalVoiceRegionAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < VoiceRegion > a task that represents the asynchronous operation. The task result is the best voice region for the current client. | Improve this Doc View Source GetPrivateChannelAsync(Snowflake, CacheBehavior, CancellationToken) Gets a private channel asynchronously. Declaration ValueTask<IPrivateChannel> GetPrivateChannelAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id the channel snowflake identifier. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IPrivateChannel > a task that represents the asynchronous operation. The task result is the private channel. | Improve this Doc View Source GetStoreChannelAsync(Snowflake, CacheBehavior, CancellationToken) Gets a store channel asynchronously. Declaration ValueTask<IStoreChannel> GetStoreChannelAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id the channel snowflake identifier. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IStoreChannel > a task that represents the asynchronous operation. The task result is the store channel. | Improve this Doc View Source GetTextChannelAsync(Snowflake, CacheBehavior, CancellationToken) Gets a text channel asynchronously. Declaration ValueTask<ITextChannel> GetTextChannelAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id the channel snowflake identifier. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < ITextChannel > a task that represents the asynchronous operation. The task result is the text channel. | Improve this Doc View Source GetUserAsync(Snowflake, CacheBehavior, CancellationToken) Gets an user asynchronously. Declaration ValueTask<User> GetUserAsync(Snowflake userId, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake userId the user snowflake identifier. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < User > a task that represents the asynchronous operation. The task result is the user. | Improve this Doc View Source GetUserConnectionsAsync(CancellationToken) Gets a list of the connections of the current user asynchronously. Declaration Task<IReadOnlyList<UserConnection>> GetUserConnectionsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < UserConnection >> a task that represents the asynchronous operation. The task result is a list of the connections of the current user. | Improve this Doc View Source GetUserGuildsAsync(Int32) Gets an async enumerable ( IAsyncEnumerable<T> ) that enumerates through the user guilds asynchronously. Declaration IAsyncEnumerable<UserGuildInformation> GetUserGuildsAsync(int limit = 100) Parameters Type Name Description Int32 limit the maximum number of guilds to return. Returns Type Description IAsyncEnumerable < UserGuildInformation > an async enumerable ( IAsyncEnumerable<T> ) that enumerates through the user guilds asynchronously. | Improve this Doc View Source GetVoiceChannelAsync(Snowflake, CacheBehavior, CancellationToken) Gets a voice channel asynchronously. Declaration ValueTask<IVoiceChannel> GetVoiceChannelAsync(Snowflake id, CacheBehavior cacheBehavior = CacheBehavior.AllowDownload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake id the channel snowflake identifier. CacheBehavior cacheBehavior CancellationToken cancellationToken Returns Type Description ValueTask < IVoiceChannel > a task that represents the asynchronous operation. The task result is the voice channel. | Improve this Doc View Source GetVoiceRegionsAsync(CancellationToken) Gets all available voice regions asynchronously. Declaration Task<IReadOnlyList<VoiceRegion>> GetVoiceRegionsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < VoiceRegion >> a task that represents the asynchronous operation. The task result is a list of all available voice regions. | Improve this Doc View Source GetWebhookAsync(Snowflake, CancellationToken) Gets a webhook asynchronously. Declaration Task<Webhook> GetWebhookAsync(Snowflake webhookId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake webhookId the webhook snowflake identifier. CancellationToken cancellationToken Returns Type Description Task < Webhook > a task that represents the asynchronous operation. The task result is the webhook. | Improve this Doc View Source OpenChannelAsync(GroupChannelCreationProperties, CancellationToken) Opens a new direct group message channel asynchronously. Declaration ValueTask<IGroupChannel> OpenChannelAsync(GroupChannelCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GroupChannelCreationProperties properties the creation properties. CancellationToken cancellationToken Returns Type Description ValueTask < IGroupChannel > a task that represents the asynchronous operation. The task result is the created entity. | Improve this Doc View Source OpenChannelAsync(PrivateChannelCreationProperties, CancellationToken) Opens a new direct message channel asynchronously. Declaration ValueTask<IPrivateChannel> OpenChannelAsync(PrivateChannelCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description PrivateChannelCreationProperties properties the creation properties. CancellationToken cancellationToken Returns Type Description ValueTask < IPrivateChannel > a task that represents the asynchronous operation. The task result is the created entity. | Improve this Doc View Source OpenChannelAsync(Snowflake, CancellationToken) Opens a new direct message channel asynchronously. Declaration ValueTask<IPrivateChannel> OpenChannelAsync(Snowflake recipientId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake recipientId the snowflake identifier of the recipient user. CancellationToken cancellationToken Returns Type Description ValueTask < IPrivateChannel > a task that represents the asynchronous operation. The task result is the created entity."
  },
  "api/Strade.Interactions.Configuration.html": {
    "href": "api/Strade.Interactions.Configuration.html",
    "title": "Namespace Strade.Interactions.Configuration | Strade Developer Documentation",
    "keywords": "Namespace Strade.Interactions.Configuration Classes InteractionsEndpoint InteractionsServerConfiguration"
  },
  "api/Strade.Interactions.Configuration.InteractionsEndpoint.html": {
    "href": "api/Strade.Interactions.Configuration.InteractionsEndpoint.html",
    "title": "Class InteractionsEndpoint | Strade Developer Documentation",
    "keywords": "Class InteractionsEndpoint Inheritance Object InteractionsEndpoint Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactions.Configuration Assembly : Strade.Interactions.dll Syntax public class InteractionsEndpoint Properties | Improve this Doc View Source Behavior Declaration public InteractionsEndpointBehavior Behavior { get; set; } Property Value Type Description InteractionsEndpointBehavior | Improve this Doc View Source InteractionsHandler Declaration public IInteractionsHandler InteractionsHandler { get; set; } Property Value Type Description IInteractionsHandler | Improve this Doc View Source IsProxied Declaration public bool IsProxied { get; set; } Property Value Type Description Boolean | Improve this Doc View Source PingBehavior Declaration public InteractionsPingBehavior PingBehavior { get; set; } Property Value Type Description InteractionsPingBehavior | Improve this Doc View Source PublicKey Declaration public PublicKey PublicKey { get; set; } Property Value Type Description PublicKey | Improve this Doc View Source Route Declaration public string Route { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Validate() Declaration public virtual void Validate()"
  },
  "api/Strade.Interactions.Configuration.InteractionsServerConfiguration.html": {
    "href": "api/Strade.Interactions.Configuration.InteractionsServerConfiguration.html",
    "title": "Class InteractionsServerConfiguration | Strade Developer Documentation",
    "keywords": "Class InteractionsServerConfiguration Inheritance Object InteractionsServerConfiguration Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactions.Configuration Assembly : Strade.Interactions.dll Syntax public class InteractionsServerConfiguration Properties | Improve this Doc View Source AllowedRequestBodySize Declaration public int AllowedRequestBodySize { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Ed25519Provider Declaration public IEd25519 Ed25519Provider { get; set; } Property Value Type Description IEd25519 | Improve this Doc View Source Endpoints Declaration public IReadOnlyList<InteractionsEndpoint> Endpoints { get; set; } Property Value Type Description IReadOnlyList < InteractionsEndpoint > | Improve this Doc View Source Urls Declaration public IReadOnlyList<string> Urls { get; set; } Property Value Type Description IReadOnlyList < String > | Improve this Doc View Source X509Certificate Declaration public X509Certificate2 X509Certificate { get; set; } Property Value Type Description X509Certificate2 Methods | Improve this Doc View Source Validate() Declaration public void Validate()"
  },
  "api/Strade.Interactions.Cryptography.Ed25519Sodium.html": {
    "href": "api/Strade.Interactions.Cryptography.Ed25519Sodium.html",
    "title": "Class Ed25519Sodium | Strade Developer Documentation",
    "keywords": "Class Ed25519Sodium Inheritance Object Ed25519Sodium Implements IEd25519 Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactions.Cryptography Assembly : Strade.Interactions.dll Syntax public class Ed25519Sodium : IEd25519 Methods | Improve this Doc View Source VerifyDetached(ReadOnlySpan<Byte>, ReadOnlySpan<Byte>, ReadOnlySpan<Byte>) Declaration public bool VerifyDetached(ReadOnlySpan<byte> signature, ReadOnlySpan<byte> message, ReadOnlySpan<byte> publicKey) Parameters Type Name Description ReadOnlySpan < Byte > signature ReadOnlySpan < Byte > message ReadOnlySpan < Byte > publicKey Returns Type Description Boolean Implements IEd25519"
  },
  "api/Strade.Interactions.Cryptography.html": {
    "href": "api/Strade.Interactions.Cryptography.html",
    "title": "Namespace Strade.Interactions.Cryptography | Strade Developer Documentation",
    "keywords": "Namespace Strade.Interactions.Cryptography Classes Ed25519Sodium Structs PublicKey Interfaces IEd25519"
  },
  "api/Strade.Interactions.Cryptography.IEd25519.html": {
    "href": "api/Strade.Interactions.Cryptography.IEd25519.html",
    "title": "Interface IEd25519 | Strade Developer Documentation",
    "keywords": "Interface IEd25519 Namespace : Strade.Interactions.Cryptography Assembly : Strade.Interactions.dll Syntax public interface IEd25519 Methods | Improve this Doc View Source VerifyDetached(ReadOnlySpan<Byte>, ReadOnlySpan<Byte>, ReadOnlySpan<Byte>) Declaration bool VerifyDetached(ReadOnlySpan<byte> signature, ReadOnlySpan<byte> message, ReadOnlySpan<byte> publicKey) Parameters Type Name Description ReadOnlySpan < Byte > signature ReadOnlySpan < Byte > message ReadOnlySpan < Byte > publicKey Returns Type Description Boolean"
  },
  "api/Strade.Interactions.Cryptography.PublicKey.html": {
    "href": "api/Strade.Interactions.Cryptography.PublicKey.html",
    "title": "Struct PublicKey | Strade Developer Documentation",
    "keywords": "Struct PublicKey Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Interactions.Cryptography Assembly : Strade.Interactions.dll Syntax public struct PublicKey Constructors | Improve this Doc View Source PublicKey(Byte[]) Declaration public PublicKey(byte[] data) Parameters Type Name Description Byte [] data | Improve this Doc View Source PublicKey(ReadOnlyMemory<Byte>) Declaration public PublicKey(ReadOnlyMemory<byte> data) Parameters Type Name Description ReadOnlyMemory < Byte > data | Improve this Doc View Source PublicKey(String) Declaration public PublicKey(string publicKey) Parameters Type Name Description String publicKey Properties | Improve this Doc View Source Data Declaration public ReadOnlyMemory<byte> Data { get; } Property Value Type Description ReadOnlyMemory < Byte > Operators | Improve this Doc View Source Implicit(Byte[] to PublicKey) Declaration public static implicit operator PublicKey(byte[] data) Parameters Type Name Description Byte [] data Returns Type Description PublicKey | Improve this Doc View Source Implicit(ReadOnlyMemory<Byte> to PublicKey) Declaration public static implicit operator PublicKey(ReadOnlyMemory<byte> data) Parameters Type Name Description ReadOnlyMemory < Byte > data Returns Type Description PublicKey | Improve this Doc View Source Implicit(String to PublicKey) Declaration public static implicit operator PublicKey(string key) Parameters Type Name Description String key Returns Type Description PublicKey"
  },
  "api/Strade.Interactions.html": {
    "href": "api/Strade.Interactions.html",
    "title": "Namespace Strade.Interactions | Strade Developer Documentation",
    "keywords": "Namespace Strade.Interactions Classes InteractionHeaders InteractionsMiddleware InteractionsServer A standalone ASP.NET-hosted interactions server. Interfaces IInteractionsHandler Enums InteractionsEndpointBehavior InteractionsPingBehavior"
  },
  "api/Strade.Interactions.IInteractionsHandler.html": {
    "href": "api/Strade.Interactions.IInteractionsHandler.html",
    "title": "Interface IInteractionsHandler | Strade Developer Documentation",
    "keywords": "Interface IInteractionsHandler Namespace : Strade.Interactions Assembly : Strade.Rest.dll Syntax public interface IInteractionsHandler Methods | Improve this Doc View Source HandleAsync(InteractionModel, InteractionResponseCreationProperties, CancellationToken) Declaration ValueTask HandleAsync(InteractionModel data, InteractionResponseCreationProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description InteractionModel data InteractionResponseCreationProperties properties CancellationToken cancellationToken Returns Type Description ValueTask"
  },
  "api/Strade.Interactions.InteractionHeaders.html": {
    "href": "api/Strade.Interactions.InteractionHeaders.html",
    "title": "Class InteractionHeaders | Strade Developer Documentation",
    "keywords": "Class InteractionHeaders Inheritance Object InteractionHeaders Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactions Assembly : Strade.Interactions.dll Syntax public static class InteractionHeaders Fields | Improve this Doc View Source Signature Declaration public const string Signature = \"X-Signature-Ed25519\" Field Value Type Description String | Improve this Doc View Source SignatureTimestamp Declaration public const string SignatureTimestamp = \"X-Signature-Timestamp\" Field Value Type Description String"
  },
  "api/Strade.Interactions.InteractionsEndpointBehavior.html": {
    "href": "api/Strade.Interactions.InteractionsEndpointBehavior.html",
    "title": "Enum InteractionsEndpointBehavior | Strade Developer Documentation",
    "keywords": "Enum InteractionsEndpointBehavior Namespace : Strade.Interactions Assembly : Strade.Interactions.dll Syntax public enum InteractionsEndpointBehavior : byte Fields Name Description Passthrough Terminative Extension Methods EnumExtensions.GetName<InteractionsEndpointBehavior>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Interactions.InteractionsMiddleware.html": {
    "href": "api/Strade.Interactions.InteractionsMiddleware.html",
    "title": "Class InteractionsMiddleware | Strade Developer Documentation",
    "keywords": "Class InteractionsMiddleware Inheritance Object InteractionsMiddleware Implements IMiddleware Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactions Assembly : Strade.Interactions.dll Syntax public sealed class InteractionsMiddleware : IMiddleware Constructors | Improve this Doc View Source InteractionsMiddleware(InteractionsServerConfiguration) Declaration public InteractionsMiddleware(InteractionsServerConfiguration configuration) Parameters Type Name Description InteractionsServerConfiguration configuration Methods | Improve this Doc View Source InvokeAsync(HttpContext, RequestDelegate) Declaration public Task InvokeAsync(HttpContext context, RequestDelegate nextRequest) Parameters Type Name Description HttpContext context RequestDelegate nextRequest Returns Type Description Task Implements Microsoft.AspNetCore.Http.IMiddleware"
  },
  "api/Strade.Interactions.InteractionsPingBehavior.html": {
    "href": "api/Strade.Interactions.InteractionsPingBehavior.html",
    "title": "Enum InteractionsPingBehavior | Strade Developer Documentation",
    "keywords": "Enum InteractionsPingBehavior Namespace : Strade.Interactions Assembly : Strade.Interactions.dll Syntax public enum InteractionsPingBehavior : byte Fields Name Description Drop Handle Passthrough Extension Methods EnumExtensions.GetName<InteractionsPingBehavior>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Interactions.InteractionsServer.html": {
    "href": "api/Strade.Interactions.InteractionsServer.html",
    "title": "Class InteractionsServer | Strade Developer Documentation",
    "keywords": "Class InteractionsServer A standalone ASP.NET-hosted interactions server. Inheritance Object InteractionsServer Implements IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactions Assembly : Strade.Interactions.dll Syntax public class InteractionsServer : IDisposable Constructors | Improve this Doc View Source InteractionsServer(InteractionsServerConfiguration) Declaration public InteractionsServer(InteractionsServerConfiguration configuration) Parameters Type Name Description InteractionsServerConfiguration configuration | Improve this Doc View Source InteractionsServer(Action<InteractionsServerConfiguration>) Declaration public InteractionsServer(Action<InteractionsServerConfiguration> configure) Parameters Type Name Description Action < InteractionsServerConfiguration > configure Properties | Improve this Doc View Source Configuration Declaration protected InteractionsServerConfiguration Configuration { get; } Property Value Type Description InteractionsServerConfiguration | Improve this Doc View Source WebHost Declaration public IWebHost WebHost { get; } Property Value Type Description IWebHost Methods | Improve this Doc View Source Configure(IApplicationBuilder) Declaration protected virtual void Configure(IApplicationBuilder applicationBuilder) Parameters Type Name Description IApplicationBuilder applicationBuilder | Improve this Doc View Source ConfigureKestrel(KestrelServerOptions) Declaration protected virtual void ConfigureKestrel(KestrelServerOptions serverOptions) Parameters Type Name Description KestrelServerOptions serverOptions | Improve this Doc View Source ConfigureServices(IServiceCollection) Declaration protected virtual void ConfigureServices(IServiceCollection services) Parameters Type Name Description IServiceCollection services | Improve this Doc View Source ConfigureWebHost(IWebHostBuilder) Declaration protected virtual IWebHost ConfigureWebHost(IWebHostBuilder webHostBuilder) Parameters Type Name Description IWebHostBuilder webHostBuilder Returns Type Description IWebHost | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source HandleFallbackAsync(HttpContext, Func<Task>) Declaration protected virtual Task HandleFallbackAsync(HttpContext httpContext, Func<Task> middleware) Parameters Type Name Description HttpContext httpContext Func < Task > middleware Returns Type Description Task | Improve this Doc View Source Run() Declaration public void Run() | Improve this Doc View Source RunAsync(CancellationToken) Declaration public Task RunAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source Start() Declaration public void Start() | Improve this Doc View Source StartAsync(CancellationToken) Declaration public Task StartAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source StopAsync(CancellationToken) Declaration public Task StopAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task Implements System.IDisposable"
  },
  "api/Strade.Interactivity.html": {
    "href": "api/Strade.Interactivity.html",
    "title": "Namespace Strade.Interactivity | Strade Developer Documentation",
    "keywords": "Namespace Strade.Interactivity Classes InteractivityService UserReaction Represents a user's reaction. Enums TimeoutBehavior"
  },
  "api/Strade.Interactivity.InteractivityService.html": {
    "href": "api/Strade.Interactivity.InteractivityService.html",
    "title": "Class InteractivityService | Strade Developer Documentation",
    "keywords": "Class InteractivityService Inheritance Object InteractivityService Implements IDisposable ISubscribable < UserReaction > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactivity Assembly : Strade.Interactivity.dll Syntax public class InteractivityService : IDisposable, ISubscribable<UserReaction> Constructors | Improve this Doc View Source InteractivityService(DiscordClient) Declaration public InteractivityService(DiscordClient client) Parameters Type Name Description DiscordClient client Properties | Improve this Doc View Source Client Declaration public DiscordClient Client { get; } Property Value Type Description DiscordClient | Improve this Doc View Source DefaultTimeout Declaration public TimeSpan DefaultTimeout { get; set; } Property Value Type Description TimeSpan Methods | Improve this Doc View Source AwaitReaction(IMessage, IEmote, Nullable<TimeSpan>, TimeoutBehavior, CancellationToken) Declaration public ITimedAwaitable<UserReaction> AwaitReaction(IMessage message, IEmote emote, TimeSpan? timeout = default(TimeSpan? ), TimeoutBehavior timeoutBehavior = TimeoutBehavior.Throw, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessage message IEmote emote Nullable < TimeSpan > timeout TimeoutBehavior timeoutBehavior CancellationToken cancellationToken Returns Type Description ITimedAwaitable < UserReaction > | Improve this Doc View Source AwaitReaction(IMessage, User, IEmote, Nullable<TimeSpan>, TimeoutBehavior, CancellationToken) Declaration public ITimedAwaitable<UserReaction> AwaitReaction(IMessage message, User user, IEmote emote, TimeSpan? timeout = default(TimeSpan? ), TimeoutBehavior timeoutBehavior = TimeoutBehavior.Throw, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessage message User user IEmote emote Nullable < TimeSpan > timeout TimeoutBehavior timeoutBehavior CancellationToken cancellationToken Returns Type Description ITimedAwaitable < UserReaction > | Improve this Doc View Source AwaitReaction(IMessage, User, IEnumerable<IEmote>, Nullable<TimeSpan>, TimeoutBehavior, CancellationToken) Declaration public ITimedAwaitable<UserReaction> AwaitReaction(IMessage message, User user, IEnumerable<IEmote> emotes, TimeSpan? timeout = default(TimeSpan? ), TimeoutBehavior timeoutBehavior = TimeoutBehavior.Throw, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessage message User user IEnumerable < IEmote > emotes Nullable < TimeSpan > timeout TimeoutBehavior timeoutBehavior CancellationToken cancellationToken Returns Type Description ITimedAwaitable < UserReaction > | Improve this Doc View Source AwaitReaction(IMessage, User, Nullable<TimeSpan>, TimeoutBehavior, CancellationToken) Declaration public ITimedAwaitable<UserReaction> AwaitReaction(IMessage message, User user, TimeSpan? timeout = default(TimeSpan? ), TimeoutBehavior timeoutBehavior = TimeoutBehavior.Throw, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessage message User user Nullable < TimeSpan > timeout TimeoutBehavior timeoutBehavior CancellationToken cancellationToken Returns Type Description ITimedAwaitable < UserReaction > | Improve this Doc View Source AwaitReaction(IMessage, IEnumerable<IEmote>, Nullable<TimeSpan>, TimeoutBehavior, CancellationToken) Declaration public ITimedAwaitable<UserReaction> AwaitReaction(IMessage message, IEnumerable<IEmote> emotes, TimeSpan? timeout = default(TimeSpan? ), TimeoutBehavior timeoutBehavior = TimeoutBehavior.Throw, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessage message IEnumerable < IEmote > emotes Nullable < TimeSpan > timeout TimeoutBehavior timeoutBehavior CancellationToken cancellationToken Returns Type Description ITimedAwaitable < UserReaction > | Improve this Doc View Source AwaitReaction(IMessage, Nullable<TimeSpan>, TimeoutBehavior, CancellationToken) Declaration public ITimedAwaitable<UserReaction> AwaitReaction(IMessage message, TimeSpan? timeout = default(TimeSpan? ), TimeoutBehavior timeoutBehavior = TimeoutBehavior.Throw, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessage message Nullable < TimeSpan > timeout TimeoutBehavior timeoutBehavior CancellationToken cancellationToken Returns Type Description ITimedAwaitable < UserReaction > | Improve this Doc View Source AwaitReaction(IMessageChannel, IEmote, Nullable<TimeSpan>, TimeoutBehavior, CancellationToken) Declaration public ITimedAwaitable<UserReaction> AwaitReaction(IMessageChannel channel, IEmote emote, TimeSpan? timeout = default(TimeSpan? ), TimeoutBehavior timeoutBehavior = TimeoutBehavior.Throw, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessageChannel channel IEmote emote Nullable < TimeSpan > timeout TimeoutBehavior timeoutBehavior CancellationToken cancellationToken Returns Type Description ITimedAwaitable < UserReaction > | Improve this Doc View Source AwaitReaction(IMessageChannel, User, IEmote, Nullable<TimeSpan>, TimeoutBehavior, CancellationToken) Declaration public ITimedAwaitable<UserReaction> AwaitReaction(IMessageChannel channel, User user, IEmote emote, TimeSpan? timeout = default(TimeSpan? ), TimeoutBehavior timeoutBehavior = TimeoutBehavior.Throw, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessageChannel channel User user IEmote emote Nullable < TimeSpan > timeout TimeoutBehavior timeoutBehavior CancellationToken cancellationToken Returns Type Description ITimedAwaitable < UserReaction > | Improve this Doc View Source AwaitReaction(IMessageChannel, User, IEnumerable<IEmote>, Nullable<TimeSpan>, TimeoutBehavior, CancellationToken) Declaration public ITimedAwaitable<UserReaction> AwaitReaction(IMessageChannel channel, User user, IEnumerable<IEmote> emotes, TimeSpan? timeout = default(TimeSpan? ), TimeoutBehavior timeoutBehavior = TimeoutBehavior.Throw, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessageChannel channel User user IEnumerable < IEmote > emotes Nullable < TimeSpan > timeout TimeoutBehavior timeoutBehavior CancellationToken cancellationToken Returns Type Description ITimedAwaitable < UserReaction > | Improve this Doc View Source AwaitReaction(IMessageChannel, User, Nullable<TimeSpan>, TimeoutBehavior, CancellationToken) Declaration public ITimedAwaitable<UserReaction> AwaitReaction(IMessageChannel channel, User user, TimeSpan? timeout = default(TimeSpan? ), TimeoutBehavior timeoutBehavior = TimeoutBehavior.Throw, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessageChannel channel User user Nullable < TimeSpan > timeout TimeoutBehavior timeoutBehavior CancellationToken cancellationToken Returns Type Description ITimedAwaitable < UserReaction > | Improve this Doc View Source AwaitReaction(IMessageChannel, IEnumerable<IEmote>, Nullable<TimeSpan>, TimeoutBehavior, CancellationToken) Declaration public ITimedAwaitable<UserReaction> AwaitReaction(IMessageChannel channel, IEnumerable<IEmote> emotes, TimeSpan? timeout = default(TimeSpan? ), TimeoutBehavior timeoutBehavior = TimeoutBehavior.Throw, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessageChannel channel IEnumerable < IEmote > emotes Nullable < TimeSpan > timeout TimeoutBehavior timeoutBehavior CancellationToken cancellationToken Returns Type Description ITimedAwaitable < UserReaction > | Improve this Doc View Source AwaitReaction(IMessageChannel, Nullable<TimeSpan>, TimeoutBehavior, CancellationToken) Declaration public ITimedAwaitable<UserReaction> AwaitReaction(IMessageChannel channel, TimeSpan? timeout = default(TimeSpan? ), TimeoutBehavior timeoutBehavior = TimeoutBehavior.Throw, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessageChannel channel Nullable < TimeSpan > timeout TimeoutBehavior timeoutBehavior CancellationToken cancellationToken Returns Type Description ITimedAwaitable < UserReaction > | Improve this Doc View Source AwaitReaction(User, IEmote, Nullable<TimeSpan>, TimeoutBehavior, CancellationToken) Declaration public ITimedAwaitable<UserReaction> AwaitReaction(User user, IEmote emote, TimeSpan? timeout = default(TimeSpan? ), TimeoutBehavior timeoutBehavior = TimeoutBehavior.Throw, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description User user IEmote emote Nullable < TimeSpan > timeout TimeoutBehavior timeoutBehavior CancellationToken cancellationToken Returns Type Description ITimedAwaitable < UserReaction > | Improve this Doc View Source AwaitReaction(User, IEnumerable<IEmote>, Nullable<TimeSpan>, TimeoutBehavior, CancellationToken) Declaration public ITimedAwaitable<UserReaction> AwaitReaction(User user, IEnumerable<IEmote> emotes, TimeSpan? timeout = default(TimeSpan? ), TimeoutBehavior timeoutBehavior = TimeoutBehavior.Throw, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description User user IEnumerable < IEmote > emotes Nullable < TimeSpan > timeout TimeoutBehavior timeoutBehavior CancellationToken cancellationToken Returns Type Description ITimedAwaitable < UserReaction > | Improve this Doc View Source AwaitReaction(User, Nullable<TimeSpan>, TimeoutBehavior, CancellationToken) Declaration public ITimedAwaitable<UserReaction> AwaitReaction(User user, TimeSpan? timeout = default(TimeSpan? ), TimeoutBehavior timeoutBehavior = TimeoutBehavior.Throw, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description User user Nullable < TimeSpan > timeout TimeoutBehavior timeoutBehavior CancellationToken cancellationToken Returns Type Description ITimedAwaitable < UserReaction > | Improve this Doc View Source AwaitReaction(IPredicate<UserReaction>, Nullable<TimeSpan>, TimeoutBehavior, CancellationToken) Declaration public ITimedAwaitable<UserReaction> AwaitReaction(IPredicate<UserReaction> predicate, TimeSpan? timeout = default(TimeSpan? ), TimeoutBehavior timeoutBehavior = TimeoutBehavior.Throw, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IPredicate < UserReaction > predicate Nullable < TimeSpan > timeout TimeoutBehavior timeoutBehavior CancellationToken cancellationToken Returns Type Description ITimedAwaitable < UserReaction > | Improve this Doc View Source AwaitReaction(Action<PredicateBuilder<UserReaction>>, Nullable<TimeSpan>, TimeoutBehavior, CancellationToken) Declaration public ITimedAwaitable<UserReaction> AwaitReaction(Action<PredicateBuilder<UserReaction>> action, TimeSpan? timeout = default(TimeSpan? ), TimeoutBehavior timeoutBehavior = TimeoutBehavior.Throw, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < PredicateBuilder < UserReaction >> action Nullable < TimeSpan > timeout TimeoutBehavior timeoutBehavior CancellationToken cancellationToken Returns Type Description ITimedAwaitable < UserReaction > | Improve this Doc View Source AwaitReaction(Nullable<TimeSpan>, TimeoutBehavior, CancellationToken) Declaration public ITimedAwaitable<UserReaction> AwaitReaction(TimeSpan? timeout = default(TimeSpan? ), TimeoutBehavior timeoutBehavior = TimeoutBehavior.Throw, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Nullable < TimeSpan > timeout TimeoutBehavior timeoutBehavior CancellationToken cancellationToken Returns Type Description ITimedAwaitable < UserReaction > | Improve this Doc View Source CollectReactions(IMessage, IEmote, Nullable<Int32>, Nullable<TimeSpan>, CancellationToken) Declaration public ITimedAwaitable<IReadOnlyList<UserReaction>> CollectReactions(IMessage message, IEmote emote, int? limit = default(int? ), TimeSpan? timeout = default(TimeSpan? ), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessage message IEmote emote Nullable < Int32 > limit Nullable < TimeSpan > timeout CancellationToken cancellationToken Returns Type Description ITimedAwaitable < IReadOnlyList < UserReaction >> | Improve this Doc View Source CollectReactions(IMessage, User, IEmote, Nullable<Int32>, Nullable<TimeSpan>, CancellationToken) Declaration public ITimedAwaitable<IReadOnlyList<UserReaction>> CollectReactions(IMessage message, User user, IEmote emote, int? limit = default(int? ), TimeSpan? timeout = default(TimeSpan? ), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessage message User user IEmote emote Nullable < Int32 > limit Nullable < TimeSpan > timeout CancellationToken cancellationToken Returns Type Description ITimedAwaitable < IReadOnlyList < UserReaction >> | Improve this Doc View Source CollectReactions(IMessage, User, IEnumerable<IEmote>, Nullable<Int32>, Nullable<TimeSpan>, CancellationToken) Declaration public ITimedAwaitable<IReadOnlyList<UserReaction>> CollectReactions(IMessage message, User user, IEnumerable<IEmote> emotes, int? limit = default(int? ), TimeSpan? timeout = default(TimeSpan? ), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessage message User user IEnumerable < IEmote > emotes Nullable < Int32 > limit Nullable < TimeSpan > timeout CancellationToken cancellationToken Returns Type Description ITimedAwaitable < IReadOnlyList < UserReaction >> | Improve this Doc View Source CollectReactions(IMessage, User, Nullable<Int32>, Nullable<TimeSpan>, CancellationToken) Declaration public ITimedAwaitable<IReadOnlyList<UserReaction>> CollectReactions(IMessage message, User user, int? limit = default(int? ), TimeSpan? timeout = default(TimeSpan? ), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessage message User user Nullable < Int32 > limit Nullable < TimeSpan > timeout CancellationToken cancellationToken Returns Type Description ITimedAwaitable < IReadOnlyList < UserReaction >> | Improve this Doc View Source CollectReactions(IMessage, IEnumerable<IEmote>, Nullable<Int32>, Nullable<TimeSpan>, CancellationToken) Declaration public ITimedAwaitable<IReadOnlyList<UserReaction>> CollectReactions(IMessage message, IEnumerable<IEmote> emotes, int? limit = default(int? ), TimeSpan? timeout = default(TimeSpan? ), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessage message IEnumerable < IEmote > emotes Nullable < Int32 > limit Nullable < TimeSpan > timeout CancellationToken cancellationToken Returns Type Description ITimedAwaitable < IReadOnlyList < UserReaction >> | Improve this Doc View Source CollectReactions(IMessage, Nullable<Int32>, Nullable<TimeSpan>, CancellationToken) Declaration public ITimedAwaitable<IReadOnlyList<UserReaction>> CollectReactions(IMessage message, int? limit = default(int? ), TimeSpan? timeout = default(TimeSpan? ), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessage message Nullable < Int32 > limit Nullable < TimeSpan > timeout CancellationToken cancellationToken Returns Type Description ITimedAwaitable < IReadOnlyList < UserReaction >> | Improve this Doc View Source CollectReactions(IMessageChannel, IEmote, Nullable<Int32>, Nullable<TimeSpan>, CancellationToken) Declaration public ITimedAwaitable<IReadOnlyList<UserReaction>> CollectReactions(IMessageChannel channel, IEmote emote, int? limit = default(int? ), TimeSpan? timeout = default(TimeSpan? ), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessageChannel channel IEmote emote Nullable < Int32 > limit Nullable < TimeSpan > timeout CancellationToken cancellationToken Returns Type Description ITimedAwaitable < IReadOnlyList < UserReaction >> | Improve this Doc View Source CollectReactions(IMessageChannel, User, IEmote, Nullable<Int32>, Nullable<TimeSpan>, CancellationToken) Declaration public ITimedAwaitable<IReadOnlyList<UserReaction>> CollectReactions(IMessageChannel channel, User user, IEmote emote, int? limit = default(int? ), TimeSpan? timeout = default(TimeSpan? ), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessageChannel channel User user IEmote emote Nullable < Int32 > limit Nullable < TimeSpan > timeout CancellationToken cancellationToken Returns Type Description ITimedAwaitable < IReadOnlyList < UserReaction >> | Improve this Doc View Source CollectReactions(IMessageChannel, User, IEnumerable<IEmote>, Nullable<Int32>, Nullable<TimeSpan>, CancellationToken) Declaration public ITimedAwaitable<IReadOnlyList<UserReaction>> CollectReactions(IMessageChannel channel, User user, IEnumerable<IEmote> emotes, int? limit = default(int? ), TimeSpan? timeout = default(TimeSpan? ), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessageChannel channel User user IEnumerable < IEmote > emotes Nullable < Int32 > limit Nullable < TimeSpan > timeout CancellationToken cancellationToken Returns Type Description ITimedAwaitable < IReadOnlyList < UserReaction >> | Improve this Doc View Source CollectReactions(IMessageChannel, User, Nullable<Int32>, Nullable<TimeSpan>, CancellationToken) Declaration public ITimedAwaitable<IReadOnlyList<UserReaction>> CollectReactions(IMessageChannel channel, User user, int? limit = default(int? ), TimeSpan? timeout = default(TimeSpan? ), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessageChannel channel User user Nullable < Int32 > limit Nullable < TimeSpan > timeout CancellationToken cancellationToken Returns Type Description ITimedAwaitable < IReadOnlyList < UserReaction >> | Improve this Doc View Source CollectReactions(IMessageChannel, IEnumerable<IEmote>, Nullable<Int32>, Nullable<TimeSpan>, CancellationToken) Declaration public ITimedAwaitable<IReadOnlyList<UserReaction>> CollectReactions(IMessageChannel channel, IEnumerable<IEmote> emotes, int? limit = default(int? ), TimeSpan? timeout = default(TimeSpan? ), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessageChannel channel IEnumerable < IEmote > emotes Nullable < Int32 > limit Nullable < TimeSpan > timeout CancellationToken cancellationToken Returns Type Description ITimedAwaitable < IReadOnlyList < UserReaction >> | Improve this Doc View Source CollectReactions(IMessageChannel, Nullable<Int32>, Nullable<TimeSpan>, CancellationToken) Declaration public ITimedAwaitable<IReadOnlyList<UserReaction>> CollectReactions(IMessageChannel channel, int? limit = default(int? ), TimeSpan? timeout = default(TimeSpan? ), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessageChannel channel Nullable < Int32 > limit Nullable < TimeSpan > timeout CancellationToken cancellationToken Returns Type Description ITimedAwaitable < IReadOnlyList < UserReaction >> | Improve this Doc View Source CollectReactions(User, IEmote, Nullable<Int32>, Nullable<TimeSpan>, CancellationToken) Declaration public ITimedAwaitable<IReadOnlyList<UserReaction>> CollectReactions(User user, IEmote emote, int? limit = default(int? ), TimeSpan? timeout = default(TimeSpan? ), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description User user IEmote emote Nullable < Int32 > limit Nullable < TimeSpan > timeout CancellationToken cancellationToken Returns Type Description ITimedAwaitable < IReadOnlyList < UserReaction >> | Improve this Doc View Source CollectReactions(User, IEnumerable<IEmote>, Nullable<Int32>, Nullable<TimeSpan>, CancellationToken) Declaration public ITimedAwaitable<IReadOnlyList<UserReaction>> CollectReactions(User user, IEnumerable<IEmote> emotes, int? limit = default(int? ), TimeSpan? timeout = default(TimeSpan? ), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description User user IEnumerable < IEmote > emotes Nullable < Int32 > limit Nullable < TimeSpan > timeout CancellationToken cancellationToken Returns Type Description ITimedAwaitable < IReadOnlyList < UserReaction >> | Improve this Doc View Source CollectReactions(User, Nullable<Int32>, Nullable<TimeSpan>, CancellationToken) Declaration public ITimedAwaitable<IReadOnlyList<UserReaction>> CollectReactions(User user, int? limit = default(int? ), TimeSpan? timeout = default(TimeSpan? ), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description User user Nullable < Int32 > limit Nullable < TimeSpan > timeout CancellationToken cancellationToken Returns Type Description ITimedAwaitable < IReadOnlyList < UserReaction >> | Improve this Doc View Source CollectReactions(IPredicate<UserReaction>, Nullable<Int32>, Nullable<TimeSpan>, CancellationToken) Declaration public ITimedAwaitable<IReadOnlyList<UserReaction>> CollectReactions(IPredicate<UserReaction> predicate, int? limit = default(int? ), TimeSpan? timeout = default(TimeSpan? ), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IPredicate < UserReaction > predicate Nullable < Int32 > limit Nullable < TimeSpan > timeout CancellationToken cancellationToken Returns Type Description ITimedAwaitable < IReadOnlyList < UserReaction >> | Improve this Doc View Source CollectReactions(Action<PredicateBuilder<UserReaction>>, Nullable<Int32>, Nullable<TimeSpan>, CancellationToken) Declaration public ITimedAwaitable<IReadOnlyList<UserReaction>> CollectReactions(Action<PredicateBuilder<UserReaction>> action, int? limit = default(int? ), TimeSpan? timeout = default(TimeSpan? ), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Action < PredicateBuilder < UserReaction >> action Nullable < Int32 > limit Nullable < TimeSpan > timeout CancellationToken cancellationToken Returns Type Description ITimedAwaitable < IReadOnlyList < UserReaction >> | Improve this Doc View Source CollectReactions(Nullable<Int32>, Nullable<TimeSpan>, CancellationToken) Declaration public ITimedAwaitable<IReadOnlyList<UserReaction>> CollectReactions(int? limit = default(int? ), TimeSpan? timeout = default(TimeSpan? ), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Nullable < Int32 > limit Nullable < TimeSpan > timeout CancellationToken cancellationToken Returns Type Description ITimedAwaitable < IReadOnlyList < UserReaction >> | Improve this Doc View Source CreateNavigation(IMessageChannel, User, NavigationOptions) Declaration public INavigation CreateNavigation(IMessageChannel channel, User user, NavigationOptions options = null) Parameters Type Name Description IMessageChannel channel User user NavigationOptions options Returns Type Description INavigation | Improve this Doc View Source CreateNavigation(IMessageChannel, IPredicate<UserReaction>, NavigationOptions) Declaration public INavigation CreateNavigation(IMessageChannel channel, IPredicate<UserReaction> predicate = null, NavigationOptions options = null) Parameters Type Name Description IMessageChannel channel IPredicate < UserReaction > predicate NavigationOptions options Returns Type Description INavigation | Improve this Doc View Source CreateNavigation(IMessageChannel, Action<PredicateBuilder<UserReaction>>, NavigationOptions) Declaration public INavigation CreateNavigation(IMessageChannel channel, Action<PredicateBuilder<UserReaction>> action, NavigationOptions options = null) Parameters Type Name Description IMessageChannel channel Action < PredicateBuilder < UserReaction >> action NavigationOptions options Returns Type Description INavigation | Improve this Doc View Source CreatePagination(DynamicPageProvider, Int32, IMessageChannel, User, PaginationOptions) Declaration public IPagination CreatePagination(DynamicPageProvider pageProvider, int totalPages, IMessageChannel channel, User user, PaginationOptions options = null) Parameters Type Name Description DynamicPageProvider pageProvider Int32 totalPages IMessageChannel channel User user PaginationOptions options Returns Type Description IPagination | Improve this Doc View Source CreatePagination(DynamicPageProvider, Int32, IMessageChannel, IPredicate<UserReaction>, PaginationOptions) Declaration public IPagination CreatePagination(DynamicPageProvider pageProvider, int totalPages, IMessageChannel channel, IPredicate<UserReaction> predicate = null, PaginationOptions options = null) Parameters Type Name Description DynamicPageProvider pageProvider Int32 totalPages IMessageChannel channel IPredicate < UserReaction > predicate PaginationOptions options Returns Type Description IPagination | Improve this Doc View Source CreatePagination(DynamicPageProvider, Int32, IMessageChannel, Action<PredicateBuilder<UserReaction>>, PaginationOptions) Declaration public IPagination CreatePagination(DynamicPageProvider pageProvider, int totalPages, IMessageChannel channel, Action<PredicateBuilder<UserReaction>> action, PaginationOptions options = null) Parameters Type Name Description DynamicPageProvider pageProvider Int32 totalPages IMessageChannel channel Action < PredicateBuilder < UserReaction >> action PaginationOptions options Returns Type Description IPagination | Improve this Doc View Source CreatePagination<T>(DynamicItemPageProvider<T>, IReadOnlyCollection<T>, IMessageChannel, User, Int32, PaginationOptions) Declaration public IPagination CreatePagination<T>(DynamicItemPageProvider<T> pageProvider, IReadOnlyCollection<T> items, IMessageChannel channel, User user, int itemsPerPage = 5, PaginationOptions options = null) Parameters Type Name Description DynamicItemPageProvider <T> pageProvider IReadOnlyCollection <T> items IMessageChannel channel User user Int32 itemsPerPage PaginationOptions options Returns Type Description IPagination Type Parameters Name Description T | Improve this Doc View Source CreatePagination<T>(DynamicItemPageProvider<T>, IReadOnlyCollection<T>, IMessageChannel, Action<PredicateBuilder<UserReaction>>, Int32, PaginationOptions) Declaration public IPagination CreatePagination<T>(DynamicItemPageProvider<T> pageProvider, IReadOnlyCollection<T> items, IMessageChannel channel, Action<PredicateBuilder<UserReaction>> action, int itemsPerPage = 5, PaginationOptions options = null) Parameters Type Name Description DynamicItemPageProvider <T> pageProvider IReadOnlyCollection <T> items IMessageChannel channel Action < PredicateBuilder < UserReaction >> action Int32 itemsPerPage PaginationOptions options Returns Type Description IPagination Type Parameters Name Description T | Improve this Doc View Source CreatePagination<T>(DynamicItemPageProvider<T>, IReadOnlyCollection<T>, IMessageChannel, Int32, IPredicate<UserReaction>, PaginationOptions) Declaration public IPagination CreatePagination<T>(DynamicItemPageProvider<T> pageProvider, IReadOnlyCollection<T> items, IMessageChannel channel, int itemsPerPage = 5, IPredicate<UserReaction> predicate = null, PaginationOptions options = null) Parameters Type Name Description DynamicItemPageProvider <T> pageProvider IReadOnlyCollection <T> items IMessageChannel channel Int32 itemsPerPage IPredicate < UserReaction > predicate PaginationOptions options Returns Type Description IPagination Type Parameters Name Description T | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source NavigateAsync(IMessageChannel, User, NavigationPage, NavigationOptions, CancellationToken) Declaration public Task NavigateAsync(IMessageChannel channel, User user, NavigationPage page, NavigationOptions options = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessageChannel channel User user NavigationPage page NavigationOptions options CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source NavigateAsync(IMessageChannel, NavigationPage, IPredicate<UserReaction>, NavigationOptions, CancellationToken) Declaration public Task NavigateAsync(IMessageChannel channel, NavigationPage page, IPredicate<UserReaction> predicate = null, NavigationOptions options = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessageChannel channel NavigationPage page IPredicate < UserReaction > predicate NavigationOptions options CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source NavigateAsync(IMessageChannel, Action<PredicateBuilder<UserReaction>>, NavigationPage, NavigationOptions, CancellationToken) Declaration public Task NavigateAsync(IMessageChannel channel, Action<PredicateBuilder<UserReaction>> action, NavigationPage page, NavigationOptions options = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessageChannel channel Action < PredicateBuilder < UserReaction >> action NavigationPage page NavigationOptions options CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source PaginateAsync(DynamicPageProvider, Int32, IMessageChannel, User, PaginationOptions, CancellationToken) Declaration public Task PaginateAsync(DynamicPageProvider pageProvider, int totalPages, IMessageChannel channel, User user, PaginationOptions options = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description DynamicPageProvider pageProvider Int32 totalPages IMessageChannel channel User user PaginationOptions options CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source PaginateAsync(DynamicPageProvider, Int32, IMessageChannel, IPredicate<UserReaction>, PaginationOptions, CancellationToken) Declaration public Task PaginateAsync(DynamicPageProvider pageProvider, int totalPages, IMessageChannel channel, IPredicate<UserReaction> predicate = null, PaginationOptions options = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description DynamicPageProvider pageProvider Int32 totalPages IMessageChannel channel IPredicate < UserReaction > predicate PaginationOptions options CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source PaginateAsync(DynamicPageProvider, Int32, IMessageChannel, Action<PredicateBuilder<UserReaction>>, PaginationOptions, CancellationToken) Declaration public Task PaginateAsync(DynamicPageProvider pageProvider, int totalPages, IMessageChannel channel, Action<PredicateBuilder<UserReaction>> action, PaginationOptions options = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description DynamicPageProvider pageProvider Int32 totalPages IMessageChannel channel Action < PredicateBuilder < UserReaction >> action PaginationOptions options CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source PaginateAsync<T>(DynamicItemPageProvider<T>, IReadOnlyCollection<T>, IMessageChannel, User, Int32, PaginationOptions, CancellationToken) Declaration public Task PaginateAsync<T>(DynamicItemPageProvider<T> pageProvider, IReadOnlyCollection<T> items, IMessageChannel channel, User user, int itemsPerPage = 5, PaginationOptions options = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description DynamicItemPageProvider <T> pageProvider IReadOnlyCollection <T> items IMessageChannel channel User user Int32 itemsPerPage PaginationOptions options CancellationToken cancellationToken Returns Type Description Task Type Parameters Name Description T | Improve this Doc View Source PaginateAsync<T>(DynamicItemPageProvider<T>, IReadOnlyCollection<T>, IMessageChannel, Action<PredicateBuilder<UserReaction>>, Int32, PaginationOptions, CancellationToken) Declaration public Task PaginateAsync<T>(DynamicItemPageProvider<T> pageProvider, IReadOnlyCollection<T> items, IMessageChannel channel, Action<PredicateBuilder<UserReaction>> action, int itemsPerPage = 5, PaginationOptions options = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description DynamicItemPageProvider <T> pageProvider IReadOnlyCollection <T> items IMessageChannel channel Action < PredicateBuilder < UserReaction >> action Int32 itemsPerPage PaginationOptions options CancellationToken cancellationToken Returns Type Description Task Type Parameters Name Description T | Improve this Doc View Source PaginateAsync<T>(DynamicItemPageProvider<T>, IReadOnlyCollection<T>, IMessageChannel, Int32, IPredicate<UserReaction>, PaginationOptions, CancellationToken) Declaration public Task PaginateAsync<T>(DynamicItemPageProvider<T> pageProvider, IReadOnlyCollection<T> items, IMessageChannel channel, int itemsPerPage = 5, IPredicate<UserReaction> predicate = null, PaginationOptions options = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description DynamicItemPageProvider <T> pageProvider IReadOnlyCollection <T> items IMessageChannel channel Int32 itemsPerPage IPredicate < UserReaction > predicate PaginationOptions options CancellationToken cancellationToken Returns Type Description Task Type Parameters Name Description T Explicit Interface Implementations | Improve this Doc View Source ISubscribable<UserReaction>.Register(ISubscriber<UserReaction>) Declaration void ISubscribable<UserReaction>.Register(ISubscriber<UserReaction> subscriber) Parameters Type Name Description ISubscriber < UserReaction > subscriber | Improve this Doc View Source ISubscribable<UserReaction>.Unregister(ISubscriber<UserReaction>) Declaration bool ISubscribable<UserReaction>.Unregister(ISubscriber<UserReaction> subscriber) Parameters Type Name Description ISubscriber < UserReaction > subscriber Returns Type Description Boolean Implements System.IDisposable ISubscribable<T>"
  },
  "api/Strade.Interactivity.Navigation.Actions.html": {
    "href": "api/Strade.Interactivity.Navigation.Actions.html",
    "title": "Namespace Strade.Interactivity.Navigation.Actions | Strade Developer Documentation",
    "keywords": "Namespace Strade.Interactivity.Navigation.Actions Classes LinkNavigationAction Enums NavigationActionVisibility"
  },
  "api/Strade.Interactivity.Navigation.Actions.LinkNavigationAction.html": {
    "href": "api/Strade.Interactivity.Navigation.Actions.LinkNavigationAction.html",
    "title": "Class LinkNavigationAction | Strade Developer Documentation",
    "keywords": "Class LinkNavigationAction Inheritance Object NavigationAction LinkNavigationAction Inherited Members NavigationAction.GetVisibility(INavigation) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactivity.Navigation.Actions Assembly : Strade.Interactivity.dll Syntax public class LinkNavigationAction : NavigationAction Constructors | Improve this Doc View Source LinkNavigationAction(IEmote, NavigationPage) Declaration public LinkNavigationAction(IEmote emote, NavigationPage target) Parameters Type Name Description IEmote emote NavigationPage target | Improve this Doc View Source LinkNavigationAction(IEmote, Func<NavigationPage>) Declaration public LinkNavigationAction(IEmote emote, Func<NavigationPage> func) Parameters Type Name Description IEmote emote Func < NavigationPage > func | Improve this Doc View Source LinkNavigationAction(IEmote, Func<ValueTask<NavigationPage>>) Declaration public LinkNavigationAction(IEmote emote, Func<ValueTask<NavigationPage>> func) Parameters Type Name Description IEmote emote Func < ValueTask < NavigationPage >> func Properties | Improve this Doc View Source Emote Declaration public override IEmote Emote { get; } Property Value Type Description IEmote Overrides NavigationAction.Emote Methods | Improve this Doc View Source RunAsync(INavigation, CancellationToken) Declaration public override ValueTask RunAsync(INavigation navigation, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description INavigation navigation CancellationToken cancellationToken Returns Type Description ValueTask Overrides NavigationAction.RunAsync(INavigation, CancellationToken)"
  },
  "api/Strade.Interactivity.Navigation.Actions.NavigationActionVisibility.html": {
    "href": "api/Strade.Interactivity.Navigation.Actions.NavigationActionVisibility.html",
    "title": "Enum NavigationActionVisibility | Strade Developer Documentation",
    "keywords": "Enum NavigationActionVisibility Namespace : Strade.Interactivity.Navigation.Actions Assembly : Strade.Interactivity.dll Syntax public enum NavigationActionVisibility : byte Fields Name Description Disabled Denotes that the action is visible but not executable by the user. Hidden Denotes that the action is hidden and not executable by the user. Visible Denotes that the action is visible and executable by the user. Extension Methods EnumExtensions.GetName<NavigationActionVisibility>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Interactivity.Navigation.Builder.html": {
    "href": "api/Strade.Interactivity.Navigation.Builder.html",
    "title": "Namespace Strade.Interactivity.Navigation.Builder | Strade Developer Documentation",
    "keywords": "Namespace Strade.Interactivity.Navigation.Builder Classes NavigationPageBuilder"
  },
  "api/Strade.Interactivity.Navigation.Builder.NavigationPageBuilder.html": {
    "href": "api/Strade.Interactivity.Navigation.Builder.NavigationPageBuilder.html",
    "title": "Class NavigationPageBuilder | Strade Developer Documentation",
    "keywords": "Class NavigationPageBuilder Inheritance Object NavigationPageBuilder Implements IBuilder < NavigationPage > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactivity.Navigation.Builder Assembly : Strade.Interactivity.dll Syntax public sealed class NavigationPageBuilder : IBuilder<NavigationPage> Constructors | Improve this Doc View Source NavigationPageBuilder() Declaration public NavigationPageBuilder() | Improve this Doc View Source NavigationPageBuilder(EmbedMessage, IEnumerable<NavigationAction>, Boolean) Declaration public NavigationPageBuilder(EmbedMessage embed, IEnumerable<NavigationAction> actions, bool textToSpeech = false) Parameters Type Name Description EmbedMessage embed IEnumerable < NavigationAction > actions Boolean textToSpeech | Improve this Doc View Source NavigationPageBuilder(NavigationPage) Declaration public NavigationPageBuilder(NavigationPage page) Parameters Type Name Description NavigationPage page | Improve this Doc View Source NavigationPageBuilder(String, EmbedMessage, IEnumerable<NavigationAction>, Boolean) Declaration public NavigationPageBuilder(string content, EmbedMessage embed, IEnumerable<NavigationAction> actions, bool textToSpeech = false) Parameters Type Name Description String content EmbedMessage embed IEnumerable < NavigationAction > actions Boolean textToSpeech | Improve this Doc View Source NavigationPageBuilder(String, IEnumerable<NavigationAction>, Boolean) Declaration public NavigationPageBuilder(string content, IEnumerable<NavigationAction> actions, bool textToSpeech = false) Parameters Type Name Description String content IEnumerable < NavigationAction > actions Boolean textToSpeech Properties | Improve this Doc View Source Actions Declaration public IEnumerable<NavigationAction> Actions { get; set; } Property Value Type Description IEnumerable < NavigationAction > | Improve this Doc View Source Content Declaration public string Content { get; set; } Property Value Type Description String | Improve this Doc View Source Embed Declaration public EmbedMessage Embed { get; set; } Property Value Type Description EmbedMessage | Improve this Doc View Source IsTextToSpeech Declaration public bool IsTextToSpeech { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Build() Declaration public NavigationPage Build() Returns Type Description NavigationPage | Improve this Doc View Source Reset() Declaration public void Reset() | Improve this Doc View Source WithContent(String) Declaration public NavigationPageBuilder WithContent(string content) Parameters Type Name Description String content Returns Type Description NavigationPageBuilder | Improve this Doc View Source WithEmbed(EmbedMessage) Declaration public NavigationPageBuilder WithEmbed(EmbedMessage embedMessage) Parameters Type Name Description EmbedMessage embedMessage Returns Type Description NavigationPageBuilder | Improve this Doc View Source WithEmbed(Action<EmbedBuilder>) Declaration public NavigationPageBuilder WithEmbed(Action<EmbedBuilder> action) Parameters Type Name Description Action < EmbedBuilder > action Returns Type Description NavigationPageBuilder | Improve this Doc View Source WithTextToSpeech(Boolean) Declaration public NavigationPageBuilder WithTextToSpeech(bool textToSpeech = false) Parameters Type Name Description Boolean textToSpeech Returns Type Description NavigationPageBuilder Implements IBuilder<TResult>"
  },
  "api/Strade.Interactivity.Navigation.html": {
    "href": "api/Strade.Interactivity.Navigation.html",
    "title": "Namespace Strade.Interactivity.Navigation | Strade Developer Documentation",
    "keywords": "Namespace Strade.Interactivity.Navigation Classes InteractiveNavigation NavigationAction NavigationOptions NavigationPage Interfaces INavigation Enums NavigationCloseBehavior NavigationMode"
  },
  "api/Strade.Interactivity.Navigation.INavigation.html": {
    "href": "api/Strade.Interactivity.Navigation.INavigation.html",
    "title": "Interface INavigation | Strade Developer Documentation",
    "keywords": "Interface INavigation Inherited Members IDisposable.Dispose() Namespace : Strade.Interactivity.Navigation Assembly : Strade.Interactivity.dll Syntax public interface INavigation : IDisposable Properties | Improve this Doc View Source Channel Declaration IMessageChannel Channel { get; } Property Value Type Description IMessageChannel | Improve this Doc View Source CloseBehavior Declaration NavigationCloseBehavior CloseBehavior { get; } Property Value Type Description NavigationCloseBehavior | Improve this Doc View Source CurrentPage Declaration NavigationPage CurrentPage { get; } Property Value Type Description NavigationPage | Improve this Doc View Source IsClosed Declaration bool IsClosed { get; } Property Value Type Description Boolean | Improve this Doc View Source Message Declaration IMessage Message { get; } Property Value Type Description IMessage | Improve this Doc View Source Mode Declaration NavigationMode Mode { get; } Property Value Type Description NavigationMode Methods | Improve this Doc View Source CloseAsync(CancellationToken) Declaration Task CloseAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ShowAsync(NavigationPage, CancellationToken) Declaration Task<IMessage> ShowAsync(NavigationPage page, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description NavigationPage page CancellationToken cancellationToken Returns Type Description Task < IMessage >"
  },
  "api/Strade.Interactivity.Navigation.InteractiveNavigation.html": {
    "href": "api/Strade.Interactivity.Navigation.InteractiveNavigation.html",
    "title": "Class InteractiveNavigation | Strade Developer Documentation",
    "keywords": "Class InteractiveNavigation Inheritance Object InteractiveNavigation BasePagination Implements ISubscriber < UserReaction > INavigation IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactivity.Navigation Assembly : Strade.Interactivity.dll Syntax public class InteractiveNavigation : ISubscriber<UserReaction>, INavigation, IDisposable Constructors | Improve this Doc View Source InteractiveNavigation(ISubscribable<UserReaction>, IMessageChannel, IPredicate<UserReaction>, NavigationOptions) Declaration public InteractiveNavigation(ISubscribable<UserReaction> subscribable, IMessageChannel channel, IPredicate<UserReaction> predicate = null, NavigationOptions options = null) Parameters Type Name Description ISubscribable < UserReaction > subscribable IMessageChannel channel IPredicate < UserReaction > predicate NavigationOptions options Properties | Improve this Doc View Source Channel Declaration public IMessageChannel Channel { get; } Property Value Type Description IMessageChannel | Improve this Doc View Source CloseBehavior Declaration public NavigationCloseBehavior CloseBehavior { get; } Property Value Type Description NavigationCloseBehavior | Improve this Doc View Source CurrentPage Declaration public NavigationPage CurrentPage { get; } Property Value Type Description NavigationPage | Improve this Doc View Source IsClosed Declaration public bool IsClosed { get; } Property Value Type Description Boolean | Improve this Doc View Source Message Declaration public IMessage Message { get; } Property Value Type Description IMessage | Improve this Doc View Source Mode Declaration public NavigationMode Mode { get; } Property Value Type Description NavigationMode Methods | Improve this Doc View Source CloseAsync(CancellationToken) Declaration public Task CloseAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source HandleReactionAsync(UserReaction, CancellationToken) Declaration protected virtual ValueTask HandleReactionAsync(UserReaction reaction, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description UserReaction reaction CancellationToken cancellationToken Returns Type Description ValueTask | Improve this Doc View Source ShowAsync(NavigationPage, CancellationToken) Declaration public virtual Task<IMessage> ShowAsync(NavigationPage page, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description NavigationPage page CancellationToken cancellationToken Returns Type Description Task < IMessage > | Improve this Doc View Source UpdateActionsAsync(IMessage, IEnumerable<NavigationAction>, CancellationToken) Declaration protected virtual Task UpdateActionsAsync(IMessage message, IEnumerable<NavigationAction> actions, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessage message IEnumerable < NavigationAction > actions CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source UpdateReactionsAsync(IMessage, IReadOnlyList<IEmote>, CancellationToken) Declaration protected Task UpdateReactionsAsync(IMessage message, IReadOnlyList<IEmote> emotes, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessage message IReadOnlyList < IEmote > emotes CancellationToken cancellationToken Returns Type Description Task Explicit Interface Implementations | Improve this Doc View Source ISubscriber<UserReaction>.PushAsync(UserReaction, CancellationToken) Declaration ValueTask ISubscriber<UserReaction>.PushAsync(UserReaction value, CancellationToken cancellationToken) Parameters Type Name Description UserReaction value CancellationToken cancellationToken Returns Type Description ValueTask Implements ISubscriber<T> INavigation System.IDisposable"
  },
  "api/Strade.Interactivity.Navigation.NavigationAction.html": {
    "href": "api/Strade.Interactivity.Navigation.NavigationAction.html",
    "title": "Class NavigationAction | Strade Developer Documentation",
    "keywords": "Class NavigationAction Inheritance Object NavigationAction LinkNavigationAction PaginationAction Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactivity.Navigation Assembly : Strade.Interactivity.dll Syntax public abstract class NavigationAction Properties | Improve this Doc View Source Emote Gets the emote that represents the navigation action. Declaration public abstract IEmote Emote { get; } Property Value Type Description IEmote the emote that represents the navigation action. Methods | Improve this Doc View Source GetVisibility(INavigation) Gets the visibility of the navigation action. Declaration public virtual NavigationActionVisibility GetVisibility(INavigation navigation) Parameters Type Name Description INavigation navigation the calling navigation. Returns Type Description NavigationActionVisibility the visibility of the navigation action. Visible Denotes that the action is visible and executable by the user. Disabled Denotes that the action is visible but not executable by the user. Hidden Denotes that the action is hidden and not executable by the user. | Improve this Doc View Source RunAsync(INavigation, CancellationToken) Runs the navigation action asynchronously. Declaration public virtual ValueTask RunAsync(INavigation navigation, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description INavigation navigation the calling navigation. CancellationToken cancellationToken Returns Type Description ValueTask a task that represents the asynchronous operation."
  },
  "api/Strade.Interactivity.Navigation.NavigationCloseBehavior.html": {
    "href": "api/Strade.Interactivity.Navigation.NavigationCloseBehavior.html",
    "title": "Enum NavigationCloseBehavior | Strade Developer Documentation",
    "keywords": "Enum NavigationCloseBehavior Namespace : Strade.Interactivity.Navigation Assembly : Strade.Interactivity.dll Syntax public enum NavigationCloseBehavior : byte Fields Name Description DeleteMessageOnClose None Extension Methods EnumExtensions.GetName<NavigationCloseBehavior>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Interactivity.Navigation.NavigationMode.html": {
    "href": "api/Strade.Interactivity.Navigation.NavigationMode.html",
    "title": "Enum NavigationMode | Strade Developer Documentation",
    "keywords": "Enum NavigationMode Namespace : Strade.Interactivity.Navigation Assembly : Strade.Interactivity.dll Syntax public enum NavigationMode : byte Fields Name Description DeleteAndSend Edit Extension Methods EnumExtensions.GetName<NavigationMode>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Interactivity.Navigation.NavigationOptions.html": {
    "href": "api/Strade.Interactivity.Navigation.NavigationOptions.html",
    "title": "Class NavigationOptions | Strade Developer Documentation",
    "keywords": "Class NavigationOptions Inheritance Object NavigationOptions PaginationOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactivity.Navigation Assembly : Strade.Interactivity.dll Syntax public class NavigationOptions Properties | Improve this Doc View Source Actions Declaration public IEnumerable<NavigationAction> Actions { get; set; } Property Value Type Description IEnumerable < NavigationAction > | Improve this Doc View Source AlwaysRefetch Declaration public bool AlwaysRefetch { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Blocking Declaration public bool Blocking { get; set; } Property Value Type Description Boolean | Improve this Doc View Source CloseBehavior Declaration public NavigationCloseBehavior CloseBehavior { get; set; } Property Value Type Description NavigationCloseBehavior | Improve this Doc View Source Default Declaration public static NavigationOptions Default { get; } Property Value Type Description NavigationOptions | Improve this Doc View Source IgnoreOrder Declaration public bool IgnoreOrder { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Mode Declaration public NavigationMode Mode { get; set; } Property Value Type Description NavigationMode"
  },
  "api/Strade.Interactivity.Navigation.NavigationPage.html": {
    "href": "api/Strade.Interactivity.Navigation.NavigationPage.html",
    "title": "Class NavigationPage | Strade Developer Documentation",
    "keywords": "Class NavigationPage Inheritance Object NavigationPage Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactivity.Navigation Assembly : Strade.Interactivity.dll Syntax public sealed class NavigationPage Constructors | Improve this Doc View Source NavigationPage(EmbedMessage, NavigationAction[]) Declaration public NavigationPage(EmbedMessage embed, params NavigationAction[] actions) Parameters Type Name Description EmbedMessage embed NavigationAction [] actions | Improve this Doc View Source NavigationPage(EmbedMessage, Boolean) Declaration public NavigationPage(EmbedMessage embed, bool textToSpeech = false) Parameters Type Name Description EmbedMessage embed Boolean textToSpeech | Improve this Doc View Source NavigationPage(EmbedMessage, IEnumerable<NavigationAction>, Boolean) Declaration public NavigationPage(EmbedMessage embed, IEnumerable<NavigationAction> actions, bool textToSpeech = false) Parameters Type Name Description EmbedMessage embed IEnumerable < NavigationAction > actions Boolean textToSpeech | Improve this Doc View Source NavigationPage(String, EmbedMessage, NavigationAction[]) Declaration public NavigationPage(string content, EmbedMessage embed, params NavigationAction[] actions) Parameters Type Name Description String content EmbedMessage embed NavigationAction [] actions | Improve this Doc View Source NavigationPage(String, EmbedMessage, Boolean) Declaration public NavigationPage(string content, EmbedMessage embed, bool textToSpeech = false) Parameters Type Name Description String content EmbedMessage embed Boolean textToSpeech | Improve this Doc View Source NavigationPage(String, EmbedMessage, IEnumerable<NavigationAction>, Boolean) Declaration public NavigationPage(string content, EmbedMessage embed, IEnumerable<NavigationAction> actions, bool textToSpeech = false) Parameters Type Name Description String content EmbedMessage embed IEnumerable < NavigationAction > actions Boolean textToSpeech | Improve this Doc View Source NavigationPage(String, NavigationAction[]) Declaration public NavigationPage(string content, params NavigationAction[] actions) Parameters Type Name Description String content NavigationAction [] actions | Improve this Doc View Source NavigationPage(String, Boolean) Declaration public NavigationPage(string content, bool textToSpeech = false) Parameters Type Name Description String content Boolean textToSpeech | Improve this Doc View Source NavigationPage(String, IEnumerable<NavigationAction>, Boolean) Declaration public NavigationPage(string content, IEnumerable<NavigationAction> actions, bool textToSpeech = false) Parameters Type Name Description String content IEnumerable < NavigationAction > actions Boolean textToSpeech Properties | Improve this Doc View Source Actions Declaration public IEnumerable<NavigationAction> Actions { get; } Property Value Type Description IEnumerable < NavigationAction > | Improve this Doc View Source Content Declaration public string Content { get; } Property Value Type Description String | Improve this Doc View Source Embed Declaration public EmbedMessage Embed { get; } Property Value Type Description EmbedMessage | Improve this Doc View Source IsTextToSpeech Declaration public bool IsTextToSpeech { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source AsLink(IEmote) Declaration public NavigationAction AsLink(IEmote emote) Parameters Type Name Description IEmote emote Returns Type Description NavigationAction | Improve this Doc View Source ToNavigationPage(EmbedBuilder) Declaration public static NavigationPage ToNavigationPage(EmbedBuilder embedBuilder) Parameters Type Name Description EmbedBuilder embedBuilder Returns Type Description NavigationPage | Improve this Doc View Source ToNavigationPage(EmbedMessage) Declaration public static NavigationPage ToNavigationPage(EmbedMessage message) Parameters Type Name Description EmbedMessage message Returns Type Description NavigationPage | Improve this Doc View Source ToNavigationPage(String) Declaration public static NavigationPage ToNavigationPage(string content) Parameters Type Name Description String content Returns Type Description NavigationPage Operators | Improve this Doc View Source Implicit(EmbedBuilder to NavigationPage) Declaration public static implicit operator NavigationPage(EmbedBuilder embedBuilder) Parameters Type Name Description EmbedBuilder embedBuilder Returns Type Description NavigationPage | Improve this Doc View Source Implicit(EmbedMessage to NavigationPage) Declaration public static implicit operator NavigationPage(EmbedMessage embedMessage) Parameters Type Name Description EmbedMessage embedMessage Returns Type Description NavigationPage | Improve this Doc View Source Implicit(String to NavigationPage) Declaration public static implicit operator NavigationPage(string content) Parameters Type Name Description String content Returns Type Description NavigationPage"
  },
  "api/Strade.Interactivity.Pagination.BasePagination.html": {
    "href": "api/Strade.Interactivity.Pagination.BasePagination.html",
    "title": "Class BasePagination | Strade Developer Documentation",
    "keywords": "Class BasePagination Inheritance Object InteractiveNavigation BasePagination InteractivePagination ItemPagination<T> Implements ISubscriber < UserReaction > IPagination INavigation IDisposable Inherited Members InteractiveNavigation.Channel InteractiveNavigation.CloseBehavior InteractiveNavigation.CurrentPage InteractiveNavigation.IsClosed InteractiveNavigation.Message InteractiveNavigation.Mode InteractiveNavigation.CloseAsync(CancellationToken) InteractiveNavigation.Dispose() InteractiveNavigation.ShowAsync(NavigationPage, CancellationToken) InteractiveNavigation.ISubscriber<UserReaction>.PushAsync(UserReaction, CancellationToken) InteractiveNavigation.Dispose(Boolean) InteractiveNavigation.HandleReactionAsync(UserReaction, CancellationToken) InteractiveNavigation.UpdateActionsAsync(IMessage, IEnumerable<NavigationAction>, CancellationToken) InteractiveNavigation.UpdateReactionsAsync(IMessage, IReadOnlyList<IEmote>, CancellationToken) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactivity.Pagination Assembly : Strade.Interactivity.dll Syntax public abstract class BasePagination : InteractiveNavigation, ISubscriber<UserReaction>, IPagination, INavigation, IDisposable Constructors | Improve this Doc View Source BasePagination(ISubscribable<UserReaction>, IMessageChannel, Int32, IPredicate<UserReaction>, PaginationOptions) Declaration public BasePagination(ISubscribable<UserReaction> subscribable, IMessageChannel channel, int totalPages, IPredicate<UserReaction> predicate = null, PaginationOptions options = null) Parameters Type Name Description ISubscribable < UserReaction > subscribable IMessageChannel channel Int32 totalPages IPredicate < UserReaction > predicate PaginationOptions options Properties | Improve this Doc View Source Page Declaration public int Page { get; } Property Value Type Description Int32 | Improve this Doc View Source TotalPages Declaration public int TotalPages { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source BuildPageAsync(Int32, Int32, CancellationToken) Declaration protected abstract ValueTask<NavigationPage> BuildPageAsync(int currentPage, int totalPages, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Int32 currentPage Int32 totalPages CancellationToken cancellationToken Returns Type Description ValueTask < NavigationPage > | Improve this Doc View Source CreateOptions(PaginationOptions) Declaration protected static NavigationOptions CreateOptions(PaginationOptions options) Parameters Type Name Description PaginationOptions options Returns Type Description NavigationOptions | Improve this Doc View Source ShowAsync(Int32, CancellationToken) Declaration public Task ShowAsync(int page, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Int32 page CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ShowFirstAsync(CancellationToken) Declaration public Task ShowFirstAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ShowLastAsync(CancellationToken) Declaration public Task ShowLastAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ShowNextAsync(CancellationToken) Declaration public ValueTask ShowNextAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask | Improve this Doc View Source ShowPreviousAsync(CancellationToken) Declaration public ValueTask ShowPreviousAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask Implements ISubscriber<T> IPagination INavigation System.IDisposable"
  },
  "api/Strade.Interactivity.Pagination.DynamicItemPageProvider-1.html": {
    "href": "api/Strade.Interactivity.Pagination.DynamicItemPageProvider-1.html",
    "title": "Delegate DynamicItemPageProvider<T> | Strade Developer Documentation",
    "keywords": "Delegate DynamicItemPageProvider<T> Namespace : Strade.Interactivity.Pagination Assembly : Strade.Interactivity.dll Syntax public delegate ValueTask<NavigationPage> DynamicItemPageProvider<in T>(IEnumerable<T> items, int currentPage, int totalPages, CancellationToken cancellationToken = default(CancellationToken)); Parameters Type Name Description IEnumerable <T> items Int32 currentPage Int32 totalPages CancellationToken cancellationToken Returns Type Description ValueTask < NavigationPage > Type Parameters Name Description T"
  },
  "api/Strade.Interactivity.Pagination.DynamicPageProvider.html": {
    "href": "api/Strade.Interactivity.Pagination.DynamicPageProvider.html",
    "title": "Delegate DynamicPageProvider | Strade Developer Documentation",
    "keywords": "Delegate DynamicPageProvider Namespace : Strade.Interactivity.Pagination Assembly : Strade.Interactivity.dll Syntax public delegate ValueTask<NavigationPage> DynamicPageProvider(int currentPage, int totalPages, CancellationToken cancellationToken = default(CancellationToken)); Parameters Type Name Description Int32 currentPage Int32 totalPages CancellationToken cancellationToken Returns Type Description ValueTask < NavigationPage >"
  },
  "api/Strade.Interactivity.Pagination.html": {
    "href": "api/Strade.Interactivity.Pagination.html",
    "title": "Namespace Strade.Interactivity.Pagination | Strade Developer Documentation",
    "keywords": "Namespace Strade.Interactivity.Pagination Classes BasePagination InteractivePagination ItemPagination<T> PaginationAction PaginationAppearance PaginationOptions Interfaces IPagination Enums PaginationActionType Delegates DynamicItemPageProvider<T> DynamicPageProvider"
  },
  "api/Strade.Interactivity.Pagination.InteractivePagination.html": {
    "href": "api/Strade.Interactivity.Pagination.InteractivePagination.html",
    "title": "Class InteractivePagination | Strade Developer Documentation",
    "keywords": "Class InteractivePagination Inheritance Object InteractiveNavigation BasePagination InteractivePagination Implements ISubscriber < UserReaction > IPagination INavigation IDisposable Inherited Members BasePagination.Page BasePagination.TotalPages BasePagination.ShowAsync(Int32, CancellationToken) BasePagination.ShowFirstAsync(CancellationToken) BasePagination.ShowLastAsync(CancellationToken) BasePagination.ShowNextAsync(CancellationToken) BasePagination.ShowPreviousAsync(CancellationToken) BasePagination.CreateOptions(PaginationOptions) InteractiveNavigation.Channel InteractiveNavigation.CloseBehavior InteractiveNavigation.CurrentPage InteractiveNavigation.IsClosed InteractiveNavigation.Message InteractiveNavigation.Mode InteractiveNavigation.CloseAsync(CancellationToken) InteractiveNavigation.Dispose() InteractiveNavigation.ShowAsync(NavigationPage, CancellationToken) InteractiveNavigation.ISubscriber<UserReaction>.PushAsync(UserReaction, CancellationToken) InteractiveNavigation.Dispose(Boolean) InteractiveNavigation.HandleReactionAsync(UserReaction, CancellationToken) InteractiveNavigation.UpdateActionsAsync(IMessage, IEnumerable<NavigationAction>, CancellationToken) InteractiveNavigation.UpdateReactionsAsync(IMessage, IReadOnlyList<IEmote>, CancellationToken) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactivity.Pagination Assembly : Strade.Interactivity.dll Syntax public sealed class InteractivePagination : BasePagination, ISubscriber<UserReaction>, IPagination, INavigation, IDisposable Constructors | Improve this Doc View Source InteractivePagination(ISubscribable<UserReaction>, DynamicPageProvider, IMessageChannel, Int32, IPredicate<UserReaction>, PaginationOptions) Declaration public InteractivePagination(ISubscribable<UserReaction> subscribable, DynamicPageProvider pageProvider, IMessageChannel channel, int totalPages, IPredicate<UserReaction> predicate = null, PaginationOptions options = null) Parameters Type Name Description ISubscribable < UserReaction > subscribable DynamicPageProvider pageProvider IMessageChannel channel Int32 totalPages IPredicate < UserReaction > predicate PaginationOptions options Methods | Improve this Doc View Source BuildPageAsync(Int32, Int32, CancellationToken) Declaration protected override ValueTask<NavigationPage> BuildPageAsync(int currentPage, int totalPages, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Int32 currentPage Int32 totalPages CancellationToken cancellationToken Returns Type Description ValueTask < NavigationPage > Overrides BasePagination.BuildPageAsync(Int32, Int32, CancellationToken) Implements ISubscriber<T> IPagination INavigation System.IDisposable"
  },
  "api/Strade.Interactivity.Pagination.IPagination.html": {
    "href": "api/Strade.Interactivity.Pagination.IPagination.html",
    "title": "Interface IPagination | Strade Developer Documentation",
    "keywords": "Interface IPagination Inherited Members INavigation.Channel INavigation.CloseBehavior INavigation.CurrentPage INavigation.IsClosed INavigation.Message INavigation.Mode INavigation.CloseAsync(CancellationToken) INavigation.ShowAsync(NavigationPage, CancellationToken) IDisposable.Dispose() Namespace : Strade.Interactivity.Pagination Assembly : Strade.Interactivity.dll Syntax public interface IPagination : INavigation, IDisposable Properties | Improve this Doc View Source Page Declaration int Page { get; } Property Value Type Description Int32 | Improve this Doc View Source TotalPages Declaration int TotalPages { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source ShowAsync(Int32, CancellationToken) Declaration Task ShowAsync(int page, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Int32 page CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ShowFirstAsync(CancellationToken) Declaration Task ShowFirstAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ShowLastAsync(CancellationToken) Declaration Task ShowLastAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ShowNextAsync(CancellationToken) Declaration ValueTask ShowNextAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask | Improve this Doc View Source ShowPreviousAsync(CancellationToken) Declaration ValueTask ShowPreviousAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask"
  },
  "api/Strade.Interactivity.Pagination.ItemPagination-1.html": {
    "href": "api/Strade.Interactivity.Pagination.ItemPagination-1.html",
    "title": "Class ItemPagination<T> | Strade Developer Documentation",
    "keywords": "Class ItemPagination<T> Inheritance Object InteractiveNavigation BasePagination ItemPagination<T> Implements ISubscriber < UserReaction > IPagination INavigation IDisposable Inherited Members BasePagination.Page BasePagination.TotalPages BasePagination.ShowAsync(Int32, CancellationToken) BasePagination.ShowFirstAsync(CancellationToken) BasePagination.ShowLastAsync(CancellationToken) BasePagination.ShowNextAsync(CancellationToken) BasePagination.ShowPreviousAsync(CancellationToken) BasePagination.CreateOptions(PaginationOptions) InteractiveNavigation.Channel InteractiveNavigation.CloseBehavior InteractiveNavigation.CurrentPage InteractiveNavigation.IsClosed InteractiveNavigation.Message InteractiveNavigation.Mode InteractiveNavigation.CloseAsync(CancellationToken) InteractiveNavigation.Dispose() InteractiveNavigation.ShowAsync(NavigationPage, CancellationToken) InteractiveNavigation.ISubscriber<UserReaction>.PushAsync(UserReaction, CancellationToken) InteractiveNavigation.Dispose(Boolean) InteractiveNavigation.HandleReactionAsync(UserReaction, CancellationToken) InteractiveNavigation.UpdateActionsAsync(IMessage, IEnumerable<NavigationAction>, CancellationToken) InteractiveNavigation.UpdateReactionsAsync(IMessage, IReadOnlyList<IEmote>, CancellationToken) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactivity.Pagination Assembly : Strade.Interactivity.dll Syntax public sealed class ItemPagination<T> : BasePagination, ISubscriber<UserReaction>, IPagination, INavigation, IDisposable Type Parameters Name Description T Constructors | Improve this Doc View Source ItemPagination(ISubscribable<UserReaction>, IMessageChannel, DynamicItemPageProvider<T>, IReadOnlyCollection<T>, Int32, IPredicate<UserReaction>, PaginationOptions) Declaration public ItemPagination(ISubscribable<UserReaction> subscribable, IMessageChannel channel, DynamicItemPageProvider<T> pageProvider, IReadOnlyCollection<T> items, int itemsPerPage, IPredicate<UserReaction> predicate = null, PaginationOptions options = null) Parameters Type Name Description ISubscribable < UserReaction > subscribable IMessageChannel channel DynamicItemPageProvider <T> pageProvider IReadOnlyCollection <T> items Int32 itemsPerPage IPredicate < UserReaction > predicate PaginationOptions options Properties | Improve this Doc View Source Items Declaration public IReadOnlyCollection<T> Items { get; } Property Value Type Description IReadOnlyCollection <T> | Improve this Doc View Source ItemsPerPage Declaration public int ItemsPerPage { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source BuildPageAsync(Int32, Int32, CancellationToken) Declaration protected override sealed ValueTask<NavigationPage> BuildPageAsync(int currentPage, int totalPages, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Int32 currentPage Int32 totalPages CancellationToken cancellationToken Returns Type Description ValueTask < NavigationPage > Overrides BasePagination.BuildPageAsync(Int32, Int32, CancellationToken) Implements ISubscriber<T> IPagination INavigation System.IDisposable"
  },
  "api/Strade.Interactivity.Pagination.PaginationAction.html": {
    "href": "api/Strade.Interactivity.Pagination.PaginationAction.html",
    "title": "Class PaginationAction | Strade Developer Documentation",
    "keywords": "Class PaginationAction Inheritance Object NavigationAction PaginationAction Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactivity.Pagination Assembly : Strade.Interactivity.dll Syntax public sealed class PaginationAction : NavigationAction Constructors | Improve this Doc View Source PaginationAction(IEmote, PaginationActionType, Boolean) Declaration public PaginationAction(IEmote emote, PaginationActionType type, bool alwaysVisible = false) Parameters Type Name Description IEmote emote PaginationActionType type Boolean alwaysVisible | Improve this Doc View Source PaginationAction(PaginationActionType, Boolean) Declaration public PaginationAction(PaginationActionType type, bool alwaysVisible = false) Parameters Type Name Description PaginationActionType type Boolean alwaysVisible Properties | Improve this Doc View Source Emote Declaration public override IEmote Emote { get; } Property Value Type Description IEmote Overrides NavigationAction.Emote | Improve this Doc View Source Type Declaration public PaginationActionType Type { get; } Property Value Type Description PaginationActionType Methods | Improve this Doc View Source GetDefaultEmote(PaginationActionType) Declaration public static IEmote GetDefaultEmote(PaginationActionType type) Parameters Type Name Description PaginationActionType type Returns Type Description IEmote | Improve this Doc View Source GetVisibility(INavigation) Declaration public override NavigationActionVisibility GetVisibility(INavigation navigation) Parameters Type Name Description INavigation navigation Returns Type Description NavigationActionVisibility Overrides NavigationAction.GetVisibility(INavigation) | Improve this Doc View Source IsActionVisible(Int32, Int32, PaginationActionType) Declaration public static bool IsActionVisible(int currentPage, int totalPages, PaginationActionType type) Parameters Type Name Description Int32 currentPage Int32 totalPages PaginationActionType type Returns Type Description Boolean | Improve this Doc View Source RunAsync(INavigation, CancellationToken) Declaration public override ValueTask RunAsync(INavigation navigation, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description INavigation navigation CancellationToken cancellationToken Returns Type Description ValueTask Overrides NavigationAction.RunAsync(INavigation, CancellationToken)"
  },
  "api/Strade.Interactivity.Pagination.PaginationActionType.html": {
    "href": "api/Strade.Interactivity.Pagination.PaginationActionType.html",
    "title": "Enum PaginationActionType | Strade Developer Documentation",
    "keywords": "Enum PaginationActionType Namespace : Strade.Interactivity.Pagination Assembly : Strade.Interactivity.dll Syntax public enum PaginationActionType : byte Fields Name Description Close First Last Next Previous Extension Methods EnumExtensions.GetName<PaginationActionType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Interactivity.Pagination.PaginationAppearance.html": {
    "href": "api/Strade.Interactivity.Pagination.PaginationAppearance.html",
    "title": "Class PaginationAppearance | Strade Developer Documentation",
    "keywords": "Class PaginationAppearance Inheritance Object PaginationAppearance Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactivity.Pagination Assembly : Strade.Interactivity.dll Syntax public sealed class PaginationAppearance Constructors | Improve this Doc View Source PaginationAppearance(IEnumerable<NavigationAction>) Declaration public PaginationAppearance(IEnumerable<NavigationAction> actions) Parameters Type Name Description IEnumerable < NavigationAction > actions Properties | Improve this Doc View Source Actions Declaration public IEnumerable<NavigationAction> Actions { get; } Property Value Type Description IEnumerable < NavigationAction > | Improve this Doc View Source Default Declaration public static PaginationAppearance Default { get; } Property Value Type Description PaginationAppearance | Improve this Doc View Source Slim Declaration public static PaginationAppearance Slim { get; } Property Value Type Description PaginationAppearance"
  },
  "api/Strade.Interactivity.Pagination.PaginationOptions.html": {
    "href": "api/Strade.Interactivity.Pagination.PaginationOptions.html",
    "title": "Class PaginationOptions | Strade Developer Documentation",
    "keywords": "Class PaginationOptions Inheritance Object NavigationOptions PaginationOptions Inherited Members NavigationOptions.Default NavigationOptions.Actions NavigationOptions.AlwaysRefetch NavigationOptions.Blocking NavigationOptions.CloseBehavior NavigationOptions.IgnoreOrder NavigationOptions.Mode Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactivity.Pagination Assembly : Strade.Interactivity.dll Syntax public class PaginationOptions : NavigationOptions Properties | Improve this Doc View Source Appearance Declaration public PaginationAppearance Appearance { get; set; } Property Value Type Description PaginationAppearance | Improve this Doc View Source CachePages Declaration public bool CachePages { get; set; } Property Value Type Description Boolean"
  },
  "api/Strade.Interactivity.Predicates.html": {
    "href": "api/Strade.Interactivity.Predicates.html",
    "title": "Namespace Strade.Interactivity.Predicates | Strade Developer Documentation",
    "keywords": "Namespace Strade.Interactivity.Predicates Classes PredicateBuilder<T> PredicateBuilderExtensions Interfaces IPredicate<T> Enums PrivatePermissionBehavior"
  },
  "api/Strade.Interactivity.Predicates.IPredicate-1.html": {
    "href": "api/Strade.Interactivity.Predicates.IPredicate-1.html",
    "title": "Interface IPredicate<T> | Strade Developer Documentation",
    "keywords": "Interface IPredicate<T> Namespace : Strade.Interactivity.Predicates Assembly : Strade.Interactivity.dll Syntax public interface IPredicate<in T> Type Parameters Name Description T Methods | Improve this Doc View Source CheckAsync(T, CancellationToken) Declaration ValueTask<bool> CheckAsync(T value, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description T value CancellationToken cancellationToken Returns Type Description ValueTask < Boolean >"
  },
  "api/Strade.Interactivity.Predicates.PredicateBuilder-1.html": {
    "href": "api/Strade.Interactivity.Predicates.PredicateBuilder-1.html",
    "title": "Class PredicateBuilder<T> | Strade Developer Documentation",
    "keywords": "Class PredicateBuilder<T> Inheritance Object PredicateBuilder<T> Implements IBuilder < IPredicate <T>> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactivity.Predicates Assembly : Strade.Interactivity.dll Syntax public class PredicateBuilder<T> : IBuilder<IPredicate<T>> Type Parameters Name Description T Constructors | Improve this Doc View Source PredicateBuilder() Declaration public PredicateBuilder() | Improve this Doc View Source PredicateBuilder(IPredicate<T>) Declaration public PredicateBuilder(IPredicate<T> predicate) Parameters Type Name Description IPredicate <T> predicate | Improve this Doc View Source PredicateBuilder(IPredicate<T>[]) Declaration public PredicateBuilder(params IPredicate<T>[] predicates) Parameters Type Name Description IPredicate <T>[] predicates | Improve this Doc View Source PredicateBuilder(IEnumerable<IPredicate<T>>) Declaration public PredicateBuilder(IEnumerable<IPredicate<T>> predicates) Parameters Type Name Description IEnumerable < IPredicate <T>> predicates Methods | Improve this Doc View Source Build() Declaration public IPredicate<T> Build() Returns Type Description IPredicate <T> | Improve this Doc View Source Reset() Declaration public void Reset() | Improve this Doc View Source With(IPredicate<T>) Declaration public PredicateBuilder<T> With(IPredicate<T> predicate) Parameters Type Name Description IPredicate <T> predicate Returns Type Description PredicateBuilder <T> | Improve this Doc View Source With(IPredicate<T>[]) Declaration public PredicateBuilder<T> With(params IPredicate<T>[] predicates) Parameters Type Name Description IPredicate <T>[] predicates Returns Type Description PredicateBuilder <T> | Improve this Doc View Source With(IEnumerable<IPredicate<T>>) Declaration public PredicateBuilder<T> With(IEnumerable<IPredicate<T>> predicates) Parameters Type Name Description IEnumerable < IPredicate <T>> predicates Returns Type Description PredicateBuilder <T> | Improve this Doc View Source With(Func<T, Boolean>) Declaration public PredicateBuilder<T> With(Func<T, bool> predicate) Parameters Type Name Description Func <T, Boolean > predicate Returns Type Description PredicateBuilder <T> | Improve this Doc View Source With(Func<T, CancellationToken, ValueTask<Boolean>>) Declaration public PredicateBuilder<T> With(Func<T, CancellationToken, ValueTask<bool>> predicate) Parameters Type Name Description Func <T, CancellationToken , ValueTask < Boolean >> predicate Returns Type Description PredicateBuilder <T> Implements IBuilder<TResult>"
  },
  "api/Strade.Interactivity.Predicates.PredicateBuilderExtensions.html": {
    "href": "api/Strade.Interactivity.Predicates.PredicateBuilderExtensions.html",
    "title": "Class PredicateBuilderExtensions | Strade Developer Documentation",
    "keywords": "Class PredicateBuilderExtensions Inheritance Object PredicateBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactivity.Predicates Assembly : Strade.Interactivity.dll Syntax public static class PredicateBuilderExtensions Methods | Improve this Doc View Source FromUser(PredicateBuilder<UserReaction>, User) Declaration public static PredicateBuilder<UserReaction> FromUser(this PredicateBuilder<UserReaction> predicateBuilder, User user) Parameters Type Name Description PredicateBuilder < UserReaction > predicateBuilder User user Returns Type Description PredicateBuilder < UserReaction > | Improve this Doc View Source FromUserWithPermission(PredicateBuilder<UserReaction>, Permissions, PrivatePermissionBehavior) Declaration public static PredicateBuilder<UserReaction> FromUserWithPermission(this PredicateBuilder<UserReaction> predicateBuilder, Permissions permissions, PrivatePermissionBehavior permissionBehavior = PrivatePermissionBehavior.GrantAll) Parameters Type Name Description PredicateBuilder < UserReaction > predicateBuilder Permissions permissions PrivatePermissionBehavior permissionBehavior Returns Type Description PredicateBuilder < UserReaction > | Improve this Doc View Source FromUserWithPermission(PredicateBuilder<UserReaction>, Permissions[]) Declaration public static PredicateBuilder<UserReaction> FromUserWithPermission(this PredicateBuilder<UserReaction> predicateBuilder, params Permissions[] permissions) Parameters Type Name Description PredicateBuilder < UserReaction > predicateBuilder Permissions [] permissions Returns Type Description PredicateBuilder < UserReaction > | Improve this Doc View Source FromUserWithPermission(PredicateBuilder<UserReaction>, Permissions[], PrivatePermissionBehavior) Declaration public static PredicateBuilder<UserReaction> FromUserWithPermission(this PredicateBuilder<UserReaction> predicateBuilder, Permissions[] permissions, PrivatePermissionBehavior permissionBehavior = PrivatePermissionBehavior.GrantAll) Parameters Type Name Description PredicateBuilder < UserReaction > predicateBuilder Permissions [] permissions PrivatePermissionBehavior permissionBehavior Returns Type Description PredicateBuilder < UserReaction > | Improve this Doc View Source FromUserWithPermission(PredicateBuilder<UserReaction>, IEnumerable<Permissions>, PrivatePermissionBehavior) Declaration public static PredicateBuilder<UserReaction> FromUserWithPermission(this PredicateBuilder<UserReaction> predicateBuilder, IEnumerable<Permissions> permissions, PrivatePermissionBehavior permissionBehavior = PrivatePermissionBehavior.GrantAll) Parameters Type Name Description PredicateBuilder < UserReaction > predicateBuilder IEnumerable < Permissions > permissions PrivatePermissionBehavior permissionBehavior Returns Type Description PredicateBuilder < UserReaction > | Improve this Doc View Source InChannel(PredicateBuilder<UserReaction>, IMessageChannel) Declaration public static PredicateBuilder<UserReaction> InChannel(this PredicateBuilder<UserReaction> predicateBuilder, IMessageChannel messageChannel) Parameters Type Name Description PredicateBuilder < UserReaction > predicateBuilder IMessageChannel messageChannel Returns Type Description PredicateBuilder < UserReaction > | Improve this Doc View Source OnMessage(PredicateBuilder<UserReaction>, IMessage) Declaration public static PredicateBuilder<UserReaction> OnMessage(this PredicateBuilder<UserReaction> predicateBuilder, IMessage message) Parameters Type Name Description PredicateBuilder < UserReaction > predicateBuilder IMessage message Returns Type Description PredicateBuilder < UserReaction > | Improve this Doc View Source WithAnyEmoteOf(PredicateBuilder<UserReaction>, IEmote[]) Declaration public static PredicateBuilder<UserReaction> WithAnyEmoteOf(this PredicateBuilder<UserReaction> predicateBuilder, params IEmote[] emote) Parameters Type Name Description PredicateBuilder < UserReaction > predicateBuilder IEmote [] emote Returns Type Description PredicateBuilder < UserReaction > | Improve this Doc View Source WithAnyEmoteOf(PredicateBuilder<UserReaction>, IEnumerable<IEmote>) Declaration public static PredicateBuilder<UserReaction> WithAnyEmoteOf(this PredicateBuilder<UserReaction> predicateBuilder, IEnumerable<IEmote> emote) Parameters Type Name Description PredicateBuilder < UserReaction > predicateBuilder IEnumerable < IEmote > emote Returns Type Description PredicateBuilder < UserReaction > | Improve this Doc View Source WithEmote(PredicateBuilder<UserReaction>, IEmote) Declaration public static PredicateBuilder<UserReaction> WithEmote(this PredicateBuilder<UserReaction> predicateBuilder, IEmote emote) Parameters Type Name Description PredicateBuilder < UserReaction > predicateBuilder IEmote emote Returns Type Description PredicateBuilder < UserReaction >"
  },
  "api/Strade.Interactivity.Predicates.PrivatePermissionBehavior.html": {
    "href": "api/Strade.Interactivity.Predicates.PrivatePermissionBehavior.html",
    "title": "Enum PrivatePermissionBehavior | Strade Developer Documentation",
    "keywords": "Enum PrivatePermissionBehavior Namespace : Strade.Interactivity.Predicates Assembly : Strade.Interactivity.dll Syntax public enum PrivatePermissionBehavior : byte Fields Name Description GrantAll None Extension Methods EnumExtensions.GetName<PrivatePermissionBehavior>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Interactivity.Predicates.Reactions.FromUserReactionPredicate.html": {
    "href": "api/Strade.Interactivity.Predicates.Reactions.FromUserReactionPredicate.html",
    "title": "Class FromUserReactionPredicate | Strade Developer Documentation",
    "keywords": "Class FromUserReactionPredicate Inheritance Object FromUserReactionPredicate Implements IPredicate < UserReaction > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactivity.Predicates.Reactions Assembly : Strade.Interactivity.dll Syntax public sealed class FromUserReactionPredicate : IPredicate<UserReaction> Constructors | Improve this Doc View Source FromUserReactionPredicate(User) Declaration public FromUserReactionPredicate(User user) Parameters Type Name Description User user Properties | Improve this Doc View Source User Declaration public User User { get; } Property Value Type Description User Methods | Improve this Doc View Source CheckAsync(UserReaction, CancellationToken) Declaration public ValueTask<bool> CheckAsync(UserReaction value, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description UserReaction value CancellationToken cancellationToken Returns Type Description ValueTask < Boolean > Implements IPredicate<T>"
  },
  "api/Strade.Interactivity.Predicates.Reactions.FromUserWithPermissionReactionPredicate.html": {
    "href": "api/Strade.Interactivity.Predicates.Reactions.FromUserWithPermissionReactionPredicate.html",
    "title": "Class FromUserWithPermissionReactionPredicate | Strade Developer Documentation",
    "keywords": "Class FromUserWithPermissionReactionPredicate Inheritance Object FromUserWithPermissionReactionPredicate Implements IPredicate < UserReaction > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactivity.Predicates.Reactions Assembly : Strade.Interactivity.dll Syntax public sealed class FromUserWithPermissionReactionPredicate : IPredicate<UserReaction> Constructors | Improve this Doc View Source FromUserWithPermissionReactionPredicate(Permissions, PrivatePermissionBehavior) Declaration public FromUserWithPermissionReactionPredicate(Permissions permission, PrivatePermissionBehavior permissionBehavior = PrivatePermissionBehavior.GrantAll) Parameters Type Name Description Permissions permission PrivatePermissionBehavior permissionBehavior | Improve this Doc View Source FromUserWithPermissionReactionPredicate(Permissions[], PrivatePermissionBehavior) Declaration public FromUserWithPermissionReactionPredicate(Permissions[] permissions, PrivatePermissionBehavior permissionBehavior = PrivatePermissionBehavior.GrantAll) Parameters Type Name Description Permissions [] permissions PrivatePermissionBehavior permissionBehavior | Improve this Doc View Source FromUserWithPermissionReactionPredicate(IEnumerable<Permissions>, PrivatePermissionBehavior) Declaration public FromUserWithPermissionReactionPredicate(IEnumerable<Permissions> permissions, PrivatePermissionBehavior permissionBehavior = PrivatePermissionBehavior.GrantAll) Parameters Type Name Description IEnumerable < Permissions > permissions PrivatePermissionBehavior permissionBehavior Properties | Improve this Doc View Source Permission Declaration public Permissions Permission { get; } Property Value Type Description Permissions | Improve this Doc View Source PermissionBehavior Declaration public PrivatePermissionBehavior PermissionBehavior { get; } Property Value Type Description PrivatePermissionBehavior Methods | Improve this Doc View Source CheckAsync(UserReaction, CancellationToken) Declaration public ValueTask<bool> CheckAsync(UserReaction reaction, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description UserReaction reaction CancellationToken cancellationToken Returns Type Description ValueTask < Boolean > Implements IPredicate<T>"
  },
  "api/Strade.Interactivity.Predicates.Reactions.html": {
    "href": "api/Strade.Interactivity.Predicates.Reactions.html",
    "title": "Namespace Strade.Interactivity.Predicates.Reactions | Strade Developer Documentation",
    "keywords": "Namespace Strade.Interactivity.Predicates.Reactions Classes FromUserReactionPredicate FromUserWithPermissionReactionPredicate InChannelReactionPredicate OnMessageReactionPredicate WithAnyEmoteReactionPredicate A reaction predicate used to constraint a reaction to be made with any of the specified emotes. WithEmoteReactionPredicate A reaction predicate used to constraint a reaction to be made with a specific emote."
  },
  "api/Strade.Interactivity.Predicates.Reactions.InChannelReactionPredicate.html": {
    "href": "api/Strade.Interactivity.Predicates.Reactions.InChannelReactionPredicate.html",
    "title": "Class InChannelReactionPredicate | Strade Developer Documentation",
    "keywords": "Class InChannelReactionPredicate Inheritance Object InChannelReactionPredicate Implements IPredicate < UserReaction > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactivity.Predicates.Reactions Assembly : Strade.Interactivity.dll Syntax public class InChannelReactionPredicate : IPredicate<UserReaction> Constructors | Improve this Doc View Source InChannelReactionPredicate(IMessageChannel) Declaration public InChannelReactionPredicate(IMessageChannel channel) Parameters Type Name Description IMessageChannel channel Properties | Improve this Doc View Source Channel Declaration public IMessageChannel Channel { get; } Property Value Type Description IMessageChannel Methods | Improve this Doc View Source CheckAsync(UserReaction, CancellationToken) Declaration public ValueTask<bool> CheckAsync(UserReaction value, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description UserReaction value CancellationToken cancellationToken Returns Type Description ValueTask < Boolean > Implements IPredicate<T>"
  },
  "api/Strade.Interactivity.Predicates.Reactions.OnMessageReactionPredicate.html": {
    "href": "api/Strade.Interactivity.Predicates.Reactions.OnMessageReactionPredicate.html",
    "title": "Class OnMessageReactionPredicate | Strade Developer Documentation",
    "keywords": "Class OnMessageReactionPredicate Inheritance Object OnMessageReactionPredicate Implements IPredicate < UserReaction > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactivity.Predicates.Reactions Assembly : Strade.Interactivity.dll Syntax public sealed class OnMessageReactionPredicate : IPredicate<UserReaction> Constructors | Improve this Doc View Source OnMessageReactionPredicate(IMessage) Declaration public OnMessageReactionPredicate(IMessage message) Parameters Type Name Description IMessage message Properties | Improve this Doc View Source Message Declaration public IMessage Message { get; } Property Value Type Description IMessage Methods | Improve this Doc View Source CheckAsync(UserReaction, CancellationToken) Declaration public ValueTask<bool> CheckAsync(UserReaction value, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description UserReaction value CancellationToken cancellationToken Returns Type Description ValueTask < Boolean > Implements IPredicate<T>"
  },
  "api/Strade.Interactivity.Predicates.Reactions.WithAnyEmoteReactionPredicate.html": {
    "href": "api/Strade.Interactivity.Predicates.Reactions.WithAnyEmoteReactionPredicate.html",
    "title": "Class WithAnyEmoteReactionPredicate | Strade Developer Documentation",
    "keywords": "Class WithAnyEmoteReactionPredicate A reaction predicate used to constraint a reaction to be made with any of the specified emotes. Inheritance Object WithAnyEmoteReactionPredicate Implements IPredicate < UserReaction > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactivity.Predicates.Reactions Assembly : Strade.Interactivity.dll Syntax public sealed class WithAnyEmoteReactionPredicate : IPredicate<UserReaction> Constructors | Improve this Doc View Source WithAnyEmoteReactionPredicate(IEmote[]) Initializes a new instance of the WithAnyEmoteReactionPredicate class. Declaration public WithAnyEmoteReactionPredicate(params IEmote[] emotes) Parameters Type Name Description IEmote [] emotes an array that specifies the allowed emotes. Exceptions Type Condition ArgumentNullException thrown if the specified emotes array is null . | Improve this Doc View Source WithAnyEmoteReactionPredicate(IEnumerable<IEmote>) Initializes a new instance of the WithAnyEmoteReactionPredicate class. Declaration public WithAnyEmoteReactionPredicate(IEnumerable<IEmote> emotes) Parameters Type Name Description IEnumerable < IEmote > emotes an enumerable that yields through the allowed emotes. Exceptions Type Condition ArgumentNullException thrown if the specified emotes enumerable is null . Properties | Improve this Doc View Source Emotes Gets an enumerable that yields through the allowed emotes. Declaration public IEnumerable<IEmote> Emotes { get; } Property Value Type Description IEnumerable < IEmote > Methods | Improve this Doc View Source CheckAsync(UserReaction, CancellationToken) Declaration public ValueTask<bool> CheckAsync(UserReaction value, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description UserReaction value CancellationToken cancellationToken Returns Type Description ValueTask < Boolean > Implements IPredicate<T>"
  },
  "api/Strade.Interactivity.Predicates.Reactions.WithEmoteReactionPredicate.html": {
    "href": "api/Strade.Interactivity.Predicates.Reactions.WithEmoteReactionPredicate.html",
    "title": "Class WithEmoteReactionPredicate | Strade Developer Documentation",
    "keywords": "Class WithEmoteReactionPredicate A reaction predicate used to constraint a reaction to be made with a specific emote. Inheritance Object WithEmoteReactionPredicate Implements IPredicate < UserReaction > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactivity.Predicates.Reactions Assembly : Strade.Interactivity.dll Syntax public class WithEmoteReactionPredicate : IPredicate<UserReaction> Constructors | Improve this Doc View Source WithEmoteReactionPredicate(IEmote) Initializes a new instance of the WithEmoteReactionPredicate class. Declaration public WithEmoteReactionPredicate(IEmote emote) Parameters Type Name Description IEmote emote the emote. Exceptions Type Condition ArgumentNullException thrown if the specified emote is null . Properties | Improve this Doc View Source Emote Gets the emote. Declaration public IEmote Emote { get; } Property Value Type Description IEmote the emote. Methods | Improve this Doc View Source CheckAsync(UserReaction, CancellationToken) Declaration public ValueTask<bool> CheckAsync(UserReaction value, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description UserReaction value CancellationToken cancellationToken Returns Type Description ValueTask < Boolean > Implements IPredicate<T>"
  },
  "api/Strade.Interactivity.Subscription.html": {
    "href": "api/Strade.Interactivity.Subscription.html",
    "title": "Namespace Strade.Interactivity.Subscription | Strade Developer Documentation",
    "keywords": "Namespace Strade.Interactivity.Subscription Interfaces ISubscribable<T> ISubscriber<T>"
  },
  "api/Strade.Interactivity.Subscription.ISubscribable-1.html": {
    "href": "api/Strade.Interactivity.Subscription.ISubscribable-1.html",
    "title": "Interface ISubscribable<T> | Strade Developer Documentation",
    "keywords": "Interface ISubscribable<T> Namespace : Strade.Interactivity.Subscription Assembly : Strade.Interactivity.dll Syntax public interface ISubscribable<out T> Type Parameters Name Description T Methods | Improve this Doc View Source Register(ISubscriber<T>) Declaration void Register(ISubscriber<T> subscriber) Parameters Type Name Description ISubscriber <T> subscriber | Improve this Doc View Source Unregister(ISubscriber<T>) Declaration bool Unregister(ISubscriber<T> subscriber) Parameters Type Name Description ISubscriber <T> subscriber Returns Type Description Boolean"
  },
  "api/Strade.Interactivity.Subscription.ISubscriber-1.html": {
    "href": "api/Strade.Interactivity.Subscription.ISubscriber-1.html",
    "title": "Interface ISubscriber<T> | Strade Developer Documentation",
    "keywords": "Interface ISubscriber<T> Namespace : Strade.Interactivity.Subscription Assembly : Strade.Interactivity.dll Syntax public interface ISubscriber<in T> Type Parameters Name Description T Methods | Improve this Doc View Source PushAsync(T, CancellationToken) Declaration ValueTask PushAsync(T value, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description T value CancellationToken cancellationToken Returns Type Description ValueTask"
  },
  "api/Strade.Interactivity.TimeoutBehavior.html": {
    "href": "api/Strade.Interactivity.TimeoutBehavior.html",
    "title": "Enum TimeoutBehavior | Strade Developer Documentation",
    "keywords": "Enum TimeoutBehavior Namespace : Strade.Interactivity Assembly : Strade.Interactivity.dll Syntax public enum TimeoutBehavior : byte Fields Name Description ReturnDefault Throw Extension Methods EnumExtensions.GetName<TimeoutBehavior>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Interactivity.UserReaction.html": {
    "href": "api/Strade.Interactivity.UserReaction.html",
    "title": "Class UserReaction | Strade Developer Documentation",
    "keywords": "Class UserReaction Represents a user's reaction. Inheritance Object UserReaction Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactivity Assembly : Strade.Interactivity.dll Syntax public sealed class UserReaction Constructors | Improve this Doc View Source UserReaction(User, IMessage, IEmote) Initializes a new instance of the UserReaction class. Declaration public UserReaction(User user, IMessage message, IEmote emote) Parameters Type Name Description User user the user that made the reaction. IMessage message the message the reaction was made on. IEmote emote the emote the reaction was made with. Exceptions Type Condition ArgumentNullException thrown if the specified user is null . ArgumentNullException thrown if the specified message is null . ArgumentNullException thrown if the specified emote is null . Properties | Improve this Doc View Source Emote Gets the emote the reaction was made with. Declaration public IEmote Emote { get; } Property Value Type Description IEmote the emote the reaction was made with. | Improve this Doc View Source Message Gets the message the reaction was made on. Declaration public IMessage Message { get; } Property Value Type Description IMessage the message the reaction was made on. | Improve this Doc View Source User Gets the user that made the reaction. Declaration public User User { get; } Property Value Type Description User the user that made the reaction."
  },
  "api/Strade.Interactivity.Util.html": {
    "href": "api/Strade.Interactivity.Util.html",
    "title": "Namespace Strade.Interactivity.Util | Strade Developer Documentation",
    "keywords": "Namespace Strade.Interactivity.Util Classes ReactionHelper Interfaces IAwaitable<TResult> Interface for await-able operations. ITimedAwaitable<TResult>"
  },
  "api/Strade.Interactivity.Util.IAwaitable-1.html": {
    "href": "api/Strade.Interactivity.Util.IAwaitable-1.html",
    "title": "Interface IAwaitable<TResult> | Strade Developer Documentation",
    "keywords": "Interface IAwaitable<TResult> Interface for await-able operations. Inherited Members INotifyCompletion.OnCompleted(Action) Namespace : Strade.Interactivity.Util Assembly : Strade.Interactivity.dll Syntax public interface IAwaitable<out TResult> : INotifyCompletion Type Parameters Name Description TResult the type of the result of the operation. Properties | Improve this Doc View Source IsCompleted Gets a value indicating whether the asynchronous action is completed. Declaration bool IsCompleted { get; } Property Value Type Description Boolean a value indicating whether the asynchronous action is completed. Methods | Improve this Doc View Source GetAwaiter() Gets the asynchronous awaiter (the instance itself). Declaration IAwaitable<TResult> GetAwaiter() Returns Type Description IAwaitable <TResult> the awaiter. | Improve this Doc View Source GetResult() Gets the task result. Declaration TResult GetResult() Returns Type Description TResult the task result."
  },
  "api/Strade.Interactivity.Util.ITimedAwaitable-1.html": {
    "href": "api/Strade.Interactivity.Util.ITimedAwaitable-1.html",
    "title": "Interface ITimedAwaitable<TResult> | Strade Developer Documentation",
    "keywords": "Interface ITimedAwaitable<TResult> Inherited Members IAwaitable<TResult>.IsCompleted IAwaitable<TResult>.GetAwaiter() IAwaitable<TResult>.GetResult() INotifyCompletion.OnCompleted(Action) Namespace : Strade.Interactivity.Util Assembly : Strade.Interactivity.dll Syntax public interface ITimedAwaitable<out TResult> : IAwaitable<TResult>, INotifyCompletion Type Parameters Name Description TResult Properties | Improve this Doc View Source CanTimeout Gets a value indicating whether the operation can time out. Declaration bool CanTimeout { get; } Property Value Type Description Boolean a value indicating whether the operation can time out. | Improve this Doc View Source HasTimedOut Declaration bool HasTimedOut { get; } Property Value Type Description Boolean | Improve this Doc View Source IsCanceled Gets a value indicating whether the operation timed out and was canceled. Declaration bool IsCanceled { get; } Property Value Type Description Boolean a value indicating whether the operation timed out and was canceled. | Improve this Doc View Source TimeoutBehavior Gets the behavior after a timeout. Declaration TimeoutBehavior TimeoutBehavior { get; } Property Value Type Description TimeoutBehavior the behavior after a timeout. Methods | Improve this Doc View Source Cancel() Declaration void Cancel()"
  },
  "api/Strade.Interactivity.Util.ReactionHelper.html": {
    "href": "api/Strade.Interactivity.Util.ReactionHelper.html",
    "title": "Class ReactionHelper | Strade Developer Documentation",
    "keywords": "Class ReactionHelper Inheritance Object ReactionHelper Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Interactivity.Util Assembly : Strade.Interactivity.dll Syntax public static class ReactionHelper Methods | Improve this Doc View Source UpdateReactionsAsync(IMessage, IReadOnlyList<IEmote>, Boolean, Boolean, CancellationToken) Declaration public static Task UpdateReactionsAsync(IMessage message, IReadOnlyList<IEmote> emotes, bool refetch = false, bool ensureOrder = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IMessage message IReadOnlyList < IEmote > emotes Boolean refetch Boolean ensureOrder CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/Strade.Logging.BaseLogger.html": {
    "href": "api/Strade.Logging.BaseLogger.html",
    "title": "Class BaseLogger | Strade Developer Documentation",
    "keywords": "Class BaseLogger Basic logger abstraction. Inheritance Object BaseLogger LoggerWrapper IntegratedLogger LogWrapper Implements ILogger Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Logging Assembly : Strade.Logging.dll Syntax public abstract class BaseLogger : ILogger Methods | Improve this Doc View Source Debug(Object, Exception, String, Object[]) Declaration public void Debug(object sender, Exception exception, string message, params object[] args) Parameters Type Name Description Object sender Exception exception String message Object [] args | Improve this Doc View Source Debug(Object, String, Object[]) Declaration public void Debug(object sender, string message, params object[] args) Parameters Type Name Description Object sender String message Object [] args | Improve this Doc View Source Error(Object, Exception, String, Object[]) Declaration public void Error(object sender, Exception exception, string message, params object[] args) Parameters Type Name Description Object sender Exception exception String message Object [] args | Improve this Doc View Source Error(Object, String, Object[]) Declaration public void Error(object sender, string message, params object[] args) Parameters Type Name Description Object sender String message Object [] args | Improve this Doc View Source Information(Object, Exception, String, Object[]) Declaration public void Information(object sender, Exception exception, string message, params object[] args) Parameters Type Name Description Object sender Exception exception String message Object [] args | Improve this Doc View Source Information(Object, String, Object[]) Declaration public void Information(object sender, string message, params object[] args) Parameters Type Name Description Object sender String message Object [] args | Improve this Doc View Source Log(LogSeverity, Object, Exception, String, Object[]) Logs a message with the specified severity from the specified sender with the specified message , args and exception . Declaration protected abstract void Log(LogSeverity severity, object sender, Exception exception, string message, params object[] args) Parameters Type Name Description LogSeverity severity the log severity. Object sender the message sender. Exception exception the exception that occurred; or null if not present. String message the log message. Object [] args the message format arguments; if null message formatting is not applied to the specified message . Exceptions Type Condition ArgumentNullException thrown if the specified sender is null . ArgumentOutOfRangeException thrown if the specified severity is not defined in the LogSeverity enumeration. ArgumentNullException thrown if the specified message is null . | Improve this Doc View Source Log(Object, LogSeverity, String, Object[]) Declaration public void Log(object sender, LogSeverity severity, string message, params object[] args) Parameters Type Name Description Object sender LogSeverity severity String message Object [] args | Improve this Doc View Source Log(Object, Exception, LogSeverity, String, Object[]) Declaration public void Log(object sender, Exception exception, LogSeverity severity, string message, params object[] args) Parameters Type Name Description Object sender Exception exception LogSeverity severity String message Object [] args | Improve this Doc View Source Trace(Object, Exception, String, Object[]) Declaration public void Trace(object sender, Exception exception, string message, params object[] args) Parameters Type Name Description Object sender Exception exception String message Object [] args | Improve this Doc View Source Trace(Object, String, Object[]) Declaration public void Trace(object sender, string message, params object[] args) Parameters Type Name Description Object sender String message Object [] args | Improve this Doc View Source Warning(Object, Exception, String, Object[]) Declaration public void Warning(object sender, Exception exception, string message, params object[] args) Parameters Type Name Description Object sender Exception exception String message Object [] args | Improve this Doc View Source Warning(Object, String, Object[]) Declaration public void Warning(object sender, string message, params object[] args) Parameters Type Name Description Object sender String message Object [] args Implements ILogger"
  },
  "api/Strade.Logging.Default.html": {
    "href": "api/Strade.Logging.Default.html",
    "title": "Namespace Strade.Logging.Default | Strade Developer Documentation",
    "keywords": "Namespace Strade.Logging.Default Classes LoggerUtil An utility class that helps with log level conversion. LoggerWrapper A ILogger implementation for the Microsoft.Extensions.Logging framework."
  },
  "api/Strade.Logging.Default.LoggerUtil.html": {
    "href": "api/Strade.Logging.Default.LoggerUtil.html",
    "title": "Class LoggerUtil | Strade Developer Documentation",
    "keywords": "Class LoggerUtil An utility class that helps with log level conversion. Inheritance Object LoggerUtil Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Logging.Default Assembly : Strade.Logging.Default.dll Syntax public static class LoggerUtil Methods | Improve this Doc View Source MapLevel(LogSeverity) Maps the specified log severity to a LogLevel . Declaration public static LogLevel MapLevel(LogSeverity severity) Parameters Type Name Description LogSeverity severity the severity to map. Returns Type Description LogLevel the LogLevel equivalent. Remarks If an unspecified severity is passed, the Information level is used."
  },
  "api/Strade.Logging.Default.LoggerWrapper.html": {
    "href": "api/Strade.Logging.Default.LoggerWrapper.html",
    "title": "Class LoggerWrapper | Strade Developer Documentation",
    "keywords": "Class LoggerWrapper A ILogger implementation for the Microsoft.Extensions.Logging framework. Inheritance Object BaseLogger LoggerWrapper Implements ILogger Inherited Members BaseLogger.Debug(Object, String, Object[]) BaseLogger.Debug(Object, Exception, String, Object[]) BaseLogger.Error(Object, String, Object[]) BaseLogger.Error(Object, Exception, String, Object[]) BaseLogger.Information(Object, String, Object[]) BaseLogger.Information(Object, Exception, String, Object[]) BaseLogger.Log(Object, LogSeverity, String, Object[]) BaseLogger.Log(Object, Exception, LogSeverity, String, Object[]) BaseLogger.Trace(Object, String, Object[]) BaseLogger.Trace(Object, Exception, String, Object[]) BaseLogger.Warning(Object, String, Object[]) BaseLogger.Warning(Object, Exception, String, Object[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Logging.Default Assembly : Strade.Logging.Default.dll Syntax public sealed class LoggerWrapper : BaseLogger, ILogger Constructors | Improve this Doc View Source LoggerWrapper(ILoggerFactory) Initializes a new instance of the LoggerWrapper class. Declaration public LoggerWrapper(ILoggerFactory loggerFactory) Parameters Type Name Description ILoggerFactory loggerFactory the logger factory to use. Exceptions Type Condition ArgumentNullException thrown if the specified loggerFactory is null . | Improve this Doc View Source LoggerWrapper(Action<ILoggingBuilder>) Initializes a new instance of the LoggerWrapper class. Declaration public LoggerWrapper(Action<ILoggingBuilder> configure) Parameters Type Name Description Action < ILoggingBuilder > configure the configure action for the logger factory. Exceptions Type Condition ArgumentNullException thrown if the specified configure is null . Methods | Improve this Doc View Source Log(LogSeverity, Object, Exception, String, Object[]) Declaration protected override void Log(LogSeverity severity, object sender, Exception exception, string message, params object[] args) Parameters Type Name Description LogSeverity severity Object sender Exception exception String message Object [] args Overrides BaseLogger.Log(LogSeverity, Object, Exception, String, Object[]) Implements ILogger"
  },
  "api/Strade.Logging.html": {
    "href": "api/Strade.Logging.html",
    "title": "Namespace Strade.Logging | Strade Developer Documentation",
    "keywords": "Namespace Strade.Logging Classes BaseLogger Basic logger abstraction. IntegratedLogger Interfaces ILogger Interface for loggers. Enums LogSeverity A set of log severities."
  },
  "api/Strade.Logging.ILogger.html": {
    "href": "api/Strade.Logging.ILogger.html",
    "title": "Interface ILogger | Strade Developer Documentation",
    "keywords": "Interface ILogger Interface for loggers. Namespace : Strade.Logging Assembly : Strade.Logging.dll Syntax public interface ILogger Methods | Improve this Doc View Source Debug(Object, Exception, String, Object[]) Logs a message with the specified sender , the specified message , the specified args and the specified exception with the Debug severity. Declaration void Debug(object sender, Exception exception, string message, params object[] args) Parameters Type Name Description Object sender the message sender. Exception exception the exception that occurred; or null if not present. String message the log message. Object [] args the message format arguments; if null message formatting is not applied to the specified message . Exceptions Type Condition ArgumentNullException thrown if the specified sender is null . ArgumentNullException thrown if the specified message is null . | Improve this Doc View Source Debug(Object, String, Object[]) Logs a message with the specified sender , the specified message and the specified args with the Debug severity. Declaration void Debug(object sender, string message, params object[] args) Parameters Type Name Description Object sender the message sender. String message the log message. Object [] args the message format arguments; if null message formatting is not applied to the specified message . Exceptions Type Condition ArgumentNullException thrown if the specified sender is null . ArgumentNullException thrown if the specified message is null . | Improve this Doc View Source Error(Object, Exception, String, Object[]) Logs a message with the specified sender , the specified message , the specified args and the specified exception with the Error severity. Declaration void Error(object sender, Exception exception, string message, params object[] args) Parameters Type Name Description Object sender the message sender. Exception exception the exception that occurred; or null if not present. String message the log message. Object [] args the message format arguments; if null message formatting is not applied to the specified message . Exceptions Type Condition ArgumentNullException thrown if the specified sender is null . ArgumentNullException thrown if the specified message is null . | Improve this Doc View Source Error(Object, String, Object[]) Logs a message with the specified sender , the specified message and the specified args with the Error severity. Declaration void Error(object sender, string message, params object[] args) Parameters Type Name Description Object sender the message sender. String message the log message. Object [] args the message format arguments; if null message formatting is not applied to the specified message . Exceptions Type Condition ArgumentNullException thrown if the specified sender is null . ArgumentNullException thrown if the specified message is null . | Improve this Doc View Source Information(Object, Exception, String, Object[]) Logs a message with the specified sender , the specified message , the specified args and the specified exception with the Information severity. Declaration void Information(object sender, Exception exception, string message, params object[] args) Parameters Type Name Description Object sender the message sender. Exception exception the exception that occurred; or null if not present. String message the log message. Object [] args the message format arguments; if null message formatting is not applied to the specified message . Exceptions Type Condition ArgumentNullException thrown if the specified sender is null . ArgumentNullException thrown if the specified message is null . | Improve this Doc View Source Information(Object, String, Object[]) Logs a message with the specified sender , the specified message and the specified args with the Information severity. Declaration void Information(object sender, string message, params object[] args) Parameters Type Name Description Object sender the message sender. String message the log message. Object [] args the message format arguments; if null message formatting is not applied to the specified message . Exceptions Type Condition ArgumentNullException thrown if the specified sender is null . ArgumentNullException thrown if the specified message is null . | Improve this Doc View Source Log(Object, LogSeverity, String, Object[]) Logs a message with the specified sender , the specified message and the specified args with the specified severity . Declaration void Log(object sender, LogSeverity severity, string message, params object[] args) Parameters Type Name Description Object sender the message sender. LogSeverity severity the log severity. String message the log message. Object [] args the message format arguments; if null message formatting is not applied to the specified message . Exceptions Type Condition ArgumentNullException thrown if the specified sender is null . ArgumentOutOfRangeException thrown if the specified severity is not defined in the LogSeverity enumeration. ArgumentNullException thrown if the specified message is null . | Improve this Doc View Source Log(Object, Exception, LogSeverity, String, Object[]) Logs a message with the specified sender , the specified message , the specified args and the specified exception with the specified severity . Declaration void Log(object sender, Exception exception, LogSeverity severity, string message, params object[] args) Parameters Type Name Description Object sender the message sender. Exception exception the exception that occurred; or null if not present. LogSeverity severity the log severity. String message the log message. Object [] args the message format arguments; if null message formatting is not applied to the specified message . Exceptions Type Condition ArgumentNullException thrown if the specified sender is null . ArgumentOutOfRangeException thrown if the specified severity is not defined in the LogSeverity enumeration. ArgumentNullException thrown if the specified message is null . | Improve this Doc View Source Trace(Object, Exception, String, Object[]) Logs a message with the specified sender , the specified message , the specified args and the specified exception with the Trace severity. Declaration void Trace(object sender, Exception exception, string message, params object[] args) Parameters Type Name Description Object sender the message sender. Exception exception the exception that occurred; or null if not present. String message the log message. Object [] args the message format arguments; if null message formatting is not applied to the specified message . Exceptions Type Condition ArgumentNullException thrown if the specified sender is null . ArgumentNullException thrown if the specified message is null . | Improve this Doc View Source Trace(Object, String, Object[]) Logs a message with the specified sender , the specified message and the specified args with the Trace severity. Declaration void Trace(object sender, string message, params object[] args) Parameters Type Name Description Object sender the message sender. String message the log message. Object [] args the message format arguments; if null message formatting is not applied to the specified message . Exceptions Type Condition ArgumentNullException thrown if the specified sender is null . ArgumentNullException thrown if the specified message is null . | Improve this Doc View Source Warning(Object, Exception, String, Object[]) Logs a message with the specified sender , the specified message , the specified args and the specified exception with the Warning severity. Declaration void Warning(object sender, Exception exception, string message, params object[] args) Parameters Type Name Description Object sender the message sender. Exception exception the exception that occurred; or null if not present. String message the log message. Object [] args the message format arguments; if null message formatting is not applied to the specified message . Exceptions Type Condition ArgumentNullException thrown if the specified sender is null . ArgumentNullException thrown if the specified message is null . | Improve this Doc View Source Warning(Object, String, Object[]) Logs a message with the specified sender , the specified message and the specified args with the Warning severity. Declaration void Warning(object sender, string message, params object[] args) Parameters Type Name Description Object sender the message sender. String message the log message. Object [] args the message format arguments; if null message formatting is not applied to the specified message . Exceptions Type Condition ArgumentNullException thrown if the specified sender is null . ArgumentNullException thrown if the specified message is null ."
  },
  "api/Strade.Logging.IntegratedLogger.html": {
    "href": "api/Strade.Logging.IntegratedLogger.html",
    "title": "Class IntegratedLogger | Strade Developer Documentation",
    "keywords": "Class IntegratedLogger Inheritance Object BaseLogger IntegratedLogger Implements ILogger Inherited Members BaseLogger.Debug(Object, String, Object[]) BaseLogger.Debug(Object, Exception, String, Object[]) BaseLogger.Error(Object, String, Object[]) BaseLogger.Error(Object, Exception, String, Object[]) BaseLogger.Information(Object, String, Object[]) BaseLogger.Information(Object, Exception, String, Object[]) BaseLogger.Log(Object, LogSeverity, String, Object[]) BaseLogger.Log(Object, Exception, LogSeverity, String, Object[]) BaseLogger.Trace(Object, String, Object[]) BaseLogger.Trace(Object, Exception, String, Object[]) BaseLogger.Warning(Object, String, Object[]) BaseLogger.Warning(Object, Exception, String, Object[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Logging Assembly : Strade.Rest.dll Syntax public sealed class IntegratedLogger : BaseLogger, ILogger Constructors | Improve this Doc View Source IntegratedLogger() Initializes a new instance of the IntegratedLogger class. Declaration public IntegratedLogger() Properties | Improve this Doc View Source IncludeTimestamp Declaration public bool IncludeTimestamp { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Instance Declaration public static IntegratedLogger Instance { get; } Property Value Type Description IntegratedLogger | Improve this Doc View Source Severity Declaration public LogSeverity Severity { get; set; } Property Value Type Description LogSeverity Methods | Improve this Doc View Source Log(LogSeverity, Object, Exception, String, Object[]) Declaration protected override void Log(LogSeverity severity, object sender, Exception exception, string message, params object[] args) Parameters Type Name Description LogSeverity severity Object sender Exception exception String message Object [] args Overrides BaseLogger.Log(LogSeverity, Object, Exception, String, Object[]) Implements ILogger"
  },
  "api/Strade.Logging.LogSeverity.html": {
    "href": "api/Strade.Logging.LogSeverity.html",
    "title": "Enum LogSeverity | Strade Developer Documentation",
    "keywords": "Enum LogSeverity A set of log severities. Namespace : Strade.Logging Assembly : Strade.Logging.dll Syntax public enum LogSeverity Fields Name Description Debug Denotes that the message is a debug message. Error Denotes that the message is an error message. Information Denotes that the message is an information message. Trace Denotes that the message is a trace message. Warning Denotes that the message is a warn message. Extension Methods EnumExtensions.GetName<LogSeverity>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Logging.NLog.html": {
    "href": "api/Strade.Logging.NLog.html",
    "title": "Namespace Strade.Logging.NLog | Strade Developer Documentation",
    "keywords": "Namespace Strade.Logging.NLog Classes LogWrapper An NLog.ILogger implementation for NLog."
  },
  "api/Strade.Logging.NLog.LogWrapper.html": {
    "href": "api/Strade.Logging.NLog.LogWrapper.html",
    "title": "Class LogWrapper | Strade Developer Documentation",
    "keywords": "Class LogWrapper An NLog.ILogger implementation for NLog. Inheritance Object BaseLogger LogWrapper Implements ILogger Inherited Members BaseLogger.Debug(Object, String, Object[]) BaseLogger.Debug(Object, Exception, String, Object[]) BaseLogger.Error(Object, String, Object[]) BaseLogger.Error(Object, Exception, String, Object[]) BaseLogger.Information(Object, String, Object[]) BaseLogger.Information(Object, Exception, String, Object[]) BaseLogger.Log(Object, LogSeverity, String, Object[]) BaseLogger.Log(Object, Exception, LogSeverity, String, Object[]) BaseLogger.Trace(Object, String, Object[]) BaseLogger.Trace(Object, Exception, String, Object[]) BaseLogger.Warning(Object, String, Object[]) BaseLogger.Warning(Object, Exception, String, Object[]) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Logging.NLog Assembly : Strade.Logging.NLog.dll Syntax public sealed class LogWrapper : BaseLogger, ILogger Constructors | Improve this Doc View Source LogWrapper() Initializes a new instance of the LogWrapper class using the default logger factory ( NLog.LogManager.LogFactory ). Declaration public LogWrapper() | Improve this Doc View Source LogWrapper(LogFactory) Initializes a new instance of the LogWrapper class. Declaration public LogWrapper(LogFactory factory) Parameters Type Name Description NLog.LogFactory factory the factory to use for logger creation. Exceptions Type Condition ArgumentNullException thrown if the specified factory is null . Properties | Improve this Doc View Source Factory Gets the logger factory. Declaration public LogFactory Factory { get; } Property Value Type Description NLog.LogFactory Methods | Improve this Doc View Source Log(LogSeverity, Object, Exception, String, Object[]) Declaration protected override void Log(LogSeverity severity, object sender, Exception exception, string message, params object[] args) Parameters Type Name Description LogSeverity severity Object sender Exception exception String message Object [] args Overrides BaseLogger.Log(LogSeverity, Object, Exception, String, Object[]) | Improve this Doc View Source ToLevel(LogSeverity) Gets the NLog.LogLevel equivalent for the specified severity . Declaration public static LogLevel ToLevel(LogSeverity severity) Parameters Type Name Description LogSeverity severity the log severity. Returns Type Description NLog.LogLevel the NLog.LogLevel equivalent for the specified severity . Implements ILogger"
  },
  "api/Strade.MemberExtensions.html": {
    "href": "api/Strade.MemberExtensions.html",
    "title": "Class MemberExtensions | Strade Developer Documentation",
    "keywords": "Class MemberExtensions Provides extension methods for the Member class. Inheritance Object MemberExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade Assembly : Strade.dll Syntax public static class MemberExtensions Methods | Improve this Doc View Source GetVoiceState(Member) Gets the voice state of the specified member . Declaration public static VoiceState GetVoiceState(this Member member) Parameters Type Name Description Member member the member. Returns Type Description VoiceState the member's voice state; or null if not available. Exceptions Type Condition ArgumentNullException thrown if the specified member is null ."
  },
  "api/Strade.MessageReactionRemoveEmojiEvent.html": {
    "href": "api/Strade.MessageReactionRemoveEmojiEvent.html",
    "title": "Class MessageReactionRemoveEmojiEvent | Strade Developer Documentation",
    "keywords": "Class MessageReactionRemoveEmojiEvent The payload for the Message Reaction Remove Emoji event. Inheritance Object MessageReactionRemoveEmojiEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade Assembly : Strade.dll Syntax public sealed class MessageReactionRemoveEmojiEvent Remarks See https://discord.com/developers/docs/topics/gateway#message-reaction-remove-emoji for more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source ChannelId Gets or sets the snowflake identifier of the channel the affected message was sent in. Declaration [JsonPropertyName(\"channel_id\")] public Snowflake ChannelId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the channel the affected message was sent in. | Improve this Doc View Source Emote Gets or sets the emote that should be removed from the message. Declaration [JsonConverter(typeof(EmoteJsonConverter))] [JsonPropertyName(\"emoji\")] public IEmote Emote { get; set; } Property Value Type Description IEmote the emote that should be removed from the message. | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the guild the channel is in. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake? GuildId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the guild the channel is in; or null if the channel is not a guild channel. | Improve this Doc View Source MessageId Gets or sets the snowflake identifier of the target message. Declaration [JsonPropertyName(\"message_id\")] public Snowflake MessageId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the target message."
  },
  "api/Strade.Models.ActivityAssetsModel.html": {
    "href": "api/Strade.Models.ActivityAssetsModel.html",
    "title": "Class ActivityAssetsModel | Strade Developer Documentation",
    "keywords": "Class ActivityAssetsModel Inheritance Object ActivityAssetsModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class ActivityAssetsModel Properties | Improve this Doc View Source LargeImageId Gets or sets the identifier of the asset for the large image of the activity. Declaration [JsonPropertyName(\"large_image\")] public string LargeImageId { get; set; } Property Value Type Description String the identifier of the asset for the large image of the activity. | Improve this Doc View Source LargeText Gets or sets the text displayed when hovering over the large image of the activity. Declaration [JsonPropertyName(\"large_text\")] public string LargeText { get; set; } Property Value Type Description String the text displayed when hovering over the large image of the activity. | Improve this Doc View Source SmallImageId Gets or sets the identifier of the asset for the small image of the activity. Declaration [JsonPropertyName(\"small_image\")] public string SmallImageId { get; set; } Property Value Type Description String the identifier of the asset for the small image of the activity. | Improve this Doc View Source SmallText Gets or sets the text displayed when hovering over the large image of the activity. Declaration [JsonPropertyName(\"small_text\")] public string SmallText { get; set; } Property Value Type Description String the text displayed when hovering over the large image of the activity."
  },
  "api/Strade.Models.ActivityButtonModel.html": {
    "href": "api/Strade.Models.ActivityButtonModel.html",
    "title": "Class ActivityButtonModel | Strade Developer Documentation",
    "keywords": "Class ActivityButtonModel Inheritance Object ActivityButtonModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class ActivityButtonModel Properties | Improve this Doc View Source Label Gets or sets the label shown on the button (1-32 characters). Declaration [JsonPropertyName(\"label\")] public string Label { get; set; } Property Value Type Description String the label shown on the button (1-32 characters). | Improve this Doc View Source Url Gets or sets a URI that is opened when clicked on the button. Declaration [JsonPropertyName(\"url\")] [JsonConverter(typeof(UriJsonConverter))] public Uri Url { get; set; } Property Value Type Description Uri a URI that is opened when clicked on the button."
  },
  "api/Strade.Models.ActivityModel.html": {
    "href": "api/Strade.Models.ActivityModel.html",
    "title": "Class ActivityModel | Strade Developer Documentation",
    "keywords": "Class ActivityModel Represents an activity object. Inheritance Object ActivityModel Implements IIdentifiable < String > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class ActivityModel : IIdentifiable<string> Remarks More details can be found on https://discord.com/developers/docs/topics/gateway#activity-object-activity-structure [external, Discord Developer Documentation]. Properties | Improve this Doc View Source ApplicationId Gets or sets the snowflake identifier of the associated application. Declaration [JsonPropertyName(\"application_id\")] public Snowflake? ApplicationId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the associated application. | Improve this Doc View Source Assets Gets or sets information about game assets. Declaration [JsonPropertyName(\"assets\")] public ActivityAssetsModel Assets { get; set; } Property Value Type Description ActivityAssetsModel information about game assets. | Improve this Doc View Source Buttons Gets or sets a read-only list containing activity buttons that represent custom buttons that are shown in the rich presence (maximum two). Declaration [JsonPropertyName(\"buttons\")] public IReadOnlyList<ActivityButtonModel> Buttons { get; set; } Property Value Type Description IReadOnlyList < ActivityButtonModel > a read-only list containing activity buttons that represent custom buttons that are shown in the rich presence (maximum two). | Improve this Doc View Source Details Gets or sets details about what the player is doing. Declaration [JsonPropertyName(\"details\")] public string Details { get; set; } Property Value Type Description String details about what the player is doing. | Improve this Doc View Source Emote Gets or sets the emote that is used for the activity. Declaration [JsonPropertyName(\"emoji\")] [JsonConverter(typeof(EmoteJsonConverter))] public IEmote Emote { get; set; } Property Value Type Description IEmote the emote that is used for the activity. | Improve this Doc View Source Flags Gets or sets the activity flags. Declaration [JsonPropertyName(\"flags\")] public ActivityFlags Flags { get; set; } Property Value Type Description ActivityFlags the activity flags. | Improve this Doc View Source Id Gets or sets the activity identifier. Declaration [JsonPropertyName(\"id\")] public string Id { get; set; } Property Value Type Description String the activity identifier. | Improve this Doc View Source IsGameInstance Gets or sets a value indicating whether the game is an instantiated game session. Declaration [JsonPropertyName(\"instance\")] public bool IsGameInstance { get; set; } Property Value Type Description Boolean a value indicating whether the game is an instantiated game session. | Improve this Doc View Source Name Gets or sets the name of the user's activity. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the name of the user's activity. | Improve this Doc View Source Party Gets or sets information about the party. Declaration [JsonPropertyName(\"party\")] public ActivityPartyModel Party { get; set; } Property Value Type Description ActivityPartyModel information about the party. | Improve this Doc View Source Platform Gets or sets the platform the game represented by the activity is being played on. Declaration [JsonPropertyName(\"platform\")] public ActivityPlatform? Platform { get; set; } Property Value Type Description Nullable < ActivityPlatform > the platform the game represented by the activity is being played on. | Improve this Doc View Source Secrets Gets or sets information about game secrets. Declaration [JsonPropertyName(\"secrets\")] public ActivitySecretsModel Secrets { get; set; } Property Value Type Description ActivitySecretsModel information about game secrets. | Improve this Doc View Source SessionId Gets or sets an identifier that represents the game or the Spotify session. Declaration [JsonPropertyName(\"session_id\")] public string SessionId { get; set; } Property Value Type Description String an identifier that represents the game or the Spotify session. | Improve this Doc View Source State Gets or sets the current game status description. Declaration [JsonPropertyName(\"state\")] public string State { get; set; } Property Value Type Description String the current game status description. | Improve this Doc View Source StreamUri Gets or sets the stream URI (only available if Type is Streaming ). Declaration [JsonPropertyName(\"url\")] [JsonConverter(typeof(UriJsonConverter))] public Uri StreamUri { get; set; } Property Value Type Description Uri the stream URI (only available if Type is Streaming ). | Improve this Doc View Source SynchronizationId Gets or sets the synchronization identifier for a song on Spotify linked with the activity. Declaration [JsonPropertyName(\"sync_id\")] public string SynchronizationId { get; set; } Property Value Type Description String the synchronization identifier for a song on Spotify linked with the activity. | Improve this Doc View Source Timestamps Gets or sets the time information / timestamps for the activity that indicates the start and end time of the activity. Declaration [JsonPropertyName(\"timestamps\")] public ActivityTimestampsModel Timestamps { get; set; } Property Value Type Description ActivityTimestampsModel the time information / timestamps for the activity that indicates the start and end time of the activity. | Improve this Doc View Source Type Gets or sets the type of the user's activity. Declaration [JsonIgnore(Condition = JsonIgnoreCondition.Never)] [JsonPropertyName(\"type\")] public ActivityType Type { get; set; } Property Value Type Description ActivityType the type of the user's activity. Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Models.ActivityPartyModel.html": {
    "href": "api/Strade.Models.ActivityPartyModel.html",
    "title": "Class ActivityPartyModel | Strade Developer Documentation",
    "keywords": "Class ActivityPartyModel Inheritance Object ActivityPartyModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class ActivityPartyModel Properties | Improve this Doc View Source Id Gets or sets the party identifier. Declaration [JsonPropertyName(\"id\")] public string Id { get; set; } Property Value Type Description String the party identifier. | Improve this Doc View Source Size Gets or sets the size of the party. Declaration [JsonPropertyName(\"size\")] public PartySize? Size { get; set; } Property Value Type Description Nullable < PartySize > the size of the party."
  },
  "api/Strade.Models.ActivitySecretsModel.html": {
    "href": "api/Strade.Models.ActivitySecretsModel.html",
    "title": "Class ActivitySecretsModel | Strade Developer Documentation",
    "keywords": "Class ActivitySecretsModel Inheritance Object ActivitySecretsModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class ActivitySecretsModel Properties | Improve this Doc View Source JoinSecret Gets or sets the join secret, if present. Declaration [JsonPropertyName(\"join\")] public string JoinSecret { get; set; } Property Value Type Description String the join secret, if present. | Improve this Doc View Source MatchSecret Gets or sets the match secret, if present. Declaration [JsonPropertyName(\"match\")] public string MatchSecret { get; set; } Property Value Type Description String the match secret, if present. | Improve this Doc View Source SpectateSecret Gets or sets the spectate secret, if present. Declaration [JsonPropertyName(\"spectate\")] public string SpectateSecret { get; set; } Property Value Type Description String the spectate secret, if present."
  },
  "api/Strade.Models.ActivityTimestampsModel.html": {
    "href": "api/Strade.Models.ActivityTimestampsModel.html",
    "title": "Class ActivityTimestampsModel | Strade Developer Documentation",
    "keywords": "Class ActivityTimestampsModel Inheritance Object ActivityTimestampsModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class ActivityTimestampsModel Properties | Improve this Doc View Source EndTime Gets or sets the time when the activity ends. Declaration [JsonPropertyName(\"end\")] [JsonConverter(typeof(UnixDateTimeOffsetJsonConverter))] public DateTimeOffset? EndTime { get; set; } Property Value Type Description Nullable < DateTimeOffset > the time when the activity ends. | Improve this Doc View Source StartTime Gets or sets the time when the activity starts. Declaration [JsonPropertyName(\"start\")] [JsonConverter(typeof(UnixDateTimeOffsetJsonConverter))] public DateTimeOffset? StartTime { get; set; } Property Value Type Description Nullable < DateTimeOffset > the time when the activity starts."
  },
  "api/Strade.Models.AllowedMentionsModel.html": {
    "href": "api/Strade.Models.AllowedMentionsModel.html",
    "title": "Class AllowedMentionsModel | Strade Developer Documentation",
    "keywords": "Class AllowedMentionsModel Inheritance Object AllowedMentionsModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class AllowedMentionsModel Properties | Improve this Doc View Source AllowedMentions Declaration [JsonPropertyName(\"parse\")] public IReadOnlyList<MentionType> AllowedMentions { get; set; } Property Value Type Description IReadOnlyList < MentionType > | Improve this Doc View Source ReplyUser Declaration [JsonPropertyName(\"replied_user\")] public bool ReplyUser { get; set; } Property Value Type Description Boolean | Improve this Doc View Source RoleIds Declaration [JsonPropertyName(\"roles\")] public IReadOnlyList<Snowflake> RoleIds { get; set; } Property Value Type Description IReadOnlyList < Snowflake > | Improve this Doc View Source UserIds Declaration [JsonPropertyName(\"users\")] public IReadOnlyList<Snowflake> UserIds { get; set; } Property Value Type Description IReadOnlyList < Snowflake >"
  },
  "api/Strade.Models.ApplicationCommandInteractionDataModel.html": {
    "href": "api/Strade.Models.ApplicationCommandInteractionDataModel.html",
    "title": "Class ApplicationCommandInteractionDataModel | Strade Developer Documentation",
    "keywords": "Class ApplicationCommandInteractionDataModel Inheritance Object ApplicationCommandInteractionDataModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public class ApplicationCommandInteractionDataModel Properties | Improve this Doc View Source Id Gets or sets the snowflake identifier of the command invoked. Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; set; } Property Value Type Description Snowflake the snowflake identifier of the command invoked. | Improve this Doc View Source Name Gets or sets the name of the command invoked. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the name of the command invoked. | Improve this Doc View Source Options Gets or sets a read-only list containing the parameters and values supplied from the user. Declaration [JsonPropertyName(\"options\")] public IReadOnlyList<ApplicationCommandInteractionDataOptionModel> Options { get; set; } Property Value Type Description IReadOnlyList < ApplicationCommandInteractionDataOptionModel > a read-only list containing the parameters and values supplied from the user."
  },
  "api/Strade.Models.ApplicationCommandInteractionDataOptionModel.html": {
    "href": "api/Strade.Models.ApplicationCommandInteractionDataOptionModel.html",
    "title": "Class ApplicationCommandInteractionDataOptionModel | Strade Developer Documentation",
    "keywords": "Class ApplicationCommandInteractionDataOptionModel Inheritance Object ApplicationCommandInteractionDataOptionModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public class ApplicationCommandInteractionDataOptionModel Properties | Improve this Doc View Source Name Gets or sets the name of the parameter. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the name of the parameter. | Improve this Doc View Source Options Gets or sets a read-only list containing the options, only present if the option is a group or subcommand. Declaration [JsonPropertyName(\"options\")] public IReadOnlyList<ApplicationCommandInteractionDataOptionModel> Options { get; set; } Property Value Type Description IReadOnlyList < ApplicationCommandInteractionDataOptionModel > a read-only list containing the options, only present if the option is a group or subcommand. | Improve this Doc View Source Value Gets or sets the value of the option. Declaration [JsonPropertyName(\"value\")] public JsonElement Value { get; set; } Property Value Type Description JsonElement the value of the option."
  },
  "api/Strade.Models.ApplicationCommandModel.html": {
    "href": "api/Strade.Models.ApplicationCommandModel.html",
    "title": "Class ApplicationCommandModel | Strade Developer Documentation",
    "keywords": "Class ApplicationCommandModel Inheritance Object ApplicationCommandModel Implements IIdentifiable < Snowflake > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class ApplicationCommandModel : IIdentifiable<Snowflake> Properties | Improve this Doc View Source ApplicationId Gets or sets the snowflake identifier of the application the command belongs to. Declaration [JsonPropertyName(\"application_id\")] public Snowflake ApplicationId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the application the command belongs to. | Improve this Doc View Source Description Gets or sets the description of the command. Declaration [JsonPropertyName(\"description\")] public string Description { get; set; } Property Value Type Description String the description of the command. | Improve this Doc View Source Id Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; set; } Property Value Type Description Snowflake | Improve this Doc View Source Name Gets or sets the name of the command. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the name of the command. | Improve this Doc View Source Options Gets or sets a read-only list containing the options of the command. Declaration [JsonPropertyName(\"options\")] public IReadOnlyList<ApplicationCommandOptionModel> Options { get; set; } Property Value Type Description IReadOnlyList < ApplicationCommandOptionModel > a read-only list containing the options of the command. Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Models.ApplicationCommandOptionChoiceModel.html": {
    "href": "api/Strade.Models.ApplicationCommandOptionChoiceModel.html",
    "title": "Class ApplicationCommandOptionChoiceModel | Strade Developer Documentation",
    "keywords": "Class ApplicationCommandOptionChoiceModel Inheritance Object ApplicationCommandOptionChoiceModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public class ApplicationCommandOptionChoiceModel Properties | Improve this Doc View Source Name Gets or sets the name of the choice. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the name of the choice. | Improve this Doc View Source Value Gets or sets the value of the choice. Declaration [JsonPropertyName(\"value\")] public string Value { get; set; } Property Value Type Description String the value of the choice."
  },
  "api/Strade.Models.ApplicationCommandOptionModel.html": {
    "href": "api/Strade.Models.ApplicationCommandOptionModel.html",
    "title": "Class ApplicationCommandOptionModel | Strade Developer Documentation",
    "keywords": "Class ApplicationCommandOptionModel Inheritance Object ApplicationCommandOptionModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public class ApplicationCommandOptionModel Properties | Improve this Doc View Source Choices Gets or sets a read-only list of choices for the option. Declaration [JsonPropertyName(\"choices\")] public IReadOnlyList<ApplicationCommandOptionChoiceModel> Choices { get; set; } Property Value Type Description IReadOnlyList < ApplicationCommandOptionChoiceModel > a read-only list of choices for the option. | Improve this Doc View Source Description Gets or sets the description of the option. Declaration [JsonPropertyName(\"description\")] public string Description { get; set; } Property Value Type Description String the description of the option. | Improve this Doc View Source IsDefault Gets or sets a value indicating whether the option is the default option. Declaration [JsonPropertyName(\"default\")] public bool IsDefault { get; set; } Property Value Type Description Boolean a value indicating whether the option is the default option. | Improve this Doc View Source IsRequired Gets or sets a value indicating whether the option is required. Declaration [JsonPropertyName(\"required\")] public bool IsRequired { get; set; } Property Value Type Description Boolean a value indicating whether the option is required. | Improve this Doc View Source Name Gets or sets the name of the option. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the name of the option. | Improve this Doc View Source Options Gets or sets a read-only list of options for the subcommands. Declaration [JsonPropertyName(\"options\")] public IReadOnlyList<ApplicationCommandOptionModel> Options { get; set; } Property Value Type Description IReadOnlyList < ApplicationCommandOptionModel > a read-only list of options for the subcommands. | Improve this Doc View Source Type Gets or sets the type of the command option. Declaration [JsonPropertyName(\"type\")] public ApplicationCommandOptionType Type { get; set; } Property Value Type Description ApplicationCommandOptionType the type of the command option."
  },
  "api/Strade.Models.ApplicationInformationModel.html": {
    "href": "api/Strade.Models.ApplicationInformationModel.html",
    "title": "Class ApplicationInformationModel | Strade Developer Documentation",
    "keywords": "Class ApplicationInformationModel Holds information about an Oauth2 application. Inheritance Object ApplicationInformationModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class ApplicationInformationModel Remarks More details can be found on https://discord.com/developers/docs/topics/oauth2#get-current-application-information-response-structure [external, Discord Developer Documentation]. Properties | Improve this Doc View Source CoverImageHash Gets or sets the hash of the image on store embeds, or null if the application is not a game sold on discord. Declaration [JsonPropertyName(\"cover_image\")] public string CoverImageHash { get; set; } Property Value Type Description String the hash of the image on store embeds; else null . | Improve this Doc View Source Description Gets or sets the description of the entity. Declaration [JsonPropertyName(\"description\")] public string Description { get; set; } Property Value Type Description String the description of the entity. | Improve this Doc View Source IconHash Gets or sets the hash of the icon (if null , the application has no icon). Declaration [JsonPropertyName(\"icon\")] public string IconHash { get; set; } Property Value Type Description String the hash of the icon (if null , the application has no icon). | Improve this Doc View Source Id Gets or sets the snowflake identifier of the application the information is for. Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; set; } Property Value Type Description Snowflake the snowflake identifier of the application the information is for. | Improve this Doc View Source IsPublic Gets or sets a value indicating whether the application is public. Declaration [JsonPropertyName(\"bot_public\")] public bool IsPublic { get; set; } Property Value Type Description Boolean a value indicating whether the application is public. Remarks If an application is private ( false ) then the application can be only added by its owner. | Improve this Doc View Source IsRequiringCodeGrant Gets or sets a value indicating whether the application's bot will only join upon completion of the full oauth2 code grant flow. Declaration [JsonPropertyName(\"bot_require_code_grant\")] public bool IsRequiringCodeGrant { get; set; } Property Value Type Description Boolean a value indicating whether the application's bot will only join upon completion of the full oauth2 code grant flow. | Improve this Doc View Source LinkedGuildId Gets or sets the snowflake identifier of the guild to which the game has been linked to. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake? LinkedGuildId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the guild to which the game has been linked to; or null if the game is not sold on discord. | Improve this Doc View Source Name Gets or sets the associated name of the application. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the associated name of the application. | Improve this Doc View Source Owner Gets or sets the model of the application owner. Declaration [JsonPropertyName(\"owner\")] public UserModel Owner { get; set; } Property Value Type Description UserModel the model of the application owner. | Improve this Doc View Source PrimarySkuId Gets or sets the game's primary SKU ID. Declaration [JsonPropertyName(\"primary_sku_id\")] public string PrimarySkuId { get; set; } Property Value Type Description String the game's primary SKU ID; or null if the game is not sold on discord. | Improve this Doc View Source RpcOrigins Gets or sets a list of RPC origin URLs (if null , then RPC is disabled). Declaration [JsonPropertyName(\"rcp_origins\")] public IReadOnlyList<string> RpcOrigins { get; set; } Property Value Type Description IReadOnlyList < String > a list of RPC origin URLs (if null , then RPC is disabled). | Improve this Doc View Source Slug Gets or sets the URL slug that links to the store page. Declaration [JsonPropertyName(\"slug\")] public string Slug { get; set; } Property Value Type Description String the URL slug that links to the store page; or null if the game is not sold on discord. | Improve this Doc View Source Summary Gets or sets the summary being shown in the summary field of the store page (if the application is a game that is sold on Discord). Declaration [JsonPropertyName(\"summary\")] public string Summary { get; set; } Property Value Type Description String the summary being shown in the summary field of the store page (if the application is a game that is sold on Discord). | Improve this Doc View Source Team Gets or sets the model of the team the application belongs to; or null if the application does not belong to a team. Declaration [JsonPropertyName(\"team\")] public TeamModel Team { get; set; } Property Value Type Description TeamModel the model of the team the application belongs to; or null if the application does not belong to a team. | Improve this Doc View Source VerifyKey Gets or sets the base64 encoded key for the GameSDK's GetTicket method. Declaration [JsonPropertyName(\"verify_key\")] public string VerifyKey { get; set; } Property Value Type Description String the base64 encoded key for the GameSDK's GetTicket method. Remarks https://discord.com/developers/docs/game-sdk/applications#getticket ."
  },
  "api/Strade.Models.AuditLogEntryModel.html": {
    "href": "api/Strade.Models.AuditLogEntryModel.html",
    "title": "Class AuditLogEntryModel | Strade Developer Documentation",
    "keywords": "Class AuditLogEntryModel Inheritance Object AuditLogEntryModel Implements IIdentifiable < Snowflake > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class AuditLogEntryModel : IIdentifiable<Snowflake> Properties | Improve this Doc View Source ActionType Gets or sets the action type of the entry. Declaration [JsonPropertyName(\"action_type\")] public AuditLogActionType ActionType { get; set; } Property Value Type Description AuditLogActionType the action type of the entry. | Improve this Doc View Source Changes Gets or sets a read-only list of the changes that this entry represents. Declaration [JsonPropertyName(\"changes\")] public IReadOnlyList<AuditLogChange> Changes { get; set; } Property Value Type Description IReadOnlyList < AuditLogChange > a read-only list of the changes that this entry represents. | Improve this Doc View Source Id Gets or sets the snowflake identifier of the entry. Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; set; } Property Value Type Description Snowflake the snowflake identifier of the entry. | Improve this Doc View Source Options Gets or sets a model of the additional options included within the entry; or null if no additional options are included within the entry. Declaration [JsonPropertyName(\"options\")] public AuditLogEntryOptionsModel Options { get; set; } Property Value Type Description AuditLogEntryOptionsModel a model of the additional options included within the entry; or null if no additional options are included within the entry. Remarks The following action types include additional options: ChannelOverwriteCreate OverwriteAuditLogOptions ChannelOverwriteUpdate OverwriteAuditLogOptions ChannelOverwriteDelete OverwriteAuditLogOptions MemberPrune MemberPruneAuditLogOptions MemberMove MemberMoveAuditLogOptions MemberDisconnect MemberDisconnectAuditLogOptions MessageDelete MessageDeleteAuditLogOptions MessageBulkDelete MessageBulkDeleteAuditLogOptions MessagePin MessagePinAuditLogOptions MessageUnpin MessagePinAuditLogOptions | Improve this Doc View Source Reason Gets or sets the reason why the operation was made; or null if the initiator did not include an action. Declaration [JsonPropertyName(\"reason\")] public string Reason { get; set; } Property Value Type Description String the reason why the operation was made; or null if the initiator did not include an action. Remarks You can set the reason for client actions using the Reason property. | Improve this Doc View Source TargetId Gets or sets the snowflake identifier of the entity that audit log entry refers to. Declaration [JsonPropertyName(\"target_id\")] public Snowflake? TargetId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the entity that audit log entry refers to. | Improve this Doc View Source UserId Gets or sets the snowflake identifier of the user that made the action. Declaration [JsonPropertyName(\"user_id\")] public Snowflake UserId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the user that made the action. Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Models.AuditLogEntryOptionsModel.html": {
    "href": "api/Strade.Models.AuditLogEntryOptionsModel.html",
    "title": "Class AuditLogEntryOptionsModel | Strade Developer Documentation",
    "keywords": "Class AuditLogEntryOptionsModel Inheritance Object AuditLogEntryOptionsModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public class AuditLogEntryOptionsModel Properties | Improve this Doc View Source Count Gets or sets the number of entities affected by the audited operation. Declaration [JsonPropertyName(\"count\")] public string Count { get; set; } Property Value Type Description String the number of entities affected by the audited operation. | Improve this Doc View Source DeleteMemberDays Gets or sets the number of days pruned. Declaration [JsonPropertyName(\"delete_member_days\")] public string DeleteMemberDays { get; set; } Property Value Type Description String the number of days pruned. | Improve this Doc View Source EntityId Gets or sets the snowflake identifier of the target entity the overwrite is for. Declaration [JsonPropertyName(\"id\")] public Snowflake EntityId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the target entity the overwrite is for. | Improve this Doc View Source EntityType Gets or sets the type of the overwrite applied to the entity. Declaration [JsonPropertyName(\"type\")] public PermissionOverwriteTarget EntityType { get; set; } Property Value Type Description PermissionOverwriteTarget the type of the overwrite applied to the entity. | Improve this Doc View Source MembersRemoved Gets or sets the number of total members removed during the prune. Declaration [JsonPropertyName(\"members_removed\")] public string MembersRemoved { get; set; } Property Value Type Description String the number of total members removed during the prune. | Improve this Doc View Source MessageId Gets or sets the snowflake identifier of the message pinned/unpinned. Declaration [JsonPropertyName(\"message_id\")] public Snowflake MessageId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the message pinned/unpinned. | Improve this Doc View Source RoleName Gets or sets the name of the role the overwrite is for; or null if the overwrite is not for a role. Declaration [JsonPropertyName(\"role_name\")] public string RoleName { get; set; } Property Value Type Description String the name of the role the overwrite is for; or null if the overwrite is not for a role. | Improve this Doc View Source TargetChannelId Gets or sets the snowflake identifier of the affected/target channel. Declaration [JsonPropertyName(\"channel_id\")] public Snowflake TargetChannelId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the affected/target channel."
  },
  "api/Strade.Models.AuditLogModel.html": {
    "href": "api/Strade.Models.AuditLogModel.html",
    "title": "Class AuditLogModel | Strade Developer Documentation",
    "keywords": "Class AuditLogModel Inheritance Object AuditLogModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class AuditLogModel Properties | Improve this Doc View Source Entries Gets or sets a read-only list that contains the audit log entries. Declaration [JsonPropertyName(\"audit_log_entries\")] public IReadOnlyList<AuditLogEntryModel> Entries { get; set; } Property Value Type Description IReadOnlyList < AuditLogEntryModel > a read-only list that contains the audit log entries. | Improve this Doc View Source Integrations Gets or sets a read-only list that contains integrations referenced from entries in the audit log. Declaration [JsonPropertyName(\"integrations\")] public IReadOnlyList<GuildIntegrationInformationModel> Integrations { get; set; } Property Value Type Description IReadOnlyList < GuildIntegrationInformationModel > a read-only list that contains integrations referenced from entries in the audit log. | Improve this Doc View Source Users Gets or sets a read-only list that contains users referenced from entries in the audit log. Declaration [JsonPropertyName(\"users\")] public IReadOnlyList<UserModel> Users { get; set; } Property Value Type Description IReadOnlyList < UserModel > a read-only list that contains users referenced from entries in the audit log. | Improve this Doc View Source Webhooks Gets or sets a read-only list that contains webhooks referenced from entries in the audit log. Declaration [JsonPropertyName(\"webhooks\")] public IReadOnlyList<WebhookModel> Webhooks { get; set; } Property Value Type Description IReadOnlyList < WebhookModel > a read-only list that contains webhooks referenced from entries in the audit log."
  },
  "api/Strade.Models.BanModel.html": {
    "href": "api/Strade.Models.BanModel.html",
    "title": "Class BanModel | Strade Developer Documentation",
    "keywords": "Class BanModel Inheritance Object BanModel Implements IIdentifiable < Snowflake > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class BanModel : IIdentifiable<Snowflake> Properties | Improve this Doc View Source Id Declaration public Snowflake Id { get; } Property Value Type Description Snowflake | Improve this Doc View Source Reason Gets or sets the ban reason; or null if no reason is given for the ban. Declaration [JsonPropertyName(\"reason\")] public string Reason { get; set; } Property Value Type Description String the ban reason; or null if no reason is given for the ban. | Improve this Doc View Source User Gets or sets a model of the user that was banned. Declaration [JsonPropertyName(\"user\")] public UserModel User { get; set; } Property Value Type Description UserModel a model of the user that was banned. Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Models.BotGatewayInformationModel.html": {
    "href": "api/Strade.Models.BotGatewayInformationModel.html",
    "title": "Class BotGatewayInformationModel | Strade Developer Documentation",
    "keywords": "Class BotGatewayInformationModel Inheritance Object UserGatewayInformationModel BotGatewayInformationModel Inherited Members UserGatewayInformationModel.Uri Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public class BotGatewayInformationModel : UserGatewayInformationModel Properties | Improve this Doc View Source RecommendedShards Gets or sets the recommended number of shards to use when connecting. Declaration [JsonPropertyName(\"shards\")] public int RecommendedShards { get; set; } Property Value Type Description Int32 the recommended number of shards to use when connecting. | Improve this Doc View Source SessionStartInformation Gets or sets information about how often the bot can start a session. Declaration [JsonPropertyName(\"session_start_limit\")] public SessionStartInformationModel SessionStartInformation { get; set; } Property Value Type Description SessionStartInformationModel information about how often the bot can start a session."
  },
  "api/Strade.Models.CallInformationModel.html": {
    "href": "api/Strade.Models.CallInformationModel.html",
    "title": "Class CallInformationModel | Strade Developer Documentation",
    "keywords": "Class CallInformationModel Inheritance Object CallInformationModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class CallInformationModel Properties | Improve this Doc View Source EndedAt Gets or sets the time when the call ended; or null if the call is on-going. Declaration [JsonPropertyName(\"ended_timestamp\")] public DateTimeOffset? EndedAt { get; set; } Property Value Type Description Nullable < DateTimeOffset > the time when the call ended; or null if the call is on-going. | Improve this Doc View Source Participants Gets or sets a read-only list of the snowflake identifiers of the participants of the call. Declaration [JsonPropertyName(\"participants\")] public IReadOnlyList<Snowflake> Participants { get; set; } Property Value Type Description IReadOnlyList < Snowflake > a read-only list of the snowflake identifiers of the participants of the call."
  },
  "api/Strade.Models.ChannelMentionModel.html": {
    "href": "api/Strade.Models.ChannelMentionModel.html",
    "title": "Class ChannelMentionModel | Strade Developer Documentation",
    "keywords": "Class ChannelMentionModel Inheritance Object ChannelMentionModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class ChannelMentionModel Properties | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the guild of the mentioned channel. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake GuildId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the guild of the mentioned channel. | Improve this Doc View Source Id Gets or sets the snowflake identifier of the mentioned channel. Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; set; } Property Value Type Description Snowflake the snowflake identifier of the mentioned channel. | Improve this Doc View Source Name Gets or sets the channel name. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the channel name. | Improve this Doc View Source Type Gets or sets the channel type. Declaration [JsonPropertyName(\"type\")] public ChannelType Type { get; set; } Property Value Type Description ChannelType the channel type."
  },
  "api/Strade.Models.ChannelModel.html": {
    "href": "api/Strade.Models.ChannelModel.html",
    "title": "Class ChannelModel | Strade Developer Documentation",
    "keywords": "Class ChannelModel Inheritance Object ChannelModel Implements IIdentifiable < Snowflake > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class ChannelModel : IIdentifiable<Snowflake> Properties | Improve this Doc View Source ApplicationId Declaration [JsonPropertyName(\"application_id\")] public Snowflake? ApplicationId { get; set; } Property Value Type Description Nullable < Snowflake > | Improve this Doc View Source Bitrate Gets or sets the channel bitrate. Declaration [JsonPropertyName(\"bitrate\")] public int? Bitrate { get; set; } Property Value Type Description Nullable < Int32 > the channel bitrate. | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the associated guild; or null if the channel is not a guild channel, or implicitly set. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake? GuildId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the associated guild; or null if the channel is not a guild channel, or implicitly set. | Improve this Doc View Source Icon Declaration [JsonPropertyName(\"icon\")] public string Icon { get; set; } Property Value Type Description String | Improve this Doc View Source Id Gets or sets the snowflake identifier of the channel. Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; set; } Property Value Type Description Snowflake the snowflake identifier of the channel. | Improve this Doc View Source IsNsfw Gets or sets a value indicating whether the channel is a NSFW (not safe for work / 18+) channel. Declaration [JsonPropertyName(\"nsfw\")] public bool? IsNsfw { get; set; } Property Value Type Description Nullable < Boolean > a value indicating whether the channel is a NSFW (not safe for work / 18+) channel. | Improve this Doc View Source LastMessageId Declaration [JsonPropertyName(\"last_message_id\")] public Snowflake? LastMessageId { get; set; } Property Value Type Description Nullable < Snowflake > | Improve this Doc View Source LastPinTimestamp Declaration [JsonPropertyName(\"last_pin_timestamp\")] public DateTimeOffset? LastPinTimestamp { get; set; } Property Value Type Description Nullable < DateTimeOffset > | Improve this Doc View Source Name Gets or sets the channel name. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the channel name. | Improve this Doc View Source Overwrites Gets or sets the explicit channel permission overwrites. Declaration [JsonPropertyName(\"permission_overwrites\")] public IReadOnlyList<PermissionOverwrite> Overwrites { get; set; } Property Value Type Description IReadOnlyList < PermissionOverwrite > the explicit channel permission overwrites. | Improve this Doc View Source OwnerId Gets or sets the snowflake identifier of the user that owns the group channel. Declaration [JsonPropertyName(\"owner_id\")] public Snowflake? OwnerId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the user that owns the group channel. | Improve this Doc View Source ParentId Gets or sets the snowflake identifier of the parent channel. Declaration [JsonPropertyName(\"parent_id\")] public Snowflake? ParentId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the parent channel; if null the channel has no parent. | Improve this Doc View Source Position Gets or sets the channel position / order (ascending). Declaration [JsonPropertyName(\"position\")] public int? Position { get; set; } Property Value Type Description Nullable < Int32 > the channel position / order (ascending). | Improve this Doc View Source RateLimitPerUser Gets or sets the number of seconds a user has to wait before sending another message. Declaration [JsonPropertyName(\"rate_limit_per_user\")] public int? RateLimitPerUser { get; set; } Property Value Type Description Nullable < Int32 > the number of seconds a user has to wait before sending another message (ranges from 0 to 21600 ; bots and users with the permission ManageMessages or ManageChannels are unaffected from the message send rate limit). | Improve this Doc View Source Recipients Gets or sets a read-only list that contains the channel recipients. Declaration [JsonPropertyName(\"recipients\")] public IReadOnlyList<UserModel> Recipients { get; set; } Property Value Type Description IReadOnlyList < UserModel > a read-only list that contains the channel recipients. | Improve this Doc View Source Topic Gets or sets the channel topic. Declaration [JsonPropertyName(\"topic\")] public string Topic { get; set; } Property Value Type Description String the channel topic. | Improve this Doc View Source Type Gets or sets the type of the channel. Declaration [JsonPropertyName(\"type\")] public ChannelType Type { get; set; } Property Value Type Description ChannelType the type of the channel. | Improve this Doc View Source UserLimit Gets or sets the number of maximum allowed users in the channels. Declaration [JsonPropertyName(\"user_limit\")] public int? UserLimit { get; set; } Property Value Type Description Nullable < Int32 > the number of maximum allowed users in the channels. Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Models.ChannelPreviewModel.html": {
    "href": "api/Strade.Models.ChannelPreviewModel.html",
    "title": "Class ChannelPreviewModel | Strade Developer Documentation",
    "keywords": "Class ChannelPreviewModel Represents the preview structure for a partial channel. Inheritance Object ChannelPreviewModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class ChannelPreviewModel Properties | Improve this Doc View Source Id Gets or sets the snowflake identifier of the channel. Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; set; } Property Value Type Description Snowflake the snowflake identifier of the channel. | Improve this Doc View Source Name Gets or sets the channel name. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the channel name. | Improve this Doc View Source Type Gets or sets the type of the channel. Declaration [JsonPropertyName(\"type\")] public ChannelType Type { get; set; } Property Value Type Description ChannelType the type of the channel."
  },
  "api/Strade.Models.EmbedAuthorModel.html": {
    "href": "api/Strade.Models.EmbedAuthorModel.html",
    "title": "Class EmbedAuthorModel | Strade Developer Documentation",
    "keywords": "Class EmbedAuthorModel Represents an embedded message author. Inheritance Object EmbedAuthorModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class EmbedAuthorModel Remarks More details can be found on https://discord.com/developers/docs/resources/channel#embed-object-embed-author-structure [external, Discord Developer Documentation]. Properties | Improve this Doc View Source IconUrl Gets or sets the icon URL of the author. Declaration [JsonPropertyName(\"icon_url\")] [JsonConverter(typeof(UriJsonConverter))] public Uri IconUrl { get; set; } Property Value Type Description Uri the icon URL of the author. | Improve this Doc View Source Name Gets or sets the name of the author. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the name of the author. | Improve this Doc View Source ProxiedIconUrl Gets or sets the proxied icon URL of the author. Declaration [JsonPropertyName(\"proxy_icon_url\")] [JsonConverter(typeof(UriJsonConverter))] public Uri ProxiedIconUrl { get; set; } Property Value Type Description Uri the proxied icon URL of the author. | Improve this Doc View Source Url Gets or sets the URL of the author. Declaration [JsonPropertyName(\"url\")] [JsonConverter(typeof(UriJsonConverter))] public Uri Url { get; set; } Property Value Type Description Uri the URL of the author."
  },
  "api/Strade.Models.EmbedFooterModel.html": {
    "href": "api/Strade.Models.EmbedFooterModel.html",
    "title": "Class EmbedFooterModel | Strade Developer Documentation",
    "keywords": "Class EmbedFooterModel Inheritance Object EmbedFooterModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class EmbedFooterModel Properties | Improve this Doc View Source IconUrl Gets or sets the icon URL of the footer. Declaration [JsonPropertyName(\"icon_url\")] [JsonConverter(typeof(UriJsonConverter))] public Uri IconUrl { get; set; } Property Value Type Description Uri the icon URL of the footer. | Improve this Doc View Source ProxiedIconUrl Gets or sets the proxied icon URL of the footer. Declaration [JsonPropertyName(\"proxy_icon_url\")] [JsonConverter(typeof(UriJsonConverter))] public Uri ProxiedIconUrl { get; set; } Property Value Type Description Uri the proxied icon URL of the footer. | Improve this Doc View Source Text Gets or sets the footer text. Declaration [JsonPropertyName(\"text\")] public string Text { get; set; } Property Value Type Description String the footer text."
  },
  "api/Strade.Models.EmbedMessageModel.html": {
    "href": "api/Strade.Models.EmbedMessageModel.html",
    "title": "Class EmbedMessageModel | Strade Developer Documentation",
    "keywords": "Class EmbedMessageModel Represents an embedded message object. Inheritance Object EmbedMessageModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class EmbedMessageModel Remarks More details can be found on https://discord.com/developers/docs/resources/channel#message-object-message-types [external, Discord Developer Documentation]. Properties | Improve this Doc View Source Author Gets or sets the author of the embed message. Declaration [JsonPropertyName(\"author\")] public EmbedAuthorModel Author { get; set; } Property Value Type Description EmbedAuthorModel the author of the embed message. | Improve this Doc View Source Color Gets or sets the color of the embed message. Declaration [JsonConverter(typeof(ColorJsonConverter))] [JsonPropertyName(\"color\")] public Color? Color { get; set; } Property Value Type Description Nullable < Color > the color of the embed message. | Improve this Doc View Source Description Gets or sets the description of the embed message. Declaration [JsonPropertyName(\"description\")] public string Description { get; set; } Property Value Type Description String the description of the embed message. | Improve this Doc View Source Fields Gets or sets a list of the fields of the embed message. Declaration [JsonPropertyName(\"fields\")] public IReadOnlyList<EmbedFieldModel> Fields { get; set; } Property Value Type Description IReadOnlyList < EmbedFieldModel > a list of the fields of the embed message. | Improve this Doc View Source Footer Gets or sets the footer of the embed message. Declaration [JsonPropertyName(\"footer\")] public EmbedFooterModel Footer { get; set; } Property Value Type Description EmbedFooterModel the footer of the embed message. | Improve this Doc View Source Image Gets or sets the image of the embed message. Declaration [JsonPropertyName(\"image\")] public EmbedImageModel Image { get; set; } Property Value Type Description EmbedImageModel the image of the embed message. | Improve this Doc View Source Provider Gets or sets the provider of the embed message. Declaration [JsonPropertyName(\"provider\")] public EmbedProviderModel Provider { get; set; } Property Value Type Description EmbedProviderModel the provider of the embed message. | Improve this Doc View Source Thumbnail Gets or sets the thumbnail of the embed message. Declaration [JsonPropertyName(\"thumbnail\")] public EmbedImageModel Thumbnail { get; set; } Property Value Type Description EmbedImageModel the thumbnail of the embed message. | Improve this Doc View Source Timestamp Gets or sets the timestamp of the embed message; or null if the embed message has no timestamp. Declaration [JsonPropertyName(\"timestamp\")] [JsonConverter(typeof(ISO8601DateTimeOffsetJsonConverter))] public DateTimeOffset? Timestamp { get; set; } Property Value Type Description Nullable < DateTimeOffset > the timestamp of the embed message; or null if the embed message has no timestamp. | Improve this Doc View Source Title Gets or sets the title of the embed message. Declaration [JsonPropertyName(\"title\")] public string Title { get; set; } Property Value Type Description String the title of the embed message. | Improve this Doc View Source Url Gets or sets the URI of the embed message. Declaration [JsonConverter(typeof(UriJsonConverter))] [JsonPropertyName(\"url\")] public Uri Url { get; set; } Property Value Type Description Uri the URI of the embed message. | Improve this Doc View Source Video Gets or sets the video of the embed message. Declaration [JsonPropertyName(\"video\")] public EmbedVideoModel Video { get; set; } Property Value Type Description EmbedVideoModel the video of the embed message."
  },
  "api/Strade.Models.EmbedProviderModel.html": {
    "href": "api/Strade.Models.EmbedProviderModel.html",
    "title": "Class EmbedProviderModel | Strade Developer Documentation",
    "keywords": "Class EmbedProviderModel Represents an embedded message provider. Inheritance Object EmbedProviderModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class EmbedProviderModel Remarks More details can be found on https://discord.com/developers/docs/resources/channel#embed-object-embed-provider-structure [external, Discord Developer Documentation]. Properties | Improve this Doc View Source Name Gets or sets the name of the provider. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the name of the provider. | Improve this Doc View Source Url Gets or sets the URL of the provider. Declaration [JsonPropertyName(\"url\")] [JsonConverter(typeof(UriJsonConverter))] public Uri Url { get; set; } Property Value Type Description Uri the URL of the provider."
  },
  "api/Strade.Models.EmbedVideoModel.html": {
    "href": "api/Strade.Models.EmbedVideoModel.html",
    "title": "Class EmbedVideoModel | Strade Developer Documentation",
    "keywords": "Class EmbedVideoModel Represents an embedded message video. Inheritance Object EmbedVideoModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class EmbedVideoModel Remarks More details can be found on https://discord.com/developers/docs/resources/channel#embed-object-embed-video-structure [external, Discord Developer Documentation]. Properties | Improve this Doc View Source Height Gets or sets the height of the embedded image. Declaration [JsonPropertyName(\"height\")] public int? Height { get; set; } Property Value Type Description Nullable < Int32 > the height of the embedded image. | Improve this Doc View Source ProxiedUrl Gets or sets the proxied URL of the embedded image. Declaration [JsonPropertyName(\"proxy_url\")] [JsonConverter(typeof(UriJsonConverter))] public Uri ProxiedUrl { get; set; } Property Value Type Description Uri the proxied URL of the embedded image. | Improve this Doc View Source Url Gets or sets the URL of the embedded image. Declaration [JsonPropertyName(\"url\")] [JsonConverter(typeof(UriJsonConverter))] public Uri Url { get; set; } Property Value Type Description Uri the URL of the embedded image. | Improve this Doc View Source Width Gets or sets the width of the embedded image. Declaration [JsonPropertyName(\"width\")] public int? Width { get; set; } Property Value Type Description Nullable < Int32 > the width of the embedded image."
  },
  "api/Strade.Models.EmoteModel.html": {
    "href": "api/Strade.Models.EmoteModel.html",
    "title": "Class EmoteModel | Strade Developer Documentation",
    "keywords": "Class EmoteModel Inheritance Object EmoteModel Implements IIdentifiable < Snowflake > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class EmoteModel : IIdentifiable<Snowflake> Properties | Improve this Doc View Source Creator Gets or sets the user that created the emote. Declaration [JsonPropertyName(\"user\")] public UserModel Creator { get; set; } Property Value Type Description UserModel the user that created the emote. | Improve this Doc View Source Id Gets or sets the snowflake identifier of the emote. Declaration [JsonPropertyName(\"id\")] public Snowflake? Id { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the emote. | Improve this Doc View Source IsAnimated Gets a value indicating whether the emote is animated (GIF). Declaration [JsonPropertyName(\"animated\")] public bool IsAnimated { get; set; } Property Value Type Description Boolean a value indicating whether the emote is animated (GIF). | Improve this Doc View Source IsManaged Gets or sets a value indicating whether the emoji is managed by an integration. Declaration [JsonPropertyName(\"managed\")] public bool IsManaged { get; set; } Property Value Type Description Boolean a value indicating whether the emoji is managed by an integration. | Improve this Doc View Source Name Gets the emote display name (e.g. Unicode or display name). Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the emote display name (e.g. Unicode or display name). | Improve this Doc View Source RequireColons Gets or sets a value indicating whether the emote must be wrapped in colons. Declaration [JsonPropertyName(\"require_colons\")] public bool RequireColons { get; set; } Property Value Type Description Boolean a value indicating whether the emote must be wrapped in colons. | Improve this Doc View Source RoleIds Gets or sets a list of the snowflake identifiers of the roles the emote is white-listed to. Declaration [JsonPropertyName(\"roles\")] public IReadOnlyList<Snowflake> RoleIds { get; set; } Property Value Type Description IReadOnlyList < Snowflake > a list of the snowflake identifiers of the roles the emote is white-listed to. Explicit Interface Implementations | Improve this Doc View Source IIdentifiable<Snowflake>.Id Declaration Snowflake IIdentifiable<Snowflake>.Id { get; } Returns Type Description Snowflake Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Models.FollowedChannelModel.html": {
    "href": "api/Strade.Models.FollowedChannelModel.html",
    "title": "Class FollowedChannelModel | Strade Developer Documentation",
    "keywords": "Class FollowedChannelModel Holds information about a followed channel. Inheritance Object FollowedChannelModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class FollowedChannelModel Remarks More details can be found on https://discord.com/developers/docs/resources/channel#followed-channel-object [external, Discord Developer Documentation]. Properties | Improve this Doc View Source ChannelId Gets or sets the snowflake identifier of the followed channel. Declaration [JsonPropertyName(\"channel_id\")] public Snowflake ChannelId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the followed channel. | Improve this Doc View Source WebhookId Gets or sets the snowflake identifier of the webhook for the followed channel. Declaration [JsonPropertyName(\"webhook_id\")] public Snowflake WebhookId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the webhook for the followed channel."
  },
  "api/Strade.Models.GuildIntegrationInformationModel.html": {
    "href": "api/Strade.Models.GuildIntegrationInformationModel.html",
    "title": "Class GuildIntegrationInformationModel | Strade Developer Documentation",
    "keywords": "Class GuildIntegrationInformationModel Inheritance Object GuildIntegrationInformationModel GuildIntegrationModel Implements IIdentifiable < Snowflake > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public class GuildIntegrationInformationModel : IIdentifiable<Snowflake> Properties | Improve this Doc View Source Account Gets the integration account information. Declaration [JsonPropertyName(\"account\")] public IntegrationAccountModel Account { get; set; } Property Value Type Description IntegrationAccountModel the integration account information. | Improve this Doc View Source Id Gets the snowflake identifier of the integration. Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; set; } Property Value Type Description Snowflake the snowflake identifier of the integration. | Improve this Doc View Source Name Gets the integration name. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the integration name. | Improve this Doc View Source Type Gets the type of the integration (e.g. \"twitch\" , \"youtube\" , etc.). Declaration [JsonPropertyName(\"type\")] public string Type { get; set; } Property Value Type Description String the type of the integration (e.g. \"twitch\" , \"youtube\" , etc.) Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Models.GuildIntegrationModel.html": {
    "href": "api/Strade.Models.GuildIntegrationModel.html",
    "title": "Class GuildIntegrationModel | Strade Developer Documentation",
    "keywords": "Class GuildIntegrationModel Inheritance Object GuildIntegrationInformationModel GuildIntegrationModel Implements IIdentifiable < Snowflake > Inherited Members GuildIntegrationInformationModel.Account GuildIntegrationInformationModel.Id GuildIntegrationInformationModel.Name GuildIntegrationInformationModel.Type Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class GuildIntegrationModel : GuildIntegrationInformationModel, IIdentifiable<Snowflake> Properties | Improve this Doc View Source AreEmoticonsEnabled Declaration [JsonPropertyName(\"enable_emoticons\")] public bool AreEmoticonsEnabled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ExpireBehavior Gets the behavior when an integration subscription lapses. Declaration [JsonPropertyName(\"expire_behavior\")] public GuildIntegrationExpireBehavior ExpireBehavior { get; set; } Property Value Type Description GuildIntegrationExpireBehavior the behavior when an integration subscription lapses. | Improve this Doc View Source ExpireGracePeriod Gets the period where the integration will ignore lapsed subscriptions. Declaration [JsonPropertyName(\"expire_grace_period\")] public int ExpireGracePeriod { get; set; } Property Value Type Description Int32 the period (in seconds) where the integration will ignore lapsed subscriptions. | Improve this Doc View Source IsEnabled Gets a value indicating whether the integration is enabled. Declaration [JsonPropertyName(\"enabled\")] public bool IsEnabled { get; set; } Property Value Type Description Boolean a value indicating whether the integration is enabled. | Improve this Doc View Source IsSyncing Gets a value indicating whether the integration is syncing. Declaration [JsonPropertyName(\"syncing\")] public bool IsSyncing { get; set; } Property Value Type Description Boolean a value indicating whether the integration is syncing. | Improve this Doc View Source RoleId Gets the snowflake identifier of the role the integration is syncing with. Declaration [JsonPropertyName(\"role_id\")] public Snowflake RoleId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the role the integration is syncing with. | Improve this Doc View Source SyncedAt Gets the type when the integration was synchronized the last time. Declaration [JsonPropertyName(\"synced_at\")] public DateTimeOffset SyncedAt { get; set; } Property Value Type Description DateTimeOffset the type when the integration was synchronized the last time. | Improve this Doc View Source User Gets the user for the integration. Declaration [JsonPropertyName(\"user\")] public UserModel User { get; set; } Property Value Type Description UserModel the user for the integration. Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Models.GuildModel.html": {
    "href": "api/Strade.Models.GuildModel.html",
    "title": "Class GuildModel | Strade Developer Documentation",
    "keywords": "Class GuildModel Inheritance Object GuildModel Implements IIdentifiable < Snowflake > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class GuildModel : IIdentifiable<Snowflake> Properties | Improve this Doc View Source AfkChannelId Gets or sets the snowflake identifier of the guild's AFK channel; or null if the guild has no assigned AFK channel. Declaration [JsonPropertyName(\"afk_channel_id\")] public Snowflake? AfkChannelId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the guild's AFK channel; or null if the guild has no assigned AFK channel. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always null . | Improve this Doc View Source AfkTimeout Gets or sets the guild's AFK timeout when members are moved into the channel specified by AfkChannelId . Declaration [JsonPropertyName(\"afk_timeout\")] public int AfkTimeout { get; set; } Property Value Type Description Int32 the guild's AFK timeout when members are moved into the channel specified by AfkChannelId in seconds. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always null . | Improve this Doc View Source ApplicationId Gets or sets the snowflake identifier of the application that has created the guild; or null if the guild was not created by an application. Declaration [JsonPropertyName(\"application_id\")] public Snowflake? ApplicationId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the guild's AFK channel; or null if the guild has no assigned AFK channel. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always null . | Improve this Doc View Source ApproximateMemberCount Declaration [JsonPropertyName(\"approximate_member_count\")] public int? ApproximateMemberCount { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source ApproximatePresenceCount Declaration [JsonPropertyName(\"approximate_presence_count\")] public int? ApproximatePresenceCount { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source Banner Gets or sets a String that contains the hash of the banner image of the guild; or null if the guild has no banner. Declaration [JsonPropertyName(\"banner\")] public string Banner { get; set; } Property Value Type Description String a String that contains the hash of the banner image of the guild; or null if the guild has no banner. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always null . | Improve this Doc View Source BoostCount Gets or sets the number of Nitro boosts made on this guild. Declaration [JsonPropertyName(\"premium_subscription_count\")] public int BoostCount { get; set; } Property Value Type Description Int32 the number of Nitro boosts made on this guild. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always 0 . | Improve this Doc View Source BoostTier Gets or sets the guild's boost tier indicating what premium features this guild has. Declaration [JsonPropertyName(\"premium_tier\")] public GuildBoostTier BoostTier { get; set; } Property Value Type Description GuildBoostTier the guild's boost tier indicating what premium features this guild has. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always None . | Improve this Doc View Source Channels Declaration [JsonPropertyName(\"channels\")] public IReadOnlyList<ChannelModel> Channels { get; set; } Property Value Type Description IReadOnlyList < ChannelModel > | Improve this Doc View Source DefaultMessageNotificationLevel Gets or sets the default message notification level for this guild. Declaration [JsonPropertyName(\"default_message_notifications\")] public MessageNotificationLevel DefaultMessageNotificationLevel { get; set; } Property Value Type Description MessageNotificationLevel the default message notification level for this guild. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always AllMessages . | Improve this Doc View Source Description Gets or sets the guild's description; or null if the guild has no description. Declaration [JsonPropertyName(\"description\")] public string Description { get; set; } Property Value Type Description String the guild's description; or null if the guild has no description. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always null . | Improve this Doc View Source DiscoverySplash Gets or sets a String that contains the hash of the discovery splash image of the guild; or null if the guild has no discovery splash. Declaration [JsonPropertyName(\"discovery_splash\")] public string DiscoverySplash { get; set; } Property Value Type Description String a String that contains the hash of the discovery splash image of the guild; or null if the guild has discovery splash. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always null . | Improve this Doc View Source Emotes Gets or sets a read-only list of emotes the guild has. Declaration [JsonPropertyName(\"emojis\")] public IReadOnlyList<EmoteModel> Emotes { get; set; } Property Value Type Description IReadOnlyList < EmoteModel > a read-only list of emotes the guild has. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always null or Empty<T>() . | Improve this Doc View Source ExplicitContentFilterLevel Gets or sets the explicit content filter level enabled in the guild. Declaration [JsonPropertyName(\"explicit_content_filter\")] public ExplicitContentFilterLevel ExplicitContentFilterLevel { get; set; } Property Value Type Description ExplicitContentFilterLevel the explicit content filter level enabled in the guild. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always Disabled . | Improve this Doc View Source Features Gets or sets a read-only list that contains the enabled features of this guild. Declaration [JsonPropertyName(\"features\")] public IReadOnlyList<string> Features { get; set; } Property Value Type Description IReadOnlyList < String > a read-only list that contains the enabled features of this guild. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always Disabled . | Improve this Doc View Source Icon Declaration [JsonPropertyName(\"icon\")] public string Icon { get; set; } Property Value Type Description String | Improve this Doc View Source Id Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; set; } Property Value Type Description Snowflake | Improve this Doc View Source IsLarge Declaration [JsonPropertyName(\"large\")] public bool? IsLarge { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source IsOwner Gets or sets a value indicating whether the current client user is the owner of the guild. Declaration [JsonPropertyName(\"owner\")] public bool? IsOwner { get; set; } Property Value Type Description Nullable < Boolean > a value indicating whether the current client user is the owner of the guild. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always null . | Improve this Doc View Source IsUnavailable Gets or sets a value indicating whether the guild is unavailable (e.g. due server outage, etc.). Declaration [JsonPropertyName(\"unavailable\")] public bool? IsUnavailable { get; set; } Property Value Type Description Nullable < Boolean > a value indicating whether the guild is unavailable (e.g. due server outage, etc.). | Improve this Doc View Source IsWidgetEnabled Gets or sets a value indicating whether the widget is enabled in this guild. Declaration [JsonPropertyName(\"widget_enabled\")] public bool? IsWidgetEnabled { get; set; } Property Value Type Description Nullable < Boolean > a value indicating whether the widget is enabled in this guild. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always null . | Improve this Doc View Source JoinedAt Declaration [JsonPropertyName(\"joined_at\")] public DateTimeOffset? JoinedAt { get; set; } Property Value Type Description Nullable < DateTimeOffset > | Improve this Doc View Source MaximumMembers Gets or sets the maximum allowed member count for this guild. Declaration [JsonPropertyName(\"max_members\")] public int? MaximumMembers { get; set; } Property Value Type Description Nullable < Int32 > the maximum allowed member count for this guild. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always null . | Improve this Doc View Source MaximumPresences Gets or sets the maximum number of presences returned for the guild. Declaration [JsonPropertyName(\"max_presences\")] public int? MaximumPresences { get; set; } Property Value Type Description Nullable < Int32 > the maximum number of presences returned for the guild. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always null . | Improve this Doc View Source MaximumVideoChannelUsers Gets or sets the maximum number of concurrent video channel users in a voice channel for this guild. Declaration [JsonPropertyName(\"max_video_channel_users\")] public int? MaximumVideoChannelUsers { get; set; } Property Value Type Description Nullable < Int32 > the maximum number of concurrent video channel users in a voice channel for this guild. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always null . | Improve this Doc View Source MemberCount Declaration [JsonPropertyName(\"member_count\")] public int? MemberCount { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source Members Declaration [JsonPropertyName(\"members\")] public IReadOnlyList<MemberModel> Members { get; set; } Property Value Type Description IReadOnlyList < MemberModel > | Improve this Doc View Source MultiFactorAuthenticationLevel Gets or sets the multi-factor authentication level required for administrative operations for this guild. Declaration [JsonPropertyName(\"mfa_level\")] public MultiFactorAuthenticationLevel MultiFactorAuthenticationLevel { get; set; } Property Value Type Description MultiFactorAuthenticationLevel the multi-factor authentication level required for administrative operations for this guild. Remarks If MultiFactorAuthenticationLevel is Elevated then administrators on the server require 2-factor authentication on their account to execute administrative operations. If the guild is unavailable ( IsUnavailable ) then this property should be always None . | Improve this Doc View Source Name Gets or sets the name of the guild. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the name of the guild. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always null . | Improve this Doc View Source OwnerId Gets or sets the snowflake identifier of the guild owner. Declaration [JsonPropertyName(\"owner_id\")] public Snowflake OwnerId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the guild owner. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always null . See Also ApplicationId | Improve this Doc View Source Permissions Declaration [JsonPropertyName(\"permissions\")] public PermissionSet? Permissions { get; set; } Property Value Type Description Nullable < PermissionSet > | Improve this Doc View Source PreferredCulture Gets or sets the preferred culture/locale for this guild; or null if no preferred culture is set. Declaration [JsonPropertyName(\"preferred_locale\")] public string PreferredCulture { get; set; } Property Value Type Description String the preferred culture/locale for this guild; or null if no preferred culture is set. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always null . | Improve this Doc View Source PublicUpdatesChannelId Gets or sets the snowflake identifier of the assigned public updates channel of the guild; or null if no public updates channel is set. Declaration [JsonPropertyName(\"public_updates_channel_id\")] public Snowflake? PublicUpdatesChannelId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the assigned public updates channel of the guild; or null if no public updates channel is set. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always null . | Improve this Doc View Source Region Gets or sets the voice region identifier set for the guild. Declaration [JsonPropertyName(\"region\")] public string Region { get; set; } Property Value Type Description String the voice region identifier set for the guild. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always null . | Improve this Doc View Source Roles Declaration [JsonPropertyName(\"roles\")] public IReadOnlyList<RoleModel> Roles { get; set; } Property Value Type Description IReadOnlyList < RoleModel > | Improve this Doc View Source RulesChannelId Gets or sets the snowflake identifier of the assigned rules channel of the guild; or null if no rules channel is set. Declaration [JsonPropertyName(\"rules_channel_id\")] public Snowflake? RulesChannelId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the assigned rules channel of the guild; or null if no rules channel is set. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always null . | Improve this Doc View Source Splash Gets or sets the hash of the splash (if null , the entity has no splash). Declaration [JsonPropertyName(\"splash\")] public string Splash { get; set; } Property Value Type Description String the hash of the splash (if null , the entity has no splash). Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always null . | Improve this Doc View Source SystemChannelFlags Gets or sets a set of flags for the guild's system channel. Declaration [JsonPropertyName(\"system_channel_flags\")] public SystemChannelFlags SystemChannelFlags { get; set; } Property Value Type Description SystemChannelFlags a set of flags for the guild's system channel. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always None . | Improve this Doc View Source SystemChannelId Gets or sets the snowflake identifier of the assigned system channel of the guild; or null if no system channel is set. Declaration [JsonPropertyName(\"system_channel_id\")] public Snowflake? SystemChannelId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the assigned system channel of the guild; or null if no system channel is set. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always null . | Improve this Doc View Source VanityCode Gets or sets the guild's vanity invite code; or null if no vanity invite enabled is set for the guild. Declaration [JsonPropertyName(\"vanity_url_code\")] public string VanityCode { get; set; } Property Value Type Description String the guild's vanity invite code; or null if no vanity invite enabled is set for the guild. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always null . | Improve this Doc View Source VerificationLevel Gets or sets the verification level required for new members for the guild. Declaration [JsonPropertyName(\"verification_level\")] public VerificationLevel VerificationLevel { get; set; } Property Value Type Description VerificationLevel the verification level required for new members for the guild. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always None . | Improve this Doc View Source VoiceStates Declaration [JsonPropertyName(\"voice_states\")] public IReadOnlyList<VoiceStateModel> VoiceStates { get; set; } Property Value Type Description IReadOnlyList < VoiceStateModel > | Improve this Doc View Source WidgetChannelId Gets or sets the snowflake identifier of the assigned widget channel of the guild; or null if no widget channel is set. Declaration [JsonPropertyName(\"widget_channel_id\")] public Snowflake? WidgetChannelId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the assigned widget channel of the guild; or null if no widget channel is set. Remarks If the guild is unavailable ( IsUnavailable ) then this property should be always null . Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Models.GuildPreviewModel.html": {
    "href": "api/Strade.Models.GuildPreviewModel.html",
    "title": "Class GuildPreviewModel | Strade Developer Documentation",
    "keywords": "Class GuildPreviewModel Inheritance Object GuildPreviewModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class GuildPreviewModel Properties | Improve this Doc View Source IconHash Gets or sets the icon hash. Declaration [JsonPropertyName(\"icon\")] public string IconHash { get; set; } Property Value Type Description String the icon hash. | Improve this Doc View Source Id Gets or sets the snowflake identifier of the guild. Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; set; } Property Value Type Description Snowflake the snowflake identifier of the guild. | Improve this Doc View Source Name Gets or sets the guild name. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the guild name. | Improve this Doc View Source SplashHash Declaration [JsonPropertyName(\"splash\")] public string SplashHash { get; set; } Property Value Type Description String | Improve this Doc View Source VanityUrlCode Declaration [JsonPropertyName(\"vanity_url_code\")] public string VanityUrlCode { get; set; } Property Value Type Description String | Improve this Doc View Source VerificationLevel Declaration [JsonPropertyName(\"verification_level\")] public VerificationLevel VerificationLevel { get; set; } Property Value Type Description VerificationLevel"
  },
  "api/Strade.Models.GuildWidgetModel.html": {
    "href": "api/Strade.Models.GuildWidgetModel.html",
    "title": "Class GuildWidgetModel | Strade Developer Documentation",
    "keywords": "Class GuildWidgetModel Inheritance Object GuildWidgetModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class GuildWidgetModel Properties | Improve this Doc View Source ChannelId Gets or sets the channel identifier where the embed is enabled on. Declaration [JsonPropertyName(\"channel_id\")] public Snowflake? ChannelId { get; set; } Property Value Type Description Nullable < Snowflake > the channel identifier where the embed is enabled on; or null if not enabled. | Improve this Doc View Source IsEnabled Gets or sets a value indicating whether the guild embed is enabled. Declaration [JsonPropertyName(\"enabled\")] public bool IsEnabled { get; set; } Property Value Type Description Boolean a value indicating whether the guild embed is enabled."
  },
  "api/Strade.Models.html": {
    "href": "api/Strade.Models.html",
    "title": "Namespace Strade.Models | Strade Developer Documentation",
    "keywords": "Namespace Strade.Models Classes ActivityAssetsModel ActivityButtonModel ActivityModel Represents an activity object. ActivityPartyModel ActivitySecretsModel ActivityTimestampsModel AllowedMentionsModel ApplicationCommandInteractionDataModel ApplicationCommandInteractionDataOptionModel ApplicationCommandModel ApplicationCommandOptionChoiceModel ApplicationCommandOptionModel ApplicationInformationModel Holds information about an Oauth2 application. AuditLogEntryModel AuditLogEntryOptionsModel AuditLogModel BanModel BotGatewayInformationModel CallInformationModel ChannelMentionModel ChannelModel ChannelPreviewModel Represents the preview structure for a partial channel. EmbedAuthorModel Represents an embedded message author. EmbedFooterModel EmbedMessageModel Represents an embedded message object. EmbedProviderModel Represents an embedded message provider. EmbedVideoModel Represents an embedded message video. EmoteModel FollowedChannelModel Holds information about a followed channel. GuildIntegrationInformationModel GuildIntegrationModel GuildModel GuildPreviewModel GuildWidgetModel IntegrationAccountModel InteractionApplicationCommandCallbackDataModel InteractionModel InteractionResponseModel InviteModel InviteWithMetadataModel MemberModel MentionModel MessageActivityModel Represents a message activity. MessageApplicationModel Represents a message application object. MessageAttachmentModel MessageModel MessageReactionModel Represents a message reaction object. MessageReferenceModel Represents a message reference object (used to reference the source where the actual message has been cross-posted from). MessageStickerModel PresenceModel PruneInformationModel RoleInformationModel RoleModel SessionStartInformationModel Represents the session start limit information. TeamMemberModel TeamModel UserConnectionModel UserGatewayInformationModel Holds the information about how to connect to the gateway (for bots and clients). UserGuildInformationModel UserModel Represents an user object. UserPlatformStatusModel VanityInviteModel Represents the structure of a vanity invite. VoiceRegionModel Represents a discord voice region. VoiceServerModel Represents a voice server. VoiceStateModel Represents a voice state object. WebhookModel Represents a webhook model."
  },
  "api/Strade.Models.IntegrationAccountModel.html": {
    "href": "api/Strade.Models.IntegrationAccountModel.html",
    "title": "Class IntegrationAccountModel | Strade Developer Documentation",
    "keywords": "Class IntegrationAccountModel Inheritance Object IntegrationAccountModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class IntegrationAccountModel Properties | Improve this Doc View Source Id Gets or sets the id of the account. Declaration [JsonPropertyName(\"id\")] public string Id { get; set; } Property Value Type Description String the id of the account. | Improve this Doc View Source Name Gets or sets the name of the account. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the name of the account."
  },
  "api/Strade.Models.InteractionApplicationCommandCallbackDataModel.html": {
    "href": "api/Strade.Models.InteractionApplicationCommandCallbackDataModel.html",
    "title": "Class InteractionApplicationCommandCallbackDataModel | Strade Developer Documentation",
    "keywords": "Class InteractionApplicationCommandCallbackDataModel Inheritance Object InteractionApplicationCommandCallbackDataModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public class InteractionApplicationCommandCallbackDataModel Properties | Improve this Doc View Source AllowedMentions Gets or sets a structure controlling the mention parsing behavior. Declaration [JsonPropertyName(\"allowed_mentions\")] public AllowedMentionsModel AllowedMentions { get; set; } Property Value Type Description AllowedMentionsModel a structure controlling the mention parsing behavior. | Improve this Doc View Source Content Gets or sets the content of the response message. Declaration [JsonPropertyName(\"content\")] public string Content { get; set; } Property Value Type Description String the content of the response message. | Improve this Doc View Source Embeds Gets or sets a read-only list of embeds to response with. Declaration [JsonPropertyName(\"embeds\")] public IReadOnlyList<EmbedMessageModel> Embeds { get; set; } Property Value Type Description IReadOnlyList < EmbedMessageModel > a read-only list of embeds to response with. | Improve this Doc View Source IsTextToSpeech Gets or sets a value indicating whether the response should be a text-to-speech message. Declaration [JsonPropertyName(\"tts\")] public bool IsTextToSpeech { get; set; } Property Value Type Description Boolean a value indicating whether the response should be a text-to-speech message."
  },
  "api/Strade.Models.InteractionModel.html": {
    "href": "api/Strade.Models.InteractionModel.html",
    "title": "Class InteractionModel | Strade Developer Documentation",
    "keywords": "Class InteractionModel Inheritance Object InteractionModel Implements IIdentifiable < Snowflake > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class InteractionModel : IIdentifiable<Snowflake> Properties | Improve this Doc View Source ChannelId Gets or sets the snowflake identifier of the channel the interaction was sent from. Declaration [JsonPropertyName(\"channel_id\")] public Snowflake ChannelId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the channel the interaction was sent from. | Improve this Doc View Source Data Gets or sets the command data payload. Declaration [JsonPropertyName(\"data\")] public ApplicationCommandInteractionDataModel Data { get; set; } Property Value Type Description ApplicationCommandInteractionDataModel the command data payload. | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the guild the interaction was sent from. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake GuildId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the guild the interaction was sent from. | Improve this Doc View Source Id Gets or sets the snowflake identifier of the interaction. Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; set; } Property Value Type Description Snowflake the snowflake identifier of the interaction. | Improve this Doc View Source Member Gets or sets a model of the member that invoked the interaction. Declaration [JsonPropertyName(\"member\")] public MemberModel Member { get; set; } Property Value Type Description MemberModel a model of the member that invoked the interaction. | Improve this Doc View Source Token Gets or sets the continuation token for responding to the interaction. Declaration [JsonPropertyName(\"token\")] public string Token { get; set; } Property Value Type Description String the continuation token for responding to the interaction. | Improve this Doc View Source Type Gets or sets the type of the interaction. Declaration [JsonPropertyName(\"type\")] public InteractionType Type { get; set; } Property Value Type Description InteractionType the type of the interaction. | Improve this Doc View Source Version Gets or sets the version for the interaction. Declaration [JsonPropertyName(\"version\")] public int Version { get; set; } Property Value Type Description Int32 the version for the interaction. Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Models.InteractionResponseModel.html": {
    "href": "api/Strade.Models.InteractionResponseModel.html",
    "title": "Class InteractionResponseModel | Strade Developer Documentation",
    "keywords": "Class InteractionResponseModel Inheritance Object InteractionResponseModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public class InteractionResponseModel Properties | Improve this Doc View Source Data Gets or sets the callback response. Declaration [JsonPropertyName(\"data\")] public InteractionApplicationCommandCallbackDataModel Data { get; set; } Property Value Type Description InteractionApplicationCommandCallbackDataModel the callback response. | Improve this Doc View Source Type Gets or sets the type of the response. Declaration [JsonPropertyName(\"type\")] public InteractionResponseType Type { get; set; } Property Value Type Description InteractionResponseType the type of the response."
  },
  "api/Strade.Models.InviteModel.html": {
    "href": "api/Strade.Models.InviteModel.html",
    "title": "Class InviteModel | Strade Developer Documentation",
    "keywords": "Class InviteModel Inheritance Object InviteModel InviteWithMetadataModel Implements IIdentifiable < String > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public class InviteModel : IIdentifiable<string> Properties | Improve this Doc View Source ApproximateMembers Gets or sets the number of approximate members of total members; if present. Declaration [JsonPropertyName(\"approximate_presence_count\")] public int? ApproximateMembers { get; set; } Property Value Type Description Nullable < Int32 > the number of approximate members of total members; if present. | Improve this Doc View Source ApproximateOnlineMembers Gets or sets the number of approximate members of online members; if present. Declaration [JsonPropertyName(\"approximate_member_count\")] public int? ApproximateOnlineMembers { get; set; } Property Value Type Description Nullable < Int32 > the number of approximate members of online members; if present. | Improve this Doc View Source Channel Gets or sets the channel preview the invite shows. Declaration [JsonPropertyName(\"channel\")] public ChannelPreviewModel Channel { get; set; } Property Value Type Description ChannelPreviewModel the channel preview the invite shows. | Improve this Doc View Source Code Gets or sets the unique invitation code. Declaration [JsonPropertyName(\"code\")] public string Code { get; set; } Property Value Type Description String the unique invitation code. | Improve this Doc View Source Guild Gets or sets the guild preview the invite shows. Declaration [JsonPropertyName(\"guild\")] public GuildPreviewModel Guild { get; set; } Property Value Type Description GuildPreviewModel the guild preview the invite shows. | Improve this Doc View Source Inviter Gets or sets the target user that invite shows. Declaration [JsonPropertyName(\"inviter\")] public UserModel Inviter { get; set; } Property Value Type Description UserModel the target user that invite shows. | Improve this Doc View Source TargetUser Gets or sets the user that created the invite. Declaration [JsonPropertyName(\"target_user\")] public UserModel TargetUser { get; set; } Property Value Type Description UserModel the user that created the invite. | Improve this Doc View Source TargetUserType Declaration [JsonPropertyName(\"target_user_type\")] public TargetUserType? TargetUserType { get; set; } Property Value Type Description Nullable < TargetUserType > Explicit Interface Implementations | Improve this Doc View Source IIdentifiable<String>.Id Declaration string IIdentifiable<string>.Id { get; } Returns Type Description String Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Models.InviteWithMetadataModel.html": {
    "href": "api/Strade.Models.InviteWithMetadataModel.html",
    "title": "Class InviteWithMetadataModel | Strade Developer Documentation",
    "keywords": "Class InviteWithMetadataModel Inheritance Object InviteModel InviteWithMetadataModel Implements IIdentifiable < String > Inherited Members InviteModel.ApproximateMembers InviteModel.ApproximateOnlineMembers InviteModel.Channel InviteModel.Code InviteModel.Guild InviteModel.Inviter InviteModel.TargetUser InviteModel.TargetUserType InviteModel.IIdentifiable<String>.Id Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public class InviteWithMetadataModel : InviteModel, IIdentifiable<string> Properties | Improve this Doc View Source CreatedAt Gets or sets the time when the invite was created. Declaration [JsonPropertyName(\"created_at\")] public DateTimeOffset CreatedAt { get; set; } Property Value Type Description DateTimeOffset the time when the invite was created. | Improve this Doc View Source GrantsTemporaryMembership Gets or sets a value indicating whether the invite grants temporary membership. Declaration [JsonPropertyName(\"temporary\")] public bool GrantsTemporaryMembership { get; set; } Property Value Type Description Boolean a value indicating whether the invite grants temporary membership. | Improve this Doc View Source MaximumAge Gets or sets the duration in seconds after which the invite expires. Declaration [JsonPropertyName(\"max_age\")] public int MaximumAge { get; set; } Property Value Type Description Int32 the duration in seconds after which the invite expires. | Improve this Doc View Source MaximumUses Gets or sets the maximum number of uses the invite can be used. Declaration [JsonPropertyName(\"max_uses\")] public int MaximumUses { get; set; } Property Value Type Description Int32 the maximum number of uses the invite can be used. | Improve this Doc View Source Uses Gets or sets the number of times the invite has been used. Declaration [JsonPropertyName(\"uses\")] public int Uses { get; set; } Property Value Type Description Int32 the number of times the invite has been used. Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Models.MemberModel.html": {
    "href": "api/Strade.Models.MemberModel.html",
    "title": "Class MemberModel | Strade Developer Documentation",
    "keywords": "Class MemberModel Inheritance Object MemberModel GuildMemberAddEvent GuildMemberUpdateEvent Implements IIdentifiable < Snowflake > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public class MemberModel : IIdentifiable<Snowflake> Properties | Improve this Doc View Source IsDeafened Gets or sets a value indicating whether the member is deafened server-wide. Declaration [JsonPropertyName(\"deaf\")] public bool? IsDeafened { get; set; } Property Value Type Description Nullable < Boolean > a value indicating whether the member is deafened server-wide. | Improve this Doc View Source IsMuted Gets or sets a value indicating whether the member is muted server-wide. Declaration [JsonPropertyName(\"mute\")] public bool? IsMuted { get; set; } Property Value Type Description Nullable < Boolean > a value indicating whether the member is muted server-wide. | Improve this Doc View Source JoinedAt Gets or sets the time when the member has joined the guild. Declaration [JsonPropertyName(\"joined_at\")] public DateTimeOffset JoinedAt { get; set; } Property Value Type Description DateTimeOffset the time when the member has joined the guild. | Improve this Doc View Source Nickname Gets or sets the nickname of the user. Declaration [JsonPropertyName(\"nick\")] public string Nickname { get; set; } Property Value Type Description String the nickname of the user (if null the user has no explicit nickname). | Improve this Doc View Source PremiumSince Gets or sets the time when the user has boosted the server with Nitro. Declaration [JsonPropertyName(\"premium_since\")] public DateTimeOffset? PremiumSince { get; set; } Property Value Type Description Nullable < DateTimeOffset > the time when the user has boosted the server with Nitro; if null then the member has not boosted the server with Nitro. | Improve this Doc View Source RoleIds Gets or sets a list of snowflake identifiers referring to the assigned roles of the member. Declaration [JsonPropertyName(\"roles\")] public IReadOnlyList<Snowflake> RoleIds { get; set; } Property Value Type Description IReadOnlyList < Snowflake > a list of snowflake identifiers referring to the assigned roles of the member. | Improve this Doc View Source User Gets or sets the associated user. Declaration [JsonPropertyName(\"user\")] public UserModel User { get; set; } Property Value Type Description UserModel the associated user. Explicit Interface Implementations | Improve this Doc View Source IIdentifiable<Snowflake>.Id Declaration Snowflake IIdentifiable<Snowflake>.Id { get; } Returns Type Description Snowflake Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Models.MentionModel.html": {
    "href": "api/Strade.Models.MentionModel.html",
    "title": "Class MentionModel | Strade Developer Documentation",
    "keywords": "Class MentionModel Inheritance Object UserModel MentionModel Implements IIdentifiable < Snowflake > Inherited Members UserModel.Avatar UserModel.Discriminator UserModel.EmailAddress UserModel.Flags UserModel.Id UserModel.IsBot UserModel.IsMultiFactorAuthenticationEnabled UserModel.IsSystem UserModel.IsVerified UserModel.Locale UserModel.PremiumType UserModel.PublicFlags UserModel.Username Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class MentionModel : UserModel, IIdentifiable<Snowflake> Properties | Improve this Doc View Source Member Gets or sets a model of the member mentioned. Declaration [JsonPropertyName(\"member\")] public MemberModel Member { get; set; } Property Value Type Description MemberModel a model of the member mentioned. Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Models.MessageActivityModel.html": {
    "href": "api/Strade.Models.MessageActivityModel.html",
    "title": "Class MessageActivityModel | Strade Developer Documentation",
    "keywords": "Class MessageActivityModel Represents a message activity. Inheritance Object MessageActivityModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class MessageActivityModel Remarks More details can be found on https://discord.com/developers/docs/resources/channel#message-activity-object-structure [external, Discord Developer Documentation]. Properties | Improve this Doc View Source PartyId Gets or sets the associated rich-presence party identifier. Declaration [JsonPropertyName(\"party_id\")] public string PartyId { get; set; } Property Value Type Description String the associated rich-presence party identifier. | Improve this Doc View Source Type Gets or sets the type of the message activity. Declaration [JsonPropertyName(\"type\")] public MessageActivityType Type { get; set; } Property Value Type Description MessageActivityType the type of the message activity."
  },
  "api/Strade.Models.MessageApplicationModel.html": {
    "href": "api/Strade.Models.MessageApplicationModel.html",
    "title": "Class MessageApplicationModel | Strade Developer Documentation",
    "keywords": "Class MessageApplicationModel Represents a message application object. Inheritance Object MessageApplicationModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class MessageApplicationModel Remarks More details can be found on https://discord.com/developers/docs/resources/channel#message-application-object-structure [external, Discord Developer Documentation]. Properties | Improve this Doc View Source CoverImage Gets or sets the cover image hash of the referenced application. Declaration [JsonPropertyName(\"cover_image\")] public string CoverImage { get; set; } Property Value Type Description String the cover image hash of the referenced application. | Improve this Doc View Source Description Gets or sets the description of the referenced application. Declaration [JsonPropertyName(\"description\")] public string Description { get; set; } Property Value Type Description String the description of the referenced application. | Improve this Doc View Source IconId Gets or sets the icon identifier of the reference application. Declaration [JsonPropertyName(\"icon\")] public string IconId { get; set; } Property Value Type Description String the icon identifier of the reference application. | Improve this Doc View Source Id Gets or sets the snowflake identifier of the referenced application. Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; set; } Property Value Type Description Snowflake the snowflake identifier of the referenced application. | Improve this Doc View Source Name Gets or sets the name of the reference application. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the name of the reference application."
  },
  "api/Strade.Models.MessageAttachmentModel.html": {
    "href": "api/Strade.Models.MessageAttachmentModel.html",
    "title": "Class MessageAttachmentModel | Strade Developer Documentation",
    "keywords": "Class MessageAttachmentModel Inheritance Object MessageAttachmentModel Implements IIdentifiable < Snowflake > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class MessageAttachmentModel : IIdentifiable<Snowflake> Properties | Improve this Doc View Source Filename Gets or sets the filename of the attachment. Declaration [JsonPropertyName(\"filename\")] public string Filename { get; set; } Property Value Type Description String the filename of the attachment. | Improve this Doc View Source Height Gets or sets the height of the image of the attachment. Declaration [JsonPropertyName(\"height\")] public int? Height { get; set; } Property Value Type Description Nullable < Int32 > the height of the image of the attachment. | Improve this Doc View Source Id Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; set; } Property Value Type Description Snowflake | Improve this Doc View Source ProxiedUrl Gets or sets the proxied URL for the attachment. Declaration [JsonPropertyName(\"proxy_url\")] [JsonConverter(typeof(UriJsonConverter))] public Uri ProxiedUrl { get; set; } Property Value Type Description Uri the proxied URL for the attachment. | Improve this Doc View Source Size Gets or sets the total file size in bytes. Declaration [JsonPropertyName(\"size\")] public long Size { get; set; } Property Value Type Description Int64 the total file size in bytes. | Improve this Doc View Source Url Gets or sets the URL of the attachment. Declaration [JsonPropertyName(\"url\")] [JsonConverter(typeof(UriJsonConverter))] public Uri Url { get; set; } Property Value Type Description Uri the URL of the attachment. | Improve this Doc View Source Width Gets or sets the width of the image of the attachment. Declaration [JsonPropertyName(\"width\")] public int? Width { get; set; } Property Value Type Description Nullable < Int32 > the width of the image of the attachment. Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Models.MessageModel.html": {
    "href": "api/Strade.Models.MessageModel.html",
    "title": "Class MessageModel | Strade Developer Documentation",
    "keywords": "Class MessageModel Inheritance Object MessageModel Implements IIdentifiable < Snowflake > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class MessageModel : IIdentifiable<Snowflake> Properties | Improve this Doc View Source Activity Gets or sets the activity (used for rich presence-related chat embeds). Declaration [JsonPropertyName(\"activity\")] public MessageActivityModel Activity { get; set; } Property Value Type Description MessageActivityModel the activity (used for rich presence-related chat embeds). | Improve this Doc View Source Application Gets or sets information about the rich presence-application that send the message. Declaration [JsonPropertyName(\"application\")] public MessageApplicationModel Application { get; set; } Property Value Type Description MessageApplicationModel information about the rich presence-application that send the message. | Improve this Doc View Source Attachments Gets or sets the attached files within the message. Declaration [JsonPropertyName(\"attachments\")] public IReadOnlyList<MessageAttachmentModel> Attachments { get; set; } Property Value Type Description IReadOnlyList < MessageAttachmentModel > the attached files within the message. | Improve this Doc View Source Author Gets or sets the message author. Note that the author may be a webhook or application user if the message was send by an application / webhook. Declaration [JsonPropertyName(\"author\")] public UserModel Author { get; set; } Property Value Type Description UserModel the message author. Note that the author may be a webhook or application user if the message was send by an application / webhook. | Improve this Doc View Source CallInformation Gets or sets the call information. Declaration [JsonPropertyName(\"call\")] public CallInformationModel CallInformation { get; set; } Property Value Type Description CallInformationModel the call information; or null if not present. | Improve this Doc View Source ChannelId Gets or sets the snowflake identifier of the channel the message was sent in. Declaration [JsonPropertyName(\"channel_id\")] public Snowflake ChannelId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the channel the message was sent in. | Improve this Doc View Source Content Gets or sets the raw message content. Declaration [JsonPropertyName(\"content\")] public string Content { get; set; } Property Value Type Description String the raw message content. | Improve this Doc View Source CreatedAt Gets or sets the UTC time offset when the message was sent. Declaration [JsonPropertyName(\"timestamp\")] public DateTimeOffset CreatedAt { get; set; } Property Value Type Description DateTimeOffset the UTC time offset when the message was sent. | Improve this Doc View Source Embeds Gets or sets the embedded messages within the message. Declaration [JsonPropertyName(\"embeds\")] public IReadOnlyList<EmbedMessageModel> Embeds { get; set; } Property Value Type Description IReadOnlyList < EmbedMessageModel > the embedded messages within the message. | Improve this Doc View Source Flags Gets or sets the message flags. Declaration [JsonPropertyName(\"flags\")] public MessageFlags? Flags { get; set; } Property Value Type Description Nullable < MessageFlags > the message flags. | Improve this Doc View Source GuildId Gets or sets the option guild snowflake identifier of the guild the message was sent in. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake? GuildId { get; set; } Property Value Type Description Nullable < Snowflake > the option guild snowflake identifier of the guild the message was sent in; or null if the message was not sent in a guild. | Improve this Doc View Source Id Gets or sets a value indicating whether the message was edited. Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; set; } Property Value Type Description Snowflake a value indicating whether the message was edited. | Improve this Doc View Source IsMentioningEveryone Gets or sets a value indicating whether the message mentions everyone. Declaration [JsonPropertyName(\"mention_everyone\")] public bool IsMentioningEveryone { get; set; } Property Value Type Description Boolean a value indicating whether the message mentions everyone. | Improve this Doc View Source IsPinned Gets or sets a value indicating whether the message is pinned. Declaration [JsonPropertyName(\"pinned\")] public bool IsPinned { get; set; } Property Value Type Description Boolean a value indicating whether the message is pinned. | Improve this Doc View Source IsTextToSpeech Gets or sets a value indicating whether the message is a text-to-speech message. Declaration [JsonPropertyName(\"tts\")] public bool IsTextToSpeech { get; set; } Property Value Type Description Boolean a value indicating whether the message is a text-to-speech message. | Improve this Doc View Source LastEditedAt Gets or sets the UTC time offset when the message was edited. Declaration [JsonPropertyName(\"edited_timestamp\")] public DateTimeOffset? LastEditedAt { get; set; } Property Value Type Description Nullable < DateTimeOffset > the UTC time offset when the message was edited; or null if the message was not edited. | Improve this Doc View Source Member Declaration [JsonPropertyName(\"member\")] public MemberModel Member { get; set; } Property Value Type Description MemberModel | Improve this Doc View Source MentionedChannels Declaration [JsonPropertyName(\"mention_channels\")] public IReadOnlyList<ChannelMentionModel> MentionedChannels { get; set; } Property Value Type Description IReadOnlyList < ChannelMentionModel > | Improve this Doc View Source MentionedRoles Declaration [JsonPropertyName(\"mention_roles\")] public IReadOnlyList<Snowflake> MentionedRoles { get; set; } Property Value Type Description IReadOnlyList < Snowflake > | Improve this Doc View Source Mentions Declaration [JsonPropertyName(\"mentions\")] public IReadOnlyList<MentionModel> Mentions { get; set; } Property Value Type Description IReadOnlyList < MentionModel > | Improve this Doc View Source MessageReference Gets or sets a reference to the origin message from which the actual message was cross-posted from. Available if the IsCrosspost is set in Flags . Declaration [JsonPropertyName(\"message_reference\")] public MessageReferenceModel MessageReference { get; set; } Property Value Type Description MessageReferenceModel a reference to the origin message from which the actual message was cross-posted from. Available if the IsCrosspost is set in Flags . | Improve this Doc View Source Nonce Gets or sets the message nonce used for validation whether a message was send. Declaration [JsonPropertyName(\"nonce\")] public string Nonce { get; set; } Property Value Type Description String the message nonce used for validation whether a message was send; or null if no nonce is provided. | Improve this Doc View Source Reactions Gets or sets a list of the reactions made to the message. Declaration [JsonPropertyName(\"reactions\")] public IReadOnlyList<MessageReactionModel> Reactions { get; set; } Property Value Type Description IReadOnlyList < MessageReactionModel > a list of the reactions made to the message. | Improve this Doc View Source Stickers Gets or sets a read-only list containing the stickers attached with the message. Declaration [JsonPropertyName(\"stickers\")] public IReadOnlyList<MessageStickerModel> Stickers { get; set; } Property Value Type Description IReadOnlyList < MessageStickerModel > a read-only list containing the stickers attached with the message. | Improve this Doc View Source Type Gets or sets the type of the message. Declaration [JsonPropertyName(\"type\")] public MessageType Type { get; set; } Property Value Type Description MessageType the type of the message. | Improve this Doc View Source WebhookId Gets or sets the snowflake identifier of the webhook that send the message. If null , then the message was not send by a webhook. Declaration [JsonPropertyName(\"webhook_id\")] public Snowflake? WebhookId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the webhook that send the message. If null , then the message was not send by a webhook. Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Models.MessageReactionModel.html": {
    "href": "api/Strade.Models.MessageReactionModel.html",
    "title": "Class MessageReactionModel | Strade Developer Documentation",
    "keywords": "Class MessageReactionModel Represents a message reaction object. Inheritance Object MessageReactionModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class MessageReactionModel Remarks More details can be found on https://discord.com/developers/docs/resources/channel#reaction-object [external, Discord Developer Documentation]. Properties | Improve this Doc View Source Count Gets or sets a number indicating how many times the Emote has been used to react. Declaration [JsonPropertyName(\"count\")] public int Count { get; set; } Property Value Type Description Int32 a number indicating how many times the Emote has been used to react. | Improve this Doc View Source Emote Gets or sets the emote reacted with. Declaration [JsonPropertyName(\"emoji\")] [JsonConverter(typeof(EmoteJsonConverter))] public IEmote Emote { get; set; } Property Value Type Description IEmote the emote reacted with. | Improve this Doc View Source HasReacted Gets or sets a value indicating whether the bot user has reacted with the Emote . Declaration [JsonPropertyName(\"me\")] public bool HasReacted { get; set; } Property Value Type Description Boolean a value indicating whether the bot user has reacted with the Emote ."
  },
  "api/Strade.Models.MessageReferenceModel.html": {
    "href": "api/Strade.Models.MessageReferenceModel.html",
    "title": "Class MessageReferenceModel | Strade Developer Documentation",
    "keywords": "Class MessageReferenceModel Represents a message reference object (used to reference the source where the actual message has been cross-posted from). Inheritance Object MessageReferenceModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class MessageReferenceModel Remarks More details can be found on https://discord.com/developers/docs/resources/channel#message-reference-object-structure [external, Discord Developer Documentation]. Properties | Improve this Doc View Source ChannelId Gets or sets the snowflake identifier of the channel the referenced message was sent in. Declaration [JsonPropertyName(\"channel_id\")] public Snowflake? ChannelId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the channel the referenced message was sent in. | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the guild the referenced message was sent in. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake? GuildId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the guild the referenced message was sent in. | Improve this Doc View Source MessageId Gets or sets the snowflake identifier of the referenced message. Declaration [JsonPropertyName(\"message_id\")] public Snowflake? MessageId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the referenced message."
  },
  "api/Strade.Models.MessageStickerModel.html": {
    "href": "api/Strade.Models.MessageStickerModel.html",
    "title": "Class MessageStickerModel | Strade Developer Documentation",
    "keywords": "Class MessageStickerModel Inheritance Object MessageStickerModel Implements IIdentifiable < Snowflake > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class MessageStickerModel : IIdentifiable<Snowflake> Properties | Improve this Doc View Source AssetHash Declaration [JsonPropertyName(\"asset\")] public string AssetHash { get; set; } Property Value Type Description String | Improve this Doc View Source Description Declaration [JsonPropertyName(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Format Declaration [JsonPropertyName(\"format_type\")] public StickerFormatType Format { get; set; } Property Value Type Description StickerFormatType | Improve this Doc View Source Id Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; set; } Property Value Type Description Snowflake | Improve this Doc View Source Name Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source PackId Declaration [JsonPropertyName(\"pack_id\")] public Snowflake PackId { get; set; } Property Value Type Description Snowflake | Improve this Doc View Source PreviewAssetHash Declaration [JsonPropertyName(\"preview_asset\")] public string PreviewAssetHash { get; set; } Property Value Type Description String | Improve this Doc View Source Tags Declaration [JsonPropertyName(\"tags\")] [JsonConverter(typeof(CommaSeparatedStringListJsonConverter))] public IReadOnlyList<string> Tags { get; set; } Property Value Type Description IReadOnlyList < String > Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Models.PresenceModel.html": {
    "href": "api/Strade.Models.PresenceModel.html",
    "title": "Class PresenceModel | Strade Developer Documentation",
    "keywords": "Class PresenceModel Inheritance Object PresenceModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class PresenceModel Properties | Improve this Doc View Source Activities Gets or sets an enumerable that yields through the presence activities; or null if there are no activities. Declaration [JsonPropertyName(\"activities\")] [JsonIgnore(Condition = JsonIgnoreCondition.Never)] public IEnumerable<ActivityModel> Activities { get; set; } Property Value Type Description IEnumerable < ActivityModel > an enumerable that yields through the presence activities; or null if there are no activities. | Improve this Doc View Source IdleSince Gets or sets the UTC time point since the user is in idle; or null if the user is not idle. Declaration [JsonPropertyName(\"since\")] [JsonIgnore(Condition = JsonIgnoreCondition.Never)] [JsonConverter(typeof(UnixDateTimeOffsetJsonConverter))] public DateTimeOffset? IdleSince { get; set; } Property Value Type Description Nullable < DateTimeOffset > the UTC time point since the user is in idle; or null if the user is not idle. | Improve this Doc View Source IsIdle Gets or sets a value indicating whether the user is in idle. Declaration [JsonPropertyName(\"afk\")] [JsonIgnore(Condition = JsonIgnoreCondition.Never)] public bool IsIdle { get; set; } Property Value Type Description Boolean a value indicating whether the user is in idle. | Improve this Doc View Source Status Gets or sets the current status of the user. Declaration [JsonPropertyName(\"status\")] [JsonIgnore(Condition = JsonIgnoreCondition.Never)] public UserStatus Status { get; set; } Property Value Type Description UserStatus the current status of the user."
  },
  "api/Strade.Models.PruneInformationModel.html": {
    "href": "api/Strade.Models.PruneInformationModel.html",
    "title": "Class PruneInformationModel | Strade Developer Documentation",
    "keywords": "Class PruneInformationModel Inheritance Object PruneInformationModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class PruneInformationModel Properties | Improve this Doc View Source PrunedMembers Declaration [JsonPropertyName(\"pruned\")] public int? PrunedMembers { get; set; } Property Value Type Description Nullable < Int32 >"
  },
  "api/Strade.Models.RoleInformationModel.html": {
    "href": "api/Strade.Models.RoleInformationModel.html",
    "title": "Class RoleInformationModel | Strade Developer Documentation",
    "keywords": "Class RoleInformationModel Inheritance Object RoleInformationModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class RoleInformationModel Properties | Improve this Doc View Source Id Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; set; } Property Value Type Description Snowflake | Improve this Doc View Source Name Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String"
  },
  "api/Strade.Models.RoleModel.html": {
    "href": "api/Strade.Models.RoleModel.html",
    "title": "Class RoleModel | Strade Developer Documentation",
    "keywords": "Class RoleModel Inheritance Object RoleModel Implements IIdentifiable < Snowflake > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class RoleModel : IIdentifiable<Snowflake> Properties | Improve this Doc View Source Color Gets or sets the role color. Declaration [JsonPropertyName(\"color\")] public Color Color { get; set; } Property Value Type Description Color the role color. | Improve this Doc View Source Id Gets or sets the snowflake identifier of the role. Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; set; } Property Value Type Description Snowflake the snowflake identifier of the role. | Improve this Doc View Source IsHoisted Gets or sets a value indicating whether the role is pinned in the user listing. Declaration [JsonPropertyName(\"hoist\")] public bool IsHoisted { get; set; } Property Value Type Description Boolean a value indicating whether the role is pinned in the user listing. | Improve this Doc View Source IsManaged Gets or sets a value indicating whether the role is managed by an integration. Declaration [JsonPropertyName(\"managed\")] public bool IsManaged { get; set; } Property Value Type Description Boolean a value indicating whether the role is managed by an integration. | Improve this Doc View Source IsMentionable Gets or sets a value indicating whether the role is mentionable. Declaration [JsonPropertyName(\"mentionable\")] public bool IsMentionable { get; set; } Property Value Type Description Boolean a value indicating whether the role is mentionable. | Improve this Doc View Source Name Gets or sets the name of the role. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the name of the role. | Improve this Doc View Source Permissions Gets or sets the role permissions. Declaration [JsonPropertyName(\"permissions\")] public PermissionSet Permissions { get; set; } Property Value Type Description PermissionSet the role permissions. | Improve this Doc View Source Position Gets or sets the position of the role. Declaration [JsonPropertyName(\"position\")] public int Position { get; set; } Property Value Type Description Int32 the position of the role. Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Models.SessionStartInformationModel.html": {
    "href": "api/Strade.Models.SessionStartInformationModel.html",
    "title": "Class SessionStartInformationModel | Strade Developer Documentation",
    "keywords": "Class SessionStartInformationModel Represents the session start limit information. Inheritance Object SessionStartInformationModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class SessionStartInformationModel Properties | Improve this Doc View Source ResetAfter Gets or sets the number of milliseconds after which the limit resets. Declaration [JsonPropertyName(\"reset_after\")] [JsonConverter(typeof(UnixDateTimeOffsetJsonConverter))] public DateTimeOffset ResetAfter { get; set; } Property Value Type Description DateTimeOffset the number of milliseconds after which the limit resets. | Improve this Doc View Source SessionsRemaining Gets or sets the number of sessions start remaining for the bot user. Declaration [JsonPropertyName(\"remaining\")] public int SessionsRemaining { get; set; } Property Value Type Description Int32 the number of sessions start remaining for the bot user. | Improve this Doc View Source TotalSessions Gets or sets the number of total sessions the bot user is allowed to start. Declaration [JsonPropertyName(\"total\")] public int TotalSessions { get; set; } Property Value Type Description Int32 the number of total sessions the bot user is allowed to start."
  },
  "api/Strade.Models.TeamMemberModel.html": {
    "href": "api/Strade.Models.TeamMemberModel.html",
    "title": "Class TeamMemberModel | Strade Developer Documentation",
    "keywords": "Class TeamMemberModel Inheritance Object TeamMemberModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class TeamMemberModel Properties | Improve this Doc View Source MembershipStatus Gets or sets the membership status of the team member. Declaration [JsonPropertyName(\"membership_state\")] public MembershipStatus MembershipStatus { get; set; } Property Value Type Description MembershipStatus the membership status of the team member. | Improve this Doc View Source Permissions Gets or sets the permissions set of the team member. Declaration [JsonPropertyName(\"permissions\")] public IReadOnlyList<string> Permissions { get; set; } Property Value Type Description IReadOnlyList < String > the permissions set of the team member. | Improve this Doc View Source TeamId Gets or sets the snowflake identifier of the team associated to. Declaration [JsonPropertyName(\"team_id\")] public Snowflake TeamId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the team associated to. | Improve this Doc View Source User Gets or sets the user information of the team member. Declaration [JsonPropertyName(\"user\")] public UserModel User { get; set; } Property Value Type Description UserModel the user information of the team member."
  },
  "api/Strade.Models.TeamModel.html": {
    "href": "api/Strade.Models.TeamModel.html",
    "title": "Class TeamModel | Strade Developer Documentation",
    "keywords": "Class TeamModel Inheritance Object TeamModel Implements IIdentifiable < Snowflake > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class TeamModel : IIdentifiable<Snowflake> Properties | Improve this Doc View Source IconHash Gets or sets the hash of the icon (if null , the team has no icon). Declaration [JsonPropertyName(\"icon\")] public string IconHash { get; set; } Property Value Type Description String the hash of the icon (if null , the team has no icon). | Improve this Doc View Source Id Gets or sets the team snowflake identifier. Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; set; } Property Value Type Description Snowflake the team snowflake identifier. | Improve this Doc View Source Members Gets or sets a list of the members in the team. Declaration [JsonPropertyName(\"members\")] public IReadOnlyList<TeamMemberModel> Members { get; set; } Property Value Type Description IReadOnlyList < TeamMemberModel > a list of the members in the team. | Improve this Doc View Source OwnerId Gets or sets the owner of the team. Declaration [JsonPropertyName(\"owner_user_id\")] public Snowflake OwnerId { get; set; } Property Value Type Description Snowflake the owner of the team. Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Models.UserConnectionModel.html": {
    "href": "api/Strade.Models.UserConnectionModel.html",
    "title": "Class UserConnectionModel | Strade Developer Documentation",
    "keywords": "Class UserConnectionModel Inheritance Object UserConnectionModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class UserConnectionModel Properties | Improve this Doc View Source Id Gets or sets the identifier of the connection account. Declaration [JsonPropertyName(\"id\")] public string Id { get; set; } Property Value Type Description String the identifier of the connection account. | Improve this Doc View Source IsFriendSynced Gets or sets a value indicating whether the connection has enabled friend sync. Declaration [JsonPropertyName(\"friend_sync\")] public bool IsFriendSynced { get; set; } Property Value Type Description Boolean a value indicating whether the connection has enabled friend sync. | Improve this Doc View Source IsRevoked Gets or sets a value indicating whether the connection access has been revoked. Declaration [JsonPropertyName(\"revoked\")] public bool IsRevoked { get; set; } Property Value Type Description Boolean a value indicating whether the connection access has been revoked. | Improve this Doc View Source IsVerified Gets or sets a value indicating whether the connection is verified. Declaration [JsonPropertyName(\"verified\")] public bool IsVerified { get; set; } Property Value Type Description Boolean a value indicating whether the connection is verified. | Improve this Doc View Source Name Gets or sets the name of the connection account. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the name of the connection account. | Improve this Doc View Source ShowsActivity Gets or sets a value indicating whether the connection shows activities related to the connection in presence updates. Declaration [JsonPropertyName(\"show_activity\")] public bool ShowsActivity { get; set; } Property Value Type Description Boolean a value indicating whether the connection shows activities related to the connection in presence updates. | Improve this Doc View Source Type Gets or sets the type of the service (e.g. \"twitch\" or \"youtube\" ). Declaration [JsonPropertyName(\"type\")] public string Type { get; set; } Property Value Type Description String the type of the service (e.g. \"twitch\" or \"youtube\" ). | Improve this Doc View Source Visibility Gets or sets the connection visibility. Declaration [JsonPropertyName(\"visibility\")] public ConnectionVisibility Visibility { get; set; } Property Value Type Description ConnectionVisibility the connection visibility."
  },
  "api/Strade.Models.UserGatewayInformationModel.html": {
    "href": "api/Strade.Models.UserGatewayInformationModel.html",
    "title": "Class UserGatewayInformationModel | Strade Developer Documentation",
    "keywords": "Class UserGatewayInformationModel Holds the information about how to connect to the gateway (for bots and clients). Inheritance Object UserGatewayInformationModel BotGatewayInformationModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public class UserGatewayInformationModel Properties | Improve this Doc View Source Uri Gets or sets the WebSocket URI endpoint for the discord gateway to connect to. Declaration [JsonPropertyName(\"url\")] public string Uri { get; set; } Property Value Type Description String the WebSocket URI endpoint for the discord gateway to connect to."
  },
  "api/Strade.Models.UserGuildInformationModel.html": {
    "href": "api/Strade.Models.UserGuildInformationModel.html",
    "title": "Class UserGuildInformationModel | Strade Developer Documentation",
    "keywords": "Class UserGuildInformationModel Inheritance Object UserGuildInformationModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class UserGuildInformationModel Properties | Improve this Doc View Source Features Declaration [JsonPropertyName(\"features\")] public IReadOnlyList<string> Features { get; set; } Property Value Type Description IReadOnlyList < String > | Improve this Doc View Source Icon Declaration [JsonPropertyName(\"icon\")] public string Icon { get; set; } Property Value Type Description String | Improve this Doc View Source Id Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; set; } Property Value Type Description Snowflake | Improve this Doc View Source IsOwner Declaration [JsonPropertyName(\"owner\")] public bool IsOwner { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Name Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Permissions Declaration [JsonPropertyName(\"permissions\")] public PermissionSet Permissions { get; set; } Property Value Type Description PermissionSet"
  },
  "api/Strade.Models.UserModel.html": {
    "href": "api/Strade.Models.UserModel.html",
    "title": "Class UserModel | Strade Developer Documentation",
    "keywords": "Class UserModel Represents an user object. Inheritance Object UserModel MentionModel Implements IIdentifiable < Snowflake > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public class UserModel : IIdentifiable<Snowflake> Remarks More details can be found on https://discord.com/developers/docs/resources/user#user-object-user-structure [external, Discord Developer Documentation]. Properties | Improve this Doc View Source Avatar Gets or sets the hash of the avatar (if null , the user has no avatar). Declaration [JsonPropertyName(\"avatar\")] public string Avatar { get; set; } Property Value Type Description String the hash of the avatar (if null , the user has no avatar). | Improve this Doc View Source Discriminator Gets or sets the user's discriminator. Declaration [JsonPropertyName(\"discriminator\")] public string Discriminator { get; set; } Property Value Type Description String the user's discriminator. | Improve this Doc View Source EmailAddress Gets or sets the user's email address; or null if the e-mail address is not available. Declaration [JsonPropertyName(\"email\")] public string EmailAddress { get; set; } Property Value Type Description String the user's email address; or null if the e-mail address is not available. | Improve this Doc View Source Flags Gets or sets the user flags. Declaration [JsonPropertyName(\"flags\")] public UserFlags Flags { get; set; } Property Value Type Description UserFlags the user flags. See Also PublicFlags | Improve this Doc View Source Id Gets or sets the snowflake identifier of the user. Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; set; } Property Value Type Description Snowflake the snowflake identifier of the user. | Improve this Doc View Source IsBot Gets or sets a value indicating whether the user is a bot. Declaration [JsonPropertyName(\"bot\")] public bool IsBot { get; set; } Property Value Type Description Boolean a value indicating whether the user is a bot. | Improve this Doc View Source IsMultiFactorAuthenticationEnabled Gets or sets a value indicating whether multi-factor authentication is enabled on the user. Declaration [JsonPropertyName(\"mfa_enabled\")] public bool IsMultiFactorAuthenticationEnabled { get; set; } Property Value Type Description Boolean a value indicating whether multi-factor authentication is enabled on the user. | Improve this Doc View Source IsSystem Gets or sets a value indicating whether the user is a system user. Declaration [JsonPropertyName(\"system\")] public bool IsSystem { get; set; } Property Value Type Description Boolean a value indicating whether the user is a system user. | Improve this Doc View Source IsVerified Gets or sets a value indicating whether the user's email is verified. Declaration [JsonPropertyName(\"verified\")] public bool IsVerified { get; set; } Property Value Type Description Boolean a value indicating whether the user's email is verified. | Improve this Doc View Source Locale Gets or sets the user's locale setting. Declaration [JsonPropertyName(\"locale\")] public string Locale { get; set; } Property Value Type Description String the user's locale setting. | Improve this Doc View Source PremiumType Gets or sets the type of the Discord nitro subscription on the user's account. Declaration [JsonPropertyName(\"premium_type\")] public PremiumType PremiumType { get; set; } Property Value Type Description PremiumType the type of the Discord nitro subscription on the user's account. | Improve this Doc View Source PublicFlags Gets or sets the public user flags. Declaration [JsonPropertyName(\"public_flags\")] public UserFlags PublicFlags { get; set; } Property Value Type Description UserFlags the public user flags. See Also Flags | Improve this Doc View Source Username Gets or sets the username of the user. Declaration [JsonPropertyName(\"username\")] public string Username { get; set; } Property Value Type Description String the username of the user. Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Models.UserPlatformStatusModel.html": {
    "href": "api/Strade.Models.UserPlatformStatusModel.html",
    "title": "Class UserPlatformStatusModel | Strade Developer Documentation",
    "keywords": "Class UserPlatformStatusModel Inheritance Object UserPlatformStatusModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.dll Syntax public sealed class UserPlatformStatusModel Properties | Improve this Doc View Source Desktop Gets or sets the user's status set for an active desktop (Windows, Linux, Mac) application session. Declaration [JsonPropertyName(\"desktop\")] public UserStatus? Desktop { get; set; } Property Value Type Description Nullable < UserStatus > the user's status set for an active desktop (Windows, Linux, Mac) application session. | Improve this Doc View Source Mobile Gets or sets the user's status set for an active mobile (iOS, Android) application session. Declaration [JsonPropertyName(\"mobile\")] public UserStatus? Mobile { get; set; } Property Value Type Description Nullable < UserStatus > the user's status set for an active mobile (iOS, Android) application session. | Improve this Doc View Source Web Gets or sets the user's status set for an active web (browser, bot account) application session. Declaration [JsonPropertyName(\"web\")] public UserStatus? Web { get; set; } Property Value Type Description Nullable < UserStatus > the user's status set for an active web (browser, bot account) application session."
  },
  "api/Strade.Models.VanityInviteModel.html": {
    "href": "api/Strade.Models.VanityInviteModel.html",
    "title": "Class VanityInviteModel | Strade Developer Documentation",
    "keywords": "Class VanityInviteModel Represents the structure of a vanity invite. Inheritance Object VanityInviteModel Implements IIdentifiable < String > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class VanityInviteModel : IIdentifiable<string> Remarks More details can be found on https://discord.com/developers/docs/resources/invite#invite-object [external, Discord Developer Documentation]. Properties | Improve this Doc View Source Code Gets or sets the invitation code. Declaration [JsonPropertyName(\"code\")] public string Code { get; set; } Property Value Type Description String the invitation code; or null if the vanity invite is not enabled in the guild. | Improve this Doc View Source Uses Gets or sets the number of times the vanity invite was used. Declaration [JsonPropertyName(\"uses\")] public int Uses { get; set; } Property Value Type Description Int32 the number of times the vanity invite was used. Explicit Interface Implementations | Improve this Doc View Source IIdentifiable<String>.Id Declaration string IIdentifiable<string>.Id { get; } Returns Type Description String Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Models.VoiceRegionModel.html": {
    "href": "api/Strade.Models.VoiceRegionModel.html",
    "title": "Class VoiceRegionModel | Strade Developer Documentation",
    "keywords": "Class VoiceRegionModel Represents a discord voice region. Inheritance Object VoiceRegionModel Implements IIdentifiable < String > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class VoiceRegionModel : IIdentifiable<string> Remarks More details can be found on https://discord.com/developers/docs/resources/voice#voice-region-object-voice-region-structure [external, Discord Developer Documentation]. Properties | Improve this Doc View Source Id Gets or sets the voice region identifier. Declaration [JsonPropertyName(\"id\")] public string Id { get; set; } Property Value Type Description String the voice region identifier. | Improve this Doc View Source IsCustom Gets or sets a value indicating whether the voice region is a custom voice region (used for events, etc.). Declaration [JsonPropertyName(\"custom\")] public bool IsCustom { get; set; } Property Value Type Description Boolean a value indicating whether the voice region is a custom voice region (used for events, etc.) | Improve this Doc View Source IsDeprecated Gets or sets a value indicating whether the voice region is deprecated and should not be used. Declaration [JsonPropertyName(\"deprecated\")] public bool IsDeprecated { get; set; } Property Value Type Description Boolean a value indicating whether the voice region is deprecated and should not be used. | Improve this Doc View Source IsOptimal Gets or sets a value indicating whether the voice region is the closest to the current user's client. Declaration [JsonPropertyName(\"optimal\")] public bool IsOptimal { get; set; } Property Value Type Description Boolean a value indicating whether the voice region is the closest to the current user's client. | Improve this Doc View Source IsVIP Gets or sets a value indicating whether the voice region is VIP-only server. Declaration [JsonPropertyName(\"vip\")] public bool IsVIP { get; set; } Property Value Type Description Boolean a value indicating whether the voice region is VIP-only server. | Improve this Doc View Source Name Gets or sets the name of the voice region. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the name of the voice region. Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Models.VoiceServerModel.html": {
    "href": "api/Strade.Models.VoiceServerModel.html",
    "title": "Class VoiceServerModel | Strade Developer Documentation",
    "keywords": "Class VoiceServerModel Represents a voice server. Inheritance Object VoiceServerModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Models Assembly : Strade.dll Syntax public sealed class VoiceServerModel Properties | Improve this Doc View Source Endpoint Gets or sets the DNS hostname of the discord voice server; or null to indicate that discord is currently acquiring a new voice server for the client's session. Declaration [JsonPropertyName(\"endpoint\")] public string Endpoint { get; set; } Property Value Type Description String the DNS hostname of the discord voice server; or null to indicate that discord is currently acquiring a new voice server for the client's session. | Improve this Doc View Source GuildId Gets or sets the guild identifier the voice server is for. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake GuildId { get; set; } Property Value Type Description Snowflake the guild identifier the voice server is for. | Improve this Doc View Source Token Gets or sets the voice connection token; or null to indicate that discord is currently acquiring a new voice server for the client's session. Declaration [JsonPropertyName(\"token\")] public string Token { get; set; } Property Value Type Description String the voice connection token; or null to indicate that discord is currently acquiring a new voice server for the client's session. Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Strade.Models.VoiceStateModel.html": {
    "href": "api/Strade.Models.VoiceStateModel.html",
    "title": "Class VoiceStateModel | Strade Developer Documentation",
    "keywords": "Class VoiceStateModel Represents a voice state object. Inheritance Object VoiceStateModel Implements IIdentifiable < Snowflake > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class VoiceStateModel : IIdentifiable<Snowflake> Remarks More details can be found on https://discord.com/developers/docs/resources/voice#voice-state-object-voice-state-structure [external, Discord Developer Documentation]. Properties | Improve this Doc View Source ChannelId Gets or sets the snowflake identifier of the voice channel the user connected to. Declaration [JsonPropertyName(\"channel_id\")] public Snowflake? ChannelId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the voice channel the user connected to. Remarks If null or 0 then the client is in no voice channel. | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the guild bound to. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake? GuildId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the guild bound to. | Improve this Doc View Source IsDeafened Gets or sets a value indicating whether the user the voice state is for is server / global deafened. Declaration [JsonPropertyName(\"deaf\")] public bool IsDeafened { get; set; } Property Value Type Description Boolean a value indicating whether the user the voice state is for is server / global deafened. | Improve this Doc View Source IsMuted Gets or sets a value indicating whether the user the voice state is for is server / global muted. Declaration [JsonPropertyName(\"mute\")] public bool IsMuted { get; set; } Property Value Type Description Boolean a value indicating whether the user the voice state is for is server / global muted. | Improve this Doc View Source IsSelfDeafened Gets or sets a value indicating whether the user the voice state is for is local deafened. Declaration [JsonPropertyName(\"self_deaf\")] public bool IsSelfDeafened { get; set; } Property Value Type Description Boolean a value indicating whether the user the voice state is for is local deafened. | Improve this Doc View Source IsSelfMuted Gets or sets a value indicating whether the user the voice state is for is local muted. Declaration [JsonPropertyName(\"self_mute\")] public bool IsSelfMuted { get; set; } Property Value Type Description Boolean a value indicating whether the user the voice state is for is local muted. | Improve this Doc View Source IsStreaming Gets or sets a value indicating whether the user the voice state is for is streaming. Declaration [JsonPropertyName(\"self_stream\")] public bool? IsStreaming { get; set; } Property Value Type Description Nullable < Boolean > a value indicating whether the user the voice state is for is streaming. | Improve this Doc View Source IsSuppressed Gets or sets a value indicating whether the user the voice state is for is muted by the actual bot / user client. Declaration [JsonPropertyName(\"suppress\")] public bool IsSuppressed { get; set; } Property Value Type Description Boolean a value indicating whether the user the voice state is for is muted by the actual bot / user client. | Improve this Doc View Source Member Gets or sets the model of the member the voice state is for. Declaration [JsonPropertyName(\"member\")] public MemberModel Member { get; set; } Property Value Type Description MemberModel the model of the member the voice state is for. | Improve this Doc View Source SessionId Gets or sets the voice state session identifier. Declaration [JsonPropertyName(\"session_id\")] public string SessionId { get; set; } Property Value Type Description String the voice state session identifier. | Improve this Doc View Source UserId Gets or sets the snowflake identifier of the user the voice state is for. Declaration [JsonPropertyName(\"user_id\")] public Snowflake UserId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the user the voice state is for. Explicit Interface Implementations | Improve this Doc View Source IIdentifiable<Snowflake>.Id Declaration Snowflake IIdentifiable<Snowflake>.Id { get; } Returns Type Description Snowflake Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Models.WebhookModel.html": {
    "href": "api/Strade.Models.WebhookModel.html",
    "title": "Class WebhookModel | Strade Developer Documentation",
    "keywords": "Class WebhookModel Represents a webhook model. Inheritance Object WebhookModel Implements IIdentifiable < Snowflake > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Models Assembly : Strade.Rest.dll Syntax public sealed class WebhookModel : IIdentifiable<Snowflake> Remarks More details can be found on https://discord.com/developers/docs/resources/webhook#webhook-object-webhook-structure [external, Discord Developer Documentation]. Properties | Improve this Doc View Source Avatar Gets or sets the avatar hash of the Webhook. Declaration [JsonPropertyName(\"avatar\")] public string Avatar { get; set; } Property Value Type Description String the avatar hash of the Webhook. | Improve this Doc View Source ChannelId Gets or sets the snowflake identifier of the channel bound to. Declaration [JsonPropertyName(\"channel_id\")] public Snowflake ChannelId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the channel bound to. | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the guild bound to. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake? GuildId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the guild bound to. | Improve this Doc View Source Id Gets or sets the webhook identifier. Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; set; } Property Value Type Description Snowflake the webhook identifier. | Improve this Doc View Source Name Gets or sets the name of the webhook. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the name of the webhook. | Improve this Doc View Source Token Gets or sets the secure token of the webhook. Declaration [JsonPropertyName(\"token\")] public string Token { get; set; } Property Value Type Description String the secure token of the webhook. | Improve this Doc View Source Type Gets or sets the type of the Webhook. Declaration [JsonPropertyName(\"type\")] public WebhookType Type { get; set; } Property Value Type Description WebhookType the type of the Webhook. | Improve this Doc View Source User Gets or sets the model of the user that created the webhook. Declaration [JsonPropertyName(\"user\")] public UserModel User { get; set; } Property Value Type Description UserModel the model of the user that created the webhook. Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.OAuth2.DiscordClaimTypes.html": {
    "href": "api/Strade.OAuth2.DiscordClaimTypes.html",
    "title": "Class DiscordClaimTypes | Strade Developer Documentation",
    "keywords": "Class DiscordClaimTypes Holds the discord-specific claim types. Inheritance Object DiscordClaimTypes Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.OAuth2 Assembly : Strade.OAuth2.dll Syntax public static class DiscordClaimTypes Fields | Improve this Doc View Source AvatarHash The avatar hash of the user. Declaration public const string AvatarHash = \"urn:discord:avatar\" Field Value Type Description String Remarks Retrieved from the avatar key. | Improve this Doc View Source Discriminator The discriminator of the user. Declaration public const string Discriminator = \"urn:discord:discriminator\" Field Value Type Description String Remarks Retrieved from the discriminator key. | Improve this Doc View Source Verification The verified of the user. Declaration public const string Verification = \"urn:discord:verified\" Field Value Type Description String Remarks Retrieved from the verified key."
  },
  "api/Strade.OAuth2.DiscordOAuthHandler.html": {
    "href": "api/Strade.OAuth2.DiscordOAuthHandler.html",
    "title": "Class DiscordOAuthHandler | Strade Developer Documentation",
    "keywords": "Class DiscordOAuthHandler The discord OAuth2 authentication handler. Inheritance Object AuthenticationHandler < DiscordOAuthOptions > RemoteAuthenticationHandler < DiscordOAuthOptions > OAuthHandler < DiscordOAuthOptions > DiscordOAuthHandler Implements IAuthenticationRequestHandler IAuthenticationHandler Inherited Members OAuthHandler<DiscordOAuthOptions>.CreateEventsAsync() OAuthHandler<DiscordOAuthOptions>.HandleRemoteAuthenticateAsync() OAuthHandler<DiscordOAuthOptions>.ExchangeCodeAsync(String, String) OAuthHandler<DiscordOAuthOptions>.CreateTicketAsync(ClaimsIdentity, AuthenticationProperties, OAuthTokenResponse) OAuthHandler<DiscordOAuthOptions>.HandleChallengeAsync(AuthenticationProperties) OAuthHandler<DiscordOAuthOptions>.BuildChallengeUrl(AuthenticationProperties, String) OAuthHandler<DiscordOAuthOptions>.FormatScope(IEnumerable<String>) OAuthHandler<DiscordOAuthOptions>.FormatScope() OAuthHandler<DiscordOAuthOptions>.Backchannel OAuthHandler<DiscordOAuthOptions>.Events RemoteAuthenticationHandler<DiscordOAuthOptions>.ShouldHandleRequestAsync() RemoteAuthenticationHandler<DiscordOAuthOptions>.HandleRequestAsync() RemoteAuthenticationHandler<DiscordOAuthOptions>.HandleAuthenticateAsync() RemoteAuthenticationHandler<DiscordOAuthOptions>.HandleForbiddenAsync(AuthenticationProperties) RemoteAuthenticationHandler<DiscordOAuthOptions>.GenerateCorrelationId(AuthenticationProperties) RemoteAuthenticationHandler<DiscordOAuthOptions>.ValidateCorrelationId(AuthenticationProperties) RemoteAuthenticationHandler<DiscordOAuthOptions>.SignInScheme AuthenticationHandler<DiscordOAuthOptions>.InitializeAsync(AuthenticationScheme, HttpContext) AuthenticationHandler<DiscordOAuthOptions>.InitializeEventsAsync() AuthenticationHandler<DiscordOAuthOptions>.InitializeHandlerAsync() AuthenticationHandler<DiscordOAuthOptions>.BuildRedirectUri(String) AuthenticationHandler<DiscordOAuthOptions>.ResolveTarget(String) AuthenticationHandler<DiscordOAuthOptions>.AuthenticateAsync() AuthenticationHandler<DiscordOAuthOptions>.HandleAuthenticateOnceAsync() AuthenticationHandler<DiscordOAuthOptions>.HandleAuthenticateOnceSafeAsync() AuthenticationHandler<DiscordOAuthOptions>.ChallengeAsync(AuthenticationProperties) AuthenticationHandler<DiscordOAuthOptions>.ForbidAsync(AuthenticationProperties) AuthenticationHandler<DiscordOAuthOptions>.Scheme AuthenticationHandler<DiscordOAuthOptions>.Options AuthenticationHandler<DiscordOAuthOptions>.Context AuthenticationHandler<DiscordOAuthOptions>.Request AuthenticationHandler<DiscordOAuthOptions>.Response AuthenticationHandler<DiscordOAuthOptions>.OriginalPath AuthenticationHandler<DiscordOAuthOptions>.OriginalPathBase AuthenticationHandler<DiscordOAuthOptions>.Logger AuthenticationHandler<DiscordOAuthOptions>.UrlEncoder AuthenticationHandler<DiscordOAuthOptions>.Clock AuthenticationHandler<DiscordOAuthOptions>.OptionsMonitor AuthenticationHandler<DiscordOAuthOptions>.ClaimsIssuer AuthenticationHandler<DiscordOAuthOptions>.CurrentUri Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.OAuth2 Assembly : Strade.OAuth2.dll Syntax public sealed class DiscordOAuthHandler : OAuthHandler<DiscordOAuthOptions>, IAuthenticationRequestHandler, IAuthenticationHandler Constructors | Improve this Doc View Source DiscordOAuthHandler(IOptionsMonitor<DiscordOAuthOptions>, ILoggerFactory, UrlEncoder, ISystemClock) Initializes a new instance of the DiscordOAuthHandler class. Declaration public DiscordOAuthHandler(IOptionsMonitor<DiscordOAuthOptions> options, ILoggerFactory logger, UrlEncoder encoder, ISystemClock clock) Parameters Type Name Description IOptionsMonitor < DiscordOAuthOptions > options the options monitor. ILoggerFactory logger the logger factory. UrlEncoder encoder the URL encoder. ISystemClock clock the system clock. Fields | Improve this Doc View Source AuthenticationScheme The authentication scheme name. Declaration public const string AuthenticationScheme = \"Discord\" Field Value Type Description String | Improve this Doc View Source DisplayName The authentication display name. Declaration public const string DisplayName = \"Discord\" Field Value Type Description String Implements Microsoft.AspNetCore.Authentication.IAuthenticationRequestHandler Microsoft.AspNetCore.Authentication.IAuthenticationHandler"
  },
  "api/Strade.OAuth2.DiscordOAuthOptions.html": {
    "href": "api/Strade.OAuth2.DiscordOAuthOptions.html",
    "title": "Class DiscordOAuthOptions | Strade Developer Documentation",
    "keywords": "Class DiscordOAuthOptions The OAuthOptions for discord OAuth2 authentication. Inheritance Object AuthenticationSchemeOptions RemoteAuthenticationOptions OAuthOptions DiscordOAuthOptions Inherited Members OAuthOptions.Validate() OAuthOptions.ClientId OAuthOptions.ClientSecret OAuthOptions.AuthorizationEndpoint OAuthOptions.TokenEndpoint OAuthOptions.UserInformationEndpoint OAuthOptions.Events OAuthOptions.ClaimActions OAuthOptions.Scope OAuthOptions.StateDataFormat RemoteAuthenticationOptions.Validate(String) RemoteAuthenticationOptions.BackchannelTimeout RemoteAuthenticationOptions.BackchannelHttpHandler RemoteAuthenticationOptions.Backchannel RemoteAuthenticationOptions.DataProtectionProvider RemoteAuthenticationOptions.CallbackPath RemoteAuthenticationOptions.SignInScheme RemoteAuthenticationOptions.RemoteAuthenticationTimeout RemoteAuthenticationOptions.SaveTokens RemoteAuthenticationOptions.CorrelationCookie AuthenticationSchemeOptions.ClaimsIssuer AuthenticationSchemeOptions.EventsType AuthenticationSchemeOptions.ForwardDefault AuthenticationSchemeOptions.ForwardAuthenticate AuthenticationSchemeOptions.ForwardChallenge AuthenticationSchemeOptions.ForwardForbid AuthenticationSchemeOptions.ForwardSignIn AuthenticationSchemeOptions.ForwardSignOut AuthenticationSchemeOptions.ForwardDefaultSelector Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.OAuth2 Assembly : Strade.OAuth2.dll Syntax public class DiscordOAuthOptions : OAuthOptions Constructors | Improve this Doc View Source DiscordOAuthOptions() Initializes a new instance of the DiscordOAuthOptions class. Declaration public DiscordOAuthOptions() Fields | Improve this Doc View Source AuthorizationTokenEndpoint The OAuth2 authorization token endpoint. Declaration public const string AuthorizationTokenEndpoint = \"https://discord.com/api/oauth2/token\" Field Value Type Description String | Improve this Doc View Source AuthorizeEndpoint The OAuth2 authorization endpoint. Declaration public const string AuthorizeEndpoint = \"https://discord.com/api/oauth2/authorize\" Field Value Type Description String | Improve this Doc View Source BaseEndpoint The base discord endpoint. Declaration public const string BaseEndpoint = \"https://discord.com/api/\" Field Value Type Description String | Improve this Doc View Source UserEndpoint The user information endpoint. Declaration public const string UserEndpoint = \"https://discord.com/api/users/@me\" Field Value Type Description String"
  },
  "api/Strade.OAuth2.html": {
    "href": "api/Strade.OAuth2.html",
    "title": "Namespace Strade.OAuth2 | Strade Developer Documentation",
    "keywords": "Namespace Strade.OAuth2 Classes DiscordClaimTypes Holds the discord-specific claim types. DiscordOAuthHandler The discord OAuth2 authentication handler. DiscordOAuthOptions The OAuthOptions for discord OAuth2 authentication."
  },
  "api/Strade.OAuth2Scope.html": {
    "href": "api/Strade.OAuth2Scope.html",
    "title": "Class OAuth2Scope | Strade Developer Documentation",
    "keywords": "Class OAuth2Scope Constants for the discord's OAuth2 authorization scopes (see https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes for more details). Inheritance Object OAuth2Scope Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade Assembly : Strade.Rest.dll Syntax public static class OAuth2Scope Fields | Improve this Doc View Source ApplicationCommands The \"application.commands\" OAuth2 scope: Allows the application to use slash commands in a guild. ( See https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes for more details). Declaration public const string ApplicationCommands = \"application.commands\" Field Value Type Description String | Improve this Doc View Source Bot The \"bot\" OAuth2 scope: For OAuth2 bots, this scope puts the bot in the user's selected guild [the user is prompted to select a guild in the authorization modal] ( See https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes for more details). Declaration public const string Bot = \"bot\" Field Value Type Description String | Improve this Doc View Source Connections The \"connections\" OAuth2 scope: Allows to retrieve a user's connections (from the /users/@me/connections RESTful HTTP API endpoint) ( See https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes for more details). Declaration public const string Connections = \"connections\" Field Value Type Description String | Improve this Doc View Source Email The \"email\" OAuth2 scope: Allows to retrieve a user's email address (from the /users/@me endpoint) ( See https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes for more details). Declaration public const string Email = \"email\" Field Value Type Description String | Improve this Doc View Source GroupDmJoin The \"gdm.join\" OAuth2 scope: Allows the application to join authorized users to a group direct message channel (using the /channels/{channel.id}/recipients/{user.id} RESTful HTTP API endpoint) ( See https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes for more details). Declaration public const string GroupDmJoin = \"gdm.join\" Field Value Type Description String | Improve this Doc View Source Guilds The \"guilds\" OAuth2 scope: Allows to retrieve basic information about all of a user's guilds (from the /users/@me/guilds RESTful HTTP API endpoint) ( See https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes for more details). Declaration public const string Guilds = \"guilds\" Field Value Type Description String | Improve this Doc View Source GuildsJoin The \"guilds.join\" OAuth2 scope: Allows /guilds/{guild_id}/members/{user.id} to be used for joining users to a guild ( See https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes for more details). Declaration public const string GuildsJoin = \"guilds.join\" Field Value Type Description String | Improve this Doc View Source Identify The \"identify\" OAuth2 scope: Allows to retrieve a user's identity (without email address [ Email ], from the /users/@me endpoint) ( See https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes for more details). Declaration public const string Identify = \"identify\" Field Value Type Description String | Improve this Doc View Source ReadActivities The \"activities.read\" OAuth2 scope: This scope allows the application to fetch data from a user's \"Now Playing/Recently Played\" list ( See https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes for more details). Declaration public const string ReadActivities = \"activities.read\" Field Value Type Description String | Improve this Doc View Source ReadApplicationBuilds The \"applications.builds.read\" OAuth2 scope: This scopes allows the application to read build data for a user's application ( See https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes for more details). Declaration public const string ReadApplicationBuilds = \"applications.builds.read\" Field Value Type Description String | Improve this Doc View Source ReadApplicationEntitlements The \"applications.entitlements\" OAuth2 scope: This scopes allows the application to read entitlements for a user's applications ( See https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes for more details). Declaration public const string ReadApplicationEntitlements = \"applications.entitlements\" Field Value Type Description String | Improve this Doc View Source ReadMessages The \"messages.read\" OAuth2 scope: Used for local RPC server access, allows the application to read messages from all channels (if the application is not authorized with the scope then the application can only access guilds and channels the application has created) ( See https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes for more details). Declaration public const string ReadMessages = \"messages.read\" Field Value Type Description String | Improve this Doc View Source ReadRelationships The \"relationships.read\" OAuth2 scope: This scope allows the application to know a user's friends and implicit relationships ( See https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes for more details). Declaration public const string ReadRelationships = \"relationships.read\" Field Value Type Description String | Improve this Doc View Source Rpc The \"rpc\" OAuth2 scope: Used for local RPC server access, allows to control a user's discord client over a RPC connection) ( See https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes for more details). Declaration public const string Rpc = \"rpc\" Field Value Type Description String | Improve this Doc View Source RpcApi The \"rpc.api\" OAuth2 scope: Used for local RPC server access, allows the application to send proxied API requests to the RESTful HTTP discord API authorized as the RPC user ( See https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes for more details). Declaration public const string RpcApi = \"rpc.api\" Field Value Type Description String | Improve this Doc View Source RpcReadNotifications The \"rpc.notifications.read\" OAuth2 scope: Used for local RPC server access, allows the application to receive notifications pushed out to the user (not available when using RPC token authorization) ( See https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes for more details). Declaration public const string RpcReadNotifications = \"rpc.notifications.read\" Field Value Type Description String | Improve this Doc View Source UpdateApplicationCommands The \"application.commands.update\" OAuth2 scope: Allows the application to update slash commands via the bearer token. ( See https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes for more details). Declaration public const string UpdateApplicationCommands = \"application.commands.update\" Field Value Type Description String | Improve this Doc View Source UpdateApplicationStore The \"applications.store.update\" OAuth2 scope: This scopes allows the application to read and update store data (SKUs, store listings, achievements, etc.) for a user's applications ( See https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes for more details). Declaration public const string UpdateApplicationStore = \"applications.store.update\" Field Value Type Description String | Improve this Doc View Source UploadApplicationBuilds The \"applications.builds.upload\" OAuth2 scope: This scopes allows the application to upload/update builds for a user's application ( See https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes for more details). Declaration public const string UploadApplicationBuilds = \"applications.builds.upload\" Field Value Type Description String | Improve this Doc View Source Webhook The \"webhook.incoming\" OAuth2 scope: This scopes generates a webhook URL that is returned in the OAuth token response for authorization code grants ( See https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes for more details). Declaration public const string Webhook = \"webhook.incoming\" Field Value Type Description String | Improve this Doc View Source WriteActivities The \"activities.write\" OAuth2 scope: This scope allows your application to update a user's activity (Note: This scope is not required when using RPC) ( See https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes for more details). Declaration public const string WriteActivities = \"activities.write\" Field Value Type Description String"
  },
  "api/Strade.PayloadHandler.html": {
    "href": "api/Strade.PayloadHandler.html",
    "title": "Class PayloadHandler | Strade Developer Documentation",
    "keywords": "Class PayloadHandler Inheritance Object PayloadHandler Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade Assembly : Strade.dll Syntax public class PayloadHandler Methods | Improve this Doc View Source HandleChannelCreateEventAsync(ChannelModel) Handles the CHANNEL_CREATE event asynchronously. Declaration public virtual ValueTask HandleChannelCreateEventAsync(ChannelModel payload) Parameters Type Name Description ChannelModel payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleChannelDeleteEventAsync(ChannelModel) Handles the CHANNEL_DELETE event asynchronously. Declaration public virtual ValueTask HandleChannelDeleteEventAsync(ChannelModel payload) Parameters Type Name Description ChannelModel payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleChannelPinsUpdateEventAsync(ChannelPinsUpdateEvent) Handles the CHANNEL_PINS_UPDATE event asynchronously. Declaration public virtual ValueTask HandleChannelPinsUpdateEventAsync(ChannelPinsUpdateEvent payload) Parameters Type Name Description ChannelPinsUpdateEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleChannelUpdateEventAsync(ChannelModel) Handles the CHANNEL_UPDATE event asynchronously. Declaration public virtual ValueTask HandleChannelUpdateEventAsync(ChannelModel payload) Parameters Type Name Description ChannelModel payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildBanAddEventAsync(GuildBanAddEvent) Handles the GUILD_BAN_ADD event asynchronously. Declaration public virtual ValueTask HandleGuildBanAddEventAsync(GuildBanAddEvent payload) Parameters Type Name Description GuildBanAddEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildBanRemoveEventAsync(GuildBanRemoveEvent) Handles the GUILD_BAN_REMOVE event asynchronously. Declaration public virtual ValueTask HandleGuildBanRemoveEventAsync(GuildBanRemoveEvent payload) Parameters Type Name Description GuildBanRemoveEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildCreateEventAsync(GuildModel) Handles the GUILD_CREATE event asynchronously. Declaration public virtual ValueTask HandleGuildCreateEventAsync(GuildModel payload) Parameters Type Name Description GuildModel payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildDeleteEventAsync(UnavailableGuildInformation) Handles the GUILD_DELETE event asynchronously. Declaration public virtual ValueTask HandleGuildDeleteEventAsync(UnavailableGuildInformation payload) Parameters Type Name Description UnavailableGuildInformation payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildEmojisUpdateEventAsync(GuildEmojisUpdateEvent) Handles the GUILD_EMOJIS_UPDATE event asynchronously. Declaration public virtual ValueTask HandleGuildEmojisUpdateEventAsync(GuildEmojisUpdateEvent payload) Parameters Type Name Description GuildEmojisUpdateEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildIntegrationsUpdateEventAsync(GuildIntegrationsUpdateEvent) Handles the GUILD_INTEGRATIONS_UPDATE event asynchronously. Declaration public virtual ValueTask HandleGuildIntegrationsUpdateEventAsync(GuildIntegrationsUpdateEvent payload) Parameters Type Name Description GuildIntegrationsUpdateEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildMemberAddEventAsync(GuildMemberAddEvent) Handles the GUILD_MEMBER_ADD event asynchronously. Declaration public virtual ValueTask HandleGuildMemberAddEventAsync(GuildMemberAddEvent payload) Parameters Type Name Description GuildMemberAddEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildMemberRemoveEventAsync(GuildMemberRemoveEvent) Handles the GUILD_MEMBER_REMOVE event asynchronously. Declaration public virtual ValueTask HandleGuildMemberRemoveEventAsync(GuildMemberRemoveEvent payload) Parameters Type Name Description GuildMemberRemoveEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildMembersChunkEventAsync(GuildMembersChunkEvent) Handles the GUILD_MEMBERS_CHUNK event asynchronously. Declaration public virtual ValueTask HandleGuildMembersChunkEventAsync(GuildMembersChunkEvent payload) Parameters Type Name Description GuildMembersChunkEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildMemberUpdateEventAsync(GuildMemberUpdateEvent) Handles the GUILD_MEMBER_UPDATE event asynchronously. Declaration public virtual ValueTask HandleGuildMemberUpdateEventAsync(GuildMemberUpdateEvent payload) Parameters Type Name Description GuildMemberUpdateEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildRoleCreateEventAsync(GuildRoleCreateEvent) Handles the GUILD_ROLE_CREATE event asynchronously. Declaration public virtual ValueTask HandleGuildRoleCreateEventAsync(GuildRoleCreateEvent payload) Parameters Type Name Description GuildRoleCreateEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildRoleDeleteEventAsync(GuildRoleDeleteEvent) Handles the GUILD_ROLE_DELETE event asynchronously. Declaration public virtual ValueTask HandleGuildRoleDeleteEventAsync(GuildRoleDeleteEvent payload) Parameters Type Name Description GuildRoleDeleteEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildRoleUpdateEventAsync(GuildRoleUpdateEvent) Handles the GUILD_ROLE_UPDATE event asynchronously. Declaration public virtual ValueTask HandleGuildRoleUpdateEventAsync(GuildRoleUpdateEvent payload) Parameters Type Name Description GuildRoleUpdateEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildUpdateEventAsync(GuildModel) Handles the GUILD_UPDATE event asynchronously. Declaration public virtual ValueTask HandleGuildUpdateEventAsync(GuildModel payload) Parameters Type Name Description GuildModel payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleInteractionCreateEventAsync(InteractionModel) Handles the INTERACTION_CREATE event asynchronously. Declaration public virtual ValueTask HandleInteractionCreateEventAsync(InteractionModel model) Parameters Type Name Description InteractionModel model the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleInviteCreateEventAsync(InviteCreateEvent) Handles the INVITE_CREATE event asynchronously. Declaration public virtual ValueTask HandleInviteCreateEventAsync(InviteCreateEvent payload) Parameters Type Name Description InviteCreateEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleInviteDeleteEventAsync(InviteDeleteEvent) Handles the INVITE_DELETE event asynchronously. Declaration public virtual ValueTask HandleInviteDeleteEventAsync(InviteDeleteEvent payload) Parameters Type Name Description InviteDeleteEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleMessageCreateEventAsync(MessageModel) Handles the MESSAGE_CREATE event asynchronously. Declaration public virtual ValueTask HandleMessageCreateEventAsync(MessageModel payload) Parameters Type Name Description MessageModel payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleMessageDeleteBulkEventAsync(MessageBulkDeleteEvent) Handles the MESSAGE_DELETE_BULK event asynchronously. Declaration public virtual ValueTask HandleMessageDeleteBulkEventAsync(MessageBulkDeleteEvent payload) Parameters Type Name Description MessageBulkDeleteEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleMessageDeleteEventAsync(MessageDeleteEvent) Handles the MESSAGE_DELETE event asynchronously. Declaration public virtual ValueTask HandleMessageDeleteEventAsync(MessageDeleteEvent payload) Parameters Type Name Description MessageDeleteEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleMessageReactionAddEventAsync(MessageReactionAddEvent) Handles the MESSAGE_REACTION_ADD event asynchronously. Declaration public virtual ValueTask HandleMessageReactionAddEventAsync(MessageReactionAddEvent payload) Parameters Type Name Description MessageReactionAddEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleMessageReactionRemoveAllEventAsync(MessageReactionRemoveAllEvent) Handles the MESSAGE_REACTION_REMOVE_ALL event asynchronously. Declaration public virtual ValueTask HandleMessageReactionRemoveAllEventAsync(MessageReactionRemoveAllEvent payload) Parameters Type Name Description MessageReactionRemoveAllEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleMessageReactionRemoveEmojiEventAsync(MessageReactionRemoveEmojiEvent) Handles the MESSAGE_REACTION_REMOVE_EMOJI event asynchronously. Declaration public virtual ValueTask HandleMessageReactionRemoveEmojiEventAsync(MessageReactionRemoveEmojiEvent payload) Parameters Type Name Description MessageReactionRemoveEmojiEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleMessageReactionRemoveEventAsync(MessageReactionRemoveEvent) Handles the MESSAGE_REACTION_REMOVE event asynchronously. Declaration public virtual ValueTask HandleMessageReactionRemoveEventAsync(MessageReactionRemoveEvent payload) Parameters Type Name Description MessageReactionRemoveEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleMessageUpdateEventAsync(MessageModel) Handles the MESSAGE_UPDATE event asynchronously. Declaration public virtual ValueTask HandleMessageUpdateEventAsync(MessageModel payload) Parameters Type Name Description MessageModel payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandlePresenceUpdateEventAsync(PresenceUpdateEvent) Handles the PRESENCE_UPDATE event asynchronously. Declaration public virtual ValueTask HandlePresenceUpdateEventAsync(PresenceUpdateEvent payload) Parameters Type Name Description PresenceUpdateEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleTypingStartEventAsync(TypingStartEvent) Handles the TYPING_START event asynchronously. Declaration public virtual ValueTask HandleTypingStartEventAsync(TypingStartEvent payload) Parameters Type Name Description TypingStartEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleUserUpdateEventAsync(UserModel) Handles the USER_UPDATE event asynchronously. Declaration public virtual ValueTask HandleUserUpdateEventAsync(UserModel payload) Parameters Type Name Description UserModel payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleVoiceServerUpdateEventAsync(VoiceServerModel) Handles the VOICE_SERVER_UPDATE event asynchronously. Declaration public virtual ValueTask HandleVoiceServerUpdateEventAsync(VoiceServerModel payload) Parameters Type Name Description VoiceServerModel payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleVoiceStateUpdateEventAsync(VoiceStateModel) Handles the VOICE_STATE_UPDATE event asynchronously. Declaration public virtual ValueTask HandleVoiceStateUpdateEventAsync(VoiceStateModel payload) Parameters Type Name Description VoiceStateModel payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleWebhookUpdateEventAsync(WebhooksUpdateEvent) Handles the WEBHOOK_UPDATE event asynchronously. Declaration public virtual ValueTask HandleWebhookUpdateEventAsync(WebhooksUpdateEvent payload) Parameters Type Name Description WebhooksUpdateEvent payload the event payload. Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source RouteEventAsync(ref Utf8JsonReader, ref PayloadSerializationContext) Declaration protected ValueTask RouteEventAsync(ref Utf8JsonReader jsonReader, ref PayloadSerializationContext serializationContext) Parameters Type Name Description Utf8JsonReader jsonReader PayloadSerializationContext serializationContext Returns Type Description ValueTask"
  },
  "api/Strade.Payloads.Events.ChannelPinsUpdateEvent.html": {
    "href": "api/Strade.Payloads.Events.ChannelPinsUpdateEvent.html",
    "title": "Class ChannelPinsUpdateEvent | Strade Developer Documentation",
    "keywords": "Class ChannelPinsUpdateEvent The payload for the Channel Pins Update event. Inheritance Object ChannelPinsUpdateEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class ChannelPinsUpdateEvent Remarks See https://discord.com/developers/docs/topics/gateway#channel-pins-update for more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source ChannelId Gets or sets the snowflake identifier of the affected channel. Declaration [JsonPropertyName(\"channel_id\")] public Snowflake ChannelId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the affected channel. | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the guild the message is in (if in a guild channel). Declaration [JsonPropertyName(\"guild_id\")] public Snowflake? GuildId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the guild the message is in (if in a guild channel)."
  },
  "api/Strade.Payloads.Events.GuildBanAddEvent.html": {
    "href": "api/Strade.Payloads.Events.GuildBanAddEvent.html",
    "title": "Class GuildBanAddEvent | Strade Developer Documentation",
    "keywords": "Class GuildBanAddEvent The payload for the Guild Ban Add event. Inheritance Object GuildBanAddEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class GuildBanAddEvent Remarks See https://discord.com/developers/docs/topics/gateway#guild-ban-add for more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source GuildId Gets the snowflake identifier of the guild the user was banned in. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake GuildId { get; } Property Value Type Description Snowflake the snowflake identifier of the guild the user was banned in. | Improve this Doc View Source User Gets the user that was banned from the guild. Declaration [JsonPropertyName(\"user\")] public UserModel User { get; } Property Value Type Description UserModel the user that was banned from the guild."
  },
  "api/Strade.Payloads.Events.GuildBanRemoveEvent.html": {
    "href": "api/Strade.Payloads.Events.GuildBanRemoveEvent.html",
    "title": "Class GuildBanRemoveEvent | Strade Developer Documentation",
    "keywords": "Class GuildBanRemoveEvent The payload for the Guild Ban Remove event. Inheritance Object GuildBanRemoveEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class GuildBanRemoveEvent Remarks See https://discord.com/developers/docs/topics/gateway#guild-ban-remove for more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the guild the user was unbanned in. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake GuildId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the guild the user was unbanned in. | Improve this Doc View Source User Gets or sets the user that was unbanned from the guild. Declaration [JsonPropertyName(\"user\")] public UserModel User { get; set; } Property Value Type Description UserModel the user that was unbanned from the guild."
  },
  "api/Strade.Payloads.Events.GuildEmojisUpdateEvent.html": {
    "href": "api/Strade.Payloads.Events.GuildEmojisUpdateEvent.html",
    "title": "Class GuildEmojisUpdateEvent | Strade Developer Documentation",
    "keywords": "Class GuildEmojisUpdateEvent The payload for the Guild Emojis Update event. Inheritance Object GuildEmojisUpdateEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class GuildEmojisUpdateEvent Remarks See https://discord.com/developers/docs/topics/gateway#guild-emojis-update for more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source Emotes Gets or sets a list that contains the new emotes. Declaration [JsonPropertyName(\"emojis\")] public IReadOnlyList<GuildEmote> Emotes { get; set; } Property Value Type Description IReadOnlyList < GuildEmote > a list that contains the new emotes. | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the affected guild. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake GuildId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the affected guild."
  },
  "api/Strade.Payloads.Events.GuildIntegrationsUpdateEvent.html": {
    "href": "api/Strade.Payloads.Events.GuildIntegrationsUpdateEvent.html",
    "title": "Class GuildIntegrationsUpdateEvent | Strade Developer Documentation",
    "keywords": "Class GuildIntegrationsUpdateEvent The payload for the Guild Integrations Updated event. Inheritance Object GuildIntegrationsUpdateEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class GuildIntegrationsUpdateEvent Remarks See https://discord.com/developers/docs/topics/gateway#guild-integrations-update for more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the guild whose integrations were updated. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake GuildId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the guild whose integrations were updated."
  },
  "api/Strade.Payloads.Events.GuildMemberAddEvent.html": {
    "href": "api/Strade.Payloads.Events.GuildMemberAddEvent.html",
    "title": "Class GuildMemberAddEvent | Strade Developer Documentation",
    "keywords": "Class GuildMemberAddEvent Inheritance Object MemberModel GuildMemberAddEvent Implements IIdentifiable < Snowflake > Inherited Members MemberModel.IsDeafened MemberModel.IsMuted MemberModel.JoinedAt MemberModel.Nickname MemberModel.PremiumSince MemberModel.RoleIds MemberModel.User MemberModel.IIdentifiable<Snowflake>.Id Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class GuildMemberAddEvent : MemberModel, IIdentifiable<Snowflake> Properties | Improve this Doc View Source GuildId Declaration [JsonPropertyName(\"guild_id\")] public Snowflake GuildId { get; set; } Property Value Type Description Snowflake Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Payloads.Events.GuildMemberRemoveEvent.html": {
    "href": "api/Strade.Payloads.Events.GuildMemberRemoveEvent.html",
    "title": "Class GuildMemberRemoveEvent | Strade Developer Documentation",
    "keywords": "Class GuildMemberRemoveEvent The payload for the Guild Member Remove event. Inheritance Object GuildMemberRemoveEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class GuildMemberRemoveEvent Remarks See https://discord.com/developers/docs/topics/gateway#guild-member-remove for more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the guild the user was banned in. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake GuildId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the guild the user was banned in. | Improve this Doc View Source User Gets or sets the user that was banned from the guild. Declaration [JsonPropertyName(\"user\")] public UserModel User { get; set; } Property Value Type Description UserModel the user that was banned from the guild."
  },
  "api/Strade.Payloads.Events.GuildMembersChunkEvent.html": {
    "href": "api/Strade.Payloads.Events.GuildMembersChunkEvent.html",
    "title": "Class GuildMembersChunkEvent | Strade Developer Documentation",
    "keywords": "Class GuildMembersChunkEvent The payload for the Guild Members Chunk event. Inheritance Object GuildMembersChunkEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class GuildMembersChunkEvent Remarks See https://discord.com/developers/docs/topics/gateway#guild-member-update more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the guild the chunk contains members for. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake GuildId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the guild the chunk contains members for. | Improve this Doc View Source Members Gets or sets a serialized array containing the member models returned in the chunk. Declaration [JsonPropertyName(\"members\")] public IReadOnlyList<MemberModel> Members { get; set; } Property Value Type Description IReadOnlyList < MemberModel > a serialized array containing the member models returned in the chunk. | Improve this Doc View Source NotFound Gets or sets a list of snowflake identifiers that were not found when requesting specific users by their corresponding snowflake identifiers. Declaration [JsonPropertyName(\"not_found\")] public IReadOnlyList<Snowflake> NotFound { get; set; } Property Value Type Description IReadOnlyList < Snowflake > a list of snowflake identifiers that were not found when requesting specific users by their corresponding snowflake identifiers. | Improve this Doc View Source Presences Gets or sets a list of presence updates that were returned from the request. Declaration [JsonPropertyName(\"presences\")] public IReadOnlyList<PresenceUpdateEvent> Presences { get; set; } Property Value Type Description IReadOnlyList < PresenceUpdateEvent > a list of presence updates that were returned from the request."
  },
  "api/Strade.Payloads.Events.GuildMemberUpdateEvent.html": {
    "href": "api/Strade.Payloads.Events.GuildMemberUpdateEvent.html",
    "title": "Class GuildMemberUpdateEvent | Strade Developer Documentation",
    "keywords": "Class GuildMemberUpdateEvent The payload for the Guild Member Update event. Inheritance Object MemberModel GuildMemberUpdateEvent Implements IIdentifiable < Snowflake > Inherited Members MemberModel.IsDeafened MemberModel.IsMuted MemberModel.JoinedAt MemberModel.Nickname MemberModel.PremiumSince MemberModel.RoleIds MemberModel.User MemberModel.IIdentifiable<Snowflake>.Id Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class GuildMemberUpdateEvent : MemberModel, IIdentifiable<Snowflake> Remarks See https://discord.com/developers/docs/topics/gateway#guild-member-update more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source GuildId Declaration [JsonPropertyName(\"guild_id\")] public Snowflake GuildId { get; set; } Property Value Type Description Snowflake Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Payloads.Events.GuildRoleCreateEvent.html": {
    "href": "api/Strade.Payloads.Events.GuildRoleCreateEvent.html",
    "title": "Class GuildRoleCreateEvent | Strade Developer Documentation",
    "keywords": "Class GuildRoleCreateEvent The payload for the Guild Role Create event. Inheritance Object GuildRoleCreateEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class GuildRoleCreateEvent Remarks See https://discord.com/developers/docs/topics/gateway#guild-role-create for more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the guild. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake GuildId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the guild. | Improve this Doc View Source Role Gets or sets the model of the role created. Declaration [JsonPropertyName(\"role\")] public RoleModel Role { get; set; } Property Value Type Description RoleModel the model of the role created."
  },
  "api/Strade.Payloads.Events.GuildRoleDeleteEvent.html": {
    "href": "api/Strade.Payloads.Events.GuildRoleDeleteEvent.html",
    "title": "Class GuildRoleDeleteEvent | Strade Developer Documentation",
    "keywords": "Class GuildRoleDeleteEvent The payload for the Guild Role Delete event. Inheritance Object GuildRoleDeleteEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class GuildRoleDeleteEvent Remarks See https://discord.com/developers/docs/topics/gateway#guild-role-delete for more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the guild the role was deleted in. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake GuildId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the guild the role was deleted in. | Improve this Doc View Source RoleId Gets or sets the snowflake identifier of the role deleted. Declaration [JsonPropertyName(\"role_id\")] public Snowflake RoleId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the role deleted."
  },
  "api/Strade.Payloads.Events.GuildRoleUpdateEvent.html": {
    "href": "api/Strade.Payloads.Events.GuildRoleUpdateEvent.html",
    "title": "Class GuildRoleUpdateEvent | Strade Developer Documentation",
    "keywords": "Class GuildRoleUpdateEvent The payload for the Guild Role Update event. Inheritance Object GuildRoleUpdateEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class GuildRoleUpdateEvent Remarks See https://discord.com/developers/docs/topics/gateway#guild-role-update for more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the guild. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake GuildId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the guild. | Improve this Doc View Source Role Gets or sets an entity model containing the role updated. Declaration [JsonPropertyName(\"role\")] public RoleModel Role { get; set; } Property Value Type Description RoleModel an entity model containing the role updated."
  },
  "api/Strade.Payloads.Events.html": {
    "href": "api/Strade.Payloads.Events.html",
    "title": "Namespace Strade.Payloads.Events | Strade Developer Documentation",
    "keywords": "Namespace Strade.Payloads.Events Classes ChannelPinsUpdateEvent The payload for the Channel Pins Update event. GuildBanAddEvent The payload for the Guild Ban Add event. GuildBanRemoveEvent The payload for the Guild Ban Remove event. GuildEmojisUpdateEvent The payload for the Guild Emojis Update event. GuildIntegrationsUpdateEvent The payload for the Guild Integrations Updated event. GuildMemberAddEvent GuildMemberRemoveEvent The payload for the Guild Member Remove event. GuildMembersChunkEvent The payload for the Guild Members Chunk event. GuildMemberUpdateEvent The payload for the Guild Member Update event. GuildRoleCreateEvent The payload for the Guild Role Create event. GuildRoleDeleteEvent The payload for the Guild Role Delete event. GuildRoleUpdateEvent The payload for the Guild Role Update event. InviteCreateEvent The payload for the Invite Create event. InviteDeleteEvent The payload for the Invite Delete event. MessageBulkDeleteEvent The payload for the Message Delete Bulk event. MessageDeleteEvent The payload for the Message Delete event. MessageReactionAddEvent The payload for the Message Reaction Add event. MessageReactionRemoveAllEvent The payload for the Message Reaction Remove All event. MessageReactionRemoveEvent The payload for the Message Reaction Remove event. MessageUpdateEvent PresenceUpdateEvent The payload for the Presence Update event. PresenceUser A user structure that is send within a guild presence update. ReadyEvent The payload for the Ready event. TypingStartEvent Represents a gateway typing start event. WebhooksUpdateEvent The payload for the Channel Webhooks Updated event. Structs UnavailableGuildInformation Represents a structure used to represent an unavailable guild."
  },
  "api/Strade.Payloads.Events.InviteCreateEvent.html": {
    "href": "api/Strade.Payloads.Events.InviteCreateEvent.html",
    "title": "Class InviteCreateEvent | Strade Developer Documentation",
    "keywords": "Class InviteCreateEvent The payload for the Invite Create event. Inheritance Object InviteCreateEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class InviteCreateEvent Remarks See https://discord.com/developers/docs/topics/gateway#invite-create for more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source ChannelId Declaration [JsonPropertyName(\"channel_id\")] public Snowflake ChannelId { get; set; } Property Value Type Description Snowflake | Improve this Doc View Source Code Declaration [JsonPropertyName(\"code\")] public string Code { get; set; } Property Value Type Description String | Improve this Doc View Source CreatedAt Declaration [JsonPropertyName(\"created_at\")] public DateTimeOffset CreatedAt { get; set; } Property Value Type Description DateTimeOffset | Improve this Doc View Source GrantsTemporaryMembership Declaration [JsonPropertyName(\"temporary\")] public bool GrantsTemporaryMembership { get; set; } Property Value Type Description Boolean | Improve this Doc View Source GuildId Declaration [JsonPropertyName(\"guild_id\")] public Snowflake? GuildId { get; set; } Property Value Type Description Nullable < Snowflake > | Improve this Doc View Source Inviter Declaration [JsonPropertyName(\"inviter\")] public UserModel Inviter { get; set; } Property Value Type Description UserModel | Improve this Doc View Source MaximumAge Declaration [JsonPropertyName(\"max_age\")] public int MaximumAge { get; set; } Property Value Type Description Int32 | Improve this Doc View Source MaximumUses Declaration [JsonPropertyName(\"max_uses\")] public int MaximumUses { get; set; } Property Value Type Description Int32 | Improve this Doc View Source TargetUser Declaration [JsonPropertyName(\"target_user\")] public UserModel TargetUser { get; set; } Property Value Type Description UserModel | Improve this Doc View Source TargetUserType Declaration [JsonPropertyName(\"target_user_type\")] public TargetUserType? TargetUserType { get; set; } Property Value Type Description Nullable < TargetUserType > | Improve this Doc View Source Uses Declaration [JsonPropertyName(\"uses\")] public int Uses { get; set; } Property Value Type Description Int32"
  },
  "api/Strade.Payloads.Events.InviteDeleteEvent.html": {
    "href": "api/Strade.Payloads.Events.InviteDeleteEvent.html",
    "title": "Class InviteDeleteEvent | Strade Developer Documentation",
    "keywords": "Class InviteDeleteEvent The payload for the Invite Delete event. Inheritance Object InviteDeleteEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class InviteDeleteEvent Remarks See https://discord.com/developers/docs/topics/gateway#invite-delete for more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source ChannelId Declaration [JsonPropertyName(\"channel_id\")] public Snowflake ChannelId { get; set; } Property Value Type Description Snowflake | Improve this Doc View Source Code Declaration [JsonPropertyName(\"code\")] public string Code { get; set; } Property Value Type Description String | Improve this Doc View Source GuildId Declaration [JsonPropertyName(\"guild_id\")] public Snowflake? GuildId { get; set; } Property Value Type Description Nullable < Snowflake >"
  },
  "api/Strade.Payloads.Events.MessageBulkDeleteEvent.html": {
    "href": "api/Strade.Payloads.Events.MessageBulkDeleteEvent.html",
    "title": "Class MessageBulkDeleteEvent | Strade Developer Documentation",
    "keywords": "Class MessageBulkDeleteEvent The payload for the Message Delete Bulk event. Inheritance Object MessageBulkDeleteEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class MessageBulkDeleteEvent Remarks See https://discord.com/developers/docs/topics/gateway#message-delete-bulk for more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source ChannelId Gets or sets the snowflake identifier of the channel the message was in. Declaration [JsonPropertyName(\"channel_id\")] public Snowflake ChannelId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the channel the message was in. | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the guild the message channel is in / the message was in. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake? GuildId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the guild the message channel is in / the message was in; or null if the message was not send in a guild channel. | Improve this Doc View Source MessageIds Gets or sets a list of snowflake identifiers referencing the messages that were deleted. Declaration [JsonPropertyName(\"ids\")] public IReadOnlyList<Snowflake> MessageIds { get; set; } Property Value Type Description IReadOnlyList < Snowflake > a list of snowflake identifiers referencing the messages that were deleted."
  },
  "api/Strade.Payloads.Events.MessageDeleteEvent.html": {
    "href": "api/Strade.Payloads.Events.MessageDeleteEvent.html",
    "title": "Class MessageDeleteEvent | Strade Developer Documentation",
    "keywords": "Class MessageDeleteEvent The payload for the Message Delete event. Inheritance Object MessageDeleteEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class MessageDeleteEvent Remarks See https://discord.com/developers/docs/topics/gateway#message-delete for more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source ChannelId Gets or sets the snowflake identifier of the channel the message was in. Declaration [JsonPropertyName(\"channel_id\")] public Snowflake ChannelId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the channel the message was in. | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the guild the message channel is in / the message was in. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake? GuildId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the guild the message channel is in / the message was in; or null if the message was not send in a guild channel. | Improve this Doc View Source MessageId Gets or sets the snowflake identifier of the message that was deleted. Declaration [JsonPropertyName(\"id\")] public Snowflake MessageId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the message that was deleted."
  },
  "api/Strade.Payloads.Events.MessageReactionAddEvent.html": {
    "href": "api/Strade.Payloads.Events.MessageReactionAddEvent.html",
    "title": "Class MessageReactionAddEvent | Strade Developer Documentation",
    "keywords": "Class MessageReactionAddEvent The payload for the Message Reaction Add event. Inheritance Object MessageReactionAddEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class MessageReactionAddEvent Remarks See https://discord.com/developers/docs/topics/gateway#message-reaction-add for more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source ChannelId Gets or sets the snowflake identifier of the channel where the reaction was made in. Declaration [JsonPropertyName(\"channel_id\")] public Snowflake ChannelId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the channel where the reaction was made in. | Improve this Doc View Source Emote Gets or sets the emote that was used to react. Declaration [JsonPropertyName(\"emoji\")] [JsonConverter(typeof(EmoteJsonConverter))] public IEmote Emote { get; set; } Property Value Type Description IEmote the emote that was used to react. | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the guild the message is in. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake? GuildId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the guild the message is in; or null if MessageId does not refer to a guild channel. | Improve this Doc View Source Member Declaration [JsonPropertyName(\"member\")] public MemberModel Member { get; set; } Property Value Type Description MemberModel | Improve this Doc View Source MessageId Gets or sets the snowflake identifier of the message the user reacted to. Declaration [JsonPropertyName(\"message_id\")] public Snowflake MessageId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the message the user reacted to. | Improve this Doc View Source UserId Gets or sets the snowflake identifier of the user that added the reaction. Declaration [JsonPropertyName(\"user_id\")] public Snowflake UserId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the user that added the reaction."
  },
  "api/Strade.Payloads.Events.MessageReactionRemoveAllEvent.html": {
    "href": "api/Strade.Payloads.Events.MessageReactionRemoveAllEvent.html",
    "title": "Class MessageReactionRemoveAllEvent | Strade Developer Documentation",
    "keywords": "Class MessageReactionRemoveAllEvent The payload for the Message Reaction Remove All event. Inheritance Object MessageReactionRemoveAllEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class MessageReactionRemoveAllEvent Remarks See https://discord.com/developers/docs/topics/gateway#message-reaction-remove-all for more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source ChannelId Gets or sets the snowflake identifier of the channel where the reaction was made in. Declaration [JsonPropertyName(\"channel_id\")] public Snowflake ChannelId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the channel where the reaction was made in. | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the guild the message is in. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake? GuildId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the guild the message is in; or null if MessageId does not refer to a guild channel. | Improve this Doc View Source MessageId Gets or sets the snowflake identifier of the message the user reacted to. Declaration [JsonPropertyName(\"message_id\")] public Snowflake MessageId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the message the user reacted to."
  },
  "api/Strade.Payloads.Events.MessageReactionRemoveEvent.html": {
    "href": "api/Strade.Payloads.Events.MessageReactionRemoveEvent.html",
    "title": "Class MessageReactionRemoveEvent | Strade Developer Documentation",
    "keywords": "Class MessageReactionRemoveEvent The payload for the Message Reaction Remove event. Inheritance Object MessageReactionRemoveEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class MessageReactionRemoveEvent Remarks See https://discord.com/developers/docs/topics/gateway#message-reaction-remove for more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source ChannelId Gets or sets the snowflake identifier of the channel where the reaction was made in. Declaration [JsonPropertyName(\"channel_id\")] public Snowflake ChannelId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the channel where the reaction was made in. | Improve this Doc View Source Emote Gets or sets the emote that was used to react. Declaration [JsonPropertyName(\"emoji\")] [JsonConverter(typeof(EmoteJsonConverter))] public IEmote Emote { get; set; } Property Value Type Description IEmote the emote that was used to react. | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the guild the message is in. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake? GuildId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the guild the message is in; or null if MessageId does not refer to a guild channel. | Improve this Doc View Source MessageId Gets or sets the snowflake identifier of the message the user reacted to. Declaration [JsonPropertyName(\"message_id\")] public Snowflake MessageId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the message the user reacted to. | Improve this Doc View Source UserId Gets or sets the snowflake identifier of the user that added the reaction. Declaration [JsonPropertyName(\"user_id\")] public Snowflake UserId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the user that added the reaction."
  },
  "api/Strade.Payloads.Events.MessageUpdateEvent.html": {
    "href": "api/Strade.Payloads.Events.MessageUpdateEvent.html",
    "title": "Class MessageUpdateEvent | Strade Developer Documentation",
    "keywords": "Class MessageUpdateEvent Inheritance Object MessageUpdateEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class MessageUpdateEvent Properties | Improve this Doc View Source ChannelId Declaration [JsonPropertyName(\"channel_id\")] public Snowflake ChannelId { get; set; } Property Value Type Description Snowflake | Improve this Doc View Source Content Declaration [JsonPropertyName(\"content\")] public string Content { get; set; } Property Value Type Description String | Improve this Doc View Source Embeds Declaration [JsonPropertyName(\"embeds\")] public IReadOnlyList<EmbedMessageModel> Embeds { get; set; } Property Value Type Description IReadOnlyList < EmbedMessageModel > | Improve this Doc View Source Flags Declaration [JsonPropertyName(\"flags\")] public MessageFlags? Flags { get; set; } Property Value Type Description Nullable < MessageFlags > | Improve this Doc View Source Id Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; set; } Property Value Type Description Snowflake"
  },
  "api/Strade.Payloads.Events.PresenceUpdateEvent.html": {
    "href": "api/Strade.Payloads.Events.PresenceUpdateEvent.html",
    "title": "Class PresenceUpdateEvent | Strade Developer Documentation",
    "keywords": "Class PresenceUpdateEvent The payload for the Presence Update event. Inheritance Object PresenceUpdateEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class PresenceUpdateEvent Remarks See https://discord.com/developers/docs/topics/gateway#presence-update for more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source Activities Gets or sets the user's current activities. Declaration [JsonPropertyName(\"activities\")] public IReadOnlyList<Activity> Activities { get; set; } Property Value Type Description IReadOnlyList < Activity > the user's current activities. | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the guild the user is in. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake GuildId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the guild the user is in. | Improve this Doc View Source PlatformStatus Gets or sets the user's platform-dependent status. Declaration [JsonPropertyName(\"client_status\")] public UserPlatformStatusModel PlatformStatus { get; set; } Property Value Type Description UserPlatformStatusModel the user's platform-dependent status. | Improve this Doc View Source Status Gets or sets the user's primary online status. Declaration [JsonPropertyName(\"status\")] public UserStatus Status { get; set; } Property Value Type Description UserStatus the user's primary online status. | Improve this Doc View Source User Gets or sets the affected user. Declaration [JsonPropertyName(\"user\")] public PresenceUser User { get; set; } Property Value Type Description PresenceUser the affected user."
  },
  "api/Strade.Payloads.Events.PresenceUser.html": {
    "href": "api/Strade.Payloads.Events.PresenceUser.html",
    "title": "Class PresenceUser | Strade Developer Documentation",
    "keywords": "Class PresenceUser A user structure that is send within a guild presence update. Inheritance Object PresenceUser Implements IIdentifiable < Snowflake > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class PresenceUser : IIdentifiable<Snowflake> Properties | Improve this Doc View Source Id Gets or sets the snowflake identifier of the user. Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; set; } Property Value Type Description Snowflake the snowflake identifier of the user. Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Payloads.Events.ReadyEvent.html": {
    "href": "api/Strade.Payloads.Events.ReadyEvent.html",
    "title": "Class ReadyEvent | Strade Developer Documentation",
    "keywords": "Class ReadyEvent The payload for the Ready event. Inheritance Object ReadyEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class ReadyEvent Remarks See https://discord.com/developers/docs/topics/gateway#ready for more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source CurrentUser Gets or sets information about the client / bot user. Declaration [JsonPropertyName(\"user\")] public UserModel CurrentUser { get; set; } Property Value Type Description UserModel information about the client / bot user. | Improve this Doc View Source GatewayVersion Gets or sets the gateway version. Declaration [JsonPropertyName(\"v\")] public int GatewayVersion { get; set; } Property Value Type Description Int32 the gateway version. | Improve this Doc View Source Guilds Gets or sets a list of models of the raw guilds the bot / user is in. Declaration [JsonPropertyName(\"guilds\")] public IReadOnlyList<UnavailableGuildInformation> Guilds { get; set; } Property Value Type Description IReadOnlyList < UnavailableGuildInformation > a list of models of the raw guilds the bot / user is in. | Improve this Doc View Source SessionId Gets or sets the session id used to resume dropped connections. Declaration [JsonPropertyName(\"session_id\")] public string SessionId { get; set; } Property Value Type Description String the session id used to resume dropped connections. | Improve this Doc View Source ShardingInformation Gets or sets the sharding information. Declaration [JsonPropertyName(\"shard\")] public ShardingInformation? ShardingInformation { get; set; } Property Value Type Description Nullable < ShardingInformation > the sharding information; or null if not specified."
  },
  "api/Strade.Payloads.Events.TypingStartEvent.html": {
    "href": "api/Strade.Payloads.Events.TypingStartEvent.html",
    "title": "Class TypingStartEvent | Strade Developer Documentation",
    "keywords": "Class TypingStartEvent Represents a gateway typing start event. Inheritance Object TypingStartEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class TypingStartEvent Properties | Improve this Doc View Source ChannelId Gets or sets the snowflake identifier of the channel the user started typing in. Declaration [JsonPropertyName(\"channel_id\")] public Snowflake ChannelId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the channel the user started typing in. | Improve this Doc View Source GuildId Gets or sets the guild snowflake identifier of the channel where the user started typing. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake? GuildId { get; set; } Property Value Type Description Nullable < Snowflake > the guild snowflake identifier of the channel where the user started typing; or null if the channel is not a guild channel. | Improve this Doc View Source Member Declaration [JsonPropertyName(\"member\")] public MemberModel Member { get; set; } Property Value Type Description MemberModel | Improve this Doc View Source Timestamp Gets or sets the timestamp when the user started typing. Declaration [JsonPropertyName(\"timestamp\")] [JsonConverter(typeof(UnixDateTimeOffsetJsonConverter))] public DateTimeOffset Timestamp { get; set; } Property Value Type Description DateTimeOffset the timestamp when the user started typing. | Improve this Doc View Source UserId Gets or sets the snowflake identifier of the user that started typing. Declaration [JsonPropertyName(\"user_id\")] public Snowflake UserId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the user that started typing."
  },
  "api/Strade.Payloads.Events.UnavailableGuildInformation.html": {
    "href": "api/Strade.Payloads.Events.UnavailableGuildInformation.html",
    "title": "Struct UnavailableGuildInformation | Strade Developer Documentation",
    "keywords": "Struct UnavailableGuildInformation Represents a structure used to represent an unavailable guild. Implements IEquatable < UnavailableGuildInformation > Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax [JsonConverter(typeof(UnavailableGuildInformationJsonConverter))] public struct UnavailableGuildInformation : IEquatable<UnavailableGuildInformation> Constructors | Improve this Doc View Source UnavailableGuildInformation(Snowflake, Nullable<Boolean>) Initializes a new instance of the UnavailableGuildInformation struct. Declaration public UnavailableGuildInformation(Snowflake id, bool? unavailable) Parameters Type Name Description Snowflake id the snowflake identifier of the guild. Nullable < Boolean > unavailable a value indicating whether the guild became unavailable; or null to indicate that the client user was removed from the guild. Properties | Improve this Doc View Source Id Gets the snowflake identifier of the guild. Declaration [JsonPropertyName(\"id\")] public Snowflake Id { get; } Property Value Type Description Snowflake the snowflake identifier of the guild. | Improve this Doc View Source IsUnavailable Declaration [JsonPropertyName(\"unavailable\")] public bool? IsUnavailable { get; } Property Value Type Description Nullable < Boolean > Methods | Improve this Doc View Source Equals(UnavailableGuildInformation) Declaration public bool Equals(UnavailableGuildInformation other) Parameters Type Name Description UnavailableGuildInformation other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(UnavailableGuildInformation, UnavailableGuildInformation) Declaration public static bool operator ==(UnavailableGuildInformation left, UnavailableGuildInformation right) Parameters Type Name Description UnavailableGuildInformation left UnavailableGuildInformation right Returns Type Description Boolean | Improve this Doc View Source Inequality(UnavailableGuildInformation, UnavailableGuildInformation) Declaration public static bool operator !=(UnavailableGuildInformation left, UnavailableGuildInformation right) Parameters Type Name Description UnavailableGuildInformation left UnavailableGuildInformation right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Payloads.Events.WebhooksUpdateEvent.html": {
    "href": "api/Strade.Payloads.Events.WebhooksUpdateEvent.html",
    "title": "Class WebhooksUpdateEvent | Strade Developer Documentation",
    "keywords": "Class WebhooksUpdateEvent The payload for the Channel Webhooks Updated event. Inheritance Object WebhooksUpdateEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads.Events Assembly : Strade.dll Syntax public sealed class WebhooksUpdateEvent Remarks See https://discord.com/developers/docs/topics/gateway#webhooks-update for more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source ChannelId Gets or sets the snowflake identifier of the channel on which the webhook(s) were updated. Declaration [JsonPropertyName(\"channel_id\")] public Snowflake ChannelId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the channel on which the webhook(s) were updated. | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the guild the webhooks were updated in. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake GuildId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the guild the webhooks were updated in."
  },
  "api/Strade.Payloads.HelloPayload.html": {
    "href": "api/Strade.Payloads.HelloPayload.html",
    "title": "Class HelloPayload | Strade Developer Documentation",
    "keywords": "Class HelloPayload The inner payload data structure for the Hello payload ( Hello ). Inheritance Object HelloPayload Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads Assembly : Strade.dll Syntax public sealed class HelloPayload Remarks See https://discord.com/developers/docs/topics/gateway#hello for more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source HeartbeatInterval Gets or sets the gateway heartbeat interval in which heartbeats are sent in. Declaration [JsonConverter(typeof(TimeSpanJsonConverter))] [JsonPropertyName(\"heartbeat_interval\")] public TimeSpan HeartbeatInterval { get; set; } Property Value Type Description TimeSpan the gateway heartbeat interval in which heartbeats are sent in."
  },
  "api/Strade.Payloads.html": {
    "href": "api/Strade.Payloads.html",
    "title": "Namespace Strade.Payloads | Strade Developer Documentation",
    "keywords": "Namespace Strade.Payloads Classes HelloPayload The inner payload data structure for the Hello payload ( Hello ). IdentifyPayload Representation of a gateway identify payload. LibraryProperties Represents properties providing information about the library. RequestGuildMembersPayload The inner payload data structure for the Request Guild Members payload ( RequestGuildMembers ). ResumePayload The inner payload data structure for the Resume payload ( Resume ). VoiceStatePayload The inner payload data structure for the Voice State Update payload ( VoiceStateUpdate ). Enums OpCode A set of the discord payload operation codes."
  },
  "api/Strade.Payloads.IdentifyPayload.html": {
    "href": "api/Strade.Payloads.IdentifyPayload.html",
    "title": "Class IdentifyPayload | Strade Developer Documentation",
    "keywords": "Class IdentifyPayload Representation of a gateway identify payload. Inheritance Object IdentifyPayload Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads Assembly : Strade.dll Syntax public sealed class IdentifyPayload Properties | Improve this Doc View Source CompressPayloads Gets or sets a value indicating whether payloads should be compressed. Declaration [JsonPropertyName(\"compress\")] public bool? CompressPayloads { get; set; } Property Value Type Description Nullable < Boolean > a value indicating whether payloads should be compressed. (default: false . | Improve this Doc View Source InitialPresence Gets or sets the initial presence to use. Declaration [JsonPropertyName(\"presence\")] public PresenceModel InitialPresence { get; set; } Property Value Type Description PresenceModel the initial presence to use. | Improve this Doc View Source Intents Gets or sets the intents used for the bot. Declaration [JsonPropertyName(\"intents\")] public GatewayIntents Intents { get; set; } Property Value Type Description GatewayIntents the intents used for the bot. | Improve this Doc View Source LargeThreshold Gets or sets the threshold when the gateway stops sending offline members of a guild. Declaration [JsonPropertyName(\"large_threshold\")] public int? LargeThreshold { get; set; } Property Value Type Description Nullable < Int32 > the threshold when the gateway stops sending offline members of a guild ( 50 250 , the default is 50 ). | Improve this Doc View Source Properties Gets the library properties. Declaration [JsonPropertyName(\"properties\")] public LibraryProperties Properties { get; } Property Value Type Description LibraryProperties the library properties. | Improve this Doc View Source ShardingInformation Gets or sets the sharding information. Declaration [JsonPropertyName(\"shard\")] public ShardingInformation? ShardingInformation { get; set; } Property Value Type Description Nullable < ShardingInformation > the sharding information; or null to use a single-sharded connection. | Improve this Doc View Source Token Gets or sets the authentication token. Declaration [JsonPropertyName(\"token\")] public string Token { get; set; } Property Value Type Description String the authentication token."
  },
  "api/Strade.Payloads.LibraryProperties.html": {
    "href": "api/Strade.Payloads.LibraryProperties.html",
    "title": "Class LibraryProperties | Strade Developer Documentation",
    "keywords": "Class LibraryProperties Represents properties providing information about the library. Inheritance Object LibraryProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads Assembly : Strade.dll Syntax public sealed class LibraryProperties Fields | Improve this Doc View Source LibraryName The name of the library. Declaration public const string LibraryName = \"Strade\" Field Value Type Description String Properties | Improve this Doc View Source Browser Gets or sets the library name. Declaration [JsonPropertyName(\"$browser\")] public string Browser { get; set; } Property Value Type Description String the library name. | Improve this Doc View Source Default Gets the default LibraryProperties instance. Declaration public static LibraryProperties Default { get; } Property Value Type Description LibraryProperties the default LibraryProperties instance. | Improve this Doc View Source Device Gets the library name. Declaration [JsonPropertyName(\"$device\")] public string Device { get; } Property Value Type Description String the library name. | Improve this Doc View Source OperatingSystem Gets the name of the operating system running on. Declaration [JsonPropertyName(\"$os\")] public string OperatingSystem { get; } Property Value Type Description String the name of the operating system running on. See Also IdentifyPayload"
  },
  "api/Strade.Payloads.OpCode.html": {
    "href": "api/Strade.Payloads.OpCode.html",
    "title": "Enum OpCode | Strade Developer Documentation",
    "keywords": "Enum OpCode A set of the discord payload operation codes. Namespace : Strade.Payloads Assembly : Strade.dll Syntax public enum OpCode : byte Fields Name Description Dispatch Denotes an event dispatch. Heartbeat This operation code is used for heart-beating the server / client to check whether the connection is still alive. HeartbeatAck This operation code is used to response to a client's heartbeat. Hello This operation code is used that the authorization succeed. Identify This operation code is used to authorize the client to the server. InvalidSession This operation code is used to notify the client that an invalid session identifier was passed in a Resume payload. Reconnect This operation code is used to tell the client to reconnect to the gateway. RequestGuildMembers This operation code is used to request the guild members for a guild. Resume This operation code is used to resume a dropped connection. StatusUpdate This operation code is used to update the client's status. VoiceStateUpdate This operation code is used to update the client's voice status. Extension Methods EnumExtensions.GetName<OpCode>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Payloads.RequestGuildMembersPayload.html": {
    "href": "api/Strade.Payloads.RequestGuildMembersPayload.html",
    "title": "Class RequestGuildMembersPayload | Strade Developer Documentation",
    "keywords": "Class RequestGuildMembersPayload The inner payload data structure for the Request Guild Members payload ( RequestGuildMembers ). Inheritance Object RequestGuildMembersPayload Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads Assembly : Strade.dll Syntax public sealed class RequestGuildMembersPayload Remarks See https://discord.com/developers/docs/topics/gateway#request-guild-members for more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the target guild to retrieve guild members for. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake GuildId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the target guild to retrieve guild members for. | Improve this Doc View Source Limit Gets or sets the maximum number of guild members to return. Declaration [JsonPropertyName(\"limit\")] public int? Limit { get; set; } Property Value Type Description Nullable < Int32 > the maximum number of guild members to return; if 0 all members are returned. | Improve this Doc View Source Query Gets or sets the query the usernames of the members should start with. Declaration [JsonPropertyName(\"query\")] public string Query { get; set; } Property Value Type Description String the query the usernames of the members should start with; if Empty then all members are returned. | Improve this Doc View Source RequestPresences Gets or sets a value indicating whether to request member's presences. Declaration [JsonPropertyName(\"presences\")] public bool? RequestPresences { get; set; } Property Value Type Description Nullable < Boolean > a value indicating whether to request member's presences. | Improve this Doc View Source UserIds Gets or sets a list of snowflake identifiers of the users that should be returned. Declaration [JsonPropertyName(\"user_ids\")] public IReadOnlyList<Snowflake> UserIds { get; set; } Property Value Type Description IReadOnlyList < Snowflake > a list of snowflake identifiers of the users that should be returned."
  },
  "api/Strade.Payloads.ResumePayload.html": {
    "href": "api/Strade.Payloads.ResumePayload.html",
    "title": "Class ResumePayload | Strade Developer Documentation",
    "keywords": "Class ResumePayload The inner payload data structure for the Resume payload ( Resume ). Inheritance Object ResumePayload Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads Assembly : Strade.dll Syntax public sealed class ResumePayload Remarks See https://discord.com/developers/docs/topics/gateway#resume for more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source AuthenticationToken Gets or sets the authentication token to resume the session with. Declaration [JsonPropertyName(\"token\")] public string AuthenticationToken { get; set; } Property Value Type Description String the authentication token to resume the session with. | Improve this Doc View Source LastSequenceNumber Gets or sets the last sequence number received used to replay missed events. Declaration [JsonPropertyName(\"seq\")] public int? LastSequenceNumber { get; set; } Property Value Type Description Nullable < Int32 > the last sequence number received used to replay missed events. | Improve this Doc View Source SessionToken Gets or sets the identifier of the session to resume. Declaration [JsonPropertyName(\"session_id\")] public string SessionToken { get; set; } Property Value Type Description String the identifier of the session to resume."
  },
  "api/Strade.Payloads.VoiceStatePayload.html": {
    "href": "api/Strade.Payloads.VoiceStatePayload.html",
    "title": "Class VoiceStatePayload | Strade Developer Documentation",
    "keywords": "Class VoiceStatePayload The inner payload data structure for the Voice State Update payload ( VoiceStateUpdate ). Inheritance Object VoiceStatePayload Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Payloads Assembly : Strade.dll Syntax public sealed class VoiceStatePayload Remarks See https://discord.com/developers/docs/topics/gateway#request-guild-members for more details [external, Discord Developer Documentation]. Properties | Improve this Doc View Source ChannelId Gets or sets the snowflake identifier of the channel to connect to. Declaration [JsonPropertyName(\"channel_id\")] public Snowflake? ChannelId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the channel to connect to; or null to disconnect from the current voice channel. | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the affected guild. Declaration [JsonPropertyName(\"guild_id\")] public Snowflake GuildId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the affected guild. | Improve this Doc View Source IsSelfDeafened Gets or sets a value indicating whether the client should be self deafened. Declaration [JsonPropertyName(\"self_deaf\")] public bool? IsSelfDeafened { get; set; } Property Value Type Description Nullable < Boolean > a value indicating whether the client should be self deafened. | Improve this Doc View Source IsSelfMuted Gets or sets a value indicating whether the client should be self muted. Declaration [JsonPropertyName(\"self_mute\")] public bool? IsSelfMuted { get; set; } Property Value Type Description Nullable < Boolean > a value indicating whether the client should be self muted."
  },
  "api/Strade.RateLimit.html": {
    "href": "api/Strade.RateLimit.html",
    "title": "Namespace Strade.RateLimit | Strade Developer Documentation",
    "keywords": "Namespace Strade.RateLimit Classes RateLimitHeader The header definition for rate limiting. RateLimitResponse RequestRateLimiter Structs RateLimiterBucket Represents a rate-limiter bucket. RateLimitInformation A structure holding information about request rate limiting. RouteDefinition Enums RateLimiterRouteType A set of the route types the rate-limiter supports."
  },
  "api/Strade.RateLimit.RateLimiterBucket.html": {
    "href": "api/Strade.RateLimit.RateLimiterBucket.html",
    "title": "Struct RateLimiterBucket | Strade Developer Documentation",
    "keywords": "Struct RateLimiterBucket Represents a rate-limiter bucket. Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.RateLimit Assembly : Strade.Rest.dll Syntax public struct RateLimiterBucket Remarks There are two types of rate-limiter buckets: Unscoped Contains no scope and assigns all rate-limits without a scope to a single entry. Scoped Contains a scope and assigns rate-limits to a scope. Properties | Improve this Doc View Source IsScoped Declaration public bool IsScoped { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Adjust(Nullable<Snowflake>, RateLimitInformation, ILogger) Declaration public void Adjust(Snowflake? scope, RateLimitInformation limitInformation, ILogger logger = null) Parameters Type Name Description Nullable < Snowflake > scope RateLimitInformation limitInformation ILogger logger | Improve this Doc View Source Adjust(Nullable<Snowflake>, RateLimitResponse) Declaration public void Adjust(Snowflake? scope, RateLimitResponse response) Parameters Type Name Description Nullable < Snowflake > scope RateLimitResponse response | Improve this Doc View Source EnterAsync(Nullable<Snowflake>, CancellationToken) Declaration public ValueTask EnterAsync(Snowflake? scope, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Nullable < Snowflake > scope CancellationToken cancellationToken Returns Type Description ValueTask | Improve this Doc View Source TryAcquireRequest(Nullable<Snowflake>, out Nullable<TimeSpan>) Declaration public bool TryAcquireRequest(Snowflake? scope, out TimeSpan? waitTime) Parameters Type Name Description Nullable < Snowflake > scope Nullable < TimeSpan > waitTime Returns Type Description Boolean"
  },
  "api/Strade.RateLimit.RateLimiterRouteType.html": {
    "href": "api/Strade.RateLimit.RateLimiterRouteType.html",
    "title": "Enum RateLimiterRouteType | Strade Developer Documentation",
    "keywords": "Enum RateLimiterRouteType A set of the route types the rate-limiter supports. Namespace : Strade.RateLimit Assembly : Strade.Rest.dll Syntax public enum RateLimiterRouteType : byte Fields Name Description HttpDelete Denotes that the HTTP verb is DELETE. HttpGet Denotes that the HTTP verb is GET. HttpPatch Denotes that the HTTP verb is PATCH. HttpPost Denotes that the HTTP verb is POST. HttpPut Denotes that the HTTP verb is PUT. Extension Methods EnumExtensions.GetName<RateLimiterRouteType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.RateLimit.RateLimitHeader.html": {
    "href": "api/Strade.RateLimit.RateLimitHeader.html",
    "title": "Class RateLimitHeader | Strade Developer Documentation",
    "keywords": "Class RateLimitHeader The header definition for rate limiting. Inheritance Object RateLimitHeader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.RateLimit Assembly : Strade.Rest.dll Syntax public static class RateLimitHeader Fields | Improve this Doc View Source Bucket The HTTP header name containing the bucket identifier. Declaration public const string Bucket = \"X-RateLimit-Bucket\" Field Value Type Description String | Improve this Doc View Source Global The HTTP header name containing the a boolean indicating whether the rate limit is global. Declaration public const string Global = \"X-RateLimit-Global\" Field Value Type Description String | Improve this Doc View Source Limit The HTTP header name containing the number of total requests that can be made to the endpoint. Declaration public const string Limit = \"X-RateLimit-Limit\" Field Value Type Description String | Improve this Doc View Source Prefix The HTTP header name prefix. Declaration public const string Prefix = \"X-RateLimit-\" Field Value Type Description String | Improve this Doc View Source Remaining The HTTP header name containing the number of the remaining requests to the endpoint. Declaration public const string Remaining = \"X-RateLimit-Remaining\" Field Value Type Description String | Improve this Doc View Source Reset The HTTP header name containing the UTC time after which the limit resets. Declaration public const string Reset = \"X-RateLimit-Reset\" Field Value Type Description String | Improve this Doc View Source ResetAfter The HTTP header name containing the number of seconds after the limit is reset. Declaration public const string ResetAfter = \"X-RateLimit-Reset-After\" Field Value Type Description String"
  },
  "api/Strade.RateLimit.RateLimitInformation.html": {
    "href": "api/Strade.RateLimit.RateLimitInformation.html",
    "title": "Struct RateLimitInformation | Strade Developer Documentation",
    "keywords": "Struct RateLimitInformation A structure holding information about request rate limiting. Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.RateLimit Assembly : Strade.Rest.dll Syntax public struct RateLimitInformation Constructors | Improve this Doc View Source RateLimitInformation(Int32, String, DateTimeOffset, Int32, Boolean) Initializes a new instance of the RateLimitInformation struct. Declaration public RateLimitInformation(int totalRequests, string bucket, DateTimeOffset resetAfter, int remainingRequests, bool global) Parameters Type Name Description Int32 totalRequests the number of total requests that can be made to the endpoint. String bucket the name of rate limiter bucket the route applies to. DateTimeOffset resetAfter the time after the rate limit resets. Int32 remainingRequests the number of requests remaining. Boolean global a value indicating whether the rate limit is global. Properties | Improve this Doc View Source Bucket Gets the name of rate limiter bucket the route applies to. Declaration public string Bucket { get; } Property Value Type Description String the name of rate limiter bucket the route applies to. | Improve this Doc View Source IsGlobal Gets a value indicating whether the rate limit is per-route / not-global. Declaration public bool IsGlobal { get; } Property Value Type Description Boolean a value indicating whether the rate limit is per-route / not-global. | Improve this Doc View Source RequestsRemaining Gets the number of requests remaining. Declaration public int RequestsRemaining { get; } Property Value Type Description Int32 the number of requests remaining. | Improve this Doc View Source ResetAfter Gets the time after the rate limit resets. Declaration public DateTimeOffset ResetAfter { get; } Property Value Type Description DateTimeOffset the time after the rate limit resets. | Improve this Doc View Source TotalRequests Gets the number of total requests that can be made to the endpoint. Declaration public int TotalRequests { get; } Property Value Type Description Int32 the number of total requests that can be made to the endpoint. Methods | Improve this Doc View Source ParseResetTime(HttpHeaders) Parses the time when the rate limit is reset from the specified response headers . Declaration public static DateTimeOffset ParseResetTime(HttpHeaders headers) Parameters Type Name Description HttpHeaders headers the headers to parse from. Returns Type Description DateTimeOffset the time after the rate limit is reset. Exceptions Type Condition ArgumentNullException thrown if the specified headers parameter is null . InvalidOperationException thrown if the rate limit reset time could not be parsed from the specified headers . | Improve this Doc View Source ToString() Builds a String representation of the RateLimitInformation instance. Declaration public override string ToString() Returns Type Description String a String representation of the RateLimitInformation instance. Overrides ValueType.ToString() | Improve this Doc View Source TryParse(HttpHeaders, out RateLimitInformation) Parses the rate limit information for the specified headers . Declaration public static bool TryParse(HttpHeaders headers, out RateLimitInformation rateLimitInformation) Parameters Type Name Description HttpHeaders headers the headers to parse from. RateLimitInformation rateLimitInformation the parsed rate limit information. Returns Type Description Boolean a value indicating whether the headers could be parsed. Exceptions Type Condition ArgumentNullException thrown if the specified headers parameter is null . InvalidOperationException thrown if the rate limit reset time could not be parsed from the specified headers ."
  },
  "api/Strade.RateLimit.RateLimitResponse.html": {
    "href": "api/Strade.RateLimit.RateLimitResponse.html",
    "title": "Class RateLimitResponse | Strade Developer Documentation",
    "keywords": "Class RateLimitResponse Inheritance Object RateLimitResponse Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.RateLimit Assembly : Strade.Rest.dll Syntax public sealed class RateLimitResponse Properties | Improve this Doc View Source IsGlobal Declaration [JsonPropertyName(\"global\")] public bool IsGlobal { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Message Declaration [JsonPropertyName(\"message\")] public string Message { get; set; } Property Value Type Description String | Improve this Doc View Source RetryAfter Declaration [JsonPropertyName(\"retry_after\")] public float RetryAfter { get; set; } Property Value Type Description Single"
  },
  "api/Strade.RateLimit.RequestRateLimiter.html": {
    "href": "api/Strade.RateLimit.RequestRateLimiter.html",
    "title": "Class RequestRateLimiter | Strade Developer Documentation",
    "keywords": "Class RequestRateLimiter Inheritance Object RequestRateLimiter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.RateLimit Assembly : Strade.Rest.dll Syntax public sealed class RequestRateLimiter Constructors | Improve this Doc View Source RequestRateLimiter(ILogger) Declaration public RequestRateLimiter(ILogger logger = null) Parameters Type Name Description ILogger logger Properties | Improve this Doc View Source IsGlobalRateLimited Gets a value indicating whether the client is global-limited. Declaration public bool IsGlobalRateLimited { get; } Property Value Type Description Boolean a value indicating whether the client is global-limited. Methods | Improve this Doc View Source Adjust(RateLimiterRouteType, String, Nullable<Snowflake>, RateLimitInformation) Declaration public RateLimiterBucket? Adjust(RateLimiterRouteType routeType, string route, Snowflake? scope, RateLimitInformation limitInformation) Parameters Type Name Description RateLimiterRouteType routeType String route Nullable < Snowflake > scope RateLimitInformation limitInformation Returns Type Description Nullable < RateLimiterBucket > | Improve this Doc View Source Adjust(RateLimiterRouteType, String, Nullable<Snowflake>, HttpResponseMessage) Declaration public RateLimiterBucket? Adjust(RateLimiterRouteType routeType, string route, Snowflake? scope, HttpResponseMessage httpResponseMessage) Parameters Type Name Description RateLimiterRouteType routeType String route Nullable < Snowflake > scope HttpResponseMessage httpResponseMessage Returns Type Description Nullable < RateLimiterBucket > | Improve this Doc View Source EnterAsync(RateLimiterRouteType, String, Nullable<Snowflake>, CancellationToken) Declaration public Task<RateLimiterBucket?> EnterAsync(RateLimiterRouteType routeType, string route, Snowflake? scope, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description RateLimiterRouteType routeType String route Nullable < Snowflake > scope CancellationToken cancellationToken Returns Type Description Task < Nullable < RateLimiterBucket >> | Improve this Doc View Source GetBucket(RateLimiterRouteType, String, Nullable<Snowflake>, RateLimitInformation, Boolean) Declaration public RateLimiterBucket GetBucket(RateLimiterRouteType routeType, string route, Snowflake? scope, RateLimitInformation limitInformation, bool adjust = false) Parameters Type Name Description RateLimiterRouteType routeType String route Nullable < Snowflake > scope RateLimitInformation limitInformation Boolean adjust Returns Type Description RateLimiterBucket | Improve this Doc View Source TryGetAssignedBucket(RateLimiterRouteType, String, out RateLimiterBucket) Declaration public bool TryGetAssignedBucket(RateLimiterRouteType routeType, string route, out RateLimiterBucket bucket) Parameters Type Name Description RateLimiterRouteType routeType String route RateLimiterBucket bucket Returns Type Description Boolean"
  },
  "api/Strade.RateLimit.RouteDefinition.html": {
    "href": "api/Strade.RateLimit.RouteDefinition.html",
    "title": "Struct RouteDefinition | Strade Developer Documentation",
    "keywords": "Struct RouteDefinition Implements IEquatable < RouteDefinition > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.RateLimit Assembly : Strade.Rest.dll Syntax public struct RouteDefinition : IEquatable<RouteDefinition> Constructors | Improve this Doc View Source RouteDefinition(RateLimiterRouteType, String) Declaration public RouteDefinition(RateLimiterRouteType type, string route) Parameters Type Name Description RateLimiterRouteType type String route Properties | Improve this Doc View Source Route Declaration public string Route { get; } Property Value Type Description String | Improve this Doc View Source RouteType Declaration public RateLimiterRouteType RouteType { get; } Property Value Type Description RateLimiterRouteType Methods | Improve this Doc View Source Equals(RouteDefinition) Declaration public bool Equals(RouteDefinition other) Parameters Type Name Description RouteDefinition other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(RouteDefinition, RouteDefinition) Declaration public static bool operator ==(RouteDefinition left, RouteDefinition right) Parameters Type Name Description RouteDefinition left RouteDefinition right Returns Type Description Boolean | Improve this Doc View Source Inequality(RouteDefinition, RouteDefinition) Declaration public static bool operator !=(RouteDefinition left, RouteDefinition right) Parameters Type Name Description RouteDefinition left RouteDefinition right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.RestClientConfiguration.html": {
    "href": "api/Strade.RestClientConfiguration.html",
    "title": "Class RestClientConfiguration | Strade Developer Documentation",
    "keywords": "Class RestClientConfiguration The configuration for the DiscordRestClient class. Inheritance Object BaseRestClientConfiguration RestClientConfiguration DiscordClientConfiguration Implements ICloneable < RestClientConfiguration > ICloneable Inherited Members BaseRestClientConfiguration.DefaultBaseAddress BaseRestClientConfiguration.UserAgent BaseRestClientConfiguration.BaseAddress BaseRestClientConfiguration.MaxRequestRetries BaseRestClientConfiguration.TraceRequests Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade Assembly : Strade.Rest.dll Syntax public class RestClientConfiguration : BaseRestClientConfiguration, ICloneable<RestClientConfiguration>, ICloneable Constructors | Improve this Doc View Source RestClientConfiguration(AuthenticationCredentials) Initializes a new instance of the RestClientConfiguration class. Declaration public RestClientConfiguration(AuthenticationCredentials credentials) Parameters Type Name Description AuthenticationCredentials credentials the credentials. Exceptions Type Condition ArgumentNullException thrown if the specified credentials parameter is null . Properties | Improve this Doc View Source Credentials Gets the authentication credentials. Declaration public AuthenticationCredentials Credentials { get; } Property Value Type Description AuthenticationCredentials the authentication credentials. | Improve this Doc View Source EntityCache Declaration public IEntityCache EntityCache { get; set; } Property Value Type Description IEntityCache | Improve this Doc View Source IncludeCredentials Declaration public bool IncludeCredentials { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Clone() Declaration public RestClientConfiguration Clone() Returns Type Description RestClientConfiguration | Improve this Doc View Source FromEnvironment(String, AuthenticationTokenType) Creates a RestClientConfiguration from environment headers. Declaration public static RestClientConfiguration FromEnvironment(string environmentVariable = \"BOT_TOKEN\", AuthenticationTokenType authenticationTokenType = AuthenticationTokenType.Bot) Parameters Type Name Description String environmentVariable the name of the environment variable containing the token. AuthenticationTokenType authenticationTokenType the authentication token type contained in the environment variable. Returns Type Description RestClientConfiguration the RestClientConfiguration created from the environment headers. Explicit Interface Implementations | Improve this Doc View Source ICloneable.Clone() Declaration object ICloneable.Clone() Returns Type Description Object Implements ICloneable<TSelf> System.ICloneable"
  },
  "api/Strade.Rpc.AuthorizationMode.html": {
    "href": "api/Strade.Rpc.AuthorizationMode.html",
    "title": "Enum AuthorizationMode | Strade Developer Documentation",
    "keywords": "Enum AuthorizationMode A set of supported authorization modes. Namespace : Strade.Rpc Assembly : Strade.Rpc.dll Syntax public enum AuthorizationMode : byte Fields Name Description Modal Denotes that the user should be authorized using the modal (if selected then the user's discord will open and ask for permission). Token Denotes that the RPC token method should be used to authorize the user (if selected the application must be an approved game). Extension Methods EnumExtensions.GetName<AuthorizationMode>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Rpc.DiscordRpcClient.html": {
    "href": "api/Strade.Rpc.DiscordRpcClient.html",
    "title": "Class DiscordRpcClient | Strade Developer Documentation",
    "keywords": "Class DiscordRpcClient An discord client that uses the local RPC server of a running discord instance on the local host computer to interact with the user. Inheritance Object DiscordRpcClient Implements IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc Assembly : Strade.Rpc.dll Syntax public class DiscordRpcClient : IDisposable Constructors | Improve this Doc View Source DiscordRpcClient(RpcClientConfiguration, ILogger) Initializes a new instance of the DiscordRpcClient class. Declaration public DiscordRpcClient(RpcClientConfiguration configuration, ILogger logger = null) Parameters Type Name Description RpcClientConfiguration configuration the configuration for the client. ILogger logger the optional logger used for logging; or null to disable logging. Exceptions Type Condition ArgumentNullException thrown if the specified configuration parameter is null . | Improve this Doc View Source DiscordRpcClient(ITransport, RpcClientConfiguration, ILogger) Initializes a new instance of the DiscordRpcClient class. Declaration public DiscordRpcClient(ITransport transport, RpcClientConfiguration configuration, ILogger logger = null) Parameters Type Name Description ITransport transport the transport to use for communication with the local RPC server. RpcClientConfiguration configuration the configuration for the client. ILogger logger the optional logger used for logging; or null to disable logging. Exceptions Type Condition ArgumentNullException thrown if the specified configuration parameter is null . ArgumentNullException thrown if the specified transport is null . Fields | Improve this Doc View Source DefaultAuthorizationMode Gets the default AuthorizationMode . Declaration public const AuthorizationMode DefaultAuthorizationMode = AuthorizationMode.Modal Field Value Type Description AuthorizationMode | Improve this Doc View Source DefaultScopes The default scopes the client authorizes with. Declaration public static readonly IReadOnlyList<string> DefaultScopes Field Value Type Description IReadOnlyList < String > | Improve this Doc View Source RpcTokenEndpoint The RPC token endpoint used to request RPC tokens. Declaration public const string RpcTokenEndpoint = \"https://discordapp.com/api/oauth2/token/rpc\" Field Value Type Description String | Improve this Doc View Source TokenEndpoint Gets the discord OAuth2 token endpoint used to retrieve a token by a client token. Declaration public const string TokenEndpoint = \"https://discordapp.com/api/oauth2/token\" Field Value Type Description String Properties | Improve this Doc View Source Application Gets information about the authenticated application; if present. Declaration public RpcApplication Application { get; } Property Value Type Description RpcApplication information about the authenticated application; if present. | Improve this Doc View Source Connection Declaration public RpcConnection Connection { get; } Property Value Type Description RpcConnection | Improve this Doc View Source CurrentUser Gets information about the current user; if present. Declaration public CurrentUser CurrentUser { get; } Property Value Type Description CurrentUser information about the current user; if present. | Improve this Doc View Source EndpointInformation Gets information about the endpoint connected to; if present. Declaration public RpcEndpointInformation EndpointInformation { get; } Property Value Type Description RpcEndpointInformation information about the endpoint connected to; if present. | Improve this Doc View Source IsAuthenticated Gets a value indicating whether the RPC application is authenticated. Declaration public bool IsAuthenticated { get; } Property Value Type Description Boolean a value indicating whether the RPC application is authenticated. | Improve this Doc View Source IsConnected Gets a value indicating whether the transport is connected. Declaration public bool IsConnected { get; } Property Value Type Description Boolean a value indicating whether the transport is connected. | Improve this Doc View Source SerializerOptions Declaration public JsonSerializerOptions SerializerOptions { get; } Property Value Type Description JsonSerializerOptions Methods | Improve this Doc View Source AcceptJoinRequestAsync(Snowflake, CancellationToken) Accepts the join request from the user specified by userId asynchronously. Declaration public Task AcceptJoinRequestAsync(Snowflake userId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake userId the snowflake identifier of the user. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source AuthenticateAsync(String, CancellationToken) Authenticates the client asynchronously. Declaration public Task AuthenticateAsync(string accessToken, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String accessToken the OAuth2 access token. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source AuthorizeAsync(IEnumerable<String>, Boolean, AuthorizationMode, CancellationToken) Authorizes/authenticates the client asynchronously. Declaration public Task<OAuthToken> AuthorizeAsync(IEnumerable<string> scopes = null, bool authenticate = true, AuthorizationMode authorizationMode = AuthorizationMode.Modal, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IEnumerable < String > scopes the OAuth2 scopes to authenticate with. Boolean authenticate a value indicating whether the client should be also authenticated. AuthorizationMode authorizationMode the authorization mode to use for authorization. CancellationToken cancellationToken Returns Type Description Task < OAuthToken > a task that represents the asynchronous operation. The task result is the OAuth2 access token. Exceptions Type Condition RpcException thrown if a RPC command error occurs. InvalidOperationException thrown if no client secret was specified in the configuration ( ClientSecret ). InvalidOperationException thrown if the client is already authenticated. | Improve this Doc View Source CaptureShortcutAsync(CancellationToken) Starts capturing a shortcut asynchronously. Declaration public Task<ShortcutCombination> CaptureShortcutAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < ShortcutCombination > a task that represents the asynchronous operation. The task result is the shortcut combination captured. Remarks This method blocks until the shortcut capture is stopped, call StopCaptureShortcutAsync(CancellationToken) to return the result. You can also listen for ShortcutCaptured events to see when the shortcut changed. Examples private async Task<ShortcutCombination> CaptureShortcutAsync(CancellationToken cancellationToken = default) { cancellationToken.ThrowIfCancellationRequested(); // register event to stop capturing Client.ShortcutCaptured += Client_ShortcutCaptured; try { // wait until the event was triggered and capturing completed return await Client.CaptureShortcutAsync(cancellationToken); } finally { // capturing finished, unregister event Client.ShortcutCaptured -= Client_ShortcutCaptured; } } private async Task Client_ShortcutCaptured(object sender, ShortcutCapturedEventArgs eventArgs) { // [CTRL] + [any] if (eventArgs.Shortcuts.Any(s => s.Name.Equals(\"ctrl\"))) { // stop capturing await Client.StopCaptureShortcutAsync(); } } Exceptions Type Condition InvalidOperationException thrown if a shortcut is already being captured. RpcException thrown if a RPC command error occurs. See Also ShortcutCaptured StopCaptureShortcutAsync(CancellationToken) | Improve this Doc View Source CloseJoinRequestAsync(Snowflake, CancellationToken) Closes the join request for the user specified userId asynchronously. Declaration public Task CloseJoinRequestAsync(Snowflake userId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake userId the snowflake identifier of the user to close the join request for. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source ConnectAsync(CancellationToken) Connects to the RPC endpoint asynchronously. Declaration public Task ConnectAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition TimeoutException thrown if the endpoint did not send a ready event within the ready timeout. | Improve this Doc View Source DeselectCurrentTextChannelAsync(CancellationToken) Deselects the current text channel asynchronously. Declaration public Task DeselectCurrentTextChannelAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition RpcException thrown if a RPC command error occurs. | Improve this Doc View Source DisconnectAsync(CancellationToken) Disconnects from the remote endpoint asynchronously. Declaration public Task DisconnectAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source GetChannelAsync(Snowflake, CancellationToken) Gets an RPC channel specified by channelId asynchronously. Declaration public Task<RpcChannel> GetChannelAsync(Snowflake channelId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake channelId the snowflake identifier of the channel to retrieve. CancellationToken cancellationToken Returns Type Description Task < RpcChannel > a task that represents the asynchronous operation. Exceptions Type Condition RpcException thrown if a RPC command error occurs. | Improve this Doc View Source GetChannelsAsync(Snowflake, CancellationToken) Gets all channels in the guild specified by guildId asynchronously. Declaration public Task<IReadOnlyList<RpcChannel>> GetChannelsAsync(Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the guild snowflake identifier. CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < RpcChannel >> a task that represents the asynchronous operation should be canceled. The task result is a list of the channels in the guild. Exceptions Type Condition RpcException thrown if a RPC command error occurs. | Improve this Doc View Source GetCurrentVoiceChannelAsync(CancellationToken) Gets the current voice channel the user is connected to asynchronously. Declaration public Task<RpcVoiceChannel> GetCurrentVoiceChannelAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < RpcVoiceChannel > a task that represents the asynchronous operation should be canceled. The task result is the current voice channel the user is connected to; or null if the user is not connected to a voice channel. Exceptions Type Condition RpcException thrown if a RPC command error occurs. | Improve this Doc View Source GetGuildAsync(Snowflake, CancellationToken) Gets the guild specified by guildId asynchronously. Declaration public Task<RpcGuild> GetGuildAsync(Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild to request. CancellationToken cancellationToken Returns Type Description Task < RpcGuild > a task that represents the asynchronous operation. The task result is the guild. Exceptions Type Condition RpcException thrown if a RPC command error occurs. | Improve this Doc View Source GetGuildAsync(Snowflake, TimeSpan, CancellationToken) Gets the guild specified by guildId asynchronously. Declaration public Task<RpcGuild> GetGuildAsync(Snowflake guildId, TimeSpan timeout, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild to request. TimeSpan timeout the timeout when the request should be aborted, if the guild data has not been retrieved. CancellationToken cancellationToken Returns Type Description Task < RpcGuild > a task that represents the asynchronous operation. The task result is the guild. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified timeout is not in range of 1 second - 60 seconds. RpcException thrown if a RPC command error occurs. | Improve this Doc View Source GetGuildsAsync(CancellationToken) Gets all guilds asynchronously. Declaration public Task<IReadOnlyList<RpcGuild>> GetGuildsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IReadOnlyList < RpcGuild >> a task that represents the asynchronous operation. The task result is a list that contains the user guilds. Exceptions Type Condition RpcException thrown if a RPC command error occurs. | Improve this Doc View Source GetVoiceSettingsAsync(CancellationToken) Gets the user's voice settings asynchronously. Declaration public Task<RpcVoiceSettings> GetVoiceSettingsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < RpcVoiceSettings > a task that represents the asynchronous operation should be canceled. The task result is the user voice settings information. Exceptions Type Condition RpcException thrown if a RPC command error occurs. | Improve this Doc View Source JoinVoiceChannelAsync(Snowflake, Boolean, CancellationToken) Joins the voice channel specified by voiceChannelId asynchronously. Declaration public Task<RpcVoiceChannel> JoinVoiceChannelAsync(Snowflake voiceChannelId, bool force = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake voiceChannelId the snowflake identifier of the channel to join. Boolean force a value indicating whether the user should be forced to join the voice channel. CancellationToken cancellationToken Returns Type Description Task < RpcVoiceChannel > a task that represents the asynchronous operation. Exceptions Type Condition RpcException thrown if a RPC command error occurs. | Improve this Doc View Source JoinVoiceChannelAsync(Snowflake, TimeSpan, Boolean, CancellationToken) Joins the voice channel specified by voiceChannelId asynchronously. Declaration public Task<RpcVoiceChannel> JoinVoiceChannelAsync(Snowflake voiceChannelId, TimeSpan timeout, bool force = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake voiceChannelId the snowflake identifier of the channel to join. TimeSpan timeout the join timeout. Boolean force a value indicating whether the user should be forced to join the voice channel. CancellationToken cancellationToken Returns Type Description Task < RpcVoiceChannel > a task that represents the asynchronous operation. The task result is the voice channel joined. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified timeout is not in range of 1 second - 60 seconds. RpcException thrown if a RPC command error occurs. | Improve this Doc View Source LeaveVoiceChannelAsync(CancellationToken) Leaves the voice channel the user is connected to asynchronously. Declaration public Task LeaveVoiceChannelAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition RpcException thrown if a RPC command error occurs. | Improve this Doc View Source NotifyClientReady(CurrentUser, RpcEndpointInformation) Declaration protected virtual void NotifyClientReady(CurrentUser currentUser, RpcEndpointInformation endpointInformation) Parameters Type Name Description CurrentUser currentUser RpcEndpointInformation endpointInformation | Improve this Doc View Source OnActivityJoinAsync(ActivityJoinEventArgs) Dispatches the ActivityJoin event asynchronously. Declaration protected virtual Task OnActivityJoinAsync(ActivityJoinEventArgs eventArgs) Parameters Type Name Description ActivityJoinEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnActivityJoinRequestAsync(ActivityJoinRequestEventArgs) Dispatches the ActivityJoinRequest event asynchronously. Declaration protected virtual Task OnActivityJoinRequestAsync(ActivityJoinRequestEventArgs eventArgs) Parameters Type Name Description ActivityJoinRequestEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnActivitySpectateAsync(ActivitySpectateEventArgs) Dispatches the ActivitySpectate event asynchronously. Declaration protected virtual Task OnActivitySpectateAsync(ActivitySpectateEventArgs eventArgs) Parameters Type Name Description ActivitySpectateEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnChannelCreatedAsync(ChannelCreatedEventArgs) Dispatches the ChannelCreated event asynchronously. Declaration protected virtual Task OnChannelCreatedAsync(ChannelCreatedEventArgs eventArgs) Parameters Type Name Description ChannelCreatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnGuildCreatedAsync(GuildCreatedEventArgs) Dispatches the GuildCreated event asynchronously. Declaration protected virtual Task OnGuildCreatedAsync(GuildCreatedEventArgs eventArgs) Parameters Type Name Description GuildCreatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnGuildStatusAsync(GuildStatusEventArgs) Dispatches the GuildStatus event asynchronously. Declaration protected virtual Task OnGuildStatusAsync(GuildStatusEventArgs eventArgs) Parameters Type Name Description GuildStatusEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnMessageCreatedAsync(MessageCreatedEventArgs) Dispatches the MessageCreated event asynchronously. Declaration protected virtual Task OnMessageCreatedAsync(MessageCreatedEventArgs eventArgs) Parameters Type Name Description MessageCreatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnMessageDeletedAsync(MessageDeletedEventArgs) Dispatches the MessageDeleted event asynchronously. Declaration protected virtual Task OnMessageDeletedAsync(MessageDeletedEventArgs eventArgs) Parameters Type Name Description MessageDeletedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnMessageUpdatedAsync(MessageUpdatedEventArgs) Dispatches the MessageUpdated event asynchronously. Declaration protected virtual Task OnMessageUpdatedAsync(MessageUpdatedEventArgs eventArgs) Parameters Type Name Description MessageUpdatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnPayloadErrorAsync(PayloadErrorEventArgs) Dispatches the PayloadError event asynchronously. Declaration protected virtual Task OnPayloadErrorAsync(PayloadErrorEventArgs eventArgs) Parameters Type Name Description PayloadErrorEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnPayloadReceivedAsync(PayloadReceivedEventArgs) Dispatches the PayloadReceived event asynchronously. Declaration protected virtual Task OnPayloadReceivedAsync(PayloadReceivedEventArgs eventArgs) Parameters Type Name Description PayloadReceivedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnReadyAsync(ReadyEventArgs) Dispatches the Ready event asynchronously. Declaration protected virtual Task OnReadyAsync(ReadyEventArgs eventArgs) Parameters Type Name Description ReadyEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnShortcutCapturedAsync(ShortcutCapturedEventArgs) Dispatches the ShortcutCaptured event asynchronously. Declaration protected virtual Task OnShortcutCapturedAsync(ShortcutCapturedEventArgs eventArgs) Parameters Type Name Description ShortcutCapturedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnSpeakingStartedAsync(SpeakingEventArgs) Dispatches the SpeakingStarted event asynchronously. Declaration protected virtual Task OnSpeakingStartedAsync(SpeakingEventArgs eventArgs) Parameters Type Name Description SpeakingEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnSpeakingStoppedAsync(SpeakingEventArgs) Dispatches the SpeakingStopped event asynchronously. Declaration protected virtual Task OnSpeakingStoppedAsync(SpeakingEventArgs eventArgs) Parameters Type Name Description SpeakingEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnVoiceChannelChangedAsync(VoiceChannelChangedEventArgs) Dispatches the VoiceChannelChanged event asynchronously. Declaration protected virtual Task OnVoiceChannelChangedAsync(VoiceChannelChangedEventArgs eventArgs) Parameters Type Name Description VoiceChannelChangedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnVoiceConnectionStatusUpdatedAsync(VoiceConnectionStatusUpdatedEventArgs) Dispatches the VoiceConnectionStatusUpdated event asynchronously. Declaration protected virtual Task OnVoiceConnectionStatusUpdatedAsync(VoiceConnectionStatusUpdatedEventArgs eventArgs) Parameters Type Name Description VoiceConnectionStatusUpdatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnVoiceSettingsUpdatedAsync(VoiceSettingsUpdatedEventArgs) Dispatches the VoiceSettingsUpdated event asynchronously. Declaration protected virtual Task OnVoiceSettingsUpdatedAsync(VoiceSettingsUpdatedEventArgs eventArgs) Parameters Type Name Description VoiceSettingsUpdatedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnVoiceStateCreatedAsync(VoiceStateEventArgs) Dispatches the VoiceStateCreated event asynchronously. Declaration protected virtual Task OnVoiceStateCreatedAsync(VoiceStateEventArgs eventArgs) Parameters Type Name Description VoiceStateEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnVoiceStateDeletedAsync(VoiceStateEventArgs) Dispatches the VoiceStateDeleted event asynchronously. Declaration protected virtual Task OnVoiceStateDeletedAsync(VoiceStateEventArgs eventArgs) Parameters Type Name Description VoiceStateEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnVoiceStateUpdatedAsync(VoiceStateEventArgs) Dispatches the VoiceStateUpdated event asynchronously. Declaration protected virtual Task OnVoiceStateUpdatedAsync(VoiceStateEventArgs eventArgs) Parameters Type Name Description VoiceStateEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source QueryAsync<TResponse>(RpcCommand, Object, CancellationToken) Queries a command asynchronously. Declaration public Task<TResponse> QueryAsync<TResponse>(RpcCommand command, object data, CancellationToken cancellationToken = default(CancellationToken)) where TResponse : class, new() Parameters Type Name Description RpcCommand command the command to send. Object data the payload to send. CancellationToken cancellationToken Returns Type Description Task <TResponse> a task that represents the asynchronous operation. The task result is the command response. Type Parameters Name Description TResponse the type of the command response. Exceptions Type Condition RpcException thrown if a RPC command error occurs. | Improve this Doc View Source RequireAuthentication() Ensures that the client is authenticated. Declaration protected void RequireAuthentication() Exceptions Type Condition InvalidOperationException thrown if the client is not authenticated. | Improve this Doc View Source RequireScope(String) Ensures that the client authenticates with the specified scope . Declaration protected void RequireScope(string scope) Parameters Type Name Description String scope the scope to check for. Exceptions Type Condition MissingScopeException thrown if the specified scope is missing. | Improve this Doc View Source Run(CancellationToken) Runs the client. Declaration public void Run(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Remarks The bot stops gracefully if the application's domain process is exited or the console cancel key is pressed. The Run(CancellationToken) method is the synchronous wrapper for the RunAsync(CancellationToken) method. | Improve this Doc View Source RunAsync(CancellationToken) Runs the client asynchronously. Declaration public Task RunAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Remarks The bot stops gracefully if the application's domain process is exited or the console cancel key is pressed. | Improve this Doc View Source SelectTextChannelAsync(Snowflake, CancellationToken) Joins the text channel specified by textChannelId asynchronously. Declaration public Task<RpcTextChannel> SelectTextChannelAsync(Snowflake textChannelId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake textChannelId the snowflake identifier of the channel to select. CancellationToken cancellationToken Returns Type Description Task < RpcTextChannel > a task that represents the asynchronous operation. Exceptions Type Condition RpcException thrown if a RPC command error occurs. | Improve this Doc View Source SelectTextChannelAsync(Snowflake, TimeSpan, CancellationToken) Joins the text channel specified by textChannelId asynchronously. Declaration public Task<RpcTextChannel> SelectTextChannelAsync(Snowflake textChannelId, TimeSpan timeout, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake textChannelId the snowflake identifier of the channel to select. TimeSpan timeout the timeout. CancellationToken cancellationToken Returns Type Description Task < RpcTextChannel > a task that represents the asynchronous operation. The task result is the voice channel joined. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified timeout is not in range of 1 second - 60 seconds. RpcException thrown if a RPC command error occurs. | Improve this Doc View Source SetCertifiedDevicesAsync(IReadOnlyList<CertifiedRpcDevice>, CancellationToken) Sets the certified devices asynchronously. Declaration public Task SetCertifiedDevicesAsync(IReadOnlyList<CertifiedRpcDevice> devices, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IReadOnlyList < CertifiedRpcDevice > devices a list of certified devices. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition RpcException thrown if a RPC command error occurs. | Improve this Doc View Source SetUserVoiceSettingsAsync(Snowflake, UserVoiceSettings, CancellationToken) Sets the voice settings for the user specified by userId asynchronously. Declaration public Task SetUserVoiceSettingsAsync(Snowflake userId, UserVoiceSettings voiceSettings, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake userId the snowflake identifier of the target user to update the voice settings for. UserVoiceSettings voiceSettings the voice settings for the user. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition RpcException thrown if a RPC command error occurs. ArgumentNullException thrown if the specified voiceSettings is null . | Improve this Doc View Source SetVoiceSettingsAsync(VoiceSettingsModifyProperties, CancellationToken) Sets the client's voice settings asynchronously. Declaration public Task<RpcVoiceSettings> SetVoiceSettingsAsync(VoiceSettingsModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description VoiceSettingsModifyProperties properties the properties used to modify the voice settings. CancellationToken cancellationToken Returns Type Description Task < RpcVoiceSettings > a task that represents the asynchronous operation. Exceptions Type Condition RpcException thrown if a RPC command error occurs. ArgumentNullException thrown if the specified properties is null . | Improve this Doc View Source StopCaptureShortcutAsync(CancellationToken) Stops capturing a shortcut combination asynchronously. Declaration public Task StopCaptureShortcutAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition InvalidOperationException thrown if a shortcut is not being captured. RpcException thrown if a RPC command error occurs. See Also CaptureShortcutAsync(CancellationToken) | Improve this Doc View Source SubscribeAsync(ChannelSubscriptionEvent, Snowflake, CancellationToken) Subscribes to a channel-scoped event asynchronously. Declaration public Task SubscribeAsync(ChannelSubscriptionEvent subscriptionEvent, Snowflake channelId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description ChannelSubscriptionEvent subscriptionEvent the event to subscribe to. Snowflake channelId the snowflake identifier of the channel to subscribe the event for. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition RpcException thrown if a RPC command error occurs. | Improve this Doc View Source SubscribeAsync(GlobalSubscriptionEvent, CancellationToken) Subscribes to a global event asynchronously. Declaration public Task SubscribeAsync(GlobalSubscriptionEvent subscriptionEvent, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GlobalSubscriptionEvent subscriptionEvent the event to subscribe to. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition RpcException thrown if a RPC command error occurs. | Improve this Doc View Source SubscribeAsync(GuildSubscriptionEvent, Snowflake, CancellationToken) Subscribes to a guild-scoped event asynchronously. Declaration public Task SubscribeAsync(GuildSubscriptionEvent subscriptionEvent, Snowflake guildId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GuildSubscriptionEvent subscriptionEvent the event to subscribe to. Snowflake guildId the snowflake identifier of the guild to subscribe the event for. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition RpcException thrown if a RPC command error occurs. | Improve this Doc View Source UnsubscribeAsync(ChannelSubscriptionEvent, Snowflake, Boolean, CancellationToken) Unsubscribes from a channel-scoped event asynchronously. Declaration public Task<bool> UnsubscribeAsync(ChannelSubscriptionEvent subscriptionEvent, Snowflake channelId, bool force = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description ChannelSubscriptionEvent subscriptionEvent the event to unsubscribe. Snowflake channelId the snowflake identifier of the channel to unsubscribe the event from. Boolean force a value indicating whether the subscription should be forced to be unsubscribed, even if multiple handlers registers the event. CancellationToken cancellationToken Returns Type Description Task < Boolean > a task that represents the asynchronous operation. The task result is a value indicating whether the event was unsubscribed completely. If false , then the event was not subscribed, or the event is subscribed multiple times; otherwise true , the client unsubscribed the event from the RPC server and will not receive any further related events. Exceptions Type Condition RpcException thrown if a RPC command error occurs. | Improve this Doc View Source UnsubscribeAsync(GlobalSubscriptionEvent, Boolean, CancellationToken) Unsubscribes from a global event asynchronously. Declaration public Task<bool> UnsubscribeAsync(GlobalSubscriptionEvent subscriptionEvent, bool force = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GlobalSubscriptionEvent subscriptionEvent the event to unsubscribe. Boolean force a value indicating whether the subscription should be forced to be unsubscribed, even if multiple handlers registers the event. CancellationToken cancellationToken Returns Type Description Task < Boolean > a task that represents the asynchronous operation. The task result is a value indicating whether the event was unsubscribed completely. If false , then the event was not subscribed, or the event is subscribed multiple times; otherwise true , the client unsubscribed the event from the RPC server and will not receive any further related events. Exceptions Type Condition RpcException thrown if a RPC command error occurs. | Improve this Doc View Source UnsubscribeAsync(GuildSubscriptionEvent, Snowflake, Boolean, CancellationToken) Unsubscribes from a guild-scoped event asynchronously. Declaration public Task<bool> UnsubscribeAsync(GuildSubscriptionEvent subscriptionEvent, Snowflake guildId, bool force = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description GuildSubscriptionEvent subscriptionEvent the event to unsubscribe. Snowflake guildId the snowflake identifier of the guild to unsubscribe the event from. Boolean force a value indicating whether the subscription should be forced to be unsubscribed, even if multiple handlers registers the event. CancellationToken cancellationToken Returns Type Description Task < Boolean > a task that represents the asynchronous operation. The task result is a value indicating whether the event was unsubscribed completely. If false , then the event was not subscribed, or the event is subscribed multiple times; otherwise true , the client unsubscribed the event from the RPC server and will not receive any further related events. Exceptions Type Condition RpcException thrown if a RPC command error occurs. | Improve this Doc View Source UpdateActivityAsync(Activity, Process, CancellationToken) Updates the client's activity asynchronously. Declaration public Task UpdateActivityAsync(Activity activity, Process process, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Activity activity the new activity for the user. Process process the process the activity is for; the activity will disappear when the process exits. This may be used if the activity is for a different process; else use GetCurrentProcess() . CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition RpcException thrown if a RPC command error occurs. ArgumentNullException thrown if the specified activity is null . ArgumentNullException thrown if the specified process is null . | Improve this Doc View Source UpdateActivityAsync(Activity, CancellationToken) Updates the client's activity asynchronously. Declaration public Task UpdateActivityAsync(Activity activity, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Activity activity the new activity for the user. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition RpcException thrown if a RPC command error occurs. Events | Improve this Doc View Source ActivityJoin Asynchronous event which is dispatched when the user clicked on an activity join request. Declaration public event AsyncEventHandler<ActivityJoinEventArgs> ActivityJoin Event Type Type Description AsyncEventHandler < ActivityJoinEventArgs > | Improve this Doc View Source ActivityJoinRequest Asynchronous event which is dispatched when the user receives a Rich Presence Ask to join request. Declaration public event AsyncEventHandler<ActivityJoinRequestEventArgs> ActivityJoinRequest Event Type Type Description AsyncEventHandler < ActivityJoinRequestEventArgs > | Improve this Doc View Source ActivitySpectate Asynchronous event which is dispatched when the user clicks on a Rich presence spectate invite to spectate a game. Declaration public event AsyncEventHandler<ActivitySpectateEventArgs> ActivitySpectate Event Type Type Description AsyncEventHandler < ActivitySpectateEventArgs > | Improve this Doc View Source ChannelCreated Asynchronous event which is dispatched when a channel was created. Declaration public event AsyncEventHandler<ChannelCreatedEventArgs> ChannelCreated Event Type Type Description AsyncEventHandler < ChannelCreatedEventArgs > | Improve this Doc View Source GuildCreated Asynchronous event which is dispatched when a guild was created. Declaration public event AsyncEventHandler<GuildCreatedEventArgs> GuildCreated Event Type Type Description AsyncEventHandler < GuildCreatedEventArgs > | Improve this Doc View Source GuildStatus Asynchronous event which is dispatched when a guild's state changed. Declaration public event AsyncEventHandler<GuildStatusEventArgs> GuildStatus Event Type Type Description AsyncEventHandler < GuildStatusEventArgs > | Improve this Doc View Source MessageCreated Asynchronous event which is dispatched when a message was received. Declaration public event AsyncEventHandler<MessageCreatedEventArgs> MessageCreated Event Type Type Description AsyncEventHandler < MessageCreatedEventArgs > | Improve this Doc View Source MessageDeleted Asynchronous event which is dispatched when a message was deleted. Declaration public event AsyncEventHandler<MessageDeletedEventArgs> MessageDeleted Event Type Type Description AsyncEventHandler < MessageDeletedEventArgs > | Improve this Doc View Source MessageUpdated Asynchronous event which is dispatched when a message was updated. Declaration public event AsyncEventHandler<MessageUpdatedEventArgs> MessageUpdated Event Type Type Description AsyncEventHandler < MessageUpdatedEventArgs > | Improve this Doc View Source PayloadError Asynchronous event which is dispatched when a RPC error occurred while executing a command. Declaration public event AsyncEventHandler<PayloadErrorEventArgs> PayloadError Event Type Type Description AsyncEventHandler < PayloadErrorEventArgs > | Improve this Doc View Source PayloadReceived Asynchronous event which is dispatched when a payload was received. Declaration public event AsyncEventHandler<PayloadReceivedEventArgs> PayloadReceived Event Type Type Description AsyncEventHandler < PayloadReceivedEventArgs > | Improve this Doc View Source Ready Asynchronous event which is dispatched when the ready event was received from the RPC endpoint. Declaration public event AsyncEventHandler<ReadyEventArgs> Ready Event Type Type Description AsyncEventHandler < ReadyEventArgs > | Improve this Doc View Source ShortcutCaptured Asynchronous event which is dispatched when the shortcut combination was changed. Declaration public event AsyncEventHandler<ShortcutCapturedEventArgs> ShortcutCaptured Event Type Type Description AsyncEventHandler < ShortcutCapturedEventArgs > | Improve this Doc View Source SpeakingStarted Asynchronous event which is dispatched when a user Started speaking. Declaration public event AsyncEventHandler<SpeakingEventArgs> SpeakingStarted Event Type Type Description AsyncEventHandler < SpeakingEventArgs > Remarks This event needs to be subscribed. | Improve this Doc View Source SpeakingStopped Asynchronous event which is dispatched when a user stopped speaking. Declaration public event AsyncEventHandler<SpeakingEventArgs> SpeakingStopped Event Type Type Description AsyncEventHandler < SpeakingEventArgs > Remarks This event needs to be subscribed. | Improve this Doc View Source VoiceChannelChanged Asynchronous event which is dispatched when the user joined or left a voice channel. Declaration public event AsyncEventHandler<VoiceChannelChangedEventArgs> VoiceChannelChanged Event Type Type Description AsyncEventHandler < VoiceChannelChangedEventArgs > | Improve this Doc View Source VoiceConnectionStatusUpdated Asynchronous event which is dispatched when the voice connection information was updated. Declaration public event AsyncEventHandler<VoiceConnectionStatusUpdatedEventArgs> VoiceConnectionStatusUpdated Event Type Type Description AsyncEventHandler < VoiceConnectionStatusUpdatedEventArgs > | Improve this Doc View Source VoiceSettingsUpdated Asynchronous event which is dispatched when the user's voice settings were updated. Declaration public event AsyncEventHandler<VoiceSettingsUpdatedEventArgs> VoiceSettingsUpdated Event Type Type Description AsyncEventHandler < VoiceSettingsUpdatedEventArgs > | Improve this Doc View Source VoiceStateCreated Asynchronous event which is dispatched when a voice state was created (a user joined a channel). Declaration public event AsyncEventHandler<VoiceStateEventArgs> VoiceStateCreated Event Type Type Description AsyncEventHandler < VoiceStateEventArgs > | Improve this Doc View Source VoiceStateDeleted Asynchronous event which is dispatched when a voice state was deleted (a user left a voice channel). Declaration public event AsyncEventHandler<VoiceStateEventArgs> VoiceStateDeleted Event Type Type Description AsyncEventHandler < VoiceStateEventArgs > | Improve this Doc View Source VoiceStateUpdated Asynchronous event which is dispatched when a voice state was update (a user switched the channel or was moved to another channel). Declaration public event AsyncEventHandler<VoiceStateEventArgs> VoiceStateUpdated Event Type Type Description AsyncEventHandler < VoiceStateEventArgs > Implements System.IDisposable"
  },
  "api/Strade.Rpc.Entities.CaptureAction.html": {
    "href": "api/Strade.Rpc.Entities.CaptureAction.html",
    "title": "Enum CaptureAction | Strade Developer Documentation",
    "keywords": "Enum CaptureAction A set of supports shortcut capture actions. Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax [JsonConverter(typeof(StringEnumConverter<CaptureAction>))] public enum CaptureAction : byte Fields Name Description Start Denotes that capturing should be started. Stop Denotes that capturing should be stopped. Extension Methods EnumExtensions.GetName<CaptureAction>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Rpc.Entities.CertifiedRpcAudioInputDevice.html": {
    "href": "api/Strade.Rpc.Entities.CertifiedRpcAudioInputDevice.html",
    "title": "Class CertifiedRpcAudioInputDevice | Strade Developer Documentation",
    "keywords": "Class CertifiedRpcAudioInputDevice Represents a certified RPC audio input device. Inheritance Object CertifiedRpcDevice CertifiedRpcAudioInputDevice Inherited Members CertifiedRpcDevice.Id CertifiedRpcDevice.Model CertifiedRpcDevice.RelatedDevices CertifiedRpcDevice.Vendor Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public sealed class CertifiedRpcAudioInputDevice : CertifiedRpcDevice Properties | Improve this Doc View Source AutomaticGainControl Gets or sets a value indicating whether the device has automatic gain control enabled. Declaration [JsonPropertyName(\"automatic_gain_control\")] public bool AutomaticGainControl { get; set; } Property Value Type Description Boolean a value indicating whether the device has automatic gain control enabled. | Improve this Doc View Source EchoCancellation Gets or sets a value indicating whether the device has echo cancellation enabled. Declaration [JsonPropertyName(\"echo_cancellation\")] public bool EchoCancellation { get; set; } Property Value Type Description Boolean a value indicating whether the device has echo cancellation enabled. | Improve this Doc View Source IsHardwareMuted Gets or sets a value indicating whether the device is hardware muted. Declaration [JsonPropertyName(\"hardware_mute\")] public bool IsHardwareMuted { get; set; } Property Value Type Description Boolean a value indicating whether the device is hardware muted. | Improve this Doc View Source NoiseSuppression Gets or sets a value indicating whether the device has noise suppression enabled. Declaration [JsonPropertyName(\"noise_suppression\")] public bool NoiseSuppression { get; set; } Property Value Type Description Boolean a value indicating whether the device has noise suppression enabled. | Improve this Doc View Source Type Declaration [JsonPropertyName(\"type\")] public override RpcDeviceType Type { get; } Property Value Type Description RpcDeviceType Overrides CertifiedRpcDevice.Type"
  },
  "api/Strade.Rpc.Entities.CertifiedRpcAudioOutputDevice.html": {
    "href": "api/Strade.Rpc.Entities.CertifiedRpcAudioOutputDevice.html",
    "title": "Class CertifiedRpcAudioOutputDevice | Strade Developer Documentation",
    "keywords": "Class CertifiedRpcAudioOutputDevice Represents a certified RPC audio output device. Inheritance Object CertifiedRpcDevice CertifiedRpcAudioOutputDevice Inherited Members CertifiedRpcDevice.Id CertifiedRpcDevice.Model CertifiedRpcDevice.RelatedDevices CertifiedRpcDevice.Vendor Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public sealed class CertifiedRpcAudioOutputDevice : CertifiedRpcDevice Properties | Improve this Doc View Source Type Declaration [JsonPropertyName(\"type\")] public override RpcDeviceType Type { get; } Property Value Type Description RpcDeviceType Overrides CertifiedRpcDevice.Type"
  },
  "api/Strade.Rpc.Entities.CertifiedRpcDevice.html": {
    "href": "api/Strade.Rpc.Entities.CertifiedRpcDevice.html",
    "title": "Class CertifiedRpcDevice | Strade Developer Documentation",
    "keywords": "Class CertifiedRpcDevice Represents a certified RPC generic device. Inheritance Object CertifiedRpcDevice CertifiedRpcAudioInputDevice CertifiedRpcAudioOutputDevice CertifiedRpcVideoInputDevice Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public abstract class CertifiedRpcDevice Properties | Improve this Doc View Source Id Gets or sets the identifier ( Id ) of the device. Declaration [JsonPropertyName(\"id\")] public string Id { get; set; } Property Value Type Description String the identifier ( Id ) of the device. | Improve this Doc View Source Model Gets or sets information about the device model. Declaration [JsonPropertyName(\"model\")] public RpcDeviceModel Model { get; set; } Property Value Type Description RpcDeviceModel information about the device model. | Improve this Doc View Source RelatedDevices Gets or sets a list of device identifiers ( Id ) related to the device. Declaration [JsonPropertyName(\"related\")] public IReadOnlyList<string> RelatedDevices { get; set; } Property Value Type Description IReadOnlyList < String > a list of device identifiers ( Id ) related to the device. | Improve this Doc View Source Type Gets the type of the device. Declaration [JsonPropertyName(\"type\")] public abstract RpcDeviceType Type { get; } Property Value Type Description RpcDeviceType the type of the device. | Improve this Doc View Source Vendor Gets or sets information about the device vendor. Declaration [JsonPropertyName(\"vendor\")] public RpcDeviceVendor Vendor { get; set; } Property Value Type Description RpcDeviceVendor information about the device vendor."
  },
  "api/Strade.Rpc.Entities.CertifiedRpcVideoInputDevice.html": {
    "href": "api/Strade.Rpc.Entities.CertifiedRpcVideoInputDevice.html",
    "title": "Class CertifiedRpcVideoInputDevice | Strade Developer Documentation",
    "keywords": "Class CertifiedRpcVideoInputDevice Represents a certified RPC video input device. Inheritance Object CertifiedRpcDevice CertifiedRpcVideoInputDevice Inherited Members CertifiedRpcDevice.Id CertifiedRpcDevice.Model CertifiedRpcDevice.RelatedDevices CertifiedRpcDevice.Vendor Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public sealed class CertifiedRpcVideoInputDevice : CertifiedRpcDevice Properties | Improve this Doc View Source Type Declaration [JsonPropertyName(\"type\")] public override RpcDeviceType Type { get; } Property Value Type Description RpcDeviceType Overrides CertifiedRpcDevice.Type"
  },
  "api/Strade.Rpc.Entities.html": {
    "href": "api/Strade.Rpc.Entities.html",
    "title": "Namespace Strade.Rpc.Entities | Strade Developer Documentation",
    "keywords": "Namespace Strade.Rpc.Entities Classes CertifiedRpcAudioInputDevice Represents a certified RPC audio input device. CertifiedRpcAudioOutputDevice Represents a certified RPC audio output device. CertifiedRpcDevice Represents a certified RPC generic device. CertifiedRpcVideoInputDevice Represents a certified RPC video input device. RpcApplication Represents a RPC application. RpcCategory RpcChannel Represents a RPC channel. RpcDeviceModel Represents a structure that contains information about a RPC device model. RpcDeviceVendor Represents a structure that contains information about a RPC device vendor. RpcEndpointInformation A structure that provides information about a RPC endpoint. RpcGroupChannel Represents a RPC group channel. RpcGuild Contains information about a guild. RpcGuildChannel Represents a RPC guild channel. RpcMessage Represents the inner structure of a RPC message object. RpcPrivateChannel Represents a RPC private (direct message) channel. RpcTextChannel Represents a RPC text channel. RpcVoiceChannel Represents a RPC voice channel. RpcVoiceConfiguration RpcVoiceDevice Represents a structure that contains information about a generic (audio input, audio output or video input) device. RpcVoiceSettings Represents the full structure of a RPC voice settings object. RpcVoiceState Represents a RPC voice state. RpcVoiceUser Represents a user in a voice channel. UserVoiceSettings Contains settings for a voice user. VoiceActivationSettings Represents a structure containing information about the user's voice activation settings. VoiceConnectionInformation Contains information about a voice connection. Structs MessageReference Represents a message reference. Pan A structure that holds an audio pan setting. ShortcutCombination Represents a combination of shortcuts. ShortcutKey Represents a pressed key combination. Enums CaptureAction A set of supports shortcut capture actions. RpcDeviceType A set of supported RPC device types. ShortcutKeyType A set of key types. VoiceActivationType A set of supported voice activation types. VoiceConnectionStatus A set of connection states (see https://discord.com/developers/docs/topics/rpc#voiceconnectionstatus-voice-connection-states for more details)."
  },
  "api/Strade.Rpc.Entities.MessageReference.html": {
    "href": "api/Strade.Rpc.Entities.MessageReference.html",
    "title": "Struct MessageReference | Strade Developer Documentation",
    "keywords": "Struct MessageReference Represents a message reference. Implements IEquatable < MessageReference > Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public struct MessageReference : IEquatable<MessageReference> Constructors | Improve this Doc View Source MessageReference(Snowflake) Initializes a new instance of the MessageReference struct. Declaration public MessageReference(Snowflake id) Parameters Type Name Description Snowflake id the snowflake identifier of the target message. | Improve this Doc View Source MessageReference(MessageReferenceModel) Declaration public MessageReference(MessageReferenceModel model) Parameters Type Name Description MessageReferenceModel model Properties | Improve this Doc View Source Id Gets the snowflake identifier of the target message. Declaration public Snowflake Id { get; } Property Value Type Description Snowflake the snowflake identifier of the target message. Methods | Improve this Doc View Source Equals(MessageReference) Declaration public bool Equals(MessageReference other) Parameters Type Name Description MessageReference other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(MessageReference, MessageReference) Declaration public static bool operator ==(MessageReference left, MessageReference right) Parameters Type Name Description MessageReference left MessageReference right Returns Type Description Boolean | Improve this Doc View Source Inequality(MessageReference, MessageReference) Declaration public static bool operator !=(MessageReference left, MessageReference right) Parameters Type Name Description MessageReference left MessageReference right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Rpc.Entities.Pan.html": {
    "href": "api/Strade.Rpc.Entities.Pan.html",
    "title": "Struct Pan | Strade Developer Documentation",
    "keywords": "Struct Pan A structure that holds an audio pan setting. Implements IEquatable < Pan > Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public struct Pan : IEquatable<Pan> Constructors | Improve this Doc View Source Pan(PanModel) Declaration public Pan(PanModel model) Parameters Type Name Description PanModel model | Improve this Doc View Source Pan(Single) Initializes a new instance of the Pan struct. Declaration public Pan(float master = 1F) Parameters Type Name Description Single master the master pan. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified master pan is out of range ( 0 - 1F ). | Improve this Doc View Source Pan(Single, Single) Initializes a new instance of the Pan struct. Declaration public Pan(float left, float right) Parameters Type Name Description Single left the left pan. Single right the right pan. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified left pan is out of range ( 0 - 1F ). ArgumentOutOfRangeException thrown if the specified right pan is out of range ( 0 - 1F ). Properties | Improve this Doc View Source Left Gets the left pan. Declaration public float Left { get; } Property Value Type Description Single the left pan; ranges from 0F to 1F , the default value is 1F . | Improve this Doc View Source Right Gets the right pan. Declaration public float Right { get; } Property Value Type Description Single the right pan; ranges from 0F to 1F , the default value is 1F . Methods | Improve this Doc View Source Equals(Pan) Declaration public bool Equals(Pan other) Parameters Type Name Description Pan other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(Pan, Pan) Declaration public static bool operator ==(Pan left, Pan right) Parameters Type Name Description Pan left Pan right Returns Type Description Boolean | Improve this Doc View Source Inequality(Pan, Pan) Declaration public static bool operator !=(Pan left, Pan right) Parameters Type Name Description Pan left Pan right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Rpc.Entities.RpcApplication.html": {
    "href": "api/Strade.Rpc.Entities.RpcApplication.html",
    "title": "Class RpcApplication | Strade Developer Documentation",
    "keywords": "Class RpcApplication Represents a RPC application. Inheritance Object RpcApplication Implements IIdentifiable < Snowflake > IHasIcon IHasDescription Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public sealed class RpcApplication : IIdentifiable<Snowflake>, IHasIcon, IHasDescription Constructors | Improve this Doc View Source RpcApplication(RpcApplicationModel) Declaration public RpcApplication(RpcApplicationModel model) Parameters Type Name Description RpcApplicationModel model Properties | Improve this Doc View Source Description Gets the application description. Declaration public string Description { get; } Property Value Type Description String the application description. | Improve this Doc View Source HasIcon Declaration public bool HasIcon { get; } Property Value Type Description Boolean | Improve this Doc View Source IconHash Declaration public string IconHash { get; } Property Value Type Description String | Improve this Doc View Source IconUrl Declaration public Uri IconUrl { get; } Property Value Type Description Uri | Improve this Doc View Source Id Gets the snowflake identifier of the application. Declaration public Snowflake Id { get; } Property Value Type Description Snowflake the snowflake identifier of the application. | Improve this Doc View Source Name Gets the name of the RPC application. Declaration public string Name { get; } Property Value Type Description String the name of the RPC application. | Improve this Doc View Source Origins Gets a list of the RPC origin URLs. Declaration public IReadOnlyList<string> Origins { get; } Property Value Type Description IReadOnlyList < String > a list of the RPC origin URLs. Methods | Improve this Doc View Source BuildIconUrl(ImageFormat, Nullable<Int32>) Declaration public Uri BuildIconUrl(ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description ImageFormat format Nullable < Int32 > size Returns Type Description Uri Implements IIdentifiable<TIdentifier> IHasIcon IHasDescription"
  },
  "api/Strade.Rpc.Entities.RpcCategory.html": {
    "href": "api/Strade.Rpc.Entities.RpcCategory.html",
    "title": "Class RpcCategory | Strade Developer Documentation",
    "keywords": "Class RpcCategory Inheritance Object RpcChannel RpcGuildChannel RpcCategory Inherited Members RpcGuildChannel.GuildId RpcGuildChannel.Position RpcChannel.Id RpcChannel.CreateChannel(RpcChannelModel, Nullable<Snowflake>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public sealed class RpcCategory : RpcGuildChannel Constructors | Improve this Doc View Source RpcCategory(RpcChannelModel, Nullable<Snowflake>) Declaration public RpcCategory(RpcChannelModel model, Snowflake? guildId = default(Snowflake? )) Parameters Type Name Description RpcChannelModel model Nullable < Snowflake > guildId Properties | Improve this Doc View Source Type Declaration public override ChannelType Type { get; } Property Value Type Description ChannelType Overrides RpcChannel.Type"
  },
  "api/Strade.Rpc.Entities.RpcChannel.html": {
    "href": "api/Strade.Rpc.Entities.RpcChannel.html",
    "title": "Class RpcChannel | Strade Developer Documentation",
    "keywords": "Class RpcChannel Represents a RPC channel. Inheritance Object RpcChannel RpcGroupChannel RpcGuildChannel RpcPrivateChannel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public abstract class RpcChannel Constructors | Improve this Doc View Source RpcChannel(RpcChannelModel) Declaration protected RpcChannel(RpcChannelModel model) Parameters Type Name Description RpcChannelModel model Properties | Improve this Doc View Source Id Gets the snowflake identifier of the channel. Declaration public Snowflake Id { get; } Property Value Type Description Snowflake the snowflake identifier of the channel. | Improve this Doc View Source Type Gets the type of the channel. Declaration public abstract ChannelType Type { get; } Property Value Type Description ChannelType the type of the channel. Methods | Improve this Doc View Source CreateChannel(RpcChannelModel, Nullable<Snowflake>) Declaration public static RpcChannel CreateChannel(RpcChannelModel model, Snowflake? guildId = default(Snowflake? )) Parameters Type Name Description RpcChannelModel model Nullable < Snowflake > guildId Returns Type Description RpcChannel"
  },
  "api/Strade.Rpc.Entities.RpcDeviceModel.html": {
    "href": "api/Strade.Rpc.Entities.RpcDeviceModel.html",
    "title": "Class RpcDeviceModel | Strade Developer Documentation",
    "keywords": "Class RpcDeviceModel Represents a structure that contains information about a RPC device model. Inheritance Object RpcDeviceModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public sealed class RpcDeviceModel Constructors | Improve this Doc View Source RpcDeviceModel(String, String) Declaration public RpcDeviceModel(string name, string url) Parameters Type Name Description String name String url Properties | Improve this Doc View Source Name Gets the name of the device model. Declaration [JsonPropertyName(\"name\")] public string Name { get; } Property Value Type Description String the name of the device model. | Improve this Doc View Source Url Gets the URL of the device model. Declaration [JsonPropertyName(\"url\")] public string Url { get; } Property Value Type Description String the URL of the device model."
  },
  "api/Strade.Rpc.Entities.RpcDeviceType.html": {
    "href": "api/Strade.Rpc.Entities.RpcDeviceType.html",
    "title": "Enum RpcDeviceType | Strade Developer Documentation",
    "keywords": "Enum RpcDeviceType A set of supported RPC device types. Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax [JsonConverter(typeof(StringEnumConverter<RpcDeviceType>))] public enum RpcDeviceType : byte Fields Name Description AudioInput Denotes that the device is an audio input device. AudioOutput Denotes that the device is an audio output device. VideoInput Denotes that the device is a video input device. Extension Methods EnumExtensions.GetName<RpcDeviceType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Rpc.Entities.RpcDeviceVendor.html": {
    "href": "api/Strade.Rpc.Entities.RpcDeviceVendor.html",
    "title": "Class RpcDeviceVendor | Strade Developer Documentation",
    "keywords": "Class RpcDeviceVendor Represents a structure that contains information about a RPC device vendor. Inheritance Object RpcDeviceVendor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public sealed class RpcDeviceVendor Constructors | Improve this Doc View Source RpcDeviceVendor(String, String) Declaration public RpcDeviceVendor(string name, string url) Parameters Type Name Description String name String url Properties | Improve this Doc View Source Name Gets the name of the device vendor. Declaration [JsonPropertyName(\"name\")] public string Name { get; } Property Value Type Description String the name of the device vendor. | Improve this Doc View Source Url Gets the URL of the device vendor. Declaration [JsonPropertyName(\"url\")] public string Url { get; } Property Value Type Description String the URL of the device vendor."
  },
  "api/Strade.Rpc.Entities.RpcEndpointInformation.html": {
    "href": "api/Strade.Rpc.Entities.RpcEndpointInformation.html",
    "title": "Class RpcEndpointInformation | Strade Developer Documentation",
    "keywords": "Class RpcEndpointInformation A structure that provides information about a RPC endpoint. Inheritance Object RpcEndpointInformation Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public sealed class RpcEndpointInformation Constructors | Improve this Doc View Source RpcEndpointInformation(RpcEndpointInformationModel) Declaration public RpcEndpointInformation(RpcEndpointInformationModel model) Parameters Type Name Description RpcEndpointInformationModel model Properties | Improve this Doc View Source ApiEndpoint Gets the host URI for the API endpoint. Declaration public string ApiEndpoint { get; } Property Value Type Description String the host URI for the API endpoint. | Improve this Doc View Source CdnHost Gets the host URI for the Content Delivery Node. Declaration public string CdnHost { get; } Property Value Type Description String the host URI for the Content Delivery Node. | Improve this Doc View Source Environment Gets the environment name (e.g. \"development\" , \"production\" ). Declaration public string Environment { get; } Property Value Type Description String the environment name (e.g. \"development\" , \"production\" )."
  },
  "api/Strade.Rpc.Entities.RpcGroupChannel.html": {
    "href": "api/Strade.Rpc.Entities.RpcGroupChannel.html",
    "title": "Class RpcGroupChannel | Strade Developer Documentation",
    "keywords": "Class RpcGroupChannel Represents a RPC group channel. Inheritance Object RpcChannel RpcGroupChannel Inherited Members RpcChannel.Id RpcChannel.CreateChannel(RpcChannelModel, Nullable<Snowflake>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public sealed class RpcGroupChannel : RpcChannel Constructors | Improve this Doc View Source RpcGroupChannel(RpcChannelModel) Declaration public RpcGroupChannel(RpcChannelModel model) Parameters Type Name Description RpcChannelModel model Properties | Improve this Doc View Source Type Declaration public override ChannelType Type { get; } Property Value Type Description ChannelType Overrides RpcChannel.Type"
  },
  "api/Strade.Rpc.Entities.RpcGuild.html": {
    "href": "api/Strade.Rpc.Entities.RpcGuild.html",
    "title": "Class RpcGuild | Strade Developer Documentation",
    "keywords": "Class RpcGuild Contains information about a guild. Inheritance Object RpcGuild Implements IIdentifiable < Snowflake > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public class RpcGuild : IIdentifiable<Snowflake> Constructors | Improve this Doc View Source RpcGuild(RpcGuildModel) Declaration public RpcGuild(RpcGuildModel model) Parameters Type Name Description RpcGuildModel model Properties | Improve this Doc View Source IconUrl Gets the guild's icon URL. Declaration [JsonPropertyName(\"icon_url\")] public string IconUrl { get; } Property Value Type Description String the guild's icon URL. | Improve this Doc View Source Id Gets the snowflake identifier of the guild. Declaration public Snowflake Id { get; } Property Value Type Description Snowflake the snowflake identifier of the guild. | Improve this Doc View Source Name Gets the name of the guild. Declaration public string Name { get; } Property Value Type Description String the name of the guild. Implements IIdentifiable<TIdentifier>"
  },
  "api/Strade.Rpc.Entities.RpcGuildChannel.html": {
    "href": "api/Strade.Rpc.Entities.RpcGuildChannel.html",
    "title": "Class RpcGuildChannel | Strade Developer Documentation",
    "keywords": "Class RpcGuildChannel Represents a RPC guild channel. Inheritance Object RpcChannel RpcGuildChannel RpcCategory RpcTextChannel RpcVoiceChannel Inherited Members RpcChannel.Id RpcChannel.Type RpcChannel.CreateChannel(RpcChannelModel, Nullable<Snowflake>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public abstract class RpcGuildChannel : RpcChannel Constructors | Improve this Doc View Source RpcGuildChannel(RpcChannelModel, Nullable<Snowflake>) Declaration protected RpcGuildChannel(RpcChannelModel model, Snowflake? guildId = default(Snowflake? )) Parameters Type Name Description RpcChannelModel model Nullable < Snowflake > guildId Properties | Improve this Doc View Source GuildId Gets the snowflake identifier of the guild the channel is in. Declaration public Snowflake GuildId { get; } Property Value Type Description Snowflake the snowflake identifier of the guild the channel is in. | Improve this Doc View Source Position Gets the ordering position of the channel. Declaration public int Position { get; } Property Value Type Description Int32 the ordering position of the channel."
  },
  "api/Strade.Rpc.Entities.RpcMessage.html": {
    "href": "api/Strade.Rpc.Entities.RpcMessage.html",
    "title": "Class RpcMessage | Strade Developer Documentation",
    "keywords": "Class RpcMessage Represents the inner structure of a RPC message object. Inheritance Object RpcMessage Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public sealed class RpcMessage Constructors | Improve this Doc View Source RpcMessage(RpcMessageModel) Declaration public RpcMessage(RpcMessageModel model) Parameters Type Name Description RpcMessageModel model Properties | Improve this Doc View Source AuthorColor Gets the color of the author. Declaration public Color AuthorColor { get; } Property Value Type Description Color the color of the author. | Improve this Doc View Source Content Gets the content of the message. Declaration public string Content { get; } Property Value Type Description String the content of the message. | Improve this Doc View Source CreatedAt Gets the time offset when the message was created. Declaration public DateTimeOffset CreatedAt { get; } Property Value Type Description DateTimeOffset the time offset when the message was created. | Improve this Doc View Source EditedAt Gets the time offset when the message was edited. Declaration public DateTimeOffset? EditedAt { get; } Property Value Type Description Nullable < DateTimeOffset > the time offset when the message was edited. | Improve this Doc View Source Embeds Gets a list of attached embeds to the message. Declaration public IReadOnlyList<EmbedMessage> Embeds { get; } Property Value Type Description IReadOnlyList < EmbedMessage > a list of attached embeds to the message. | Improve this Doc View Source Id Gets the snowflake identifier of the message. Declaration public Snowflake Id { get; } Property Value Type Description Snowflake the snowflake identifier of the message. | Improve this Doc View Source IsBlocked Gets a value indicating whether the user that sent the message is blocked by the client user. Declaration public bool IsBlocked { get; } Property Value Type Description Boolean a value indicating whether the user that sent the message is blocked by the client user. | Improve this Doc View Source IsMentioningEveryone Gets a value indicating whether the message mentions everyone. Declaration public bool IsMentioningEveryone { get; } Property Value Type Description Boolean a value indicating whether the message mentions everyone. | Improve this Doc View Source IsPinned Gets a value indicating whether the message is pinned. Declaration public bool IsPinned { get; } Property Value Type Description Boolean a value indicating whether the message is pinned. | Improve this Doc View Source IsTextToSpeech Gets a value indicating whether the message is a text-to-speech (TTS) message. Declaration public bool IsTextToSpeech { get; } Property Value Type Description Boolean a value indicating whether the message is a text-to-speech (TTS) message. | Improve this Doc View Source Mentions Gets or sets the snowflake identifiers of the users that were mentioned in the message. Declaration public IReadOnlyList<Snowflake> Mentions { get; } Property Value Type Description IReadOnlyList < Snowflake > the snowflake identifiers of the users that were mentioned in the message. | Improve this Doc View Source Type Gets the type of the message. Declaration public MessageType Type { get; } Property Value Type Description MessageType the type of the message."
  },
  "api/Strade.Rpc.Entities.RpcPrivateChannel.html": {
    "href": "api/Strade.Rpc.Entities.RpcPrivateChannel.html",
    "title": "Class RpcPrivateChannel | Strade Developer Documentation",
    "keywords": "Class RpcPrivateChannel Represents a RPC private (direct message) channel. Inheritance Object RpcChannel RpcPrivateChannel Inherited Members RpcChannel.Id RpcChannel.CreateChannel(RpcChannelModel, Nullable<Snowflake>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public class RpcPrivateChannel : RpcChannel Constructors | Improve this Doc View Source RpcPrivateChannel(RpcChannelModel) Declaration public RpcPrivateChannel(RpcChannelModel model) Parameters Type Name Description RpcChannelModel model Properties | Improve this Doc View Source Type Declaration public override ChannelType Type { get; } Property Value Type Description ChannelType Overrides RpcChannel.Type"
  },
  "api/Strade.Rpc.Entities.RpcTextChannel.html": {
    "href": "api/Strade.Rpc.Entities.RpcTextChannel.html",
    "title": "Class RpcTextChannel | Strade Developer Documentation",
    "keywords": "Class RpcTextChannel Represents a RPC text channel. Inheritance Object RpcChannel RpcGuildChannel RpcTextChannel Inherited Members RpcGuildChannel.GuildId RpcGuildChannel.Position RpcChannel.Id RpcChannel.CreateChannel(RpcChannelModel, Nullable<Snowflake>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public sealed class RpcTextChannel : RpcGuildChannel Constructors | Improve this Doc View Source RpcTextChannel(RpcChannelModel, Nullable<Snowflake>) Declaration public RpcTextChannel(RpcChannelModel model, Snowflake? guildId = default(Snowflake? )) Parameters Type Name Description RpcChannelModel model Nullable < Snowflake > guildId Properties | Improve this Doc View Source Messages Gets a list of the messages in the channel. Declaration [JsonPropertyName(\"messages\")] public IReadOnlyList<RpcMessage> Messages { get; } Property Value Type Description IReadOnlyList < RpcMessage > a list of the messages in the channel. | Improve this Doc View Source Topic Gets the channel topic. Declaration [JsonPropertyName(\"topic\")] public string Topic { get; } Property Value Type Description String the channel topic. | Improve this Doc View Source Type Declaration public override ChannelType Type { get; } Property Value Type Description ChannelType Overrides RpcChannel.Type"
  },
  "api/Strade.Rpc.Entities.RpcVoiceChannel.html": {
    "href": "api/Strade.Rpc.Entities.RpcVoiceChannel.html",
    "title": "Class RpcVoiceChannel | Strade Developer Documentation",
    "keywords": "Class RpcVoiceChannel Represents a RPC voice channel. Inheritance Object RpcChannel RpcGuildChannel RpcVoiceChannel Inherited Members RpcGuildChannel.GuildId RpcGuildChannel.Position RpcChannel.Id RpcChannel.CreateChannel(RpcChannelModel, Nullable<Snowflake>) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public sealed class RpcVoiceChannel : RpcGuildChannel Constructors | Improve this Doc View Source RpcVoiceChannel(RpcChannelModel, Nullable<Snowflake>) Declaration public RpcVoiceChannel(RpcChannelModel model, Snowflake? guildId = default(Snowflake? )) Parameters Type Name Description RpcChannelModel model Nullable < Snowflake > guildId Properties | Improve this Doc View Source Bitrate Gets the channel bitrate. Declaration public int Bitrate { get; } Property Value Type Description Int32 the channel bitrate. | Improve this Doc View Source Type Declaration public override ChannelType Type { get; } Property Value Type Description ChannelType Overrides RpcChannel.Type | Improve this Doc View Source UserLimit Gets the channel user limit. Declaration public int UserLimit { get; } Property Value Type Description Int32 the channel user limit; or 0 if no limit is set. | Improve this Doc View Source Users Gets a list of the users in the channel. Declaration public IReadOnlyList<RpcVoiceUser> Users { get; } Property Value Type Description IReadOnlyList < RpcVoiceUser > a list of the users in the channel."
  },
  "api/Strade.Rpc.Entities.RpcVoiceConfiguration.html": {
    "href": "api/Strade.Rpc.Entities.RpcVoiceConfiguration.html",
    "title": "Class RpcVoiceConfiguration | Strade Developer Documentation",
    "keywords": "Class RpcVoiceConfiguration Inheritance Object RpcVoiceConfiguration Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public sealed class RpcVoiceConfiguration Constructors | Improve this Doc View Source RpcVoiceConfiguration(RpcVoiceConfigurationModel) Declaration public RpcVoiceConfiguration(RpcVoiceConfigurationModel model) Parameters Type Name Description RpcVoiceConfigurationModel model Properties | Improve this Doc View Source AvailableDevices Gets a read-only list of devices that are available for the configuration. Declaration public IReadOnlyList<RpcVoiceDevice> AvailableDevices { get; } Property Value Type Description IReadOnlyList < RpcVoiceDevice > a read-only list of devices that are available for the configuration. | Improve this Doc View Source SelectedDevice Gets the device selected; or null if none selected or if the selected device is unknown. Declaration public RpcVoiceDevice SelectedDevice { get; } Property Value Type Description RpcVoiceDevice the device selected; or null if none selected or if the selected device is unknown. | Improve this Doc View Source Volume Gets the volume. Declaration public float Volume { get; } Property Value Type Description Single the volume. Remarks Ranges from 0-100 if input; or from 0-200 if output."
  },
  "api/Strade.Rpc.Entities.RpcVoiceDevice.html": {
    "href": "api/Strade.Rpc.Entities.RpcVoiceDevice.html",
    "title": "Class RpcVoiceDevice | Strade Developer Documentation",
    "keywords": "Class RpcVoiceDevice Represents a structure that contains information about a generic (audio input, audio output or video input) device. Inheritance Object RpcVoiceDevice Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public sealed class RpcVoiceDevice Constructors | Improve this Doc View Source RpcVoiceDevice(RpcVoiceDeviceModel) Declaration public RpcVoiceDevice(RpcVoiceDeviceModel model) Parameters Type Name Description RpcVoiceDeviceModel model | Improve this Doc View Source RpcVoiceDevice(String, String) Declaration public RpcVoiceDevice(string id, string name) Parameters Type Name Description String id String name Properties | Improve this Doc View Source Id Gets the unique identifier of the device. Declaration public string Id { get; } Property Value Type Description String the unique identifier of the device. | Improve this Doc View Source Name Gets the human-friendly name of the device. Declaration public string Name { get; } Property Value Type Description String the human-friendly name of the device."
  },
  "api/Strade.Rpc.Entities.RpcVoiceSettings.html": {
    "href": "api/Strade.Rpc.Entities.RpcVoiceSettings.html",
    "title": "Class RpcVoiceSettings | Strade Developer Documentation",
    "keywords": "Class RpcVoiceSettings Represents the full structure of a RPC voice settings object. Inheritance Object RpcVoiceSettings Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public sealed class RpcVoiceSettings Constructors | Improve this Doc View Source RpcVoiceSettings(RpcVoiceSettingsModel) Declaration public RpcVoiceSettings(RpcVoiceSettingsModel model) Parameters Type Name Description RpcVoiceSettingsModel model Properties | Improve this Doc View Source ActivationSettings Gets the voice activation mode settings. Declaration public VoiceActivationSettings ActivationSettings { get; } Property Value Type Description VoiceActivationSettings the voice activation mode settings. | Improve this Doc View Source AutomaticGainControl Gets a value indicating whether automatic gain control is enabled. Declaration public bool AutomaticGainControl { get; } Property Value Type Description Boolean a value indicating whether automatic gain control is enabled. | Improve this Doc View Source EchoCancellation Gets a value indicating whether echo cancellation is enabled. Declaration public bool EchoCancellation { get; } Property Value Type Description Boolean a value indicating whether echo cancellation is enabled. | Improve this Doc View Source Input Gets the voice input device selection information. Declaration public RpcVoiceConfiguration Input { get; } Property Value Type Description RpcVoiceConfiguration the voice input device selection information. | Improve this Doc View Source IsDeafened Gets a value indicating whether the user is locally deafened. Declaration public bool IsDeafened { get; } Property Value Type Description Boolean a value indicating whether the user is locally deafened. | Improve this Doc View Source IsMuted Gets a value indicating whether the user is locally muted. Declaration public bool IsMuted { get; } Property Value Type Description Boolean a value indicating whether the user is locally muted. | Improve this Doc View Source Output Gets the voice output device selection information. Declaration public RpcVoiceConfiguration Output { get; } Property Value Type Description RpcVoiceConfiguration the voice output device selection information. | Improve this Doc View Source QualityOfService Gets a value indicating whether the QoS (Quality of Service) option is enabled. Declaration public bool QualityOfService { get; } Property Value Type Description Boolean a value indicating whether the QoS (Quality of Service) option is enabled. | Improve this Doc View Source ShowSilenceWarning Gets a value indicating whether a silence warning is shown when no audio input is detected on the selected audio input device. Declaration public bool ShowSilenceWarning { get; } Property Value Type Description Boolean a value indicating whether a silence warning is shown when no audio input is detected on the selected audio input device."
  },
  "api/Strade.Rpc.Entities.RpcVoiceState.html": {
    "href": "api/Strade.Rpc.Entities.RpcVoiceState.html",
    "title": "Class RpcVoiceState | Strade Developer Documentation",
    "keywords": "Class RpcVoiceState Represents a RPC voice state. Inheritance Object RpcVoiceState Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public sealed class RpcVoiceState Constructors | Improve this Doc View Source RpcVoiceState(RpcVoiceStateModel) Declaration public RpcVoiceState(RpcVoiceStateModel model) Parameters Type Name Description RpcVoiceStateModel model Properties | Improve this Doc View Source IsDeafened Gets a value indicating whether the user the voice state is for is server / global deafened. Declaration public bool IsDeafened { get; } Property Value Type Description Boolean a value indicating whether the user the voice state is for is server / global deafened. | Improve this Doc View Source IsLocalDeafened Gets a value indicating whether the user the voice state is for is local deafened. Declaration public bool IsLocalDeafened { get; } Property Value Type Description Boolean a value indicating whether the user the voice state is for is local deafened. | Improve this Doc View Source IsLocalMuted Gets a value indicating whether the user the voice state is for is local muted. Declaration public bool IsLocalMuted { get; } Property Value Type Description Boolean | Improve this Doc View Source IsMuted Gets a value indicating whether the user the voice state is for is server / global muted. Declaration public bool IsMuted { get; } Property Value Type Description Boolean a value indicating whether the user the voice state is for is server / global muted. | Improve this Doc View Source IsSuppressed Gets a value indicating whether the user the voice state is for is muted by the actual bot / user client. Declaration public bool IsSuppressed { get; } Property Value Type Description Boolean a value indicating whether the user the voice state is for is muted by the actual bot / user client."
  },
  "api/Strade.Rpc.Entities.RpcVoiceUser.html": {
    "href": "api/Strade.Rpc.Entities.RpcVoiceUser.html",
    "title": "Class RpcVoiceUser | Strade Developer Documentation",
    "keywords": "Class RpcVoiceUser Represents a user in a voice channel. Inheritance Object RpcVoiceUser Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public sealed class RpcVoiceUser Constructors | Improve this Doc View Source RpcVoiceUser(RpcVoiceUserModel) Declaration public RpcVoiceUser(RpcVoiceUserModel model) Parameters Type Name Description RpcVoiceUserModel model Properties | Improve this Doc View Source DisplayName Gets the display name shown in the channel. Declaration public string DisplayName { get; } Property Value Type Description String the display name shown in the channel. | Improve this Doc View Source IsMuted Gets a value indicating whether the user is muted. Declaration public bool IsMuted { get; } Property Value Type Description Boolean a value indicating whether the user is muted. | Improve this Doc View Source Pan Gets the user's pan. Declaration public Pan Pan { get; } Property Value Type Description Pan the user's pan. | Improve this Doc View Source User Gets information about the user. Declaration public User User { get; } Property Value Type Description User information about the user. | Improve this Doc View Source VoiceState Gets the user's voice state. Declaration public RpcVoiceState VoiceState { get; } Property Value Type Description RpcVoiceState the user's voice state. | Improve this Doc View Source Volume Gets the user volume. Declaration public float Volume { get; } Property Value Type Description Single the user volume."
  },
  "api/Strade.Rpc.Entities.ShortcutCombination.html": {
    "href": "api/Strade.Rpc.Entities.ShortcutCombination.html",
    "title": "Struct ShortcutCombination | Strade Developer Documentation",
    "keywords": "Struct ShortcutCombination Represents a combination of shortcuts. Implements IEquatable < ShortcutCombination > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public struct ShortcutCombination : IEquatable<ShortcutCombination> Constructors | Improve this Doc View Source ShortcutCombination(ShortcutCombinationModel) Declaration public ShortcutCombination(ShortcutCombinationModel model) Parameters Type Name Description ShortcutCombinationModel model | Improve this Doc View Source ShortcutCombination(IReadOnlyList<ShortcutKey>) Initializes a new instance of the ShortcutCombination struct. Declaration public ShortcutCombination(IReadOnlyList<ShortcutKey> shortcuts) Parameters Type Name Description IReadOnlyList < ShortcutKey > shortcuts the shortcut combination pressed. Exceptions Type Condition ArgumentNullException thrown if the specified shortcuts list is null . | Improve this Doc View Source ShortcutCombination(IReadOnlyList<ShortcutKeyModel>) Declaration public ShortcutCombination(IReadOnlyList<ShortcutKeyModel> model) Parameters Type Name Description IReadOnlyList < ShortcutKeyModel > model Properties | Improve this Doc View Source Shortcuts Gets a list of the shortcut combination pressed. Declaration public IReadOnlyList<ShortcutKey> Shortcuts { get; } Property Value Type Description IReadOnlyList < ShortcutKey > a list of the shortcut combination pressed. Methods | Improve this Doc View Source Equals(ShortcutCombination) Declaration public bool Equals(ShortcutCombination other) Parameters Type Name Description ShortcutCombination other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(ShortcutCombination, ShortcutCombination) Declaration public static bool operator ==(ShortcutCombination left, ShortcutCombination right) Parameters Type Name Description ShortcutCombination left ShortcutCombination right Returns Type Description Boolean | Improve this Doc View Source Inequality(ShortcutCombination, ShortcutCombination) Declaration public static bool operator !=(ShortcutCombination left, ShortcutCombination right) Parameters Type Name Description ShortcutCombination left ShortcutCombination right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Rpc.Entities.ShortcutKey.html": {
    "href": "api/Strade.Rpc.Entities.ShortcutKey.html",
    "title": "Struct ShortcutKey | Strade Developer Documentation",
    "keywords": "Struct ShortcutKey Represents a pressed key combination. Implements IEquatable < ShortcutKey > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public struct ShortcutKey : IEquatable<ShortcutKey> Constructors | Improve this Doc View Source ShortcutKey(ShortcutKeyType, Int32, String) Declaration public ShortcutKey(ShortcutKeyType type, int code, string name) Parameters Type Name Description ShortcutKeyType type Int32 code String name | Improve this Doc View Source ShortcutKey(ShortcutKeyModel) Declaration public ShortcutKey(ShortcutKeyModel model) Parameters Type Name Description ShortcutKeyModel model Properties | Improve this Doc View Source KeyCode Gets the key-code pressed. Declaration public int KeyCode { get; } Property Value Type Description Int32 the key-code pressed. | Improve this Doc View Source Name Gets the name of the pressed shortcut combination. Declaration public string Name { get; } Property Value Type Description String the name of the pressed shortcut combination. | Improve this Doc View Source Type Gets the type of the pressed key. Declaration public ShortcutKeyType Type { get; } Property Value Type Description ShortcutKeyType the type of the pressed key. Methods | Improve this Doc View Source Equals(ShortcutKey) Declaration public bool Equals(ShortcutKey other) Parameters Type Name Description ShortcutKey other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(ShortcutKey, ShortcutKey) Declaration public static bool operator ==(ShortcutKey left, ShortcutKey right) Parameters Type Name Description ShortcutKey left ShortcutKey right Returns Type Description Boolean | Improve this Doc View Source Inequality(ShortcutKey, ShortcutKey) Declaration public static bool operator !=(ShortcutKey left, ShortcutKey right) Parameters Type Name Description ShortcutKey left ShortcutKey right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Rpc.Entities.ShortcutKeyType.html": {
    "href": "api/Strade.Rpc.Entities.ShortcutKeyType.html",
    "title": "Enum ShortcutKeyType | Strade Developer Documentation",
    "keywords": "Enum ShortcutKeyType A set of key types. Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public enum ShortcutKeyType : byte Fields Name Description GamepadButton Denotes that the pressed key is a game-pad button / key. Keyboard Denotes that the pressed key is a keyboard key. KeyboardModifier Denotes that the pressed key is a keyboard key modifier. Mouse Denotes that the pressed key is a mouse key. Extension Methods EnumExtensions.GetName<ShortcutKeyType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Rpc.Entities.UserVoiceSettings.html": {
    "href": "api/Strade.Rpc.Entities.UserVoiceSettings.html",
    "title": "Class UserVoiceSettings | Strade Developer Documentation",
    "keywords": "Class UserVoiceSettings Contains settings for a voice user. Inheritance Object UserVoiceSettings Implements ICloneable < UserVoiceSettings > ICloneable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public sealed class UserVoiceSettings : ICloneable<UserVoiceSettings>, ICloneable Properties | Improve this Doc View Source IsMuted Gets or sets a value indicating whether the user is muted. Declaration public bool IsMuted { get; set; } Property Value Type Description Boolean a value indicating whether the user is muted. | Improve this Doc View Source Pan Gets or sets the pan. Declaration public Pan Pan { get; set; } Property Value Type Description Pan the pan. | Improve this Doc View Source Volume Gets or sets the volume. Declaration public int Volume { get; set; } Property Value Type Description Int32 the volume (ranges from 0 - 200 , default: 100 ). Methods | Improve this Doc View Source Clone() Declaration public UserVoiceSettings Clone() Returns Type Description UserVoiceSettings Explicit Interface Implementations | Improve this Doc View Source ICloneable.Clone() Declaration object ICloneable.Clone() Returns Type Description Object Implements ICloneable<TSelf> System.ICloneable"
  },
  "api/Strade.Rpc.Entities.VoiceActivationSettings.html": {
    "href": "api/Strade.Rpc.Entities.VoiceActivationSettings.html",
    "title": "Class VoiceActivationSettings | Strade Developer Documentation",
    "keywords": "Class VoiceActivationSettings Represents a structure containing information about the user's voice activation settings. Inheritance Object VoiceActivationSettings Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public sealed class VoiceActivationSettings Constructors | Improve this Doc View Source VoiceActivationSettings(VoiceActivationSettingsModel) Declaration public VoiceActivationSettings(VoiceActivationSettingsModel model) Parameters Type Name Description VoiceActivationSettingsModel model Properties | Improve this Doc View Source ActivationType Gets the voice activation type the user is using. Declaration public VoiceActivationType ActivationType { get; } Property Value Type Description VoiceActivationType the voice activation type the user is using. | Improve this Doc View Source AutoThreshold Gets a value indicating whether auto threshold adjustment is enabled. Declaration public bool AutoThreshold { get; } Property Value Type Description Boolean a value indicating whether auto threshold adjustment is enabled. Remarks Valid when VoiceActivity is used as the voice activation type ( ActivationType ). See Also Threshold | Improve this Doc View Source Delay Gets the PTT release time (the delay the push to talk is still active after the user released the PTT shortcut). Declaration public float Delay { get; } Property Value Type Description Single the PTT release time (the delay the push to talk is still active after the user released the PTT shortcut). Remarks Valid when PushToTalk is used as the voice activation type ( ActivationType ). | Improve this Doc View Source PushToTalkHotkey Gets the shortcut used to activate PTT (Push To Talk). Declaration public ShortcutCombination PushToTalkHotkey { get; } Property Value Type Description ShortcutCombination the shortcut used to activate PTT (Push To Talk). Remarks Valid when PushToTalk is used as the voice activation type ( ActivationType ). | Improve this Doc View Source Threshold Gets the decibel threshold when the user sends voice data. Declaration public float Threshold { get; } Property Value Type Description Single the decibel threshold when the user sends voice data. Remarks Valid when VoiceActivity is used as the voice activation type ( ActivationType )."
  },
  "api/Strade.Rpc.Entities.VoiceActivationType.html": {
    "href": "api/Strade.Rpc.Entities.VoiceActivationType.html",
    "title": "Enum VoiceActivationType | Strade Developer Documentation",
    "keywords": "Enum VoiceActivationType A set of supported voice activation types. Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax [JsonConverter(typeof(StringEnumConverter<VoiceActivationType>))] public enum VoiceActivationType : byte Fields Name Description PushToTalk Denotes that the user has to press a key to talk. VoiceActivity Denotes that the microphone activates when the volume reaches a specific threshold. Extension Methods EnumExtensions.GetName<VoiceActivationType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Rpc.Entities.VoiceConnectionInformation.html": {
    "href": "api/Strade.Rpc.Entities.VoiceConnectionInformation.html",
    "title": "Class VoiceConnectionInformation | Strade Developer Documentation",
    "keywords": "Class VoiceConnectionInformation Contains information about a voice connection. Inheritance Object VoiceConnectionInformation Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax public sealed class VoiceConnectionInformation Constructors | Improve this Doc View Source VoiceConnectionInformation(VoiceConnectionInformationModel) Declaration public VoiceConnectionInformation(VoiceConnectionInformationModel model) Parameters Type Name Description VoiceConnectionInformationModel model Properties | Improve this Doc View Source AveragePing Gets the average ping time (latency) in milliseconds. Declaration public float AveragePing { get; } Property Value Type Description Single the average ping time (latency) in milliseconds. | Improve this Doc View Source Hostname Gets the host-name of the server connected / connecting to. Declaration public string Hostname { get; } Property Value Type Description String the host-name of the server connected / connecting to. | Improve this Doc View Source LastPing Gets the last ping time (latency) in milliseconds. Declaration public float LastPing { get; } Property Value Type Description Single the last ping time (latency) in milliseconds. | Improve this Doc View Source Latencies Gets a list of the latencies of the last 20 pings (in milliseconds). Declaration public IReadOnlyList<float> Latencies { get; } Property Value Type Description IReadOnlyList < Single > a list of the latencies of the last 20 pings (in milliseconds). | Improve this Doc View Source Status Gets the connection status. Declaration public VoiceConnectionStatus Status { get; } Property Value Type Description VoiceConnectionStatus the connection status."
  },
  "api/Strade.Rpc.Entities.VoiceConnectionStatus.html": {
    "href": "api/Strade.Rpc.Entities.VoiceConnectionStatus.html",
    "title": "Enum VoiceConnectionStatus | Strade Developer Documentation",
    "keywords": "Enum VoiceConnectionStatus A set of connection states (see https://discord.com/developers/docs/topics/rpc#voiceconnectionstatus-voice-connection-states for more details). Namespace : Strade.Rpc.Entities Assembly : Strade.Rpc.dll Syntax [JsonConverter(typeof(StringEnumConverter<VoiceConnectionStatus>))] public enum VoiceConnectionStatus : byte Fields Name Description Authenticating Denotes that the TCP connection is authenticating. AwaitingEndpoint Denotes that the client is waiting for voice endpoint. Connected Denotes that the TCP connection is open. Connecting Denotes that the TCP connection is connecting. Disconnected Denotes that the TPC connection is closed. IceChecking Denotes that WebRTC is checking. NoRoute Denotes that there is no route to host. VoiceConnected Denotes that TCP is connected and voice connected. VoiceConnecting Denotes that TCP is connected and voice connecting. VoiceDisconnected Denotes that TCP is connected and voice disconnected. Extension Methods EnumExtensions.GetName<VoiceConnectionStatus>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Rpc.Events.ActivityJoinEventArgs.html": {
    "href": "api/Strade.Rpc.Events.ActivityJoinEventArgs.html",
    "title": "Class ActivityJoinEventArgs | Strade Developer Documentation",
    "keywords": "Class ActivityJoinEventArgs The event arguments ( EventArgs ) for the ActivityJoin event. Inheritance Object EventArgs ActivityJoinEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Events Assembly : Strade.Rpc.dll Syntax public sealed class ActivityJoinEventArgs : EventArgs Constructors | Improve this Doc View Source ActivityJoinEventArgs(String) Initializes a new instance of the ActivityJoinEventArgs class. Declaration public ActivityJoinEventArgs(string joinSecret) Parameters Type Name Description String joinSecret the join secret. Exceptions Type Condition ArgumentNullException thrown if the specified joinSecret is null . Properties | Improve this Doc View Source JoinSecret Gets the join secret. Declaration public string JoinSecret { get; } Property Value Type Description String a String representing the match join secret."
  },
  "api/Strade.Rpc.Events.ActivityJoinRequestEventArgs.html": {
    "href": "api/Strade.Rpc.Events.ActivityJoinRequestEventArgs.html",
    "title": "Class ActivityJoinRequestEventArgs | Strade Developer Documentation",
    "keywords": "Class ActivityJoinRequestEventArgs The event arguments ( EventArgs ) for the ActivityJoinRequest event. Inheritance Object EventArgs ActivityJoinRequestEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Events Assembly : Strade.Rpc.dll Syntax public sealed class ActivityJoinRequestEventArgs : EventArgs Constructors | Improve this Doc View Source ActivityJoinRequestEventArgs(User) Initializes a new instance of the ActivityJoinRequestEventArgs class. Declaration public ActivityJoinRequestEventArgs(User user) Parameters Type Name Description User user the user that wants to join the activity. Exceptions Type Condition ArgumentNullException thrown if the specified user is null . Properties | Improve this Doc View Source User Gets the user that wants to join the activity. Declaration public User User { get; } Property Value Type Description User the user that wants to join the activity."
  },
  "api/Strade.Rpc.Events.ActivitySpectateEventArgs.html": {
    "href": "api/Strade.Rpc.Events.ActivitySpectateEventArgs.html",
    "title": "Class ActivitySpectateEventArgs | Strade Developer Documentation",
    "keywords": "Class ActivitySpectateEventArgs The event arguments ( EventArgs ) for the ActivitySpectate event. Inheritance Object EventArgs ActivitySpectateEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Events Assembly : Strade.Rpc.dll Syntax public sealed class ActivitySpectateEventArgs : EventArgs Constructors | Improve this Doc View Source ActivitySpectateEventArgs(String) Initializes a new instance of the ActivitySpectateEventArgs class. Declaration public ActivitySpectateEventArgs(string spectateSecret) Parameters Type Name Description String spectateSecret the spectate secret. Exceptions Type Condition ArgumentNullException thrown if the specified spectateSecret is null . Properties | Improve this Doc View Source SpectateSecret Gets the spectate secret. Declaration public string SpectateSecret { get; } Property Value Type Description String a String representing the match spectate secret."
  },
  "api/Strade.Rpc.Events.ChannelCreatedEventArgs.html": {
    "href": "api/Strade.Rpc.Events.ChannelCreatedEventArgs.html",
    "title": "Class ChannelCreatedEventArgs | Strade Developer Documentation",
    "keywords": "Class ChannelCreatedEventArgs The event arguments ( EventArgs ) for the ChannelCreated event. Inheritance Object EventArgs ChannelCreatedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Events Assembly : Strade.Rpc.dll Syntax public sealed class ChannelCreatedEventArgs : EventArgs Constructors | Improve this Doc View Source ChannelCreatedEventArgs(Snowflake, String, ChannelType) Initializes a new instance of the ChannelCreatedEventArgs class. Declaration public ChannelCreatedEventArgs(Snowflake id, string name, ChannelType type) Parameters Type Name Description Snowflake id the snowflake identifier of the channel created. String name the name of the channel created. ChannelType type the type of the channel that was created. Exceptions Type Condition ArgumentNullException thrown if the specified name is null . Properties | Improve this Doc View Source Id Gets the snowflake identifier of the channel created. Declaration public Snowflake Id { get; } Property Value Type Description Snowflake the snowflake identifier of the channel created. | Improve this Doc View Source Name Gets the name of the channel created. Declaration public string Name { get; } Property Value Type Description String the name of the channel created. | Improve this Doc View Source Type Gets the type of the channel that was created. Declaration public ChannelType Type { get; } Property Value Type Description ChannelType the type of the channel that was created."
  },
  "api/Strade.Rpc.Events.GuildCreatedEventArgs.html": {
    "href": "api/Strade.Rpc.Events.GuildCreatedEventArgs.html",
    "title": "Class GuildCreatedEventArgs | Strade Developer Documentation",
    "keywords": "Class GuildCreatedEventArgs The event arguments ( EventArgs ) for the GuildCreated event. Inheritance Object GuildCreatedEventArgs Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Events Assembly : Strade.Rpc.dll Syntax public sealed class GuildCreatedEventArgs Constructors | Improve this Doc View Source GuildCreatedEventArgs(Snowflake, String) Initializes a new instance of the GuildCreatedEventArgs class. Declaration public GuildCreatedEventArgs(Snowflake id, string name) Parameters Type Name Description Snowflake id the snowflake identifier of the guild created. String name the name of the guild created. Exceptions Type Condition ArgumentNullException thrown if the specified name is null . Properties | Improve this Doc View Source Id Gets the snowflake identifier of the guild created. Declaration public Snowflake Id { get; } Property Value Type Description Snowflake the snowflake identifier of the guild created. | Improve this Doc View Source Name Gets the name of the guild created. Declaration public string Name { get; } Property Value Type Description String the name of the guild created."
  },
  "api/Strade.Rpc.Events.GuildStatusEventArgs.html": {
    "href": "api/Strade.Rpc.Events.GuildStatusEventArgs.html",
    "title": "Class GuildStatusEventArgs | Strade Developer Documentation",
    "keywords": "Class GuildStatusEventArgs The event arguments ( EventArgs ) for the GuildStatus event. Inheritance Object EventArgs GuildStatusEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Events Assembly : Strade.Rpc.dll Syntax public sealed class GuildStatusEventArgs : EventArgs Constructors | Improve this Doc View Source GuildStatusEventArgs(RpcGuild) Initializes a new instance of the GuildStatusEventArgs class. Declaration public GuildStatusEventArgs(RpcGuild guild) Parameters Type Name Description RpcGuild guild the guild status information. Exceptions Type Condition ArgumentNullException thrown if the specified guild is null . Properties | Improve this Doc View Source Guild Gets the guild status information. Declaration public RpcGuild Guild { get; } Property Value Type Description RpcGuild the guild status information."
  },
  "api/Strade.Rpc.Events.html": {
    "href": "api/Strade.Rpc.Events.html",
    "title": "Namespace Strade.Rpc.Events | Strade Developer Documentation",
    "keywords": "Namespace Strade.Rpc.Events Classes ActivityJoinEventArgs The event arguments ( EventArgs ) for the ActivityJoin event. ActivityJoinRequestEventArgs The event arguments ( EventArgs ) for the ActivityJoinRequest event. ActivitySpectateEventArgs The event arguments ( EventArgs ) for the ActivitySpectate event. ChannelCreatedEventArgs The event arguments ( EventArgs ) for the ChannelCreated event. GuildCreatedEventArgs The event arguments ( EventArgs ) for the GuildCreated event. GuildStatusEventArgs The event arguments ( EventArgs ) for the GuildStatus event. MessageCreatedEventArgs The event arguments ( EventArgs ) for the MessageCreated event. MessageDeletedEventArgs The event arguments ( EventArgs ) for the MessageDeleted event. MessageUpdatedEventArgs The event arguments ( EventArgs ) for the MessageUpdated event. PayloadErrorEventArgs The event arguments ( EventArgs ) for the PayloadError event. PayloadReceivedEventArgs The event arguments ( EventArgs ) for the PayloadReceived event. ReadyEventArgs The event arguments ( EventArgs ) for the Ready event. ShortcutCapturedEventArgs The event arguments ( EventArgs ) for the ShortcutCaptured event. SpeakingEventArgs The event arguments ( EventArgs ) for the SpeakingStarted and SpeakingStopped event. VoiceChannelChangedEventArgs The event arguments ( EventArgs ) for the VoiceChannelChanged event. VoiceConnectionStatusUpdatedEventArgs The event arguments ( EventArgs ) for the VoiceConnectionStatusUpdated event. VoiceSettingsUpdatedEventArgs The event arguments ( EventArgs ) for the VoiceSettingsUpdated event. VoiceStateEventArgs The event arguments ( EventArgs ) for the VoiceStateCreated / VoiceStateUpdated / VoiceStateDeleted event."
  },
  "api/Strade.Rpc.Events.MessageCreatedEventArgs.html": {
    "href": "api/Strade.Rpc.Events.MessageCreatedEventArgs.html",
    "title": "Class MessageCreatedEventArgs | Strade Developer Documentation",
    "keywords": "Class MessageCreatedEventArgs The event arguments ( EventArgs ) for the MessageCreated event. Inheritance Object EventArgs MessageCreatedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Events Assembly : Strade.Rpc.dll Syntax public sealed class MessageCreatedEventArgs : EventArgs Constructors | Improve this Doc View Source MessageCreatedEventArgs(Snowflake, RpcMessage) Initializes a new instance of the MessageCreatedEventArgs class. Declaration public MessageCreatedEventArgs(Snowflake channelId, RpcMessage message) Parameters Type Name Description Snowflake channelId the snowflake identifier of the channel the message was created / sent in. RpcMessage message the message created. Exceptions Type Condition ArgumentNullException thrown if the specified message is null . Properties | Improve this Doc View Source ChannelId Gets the snowflake identifier of the channel the message was created / sent in. Declaration public Snowflake ChannelId { get; } Property Value Type Description Snowflake the snowflake identifier of the channel the message was created / sent in. | Improve this Doc View Source Message Gets the message created. Declaration public RpcMessage Message { get; } Property Value Type Description RpcMessage the message created."
  },
  "api/Strade.Rpc.Events.MessageDeletedEventArgs.html": {
    "href": "api/Strade.Rpc.Events.MessageDeletedEventArgs.html",
    "title": "Class MessageDeletedEventArgs | Strade Developer Documentation",
    "keywords": "Class MessageDeletedEventArgs The event arguments ( EventArgs ) for the MessageDeleted event. Inheritance Object EventArgs MessageDeletedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Events Assembly : Strade.Rpc.dll Syntax public sealed class MessageDeletedEventArgs : EventArgs Constructors | Improve this Doc View Source MessageDeletedEventArgs(Snowflake, Snowflake) Initializes a new instance of the MessageDeletedEventArgs class. Declaration public MessageDeletedEventArgs(Snowflake channelId, Snowflake messageId) Parameters Type Name Description Snowflake channelId the snowflake identifier of the channel the message was deleted in. Snowflake messageId the snowflake identifier of the message that was deleted. Properties | Improve this Doc View Source ChannelId Gets the snowflake identifier of the channel the message was deleted in. Declaration public Snowflake ChannelId { get; } Property Value Type Description Snowflake the snowflake identifier of the channel the message was deleted in. | Improve this Doc View Source MessageId Gets the snowflake identifier of the message that was deleted. Declaration public Snowflake MessageId { get; } Property Value Type Description Snowflake the snowflake identifier of the message that was deleted."
  },
  "api/Strade.Rpc.Events.MessageUpdatedEventArgs.html": {
    "href": "api/Strade.Rpc.Events.MessageUpdatedEventArgs.html",
    "title": "Class MessageUpdatedEventArgs | Strade Developer Documentation",
    "keywords": "Class MessageUpdatedEventArgs The event arguments ( EventArgs ) for the MessageUpdated event. Inheritance Object EventArgs MessageUpdatedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Events Assembly : Strade.Rpc.dll Syntax public sealed class MessageUpdatedEventArgs : EventArgs Constructors | Improve this Doc View Source MessageUpdatedEventArgs(Snowflake, RpcMessage) Initializes a new instance of the MessageUpdatedEventArgs class. Declaration public MessageUpdatedEventArgs(Snowflake channelId, RpcMessage message) Parameters Type Name Description Snowflake channelId the snowflake identifier of the channel the message was updated in. RpcMessage message the message updated. Exceptions Type Condition ArgumentNullException thrown if the specified message is null . Properties | Improve this Doc View Source ChannelId Gets the snowflake identifier of the channel the message was updated in. Declaration public Snowflake ChannelId { get; } Property Value Type Description Snowflake the snowflake identifier of the channel the message was updated in. | Improve this Doc View Source Message Gets the message updated. Declaration public RpcMessage Message { get; } Property Value Type Description RpcMessage the message updated."
  },
  "api/Strade.Rpc.Events.PayloadErrorEventArgs.html": {
    "href": "api/Strade.Rpc.Events.PayloadErrorEventArgs.html",
    "title": "Class PayloadErrorEventArgs | Strade Developer Documentation",
    "keywords": "Class PayloadErrorEventArgs The event arguments ( EventArgs ) for the PayloadError event. Inheritance Object EventArgs PayloadErrorEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Events Assembly : Strade.Rpc.dll Syntax public sealed class PayloadErrorEventArgs : EventArgs Constructors | Improve this Doc View Source PayloadErrorEventArgs(RpcErrorCode, RpcCommand, String, Guid) Initializes a new instance of the PayloadErrorEventArgs class. Declaration public PayloadErrorEventArgs(RpcErrorCode errorCode, RpcCommand command, string message, Guid nonce) Parameters Type Name Description RpcErrorCode errorCode the error code that occurred. RpcCommand command the command that failed. String message the error message. Guid nonce the nonce for the payload. Properties | Improve this Doc View Source Command Gets the command that failed. Declaration public RpcCommand Command { get; } Property Value Type Description RpcCommand the command that failed. | Improve this Doc View Source ErrorCode Gets the error code that occurred. Declaration public RpcErrorCode ErrorCode { get; } Property Value Type Description RpcErrorCode the error code that occurred. | Improve this Doc View Source Message Gets the error message. Declaration public string Message { get; } Property Value Type Description String the error message. | Improve this Doc View Source Nonce Gets the nonce for the payload. Declaration public Guid Nonce { get; } Property Value Type Description Guid the nonce for the payload."
  },
  "api/Strade.Rpc.Events.PayloadReceivedEventArgs.html": {
    "href": "api/Strade.Rpc.Events.PayloadReceivedEventArgs.html",
    "title": "Class PayloadReceivedEventArgs | Strade Developer Documentation",
    "keywords": "Class PayloadReceivedEventArgs The event arguments ( EventArgs ) for the PayloadReceived event. Inheritance Object EventArgs PayloadReceivedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Events Assembly : Strade.Rpc.dll Syntax public sealed class PayloadReceivedEventArgs : EventArgs Constructors | Improve this Doc View Source PayloadReceivedEventArgs(RpcCommand, Guid, Object) Initializes a new instance of the PayloadReceivedEventArgs class. Declaration public PayloadReceivedEventArgs(RpcCommand command, Guid nonce, object payload) Parameters Type Name Description RpcCommand command the command. Guid nonce the reply nonce. Object payload the payload data. Properties | Improve this Doc View Source Command Gets the command. Declaration public RpcCommand Command { get; } Property Value Type Description RpcCommand the command. | Improve this Doc View Source Nonce Gets the reply nonce. Declaration public Guid Nonce { get; } Property Value Type Description Guid the reply nonce. | Improve this Doc View Source Payload Gets the payload. Declaration public object Payload { get; } Property Value Type Description Object the payload."
  },
  "api/Strade.Rpc.Events.ReadyEventArgs.html": {
    "href": "api/Strade.Rpc.Events.ReadyEventArgs.html",
    "title": "Class ReadyEventArgs | Strade Developer Documentation",
    "keywords": "Class ReadyEventArgs The event arguments ( EventArgs ) for the Ready event. Inheritance Object EventArgs ReadyEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Events Assembly : Strade.Rpc.dll Syntax public sealed class ReadyEventArgs : EventArgs Constructors | Improve this Doc View Source ReadyEventArgs(CurrentUser, RpcEndpointInformation, Int32) Initializes a new instance of the ReadyEventArgs class. Declaration public ReadyEventArgs(CurrentUser user, RpcEndpointInformation endpointInformation, int endpointVersion) Parameters Type Name Description CurrentUser user information about the RPC user. RpcEndpointInformation endpointInformation information about the RPC endpoint. Int32 endpointVersion the version of the RPC endpoint connected to. Properties | Improve this Doc View Source EndpointInformation Gets information about the RPC endpoint. Declaration public RpcEndpointInformation EndpointInformation { get; } Property Value Type Description RpcEndpointInformation information about the RPC endpoint. | Improve this Doc View Source EndpointVersion Gets the version of the RPC endpoint connected to. Declaration public int EndpointVersion { get; } Property Value Type Description Int32 the version of the RPC endpoint connected to. | Improve this Doc View Source User Gets information about the RPC user. Declaration public CurrentUser User { get; } Property Value Type Description CurrentUser information about the RPC user."
  },
  "api/Strade.Rpc.Events.ShortcutCapturedEventArgs.html": {
    "href": "api/Strade.Rpc.Events.ShortcutCapturedEventArgs.html",
    "title": "Class ShortcutCapturedEventArgs | Strade Developer Documentation",
    "keywords": "Class ShortcutCapturedEventArgs The event arguments ( EventArgs ) for the ShortcutCaptured event. Inheritance Object EventArgs ShortcutCapturedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Events Assembly : Strade.Rpc.dll Syntax public sealed class ShortcutCapturedEventArgs : EventArgs Constructors | Improve this Doc View Source ShortcutCapturedEventArgs(ShortcutCombination) Initializes a new instance of the ShortcutCapturedEventArgs class. Declaration public ShortcutCapturedEventArgs(ShortcutCombination combination) Parameters Type Name Description ShortcutCombination combination the shortcut combination captured. Properties | Improve this Doc View Source Combination Gets the shortcut combination captured. Declaration public ShortcutCombination Combination { get; } Property Value Type Description ShortcutCombination the shortcut combination captured."
  },
  "api/Strade.Rpc.Events.SpeakingEventArgs.html": {
    "href": "api/Strade.Rpc.Events.SpeakingEventArgs.html",
    "title": "Class SpeakingEventArgs | Strade Developer Documentation",
    "keywords": "Class SpeakingEventArgs The event arguments ( EventArgs ) for the SpeakingStarted and SpeakingStopped event. Inheritance Object EventArgs SpeakingEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Events Assembly : Strade.Rpc.dll Syntax public sealed class SpeakingEventArgs : EventArgs Constructors | Improve this Doc View Source SpeakingEventArgs(Snowflake) Initializes a new instance of the SpeakingEventArgs class. Declaration public SpeakingEventArgs(Snowflake userId) Parameters Type Name Description Snowflake userId the snowflake identifier of the user that started / stopped speaking. Properties | Improve this Doc View Source UserId Gets the snowflake identifier of the user that started / stopped speaking. Declaration public Snowflake UserId { get; } Property Value Type Description Snowflake the snowflake identifier of the user that started / stopped speaking."
  },
  "api/Strade.Rpc.Events.VoiceChannelChangedEventArgs.html": {
    "href": "api/Strade.Rpc.Events.VoiceChannelChangedEventArgs.html",
    "title": "Class VoiceChannelChangedEventArgs | Strade Developer Documentation",
    "keywords": "Class VoiceChannelChangedEventArgs The event arguments ( EventArgs ) for the VoiceChannelChanged event. Inheritance Object EventArgs VoiceChannelChangedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Events Assembly : Strade.Rpc.dll Syntax public sealed class VoiceChannelChangedEventArgs : EventArgs Constructors | Improve this Doc View Source VoiceChannelChangedEventArgs(Nullable<Snowflake>, Nullable<Snowflake>) Initializes a new instance of the VoiceChannelChangedEventArgs class. Declaration public VoiceChannelChangedEventArgs(Snowflake? channelId, Snowflake? guildId) Parameters Type Name Description Nullable < Snowflake > channelId the snowflake identifier of the channel joined; or null if the client disconnected from a voice channel. Nullable < Snowflake > guildId the snowflake identifier of the guild the channel is; or null if the client disconnected from a voice channel. Properties | Improve this Doc View Source ChannelId Gets the snowflake identifier of the channel joined. Declaration public Snowflake? ChannelId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the channel joined; or null if the client disconnected from a voice channel. | Improve this Doc View Source GuildId Gets the snowflake identifier of the guild the channel is; or null if the client disconnected from a voice channel. Declaration public Snowflake? GuildId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the guild the channel is; or null if the client disconnected from a voice channel."
  },
  "api/Strade.Rpc.Events.VoiceConnectionStatusUpdatedEventArgs.html": {
    "href": "api/Strade.Rpc.Events.VoiceConnectionStatusUpdatedEventArgs.html",
    "title": "Class VoiceConnectionStatusUpdatedEventArgs | Strade Developer Documentation",
    "keywords": "Class VoiceConnectionStatusUpdatedEventArgs The event arguments ( EventArgs ) for the VoiceConnectionStatusUpdated event. Inheritance Object EventArgs VoiceConnectionStatusUpdatedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Events Assembly : Strade.Rpc.dll Syntax public sealed class VoiceConnectionStatusUpdatedEventArgs : EventArgs Constructors | Improve this Doc View Source VoiceConnectionStatusUpdatedEventArgs(VoiceConnectionInformation) Initializes a new instance of the VoiceConnectionStatusUpdatedEventArgs class. Declaration public VoiceConnectionStatusUpdatedEventArgs(VoiceConnectionInformation connectionInformation) Parameters Type Name Description VoiceConnectionInformation connectionInformation the connection information. Exceptions Type Condition ArgumentNullException thrown if the specified connectionInformation is null . Properties | Improve this Doc View Source ConnectionInformation Gets the connection information. Declaration public VoiceConnectionInformation ConnectionInformation { get; } Property Value Type Description VoiceConnectionInformation the connection information."
  },
  "api/Strade.Rpc.Events.VoiceSettingsUpdatedEventArgs.html": {
    "href": "api/Strade.Rpc.Events.VoiceSettingsUpdatedEventArgs.html",
    "title": "Class VoiceSettingsUpdatedEventArgs | Strade Developer Documentation",
    "keywords": "Class VoiceSettingsUpdatedEventArgs The event arguments ( EventArgs ) for the VoiceSettingsUpdated event. Inheritance Object EventArgs VoiceSettingsUpdatedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Events Assembly : Strade.Rpc.dll Syntax public sealed class VoiceSettingsUpdatedEventArgs : EventArgs Constructors | Improve this Doc View Source VoiceSettingsUpdatedEventArgs(RpcVoiceSettings) Initializes a new instance of the VoiceSettingsUpdatedEventArgs class. Declaration public VoiceSettingsUpdatedEventArgs(RpcVoiceSettings voiceSettings) Parameters Type Name Description RpcVoiceSettings voiceSettings the updated voice settings. Exceptions Type Condition ArgumentNullException thrown if the specified voiceSettings is null . Properties | Improve this Doc View Source VoiceSettings Gets the updated voice settings. Declaration public RpcVoiceSettings VoiceSettings { get; } Property Value Type Description RpcVoiceSettings the updated voice settings."
  },
  "api/Strade.Rpc.Events.VoiceStateEventArgs.html": {
    "href": "api/Strade.Rpc.Events.VoiceStateEventArgs.html",
    "title": "Class VoiceStateEventArgs | Strade Developer Documentation",
    "keywords": "Class VoiceStateEventArgs The event arguments ( EventArgs ) for the VoiceStateCreated / VoiceStateUpdated / VoiceStateDeleted event. Inheritance Object EventArgs VoiceStateEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Events Assembly : Strade.Rpc.dll Syntax public sealed class VoiceStateEventArgs : EventArgs Constructors | Improve this Doc View Source VoiceStateEventArgs(RpcVoiceUser) Initializes a new instance of the VoiceStateEventArgs class. Declaration public VoiceStateEventArgs(RpcVoiceUser voiceUser) Parameters Type Name Description RpcVoiceUser voiceUser the voice user. Exceptions Type Condition ArgumentNullException thrown if the specified voiceUser is null . Properties | Improve this Doc View Source VoiceUser Gets the voice user. Declaration public RpcVoiceUser VoiceUser { get; } Property Value Type Description RpcVoiceUser the voice user."
  },
  "api/Strade.Rpc.html": {
    "href": "api/Strade.Rpc.html",
    "title": "Namespace Strade.Rpc | Strade Developer Documentation",
    "keywords": "Namespace Strade.Rpc Classes DiscordRpcClient An discord client that uses the local RPC server of a running discord instance on the local host computer to interact with the user. RpcClientConfiguration The client options for the DiscordRpcClient class. RpcConnection RpcPayloadHandler VoiceActivationSettingsModifyProperties VoiceConfigurationModifyProperties VoiceSettingsModifyProperties Enums AuthorizationMode A set of supported authorization modes. RpcStatus A set of RPC client states."
  },
  "api/Strade.Rpc.Models.html": {
    "href": "api/Strade.Rpc.Models.html",
    "title": "Namespace Strade.Rpc.Models | Strade Developer Documentation",
    "keywords": "Namespace Strade.Rpc.Models Classes MessageReferenceModel OAuthTokenModel Represents an OAuth2 access token. PanModel RpcActivityModel RpcApplicationModel Represents a RPC application. RpcChannelModel RpcEndpointInformationModel RpcGuildModel RpcMessageModel RpcVoiceConfigurationModel RpcVoiceDeviceModel RpcVoiceSettingsModel Represents the full structure of a RPC voice settings object. RpcVoiceStateModel RpcVoiceUserModel ShortcutCombinationModel ShortcutKeyModel Represents a pressed key combination. VoiceActivationSettingsModel VoiceConnectionInformationModel Contains information about a voice connection."
  },
  "api/Strade.Rpc.Models.MessageReferenceModel.html": {
    "href": "api/Strade.Rpc.Models.MessageReferenceModel.html",
    "title": "Class MessageReferenceModel | Strade Developer Documentation",
    "keywords": "Class MessageReferenceModel Inheritance Object MessageReferenceModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Models Assembly : Strade.Rpc.dll Syntax public sealed class MessageReferenceModel Properties | Improve this Doc View Source Id Declaration [JsonPropertyName(\"id\")] [JsonConverter(typeof(StringSnowflakeJsonConverter))] public Snowflake Id { get; set; } Property Value Type Description Snowflake"
  },
  "api/Strade.Rpc.Models.OAuthTokenModel.html": {
    "href": "api/Strade.Rpc.Models.OAuthTokenModel.html",
    "title": "Class OAuthTokenModel | Strade Developer Documentation",
    "keywords": "Class OAuthTokenModel Represents an OAuth2 access token. Inheritance Object OAuthTokenModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Models Assembly : Strade.Rpc.dll Syntax public sealed class OAuthTokenModel Properties | Improve this Doc View Source AccessToken Gets or sets the access token. Declaration [JsonPropertyName(\"access_token\")] public string AccessToken { get; set; } Property Value Type Description String the access token."
  },
  "api/Strade.Rpc.Models.PanModel.html": {
    "href": "api/Strade.Rpc.Models.PanModel.html",
    "title": "Class PanModel | Strade Developer Documentation",
    "keywords": "Class PanModel Inheritance Object PanModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Models Assembly : Strade.Rpc.dll Syntax public sealed class PanModel Properties | Improve this Doc View Source Left Gets or sets the left pan. Declaration [JsonPropertyName(\"left\")] public float Left { get; set; } Property Value Type Description Single the left pan. | Improve this Doc View Source Right Gets or sets the right pan. Declaration [JsonPropertyName(\"right\")] public float Right { get; set; } Property Value Type Description Single the right pan."
  },
  "api/Strade.Rpc.Models.RpcActivityModel.html": {
    "href": "api/Strade.Rpc.Models.RpcActivityModel.html",
    "title": "Class RpcActivityModel | Strade Developer Documentation",
    "keywords": "Class RpcActivityModel Inheritance Object RpcActivityModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Models Assembly : Strade.Rpc.dll Syntax public sealed class RpcActivityModel Properties | Improve this Doc View Source Assets Gets or sets information about game assets. Declaration [JsonPropertyName(\"assets\")] public ActivityAssetsModel Assets { get; set; } Property Value Type Description ActivityAssetsModel information about game assets. | Improve this Doc View Source Details Gets or sets details about what the player is doing. Declaration [JsonPropertyName(\"details\")] public string Details { get; set; } Property Value Type Description String details about what the player is doing. | Improve this Doc View Source Emote Gets or sets the emote that is used for the activity. Declaration [JsonPropertyName(\"emoji\")] [JsonConverter(typeof(EmoteJsonConverter))] public IEmote Emote { get; set; } Property Value Type Description IEmote the emote that is used for the activity. | Improve this Doc View Source IsGameInstance Gets or sets a value indicating whether the game is an instantiated game session. Declaration [JsonPropertyName(\"instance\")] public bool IsGameInstance { get; set; } Property Value Type Description Boolean a value indicating whether the game is an instantiated game session. | Improve this Doc View Source Party Gets or sets information about the party. Declaration [JsonPropertyName(\"party\")] public ActivityPartyModel Party { get; set; } Property Value Type Description ActivityPartyModel information about the party. | Improve this Doc View Source Secrets Gets or sets information about game secrets. Declaration [JsonPropertyName(\"secrets\")] public ActivitySecretsModel Secrets { get; set; } Property Value Type Description ActivitySecretsModel information about game secrets. | Improve this Doc View Source State Gets or sets the current game status description. Declaration [JsonPropertyName(\"state\")] public string State { get; set; } Property Value Type Description String the current game status description. | Improve this Doc View Source Timestamps Gets or sets the time information / timestamps for the activity that indicates the start and end time of the activity. Declaration [JsonPropertyName(\"timestamps\")] public ActivityTimestampsModel Timestamps { get; set; } Property Value Type Description ActivityTimestampsModel the time information / timestamps for the activity that indicates the start and end time of the activity."
  },
  "api/Strade.Rpc.Models.RpcApplicationModel.html": {
    "href": "api/Strade.Rpc.Models.RpcApplicationModel.html",
    "title": "Class RpcApplicationModel | Strade Developer Documentation",
    "keywords": "Class RpcApplicationModel Represents a RPC application. Inheritance Object RpcApplicationModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Models Assembly : Strade.Rpc.dll Syntax public sealed class RpcApplicationModel Properties | Improve this Doc View Source Description Gets or sets the application description. Declaration [JsonPropertyName(\"description\")] public string Description { get; set; } Property Value Type Description String the application description. | Improve this Doc View Source IconHash Declaration [JsonPropertyName(\"icon\")] public string IconHash { get; set; } Property Value Type Description String | Improve this Doc View Source Id Gets or sets the snowflake identifier of the application. Declaration [JsonPropertyName(\"id\")] [JsonConverter(typeof(StringSnowflakeJsonConverter))] public Snowflake Id { get; set; } Property Value Type Description Snowflake the snowflake identifier of the application. | Improve this Doc View Source Name Gets or sets the name of the RPC application. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the name of the RPC application. | Improve this Doc View Source Origins Gets or sets a list of the RPC origin URLs. Declaration [JsonPropertyName(\"rpc_origins\")] public IReadOnlyList<string> Origins { get; set; } Property Value Type Description IReadOnlyList < String > a list of the RPC origin URLs."
  },
  "api/Strade.Rpc.Models.RpcChannelModel.html": {
    "href": "api/Strade.Rpc.Models.RpcChannelModel.html",
    "title": "Class RpcChannelModel | Strade Developer Documentation",
    "keywords": "Class RpcChannelModel Inheritance Object RpcChannelModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Models Assembly : Strade.Rpc.dll Syntax public sealed class RpcChannelModel Properties | Improve this Doc View Source Bitrate Gets or sets the channel bitrate. Declaration [JsonPropertyName(\"bitrate\")] public int Bitrate { get; set; } Property Value Type Description Int32 the channel bitrate. | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the guild the channel is in. Declaration [JsonPropertyName(\"guild_id\")] [JsonConverter(typeof(StringSnowflakeJsonConverter))] public Snowflake? GuildId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the guild the channel is in. | Improve this Doc View Source Id Gets or sets the snowflake identifier of the channel. Declaration [JsonPropertyName(\"id\")] [JsonConverter(typeof(StringSnowflakeJsonConverter))] public Snowflake Id { get; set; } Property Value Type Description Snowflake the snowflake identifier of the channel. | Improve this Doc View Source Messages Gets or sets a list of the messages in the channel. Declaration [JsonPropertyName(\"messages\")] public IReadOnlyList<RpcMessageModel> Messages { get; set; } Property Value Type Description IReadOnlyList < RpcMessageModel > a list of the messages in the channel. | Improve this Doc View Source Position Gets or sets the ordering position of the channel. Declaration [JsonPropertyName(\"position\")] public int Position { get; set; } Property Value Type Description Int32 the ordering position of the channel. | Improve this Doc View Source Topic Gets or sets the channel topic. Declaration [JsonPropertyName(\"topic\")] public string Topic { get; set; } Property Value Type Description String the channel topic. | Improve this Doc View Source Type Gets or sets the type of the channel. Declaration [JsonPropertyName(\"type\")] public ChannelType Type { get; set; } Property Value Type Description ChannelType the type of the channel. | Improve this Doc View Source UserLimit Gets or sets the channel user limit. Declaration [JsonPropertyName(\"user_limit\")] public int UserLimit { get; set; } Property Value Type Description Int32 the channel user limit; or 0 if no limit is set. | Improve this Doc View Source Users Gets or sets a list of the users in the channel. Declaration [JsonPropertyName(\"voice_states\")] public IReadOnlyList<RpcVoiceUserModel> Users { get; set; } Property Value Type Description IReadOnlyList < RpcVoiceUserModel > a list of the users in the channel."
  },
  "api/Strade.Rpc.Models.RpcEndpointInformationModel.html": {
    "href": "api/Strade.Rpc.Models.RpcEndpointInformationModel.html",
    "title": "Class RpcEndpointInformationModel | Strade Developer Documentation",
    "keywords": "Class RpcEndpointInformationModel Inheritance Object RpcEndpointInformationModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Models Assembly : Strade.Rpc.dll Syntax public sealed class RpcEndpointInformationModel Properties | Improve this Doc View Source ApiEndpoint Gets or sets the host URI for the API endpoint. Declaration [JsonPropertyName(\"api_endpoint\")] public string ApiEndpoint { get; set; } Property Value Type Description String the host URI for the API endpoint. | Improve this Doc View Source CdnHost Gets or sets the host URI for the Content Delivery Node. Declaration [JsonPropertyName(\"cdn_host\")] public string CdnHost { get; set; } Property Value Type Description String the host URI for the Content Delivery Node. | Improve this Doc View Source Environment Gets or sets the environment name (e.g. \"development\" , \"production\" ). Declaration [JsonPropertyName(\"environment\")] public string Environment { get; set; } Property Value Type Description String the environment name (e.g. \"development\" , \"production\" )."
  },
  "api/Strade.Rpc.Models.RpcGuildModel.html": {
    "href": "api/Strade.Rpc.Models.RpcGuildModel.html",
    "title": "Class RpcGuildModel | Strade Developer Documentation",
    "keywords": "Class RpcGuildModel Inheritance Object RpcGuildModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Models Assembly : Strade.Rpc.dll Syntax public class RpcGuildModel Properties | Improve this Doc View Source IconUrl Gets or sets the guild's icon URL. Declaration [JsonPropertyName(\"icon_url\")] public string IconUrl { get; set; } Property Value Type Description String the guild's icon URL. | Improve this Doc View Source Id Gets or sets the snowflake identifier of the guild. Declaration [JsonPropertyName(\"id\")] [JsonConverter(typeof(StringSnowflakeJsonConverter))] public Snowflake Id { get; set; } Property Value Type Description Snowflake the snowflake identifier of the guild. | Improve this Doc View Source Name Gets or sets the name of the guild. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the name of the guild."
  },
  "api/Strade.Rpc.Models.RpcMessageModel.html": {
    "href": "api/Strade.Rpc.Models.RpcMessageModel.html",
    "title": "Class RpcMessageModel | Strade Developer Documentation",
    "keywords": "Class RpcMessageModel Inheritance Object RpcMessageModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Models Assembly : Strade.Rpc.dll Syntax public sealed class RpcMessageModel Properties | Improve this Doc View Source AuthorColor Gets or sets the color of the author. Declaration [JsonPropertyName(\"author_color\")] public Color AuthorColor { get; set; } Property Value Type Description Color the color of the author. | Improve this Doc View Source Content Gets or sets the content of the message. Declaration [JsonPropertyName(\"content\")] public string Content { get; set; } Property Value Type Description String the content of the message. | Improve this Doc View Source CreatedAt Gets or sets the time offset when the message was created. Declaration [JsonPropertyName(\"timestamp\")] public DateTimeOffset CreatedAt { get; set; } Property Value Type Description DateTimeOffset the time offset when the message was created. | Improve this Doc View Source EditedAt Gets or sets the time offset when the message was edited. Declaration [JsonPropertyName(\"edited_timestamp\")] public DateTimeOffset? EditedAt { get; set; } Property Value Type Description Nullable < DateTimeOffset > the time offset when the message was edited. | Improve this Doc View Source Embeds Gets or sets a list of attached embeds to the message. Declaration [JsonPropertyName(\"embeds\")] public IReadOnlyList<EmbedMessageModel> Embeds { get; set; } Property Value Type Description IReadOnlyList < EmbedMessageModel > a list of attached embeds to the message. | Improve this Doc View Source Id Gets or sets the snowflake identifier of the message. Declaration [JsonPropertyName(\"id\")] [JsonConverter(typeof(StringSnowflakeJsonConverter))] public Snowflake Id { get; set; } Property Value Type Description Snowflake the snowflake identifier of the message. | Improve this Doc View Source IsBlocked Gets or sets a value indicating whether the user that sent the message is blocked by the client user. Declaration [JsonPropertyName(\"blocked\")] public bool IsBlocked { get; set; } Property Value Type Description Boolean a value indicating whether the user that sent the message is blocked by the client user. | Improve this Doc View Source IsMentioningEveryone Gets or sets a value indicating whether the message mentions everyone. Declaration [JsonPropertyName(\"mention_everyone\")] public bool IsMentioningEveryone { get; set; } Property Value Type Description Boolean a value indicating whether the message mentions everyone. | Improve this Doc View Source IsPinned Gets or sets a value indicating whether the message is pinned. Declaration [JsonPropertyName(\"pinned\")] public bool IsPinned { get; set; } Property Value Type Description Boolean a value indicating whether the message is pinned. | Improve this Doc View Source IsTextToSpeech Gets or sets a value indicating whether the message is a text-to-speech (TTS) message. Declaration [JsonPropertyName(\"tts\")] public bool IsTextToSpeech { get; set; } Property Value Type Description Boolean a value indicating whether the message is a text-to-speech (TTS) message. | Improve this Doc View Source Mentions Gets or sets the snowflake identifiers of the users that were mentioned in the message. Declaration [JsonPropertyName(\"mentions\")] public IReadOnlyList<Snowflake> Mentions { get; set; } Property Value Type Description IReadOnlyList < Snowflake > the snowflake identifiers of the users that were mentioned in the message. | Improve this Doc View Source Type Gets or sets the type of the message. Declaration [JsonPropertyName(\"type\")] public MessageType Type { get; set; } Property Value Type Description MessageType the type of the message."
  },
  "api/Strade.Rpc.Models.RpcVoiceConfigurationModel.html": {
    "href": "api/Strade.Rpc.Models.RpcVoiceConfigurationModel.html",
    "title": "Class RpcVoiceConfigurationModel | Strade Developer Documentation",
    "keywords": "Class RpcVoiceConfigurationModel Inheritance Object RpcVoiceConfigurationModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Models Assembly : Strade.Rpc.dll Syntax public sealed class RpcVoiceConfigurationModel Properties | Improve this Doc View Source AvailableDevices Gets or sets a read-only list of devices that are available for the configuration. Declaration [JsonPropertyName(\"available_devices\")] public IReadOnlyList<RpcVoiceDeviceModel> AvailableDevices { get; set; } Property Value Type Description IReadOnlyList < RpcVoiceDeviceModel > a read-only list of devices that are available for the configuration. | Improve this Doc View Source DeviceId Declaration [JsonPropertyName(\"device_id\")] public string DeviceId { get; set; } Property Value Type Description String | Improve this Doc View Source Volume Gets or sets the volume. Declaration [JsonPropertyName(\"volume\")] public float Volume { get; set; } Property Value Type Description Single the volume. Remarks Ranges from 0-100 if input; or from 0-200 if output."
  },
  "api/Strade.Rpc.Models.RpcVoiceDeviceModel.html": {
    "href": "api/Strade.Rpc.Models.RpcVoiceDeviceModel.html",
    "title": "Class RpcVoiceDeviceModel | Strade Developer Documentation",
    "keywords": "Class RpcVoiceDeviceModel Inheritance Object RpcVoiceDeviceModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Models Assembly : Strade.Rpc.dll Syntax public sealed class RpcVoiceDeviceModel Properties | Improve this Doc View Source Id Gets or sets the unique identifier of the device. Declaration [JsonPropertyName(\"id\")] public string Id { get; set; } Property Value Type Description String the unique identifier of the device. | Improve this Doc View Source Name Gets or sets the human-friendly name of the device. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the human-friendly name of the device."
  },
  "api/Strade.Rpc.Models.RpcVoiceSettingsModel.html": {
    "href": "api/Strade.Rpc.Models.RpcVoiceSettingsModel.html",
    "title": "Class RpcVoiceSettingsModel | Strade Developer Documentation",
    "keywords": "Class RpcVoiceSettingsModel Represents the full structure of a RPC voice settings object. Inheritance Object RpcVoiceSettingsModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Models Assembly : Strade.Rpc.dll Syntax public sealed class RpcVoiceSettingsModel Properties | Improve this Doc View Source ActivationSettings Gets or sets the voice activation mode settings. Declaration [JsonPropertyName(\"mode\")] public VoiceActivationSettingsModel ActivationSettings { get; set; } Property Value Type Description VoiceActivationSettingsModel the voice activation mode settings. | Improve this Doc View Source AutomaticGainControl Gets or sets a value indicating whether automatic gain control is enabled. Declaration [JsonPropertyName(\"automatic_gain_control\")] public bool AutomaticGainControl { get; set; } Property Value Type Description Boolean a value indicating whether automatic gain control is enabled. | Improve this Doc View Source EchoCancellation Gets or sets a value indicating whether echo cancellation is enabled. Declaration [JsonPropertyName(\"echo_cancellation\")] public bool EchoCancellation { get; set; } Property Value Type Description Boolean a value indicating whether echo cancellation is enabled. | Improve this Doc View Source Input Gets or sets the voice input device selection information. Declaration [JsonPropertyName(\"input\")] public RpcVoiceConfigurationModel Input { get; set; } Property Value Type Description RpcVoiceConfigurationModel the voice input device selection information. | Improve this Doc View Source IsDeafened Gets or sets a value indicating whether the user is locally deafened. Declaration [JsonPropertyName(\"deaf\")] public bool IsDeafened { get; set; } Property Value Type Description Boolean a value indicating whether the user is locally deafened. | Improve this Doc View Source IsMuted Gets or sets a value indicating whether the user is locally muted. Declaration [JsonPropertyName(\"mute\")] public bool IsMuted { get; set; } Property Value Type Description Boolean a value indicating whether the user is locally muted. | Improve this Doc View Source Output Gets or sets the voice output device selection information. Declaration [JsonPropertyName(\"output\")] public RpcVoiceConfigurationModel Output { get; set; } Property Value Type Description RpcVoiceConfigurationModel the voice output device selection information. | Improve this Doc View Source QualityOfService Gets or sets a value indicating whether the QoS (Quality of Service) option is enabled. Declaration [JsonPropertyName(\"qos\")] public bool QualityOfService { get; set; } Property Value Type Description Boolean a value indicating whether the QoS (Quality of Service) option is enabled. | Improve this Doc View Source ShowSilenceWarning Gets or sets a value indicating whether a silence warning is shown when no audio input is detected on the selected audio input device. Declaration [JsonPropertyName(\"silence_warning\")] public bool ShowSilenceWarning { get; set; } Property Value Type Description Boolean a value indicating whether a silence warning is shown when no audio input is detected on the selected audio input device."
  },
  "api/Strade.Rpc.Models.RpcVoiceStateModel.html": {
    "href": "api/Strade.Rpc.Models.RpcVoiceStateModel.html",
    "title": "Class RpcVoiceStateModel | Strade Developer Documentation",
    "keywords": "Class RpcVoiceStateModel Inheritance Object RpcVoiceStateModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Models Assembly : Strade.Rpc.dll Syntax public sealed class RpcVoiceStateModel Properties | Improve this Doc View Source IsDeafened Gets or sets a value indicating whether the user the voice state is for is server / global deafened. Declaration [JsonPropertyName(\"deaf\")] public bool IsDeafened { get; set; } Property Value Type Description Boolean a value indicating whether the user the voice state is for is server / global deafened. | Improve this Doc View Source IsLocalDeafened Gets or sets a value indicating whether the user the voice state is for is local deafened. Declaration [JsonPropertyName(\"self_deaf\")] public bool IsLocalDeafened { get; set; } Property Value Type Description Boolean a value indicating whether the user the voice state is for is local deafened. | Improve this Doc View Source IsLocalMuted Gets or sets a value indicating whether the user the voice state is for is local muted. Declaration [JsonPropertyName(\"self_mute\")] public bool IsLocalMuted { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsMuted Gets or sets a value indicating whether the user the voice state is for is server / global muted. Declaration [JsonPropertyName(\"mute\")] public bool IsMuted { get; set; } Property Value Type Description Boolean a value indicating whether the user the voice state is for is server / global muted. | Improve this Doc View Source IsSuppressed Gets or sets a value indicating whether the user the voice state is for is muted by the actual bot / user client. Declaration [JsonPropertyName(\"suppress\")] public bool IsSuppressed { get; set; } Property Value Type Description Boolean a value indicating whether the user the voice state is for is muted by the actual bot / user client."
  },
  "api/Strade.Rpc.Models.RpcVoiceUserModel.html": {
    "href": "api/Strade.Rpc.Models.RpcVoiceUserModel.html",
    "title": "Class RpcVoiceUserModel | Strade Developer Documentation",
    "keywords": "Class RpcVoiceUserModel Inheritance Object RpcVoiceUserModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Models Assembly : Strade.Rpc.dll Syntax public sealed class RpcVoiceUserModel Properties | Improve this Doc View Source DisplayName Gets or sets the display name shown in the channel. Declaration [JsonPropertyName(\"nick\")] public string DisplayName { get; set; } Property Value Type Description String the display name shown in the channel. | Improve this Doc View Source IsMuted Gets or sets a value indicating whether the user is muted. Declaration [JsonPropertyName(\"mute\")] public bool IsMuted { get; set; } Property Value Type Description Boolean a value indicating whether the user is muted. | Improve this Doc View Source Pan Gets or sets the user's pan. Declaration [JsonPropertyName(\"pan\")] public PanModel Pan { get; set; } Property Value Type Description PanModel the user's pan. | Improve this Doc View Source User Gets or sets information about the user. Declaration [JsonPropertyName(\"user\")] public UserModel User { get; set; } Property Value Type Description UserModel information about the user. | Improve this Doc View Source VoiceState Gets or sets the user's voice state. Declaration [JsonPropertyName(\"voice_state\")] public RpcVoiceStateModel VoiceState { get; set; } Property Value Type Description RpcVoiceStateModel the user's voice state. | Improve this Doc View Source Volume Gets or sets the user volume. Declaration [JsonPropertyName(\"volume\")] public float Volume { get; set; } Property Value Type Description Single the user volume."
  },
  "api/Strade.Rpc.Models.ShortcutCombinationModel.html": {
    "href": "api/Strade.Rpc.Models.ShortcutCombinationModel.html",
    "title": "Class ShortcutCombinationModel | Strade Developer Documentation",
    "keywords": "Class ShortcutCombinationModel Inheritance Object ShortcutCombinationModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Models Assembly : Strade.Rpc.dll Syntax public sealed class ShortcutCombinationModel Properties | Improve this Doc View Source Shortcuts Declaration [JsonPropertyName(\"shortcut\")] public IReadOnlyList<ShortcutKeyModel> Shortcuts { get; set; } Property Value Type Description IReadOnlyList < ShortcutKeyModel >"
  },
  "api/Strade.Rpc.Models.ShortcutKeyModel.html": {
    "href": "api/Strade.Rpc.Models.ShortcutKeyModel.html",
    "title": "Class ShortcutKeyModel | Strade Developer Documentation",
    "keywords": "Class ShortcutKeyModel Represents a pressed key combination. Inheritance Object ShortcutKeyModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Models Assembly : Strade.Rpc.dll Syntax public sealed class ShortcutKeyModel Properties | Improve this Doc View Source KeyCode Gets or sets the key-code pressed. Declaration [JsonPropertyName(\"code\")] public int KeyCode { get; set; } Property Value Type Description Int32 the key-code pressed. | Improve this Doc View Source Name Gets or sets the name of the pressed shortcut combination. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the name of the pressed shortcut combination. | Improve this Doc View Source Type Gets or sets the type of the pressed key. Declaration [JsonPropertyName(\"type\")] public ShortcutKeyType Type { get; set; } Property Value Type Description ShortcutKeyType the type of the pressed key."
  },
  "api/Strade.Rpc.Models.VoiceActivationSettingsModel.html": {
    "href": "api/Strade.Rpc.Models.VoiceActivationSettingsModel.html",
    "title": "Class VoiceActivationSettingsModel | Strade Developer Documentation",
    "keywords": "Class VoiceActivationSettingsModel Inheritance Object VoiceActivationSettingsModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Models Assembly : Strade.Rpc.dll Syntax public sealed class VoiceActivationSettingsModel Properties | Improve this Doc View Source ActivationType Gets or sets the voice activation type the user is using. Declaration [JsonPropertyName(\"type\")] public VoiceActivationType ActivationType { get; set; } Property Value Type Description VoiceActivationType the voice activation type the user is using. | Improve this Doc View Source AutoThreshold Gets or sets a value indicating whether auto threshold adjustment is enabled. Declaration [JsonPropertyName(\"auto_threshold\")] public bool AutoThreshold { get; set; } Property Value Type Description Boolean a value indicating whether auto threshold adjustment is enabled. Remarks Valid when VoiceActivity is used as the voice activation type ( ActivationType ). See Also Threshold | Improve this Doc View Source Delay Gets or sets the PTT release time (the delay the push to talk is still active after the user released the PTT shortcut). Declaration [JsonPropertyName(\"delay\")] public float Delay { get; set; } Property Value Type Description Single the PTT release time (the delay the push to talk is still active after the user released the PTT shortcut). Remarks Valid when PushToTalk is used as the voice activation type ( ActivationType ). | Improve this Doc View Source PushToTalkHotkey Gets or sets the shortcut used to activate PTT (Push To Talk). Declaration [JsonPropertyName(\"shortcut\")] public IReadOnlyList<ShortcutKeyModel> PushToTalkHotkey { get; set; } Property Value Type Description IReadOnlyList < ShortcutKeyModel > the shortcut used to activate PTT (Push To Talk). Remarks Valid when PushToTalk is used as the voice activation type ( ActivationType ). | Improve this Doc View Source Threshold Gets or sets the decibel threshold when the user sends voice data. Declaration [JsonPropertyName(\"threshold\")] public float Threshold { get; set; } Property Value Type Description Single the decibel threshold when the user sends voice data. Remarks Valid when VoiceActivity is used as the voice activation type ( ActivationType )."
  },
  "api/Strade.Rpc.Models.VoiceConnectionInformationModel.html": {
    "href": "api/Strade.Rpc.Models.VoiceConnectionInformationModel.html",
    "title": "Class VoiceConnectionInformationModel | Strade Developer Documentation",
    "keywords": "Class VoiceConnectionInformationModel Contains information about a voice connection. Inheritance Object VoiceConnectionInformationModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Models Assembly : Strade.Rpc.dll Syntax public sealed class VoiceConnectionInformationModel Properties | Improve this Doc View Source AveragePing Gets or sets the average ping time (latency) in milliseconds. Declaration [JsonPropertyName(\"average_ping\")] public float AveragePing { get; set; } Property Value Type Description Single the average ping time (latency) in milliseconds. | Improve this Doc View Source Hostname Gets or sets the host-name of the server connected / connecting to. Declaration [JsonPropertyName(\"hostname\")] public string Hostname { get; set; } Property Value Type Description String the host-name of the server connected / connecting to. | Improve this Doc View Source LastPing Gets or sets the last ping time (latency) in milliseconds. Declaration [JsonPropertyName(\"last_ping\")] public float LastPing { get; set; } Property Value Type Description Single the last ping time (latency) in milliseconds. | Improve this Doc View Source Latencies Gets or sets a list of the latencies of the last 20 pings (in milliseconds). Declaration [JsonPropertyName(\"pings\")] public IReadOnlyList<float> Latencies { get; set; } Property Value Type Description IReadOnlyList < Single > a list of the latencies of the last 20 pings (in milliseconds). | Improve this Doc View Source Status Gets or sets the connection status. Declaration [JsonPropertyName(\"state\")] public VoiceConnectionStatus Status { get; set; } Property Value Type Description VoiceConnectionStatus the connection status."
  },
  "api/Strade.Rpc.Payloads.Events.ActivityJoinEvent.html": {
    "href": "api/Strade.Rpc.Payloads.Events.ActivityJoinEvent.html",
    "title": "Class ActivityJoinEvent | Strade Developer Documentation",
    "keywords": "Class ActivityJoinEvent Represents the event payload structure for the ActivityJoin event. Inheritance Object ActivityJoinEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Events Assembly : Strade.Rpc.dll Syntax public sealed class ActivityJoinEvent Properties | Improve this Doc View Source JoinSecret Gets or sets the match join secret. Declaration [JsonPropertyName(\"secret\")] public string JoinSecret { get; set; } Property Value Type Description String the match join secret."
  },
  "api/Strade.Rpc.Payloads.Events.ActivityJoinRequestEvent.html": {
    "href": "api/Strade.Rpc.Payloads.Events.ActivityJoinRequestEvent.html",
    "title": "Class ActivityJoinRequestEvent | Strade Developer Documentation",
    "keywords": "Class ActivityJoinRequestEvent Represents the event payload structure for the ActivityJoinRequest event. Inheritance Object ActivityJoinRequestEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Events Assembly : Strade.Rpc.dll Syntax public sealed class ActivityJoinRequestEvent Properties | Improve this Doc View Source User Declaration [JsonPropertyName(\"user\")] public UserModel User { get; set; } Property Value Type Description UserModel"
  },
  "api/Strade.Rpc.Payloads.Events.ActivitySpectateEvent.html": {
    "href": "api/Strade.Rpc.Payloads.Events.ActivitySpectateEvent.html",
    "title": "Class ActivitySpectateEvent | Strade Developer Documentation",
    "keywords": "Class ActivitySpectateEvent Represents the event payload structure for the ActivitySpectate event. Inheritance Object ActivitySpectateEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Events Assembly : Strade.Rpc.dll Syntax public sealed class ActivitySpectateEvent Properties | Improve this Doc View Source SpectateSecret Declaration [JsonPropertyName(\"secret\")] public string SpectateSecret { get; set; } Property Value Type Description String"
  },
  "api/Strade.Rpc.Payloads.Events.CaptureShortcutChangeEvent.html": {
    "href": "api/Strade.Rpc.Payloads.Events.CaptureShortcutChangeEvent.html",
    "title": "Class CaptureShortcutChangeEvent | Strade Developer Documentation",
    "keywords": "Class CaptureShortcutChangeEvent Represents the event payload structure for the CaptureShortcutChange event. Inheritance Object CaptureShortcutChangeEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Events Assembly : Strade.Rpc.dll Syntax public sealed class CaptureShortcutChangeEvent Properties | Improve this Doc View Source Shortcuts Gets or sets the changed shortcut combination. Declaration [JsonPropertyName(\"shortcut\")] public IReadOnlyList<ShortcutKeyModel> Shortcuts { get; set; } Property Value Type Description IReadOnlyList < ShortcutKeyModel >"
  },
  "api/Strade.Rpc.Payloads.Events.ChannelCreateEvent.html": {
    "href": "api/Strade.Rpc.Payloads.Events.ChannelCreateEvent.html",
    "title": "Class ChannelCreateEvent | Strade Developer Documentation",
    "keywords": "Class ChannelCreateEvent Represents the event payload structure for the ChannelCreate event. Inheritance Object ChannelCreateEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Events Assembly : Strade.Rpc.dll Syntax public sealed class ChannelCreateEvent Properties | Improve this Doc View Source Id Gets or sets the snowflake identifier of the channel created. Declaration [JsonPropertyName(\"id\")] [JsonConverter(typeof(StringSnowflakeJsonConverter))] public Snowflake Id { get; set; } Property Value Type Description Snowflake the snowflake identifier of the channel created. | Improve this Doc View Source Name Gets or sets the name of the channel created. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the name of the channel created. | Improve this Doc View Source Type Gets or sets the type of the channel that was created. Declaration [JsonPropertyName(\"type\")] public ChannelType Type { get; set; } Property Value Type Description ChannelType the type of the channel that was created."
  },
  "api/Strade.Rpc.Payloads.Events.GuildCreateEvent.html": {
    "href": "api/Strade.Rpc.Payloads.Events.GuildCreateEvent.html",
    "title": "Class GuildCreateEvent | Strade Developer Documentation",
    "keywords": "Class GuildCreateEvent Represents the event payload structure for the GuildCreate event. Inheritance Object GuildCreateEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Events Assembly : Strade.Rpc.dll Syntax public sealed class GuildCreateEvent Properties | Improve this Doc View Source Id Gets or sets the snowflake identifier of the guild created. Declaration [JsonPropertyName(\"id\")] [JsonConverter(typeof(StringSnowflakeJsonConverter))] public Snowflake Id { get; set; } Property Value Type Description Snowflake the snowflake identifier of the guild created. | Improve this Doc View Source Name Gets or sets the name of the guild created. Declaration [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value Type Description String the name of the guild created."
  },
  "api/Strade.Rpc.Payloads.Events.GuildStatusEvent.html": {
    "href": "api/Strade.Rpc.Payloads.Events.GuildStatusEvent.html",
    "title": "Class GuildStatusEvent | Strade Developer Documentation",
    "keywords": "Class GuildStatusEvent Represents the event payload structure for the GuildStatus event. Inheritance Object GuildStatusEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Events Assembly : Strade.Rpc.dll Syntax public sealed class GuildStatusEvent Properties | Improve this Doc View Source Guild Gets or sets the guild status. Declaration [JsonPropertyName(\"guild\")] public RpcGuildModel Guild { get; set; } Property Value Type Description RpcGuildModel the guild status."
  },
  "api/Strade.Rpc.Payloads.Events.html": {
    "href": "api/Strade.Rpc.Payloads.Events.html",
    "title": "Namespace Strade.Rpc.Payloads.Events | Strade Developer Documentation",
    "keywords": "Namespace Strade.Rpc.Payloads.Events Classes ActivityJoinEvent Represents the event payload structure for the ActivityJoin event. ActivityJoinRequestEvent Represents the event payload structure for the ActivityJoinRequest event. ActivitySpectateEvent Represents the event payload structure for the ActivitySpectate event. CaptureShortcutChangeEvent Represents the event payload structure for the CaptureShortcutChange event. ChannelCreateEvent Represents the event payload structure for the ChannelCreate event. GuildCreateEvent Represents the event payload structure for the GuildCreate event. GuildStatusEvent Represents the event payload structure for the GuildStatus event. MessageCreateEvent Represents the event payload structure for the MessageCreate event. MessageDeleteEvent Represents the event payload structure for the MessageDelete event. MessageUpdateEvent Represents the event payload structure for the MessageUpdate event. ReadyEvent Represents the event payload structure for the Ready event. SpeakingEvent Represents the event payload structure for the SpeakingStart / SpeakingStop event. VoiceChannelSelectEvent Represents the event payload structure for the VoiceChannelSelect event."
  },
  "api/Strade.Rpc.Payloads.Events.MessageCreateEvent.html": {
    "href": "api/Strade.Rpc.Payloads.Events.MessageCreateEvent.html",
    "title": "Class MessageCreateEvent | Strade Developer Documentation",
    "keywords": "Class MessageCreateEvent Represents the event payload structure for the MessageCreate event. Inheritance Object MessageCreateEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Events Assembly : Strade.Rpc.dll Syntax public sealed class MessageCreateEvent Properties | Improve this Doc View Source ChannelId Gets or sets the snowflake identifier of the channel the message was created / sent in. Declaration [JsonPropertyName(\"channel_id\")] [JsonConverter(typeof(StringSnowflakeJsonConverter))] public Snowflake ChannelId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the channel the message was created / sent in. | Improve this Doc View Source Message Gets or sets the updated message. Declaration [JsonPropertyName(\"message\")] public RpcMessageModel Message { get; set; } Property Value Type Description RpcMessageModel the updated message."
  },
  "api/Strade.Rpc.Payloads.Events.MessageDeleteEvent.html": {
    "href": "api/Strade.Rpc.Payloads.Events.MessageDeleteEvent.html",
    "title": "Class MessageDeleteEvent | Strade Developer Documentation",
    "keywords": "Class MessageDeleteEvent Represents the event payload structure for the MessageDelete event. Inheritance Object MessageDeleteEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Events Assembly : Strade.Rpc.dll Syntax public sealed class MessageDeleteEvent Properties | Improve this Doc View Source ChannelId Gets or sets the snowflake identifier of the channel the message was deleted in. Declaration [JsonPropertyName(\"channel_id\")] [JsonConverter(typeof(StringSnowflakeJsonConverter))] public Snowflake ChannelId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the channel the message was deleted in. | Improve this Doc View Source Message Gets or sets the updated message. Declaration [JsonPropertyName(\"message\")] public MessageReferenceModel Message { get; set; } Property Value Type Description MessageReferenceModel the updated message."
  },
  "api/Strade.Rpc.Payloads.Events.MessageUpdateEvent.html": {
    "href": "api/Strade.Rpc.Payloads.Events.MessageUpdateEvent.html",
    "title": "Class MessageUpdateEvent | Strade Developer Documentation",
    "keywords": "Class MessageUpdateEvent Represents the event payload structure for the MessageUpdate event. Inheritance Object MessageUpdateEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Events Assembly : Strade.Rpc.dll Syntax public sealed class MessageUpdateEvent Properties | Improve this Doc View Source ChannelId Gets or sets the snowflake identifier of the channel the message was updated in. Declaration [JsonPropertyName(\"channel_id\")] [JsonConverter(typeof(StringSnowflakeJsonConverter))] public Snowflake ChannelId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the channel the message was updated in. | Improve this Doc View Source Message Gets or sets the updated message. Declaration [JsonPropertyName(\"message\")] public RpcMessageModel Message { get; set; } Property Value Type Description RpcMessageModel the updated message."
  },
  "api/Strade.Rpc.Payloads.Events.ReadyEvent.html": {
    "href": "api/Strade.Rpc.Payloads.Events.ReadyEvent.html",
    "title": "Class ReadyEvent | Strade Developer Documentation",
    "keywords": "Class ReadyEvent Represents the event payload structure for the Ready event. Inheritance Object ReadyEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Events Assembly : Strade.Rpc.dll Syntax public sealed class ReadyEvent Properties | Improve this Doc View Source EndpointInformation Gets or sets information about the RPC endpoint. Declaration [JsonPropertyName(\"config\")] public RpcEndpointInformationModel EndpointInformation { get; set; } Property Value Type Description RpcEndpointInformationModel information about the RPC endpoint. | Improve this Doc View Source User Gets or sets information about the RPC user. Declaration [JsonPropertyName(\"user\")] public UserModel User { get; set; } Property Value Type Description UserModel information about the RPC user. | Improve this Doc View Source Version Gets or sets the endpoint version connected to. Declaration [JsonPropertyName(\"v\")] public int Version { get; set; } Property Value Type Description Int32 the endpoint version connected to."
  },
  "api/Strade.Rpc.Payloads.Events.SpeakingEvent.html": {
    "href": "api/Strade.Rpc.Payloads.Events.SpeakingEvent.html",
    "title": "Class SpeakingEvent | Strade Developer Documentation",
    "keywords": "Class SpeakingEvent Represents the event payload structure for the SpeakingStart / SpeakingStop event. Inheritance Object SpeakingEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Events Assembly : Strade.Rpc.dll Syntax public sealed class SpeakingEvent Properties | Improve this Doc View Source UserId Gets or sets the snowflake identifier of the user that stopped / started speaking. Declaration [JsonPropertyName(\"user_id\")] [JsonConverter(typeof(StringSnowflakeJsonConverter))] public Snowflake UserId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the user that stopped / started speaking."
  },
  "api/Strade.Rpc.Payloads.Events.VoiceChannelSelectEvent.html": {
    "href": "api/Strade.Rpc.Payloads.Events.VoiceChannelSelectEvent.html",
    "title": "Class VoiceChannelSelectEvent | Strade Developer Documentation",
    "keywords": "Class VoiceChannelSelectEvent Represents the event payload structure for the VoiceChannelSelect event. Inheritance Object VoiceChannelSelectEvent Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Events Assembly : Strade.Rpc.dll Syntax public sealed class VoiceChannelSelectEvent Properties | Improve this Doc View Source ChannelId Gets or sets the snowflake identifier of the channel joined. Declaration [JsonPropertyName(\"channel_id\")] [JsonConverter(typeof(StringSnowflakeJsonConverter))] public Snowflake? ChannelId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the channel joined; or null if the client disconnected from a voice channel. | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the guild the channel is. Declaration [JsonPropertyName(\"guild_id\")] [JsonConverter(typeof(StringSnowflakeJsonConverter))] public Snowflake? GuildId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the guild the channel is; or null if the client disconnected from a voice channel."
  },
  "api/Strade.Rpc.Payloads.html": {
    "href": "api/Strade.Rpc.Payloads.html",
    "title": "Namespace Strade.Rpc.Payloads | Strade Developer Documentation",
    "keywords": "Namespace Strade.Rpc.Payloads Enums RpcCommand A set of the RPC commands (see https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-commands for reference). RpcErrorCode A set of RPC error codes. RpcEventType A set of RPC event types."
  },
  "api/Strade.Rpc.Payloads.Requests.AuthorizeRequest.html": {
    "href": "api/Strade.Rpc.Payloads.Requests.AuthorizeRequest.html",
    "title": "Class AuthorizeRequest | Strade Developer Documentation",
    "keywords": "Class AuthorizeRequest Represents the request payload structure for the Authorize command. Inheritance Object AuthorizeRequest Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Requests Assembly : Strade.Rpc.dll Syntax public sealed class AuthorizeRequest Properties | Improve this Doc View Source ClientId Gets or sets the associated client identifier. Declaration [JsonPropertyName(\"client_id\")] public string ClientId { get; set; } Property Value Type Description String the associated client identifier. | Improve this Doc View Source RpcToken Gets or sets the optional one-time use RPC token used for game authorization. Declaration [JsonPropertyName(\"rpc_token\")] public string RpcToken { get; set; } Property Value Type Description String the optional one-time use RPC token used for game authorization. | Improve this Doc View Source Scopes Gets or sets a list of the OAuth2 scopes. Declaration [JsonPropertyName(\"scopes\")] public IReadOnlyList<string> Scopes { get; set; } Property Value Type Description IReadOnlyList < String > a list of the OAuth2 scopes."
  },
  "api/Strade.Rpc.Payloads.Requests.CaptureShortcutRequest.html": {
    "href": "api/Strade.Rpc.Payloads.Requests.CaptureShortcutRequest.html",
    "title": "Class CaptureShortcutRequest | Strade Developer Documentation",
    "keywords": "Class CaptureShortcutRequest Represents the request payload structure for the CaptureShortcut command. Inheritance Object CaptureShortcutRequest Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Requests Assembly : Strade.Rpc.dll Syntax public sealed class CaptureShortcutRequest Properties | Improve this Doc View Source Action Gets or sets the action (whether to start or stop capturing). Declaration [JsonInclude] [JsonPropertyName(\"action\")] public CaptureAction Action { get; set; } Property Value Type Description CaptureAction the action (whether to start or stop capturing)."
  },
  "api/Strade.Rpc.Payloads.Requests.CloseActivityRequestRequest.html": {
    "href": "api/Strade.Rpc.Payloads.Requests.CloseActivityRequestRequest.html",
    "title": "Class CloseActivityRequestRequest | Strade Developer Documentation",
    "keywords": "Class CloseActivityRequestRequest Represents the request payload structure for the CloseActivityRequest command. Inheritance Object CloseActivityRequestRequest Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Requests Assembly : Strade.Rpc.dll Syntax public sealed class CloseActivityRequestRequest Properties | Improve this Doc View Source UserId Gets or sets the snowflake identifier of the user the activity request should be closed for. Declaration [JsonPropertyName(\"user_id\")] [JsonConverter(typeof(StringSnowflakeJsonConverter))] public Snowflake UserId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the user the activity request should be closed for."
  },
  "api/Strade.Rpc.Payloads.Requests.GetChannelRequest.html": {
    "href": "api/Strade.Rpc.Payloads.Requests.GetChannelRequest.html",
    "title": "Class GetChannelRequest | Strade Developer Documentation",
    "keywords": "Class GetChannelRequest Represents the request payload structure for the GetChannel command. Inheritance Object GetChannelRequest Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Requests Assembly : Strade.Rpc.dll Syntax public sealed class GetChannelRequest Properties | Improve this Doc View Source ChannelId Gets or sets the snowflake identifier of the channel to retrieve. Declaration [JsonPropertyName(\"channel_id\")] [JsonConverter(typeof(StringSnowflakeJsonConverter))] public Snowflake ChannelId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the channel to retrieve."
  },
  "api/Strade.Rpc.Payloads.Requests.GetChannelsRequest.html": {
    "href": "api/Strade.Rpc.Payloads.Requests.GetChannelsRequest.html",
    "title": "Class GetChannelsRequest | Strade Developer Documentation",
    "keywords": "Class GetChannelsRequest Represents the request payload structure for the GetChannels command. Inheritance Object GetChannelsRequest Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Requests Assembly : Strade.Rpc.dll Syntax public sealed class GetChannelsRequest Properties | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the guild to request channels from. Declaration [JsonPropertyName(\"guild_id\")] [JsonConverter(typeof(StringSnowflakeJsonConverter))] public Snowflake GuildId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the guild to request channels from."
  },
  "api/Strade.Rpc.Payloads.Requests.GetGuildRequest.html": {
    "href": "api/Strade.Rpc.Payloads.Requests.GetGuildRequest.html",
    "title": "Class GetGuildRequest | Strade Developer Documentation",
    "keywords": "Class GetGuildRequest Represents the request payload structure for the GetGuild command. Inheritance Object GetGuildRequest Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Requests Assembly : Strade.Rpc.dll Syntax public sealed class GetGuildRequest Properties | Improve this Doc View Source GuildId Gets or sets the stringified snowflake identifier of the guild to request. Declaration [JsonPropertyName(\"guild_id\")] [JsonConverter(typeof(StringSnowflakeJsonConverter))] public Snowflake GuildId { get; set; } Property Value Type Description Snowflake the stringified snowflake identifier of the guild to request. | Improve this Doc View Source Timeout Gets or sets the timeout in seconds in which the guild data should be retrieved, if the timeout is exceeded the request is aborted. Declaration [JsonPropertyName(\"timeout\")] public int Timeout { get; set; } Property Value Type Description Int32 the timeout in seconds in which the guild data should be retrieved, if the timeout is exceeded the request is aborted."
  },
  "api/Strade.Rpc.Payloads.Requests.html": {
    "href": "api/Strade.Rpc.Payloads.Requests.html",
    "title": "Namespace Strade.Rpc.Payloads.Requests | Strade Developer Documentation",
    "keywords": "Namespace Strade.Rpc.Payloads.Requests Classes AuthorizeRequest Represents the request payload structure for the Authorize command. CaptureShortcutRequest Represents the request payload structure for the CaptureShortcut command. CloseActivityRequestRequest Represents the request payload structure for the CloseActivityRequest command. GetChannelRequest Represents the request payload structure for the GetChannel command. GetChannelsRequest Represents the request payload structure for the GetChannels command. GetGuildRequest Represents the request payload structure for the GetGuild command. SelectTextChannelRequest Represents the request payload structure for the SelectTextChannel command. SelectVoiceChannelRequest Represents the request payload structure for the SelectVoiceChannel command. SendActivityJoinInviteRequest Represents the request payload structure for the SendActivityJoinInvite command. SetActivityRequest Represents the request payload structure for the SetActivity command. SetCertifiedDevicesRequest Represents the request payload structure for the SetCertifiedDevices command. SetUserVoiceSettingsRequest Represents the request payload structure for the SetUserVoiceSettings command."
  },
  "api/Strade.Rpc.Payloads.Requests.SelectTextChannelRequest.html": {
    "href": "api/Strade.Rpc.Payloads.Requests.SelectTextChannelRequest.html",
    "title": "Class SelectTextChannelRequest | Strade Developer Documentation",
    "keywords": "Class SelectTextChannelRequest Represents the request payload structure for the SelectTextChannel command. Inheritance Object SelectTextChannelRequest Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Requests Assembly : Strade.Rpc.dll Syntax public sealed class SelectTextChannelRequest Properties | Improve this Doc View Source ChannelId Gets or sets the snowflake identifier of the channel to connect to. Declaration [JsonPropertyName(\"channel_id\")] [JsonConverter(typeof(StringSnowflakeJsonConverter))] public Snowflake? ChannelId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the channel to connect to; or null if the client should disconnect. | Improve this Doc View Source Timeout Gets or sets the timeout in seconds in which the user should join the channel, if the timeout is exceeded the join is aborted. Declaration [JsonPropertyName(\"timeout\")] public int Timeout { get; set; } Property Value Type Description Int32 the timeout in seconds in which the user should join the channel, if the timeout is exceeded the join is aborted."
  },
  "api/Strade.Rpc.Payloads.Requests.SelectVoiceChannelRequest.html": {
    "href": "api/Strade.Rpc.Payloads.Requests.SelectVoiceChannelRequest.html",
    "title": "Class SelectVoiceChannelRequest | Strade Developer Documentation",
    "keywords": "Class SelectVoiceChannelRequest Represents the request payload structure for the SelectVoiceChannel command. Inheritance Object SelectVoiceChannelRequest Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Requests Assembly : Strade.Rpc.dll Syntax public sealed class SelectVoiceChannelRequest Properties | Improve this Doc View Source ChannelId Gets or sets the snowflake identifier of the channel to connect to. Declaration [JsonPropertyName(\"channel_id\")] [JsonConverter(typeof(StringSnowflakeJsonConverter))] public Snowflake? ChannelId { get; set; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the channel to connect to; or null if the client should disconnect. | Improve this Doc View Source Force Gets or sets a value indicating whether the user should be forced to join the channel. Declaration [JsonPropertyName(\"force\")] public bool Force { get; set; } Property Value Type Description Boolean a value indicating whether the user should be forced to join the channel. | Improve this Doc View Source Timeout Gets or sets the timeout in seconds in which the user should join the channel, if the timeout is exceeded the join is aborted. Declaration [JsonPropertyName(\"timeout\")] public int Timeout { get; set; } Property Value Type Description Int32 the timeout in seconds in which the user should join the channel, if the timeout is exceeded the join is aborted."
  },
  "api/Strade.Rpc.Payloads.Requests.SendActivityJoinInviteRequest.html": {
    "href": "api/Strade.Rpc.Payloads.Requests.SendActivityJoinInviteRequest.html",
    "title": "Class SendActivityJoinInviteRequest | Strade Developer Documentation",
    "keywords": "Class SendActivityJoinInviteRequest Represents the request payload structure for the SendActivityJoinInvite command. Inheritance Object SendActivityJoinInviteRequest Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Requests Assembly : Strade.Rpc.dll Syntax public sealed class SendActivityJoinInviteRequest Properties | Improve this Doc View Source UserId Gets or sets the snowflake identifier of the user the activity join invite request should be sent to. Declaration [JsonPropertyName(\"user_id\")] [JsonConverter(typeof(StringSnowflakeJsonConverter))] public Snowflake UserId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the user the activity join invite request should be sent to."
  },
  "api/Strade.Rpc.Payloads.Requests.SetActivityRequest.html": {
    "href": "api/Strade.Rpc.Payloads.Requests.SetActivityRequest.html",
    "title": "Class SetActivityRequest | Strade Developer Documentation",
    "keywords": "Class SetActivityRequest Represents the request payload structure for the SetActivity command. Inheritance Object SetActivityRequest Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Requests Assembly : Strade.Rpc.dll Syntax public sealed class SetActivityRequest Properties | Improve this Doc View Source Activity Gets or sets the activity. Declaration [JsonPropertyName(\"activity\")] public RpcActivityModel Activity { get; set; } Property Value Type Description RpcActivityModel the activity. | Improve this Doc View Source ProcessPid Gets or sets the process (P)ID of the process the activity is for, if the process with the associated PID exits then the activity will disappear. Declaration [JsonPropertyName(\"pid\")] public int ProcessPid { get; set; } Property Value Type Description Int32 the process (P)ID of the process the activity is for, if the process with the associated PID exits then the activity will disappear."
  },
  "api/Strade.Rpc.Payloads.Requests.SetCertifiedDevicesRequest.html": {
    "href": "api/Strade.Rpc.Payloads.Requests.SetCertifiedDevicesRequest.html",
    "title": "Class SetCertifiedDevicesRequest | Strade Developer Documentation",
    "keywords": "Class SetCertifiedDevicesRequest Represents the request payload structure for the SetCertifiedDevices command. Inheritance Object SetCertifiedDevicesRequest Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Requests Assembly : Strade.Rpc.dll Syntax public sealed class SetCertifiedDevicesRequest Properties | Improve this Doc View Source Devices Gets or sets a list of the devices to be certified. Declaration [JsonPropertyName(\"devices\")] public IReadOnlyList<CertifiedRpcDevice> Devices { get; set; } Property Value Type Description IReadOnlyList < CertifiedRpcDevice > a list of the devices to be certified."
  },
  "api/Strade.Rpc.Payloads.Requests.SetUserVoiceSettingsRequest.html": {
    "href": "api/Strade.Rpc.Payloads.Requests.SetUserVoiceSettingsRequest.html",
    "title": "Class SetUserVoiceSettingsRequest | Strade Developer Documentation",
    "keywords": "Class SetUserVoiceSettingsRequest Represents the request payload structure for the SetUserVoiceSettings command. Inheritance Object SetUserVoiceSettingsRequest Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Requests Assembly : Strade.Rpc.dll Syntax public sealed class SetUserVoiceSettingsRequest Properties | Improve this Doc View Source IsMuted Gets or sets a value indicating whether the user should be muted. Declaration [JsonPropertyName(\"mute\")] public bool IsMuted { get; set; } Property Value Type Description Boolean a value indicating whether the user should be muted. | Improve this Doc View Source Pan Gets or sets the user pan. Declaration [JsonPropertyName(\"pan\")] public PanModel Pan { get; set; } Property Value Type Description PanModel the user pan. | Improve this Doc View Source UserId Gets or sets the snowflake identifier of the target user. Declaration [JsonPropertyName(\"user_id\")] [JsonConverter(typeof(StringSnowflakeJsonConverter))] public Snowflake UserId { get; set; } Property Value Type Description Snowflake the snowflake identifier of the target user. | Improve this Doc View Source Volume Gets or sets the target volume ( 0 - 200 , default: 100 ). Declaration [JsonPropertyName(\"volume\")] public int Volume { get; set; } Property Value Type Description Int32 the target volume ( 0 - 200 , default: 100 )."
  },
  "api/Strade.Rpc.Payloads.Responses.AuthenticateResponse.html": {
    "href": "api/Strade.Rpc.Payloads.Responses.AuthenticateResponse.html",
    "title": "Class AuthenticateResponse | Strade Developer Documentation",
    "keywords": "Class AuthenticateResponse Represents the response payload structure for the Authenticate command. Inheritance Object AuthenticateResponse Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Responses Assembly : Strade.Rpc.dll Syntax public sealed class AuthenticateResponse Properties | Improve this Doc View Source Application Gets or sets the application information. Declaration [JsonPropertyName(\"application\")] public RpcApplicationModel Application { get; set; } Property Value Type Description RpcApplicationModel the application information. | Improve this Doc View Source ExpirationDate Gets or sets the UTC time offset when the token expires. Declaration [JsonPropertyName(\"expires\")] public DateTimeOffset ExpirationDate { get; set; } Property Value Type Description DateTimeOffset the UTC time offset when the token expires. | Improve this Doc View Source Scopes Gets or sets a list of the authorization scopes. Declaration [JsonPropertyName(\"scopes\")] public IReadOnlyList<string> Scopes { get; set; } Property Value Type Description IReadOnlyList < String > a list of the authorization scopes. | Improve this Doc View Source User Gets or sets information about the authenticated user. Declaration [JsonPropertyName(\"user\")] public UserModel User { get; set; } Property Value Type Description UserModel information about the authenticated user."
  },
  "api/Strade.Rpc.Payloads.Responses.AuthorizeResponse.html": {
    "href": "api/Strade.Rpc.Payloads.Responses.AuthorizeResponse.html",
    "title": "Class AuthorizeResponse | Strade Developer Documentation",
    "keywords": "Class AuthorizeResponse Represents the response payload structure for the Authorize command. Inheritance Object AuthorizeResponse Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Responses Assembly : Strade.Rpc.dll Syntax public sealed class AuthorizeResponse Properties | Improve this Doc View Source Code Gets or sets the code used to authorize the user using the OAuth2 token endpoint. Declaration [JsonPropertyName(\"code\")] public string Code { get; set; } Property Value Type Description String the code used to authorize the user using the OAuth2 token endpoint."
  },
  "api/Strade.Rpc.Payloads.Responses.GetChannelsResponse.html": {
    "href": "api/Strade.Rpc.Payloads.Responses.GetChannelsResponse.html",
    "title": "Class GetChannelsResponse | Strade Developer Documentation",
    "keywords": "Class GetChannelsResponse Represents the response payload structure for the GetChannels command. Inheritance Object GetChannelsResponse Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Responses Assembly : Strade.Rpc.dll Syntax public sealed class GetChannelsResponse Properties | Improve this Doc View Source Channels Gets or sets a list of the channels in the guild. Declaration [JsonPropertyName(\"channels\")] public IReadOnlyList<RpcChannelModel> Channels { get; set; } Property Value Type Description IReadOnlyList < RpcChannelModel > a list of the channels in the guild."
  },
  "api/Strade.Rpc.Payloads.Responses.GetGuildsResponse.html": {
    "href": "api/Strade.Rpc.Payloads.Responses.GetGuildsResponse.html",
    "title": "Class GetGuildsResponse | Strade Developer Documentation",
    "keywords": "Class GetGuildsResponse Represents the response payload structure for the GetGuilds command. Inheritance Object GetGuildsResponse Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Responses Assembly : Strade.Rpc.dll Syntax public sealed class GetGuildsResponse Properties | Improve this Doc View Source Guilds Gets or sets a list containing the guilds the user is in. Declaration [JsonPropertyName(\"guilds\")] public IReadOnlyList<RpcGuildModel> Guilds { get; set; } Property Value Type Description IReadOnlyList < RpcGuildModel > a list containing the guilds the user is in."
  },
  "api/Strade.Rpc.Payloads.Responses.html": {
    "href": "api/Strade.Rpc.Payloads.Responses.html",
    "title": "Namespace Strade.Rpc.Payloads.Responses | Strade Developer Documentation",
    "keywords": "Namespace Strade.Rpc.Payloads.Responses Classes AuthenticateResponse Represents the response payload structure for the Authenticate command. AuthorizeResponse Represents the response payload structure for the Authorize command. GetChannelsResponse Represents the response payload structure for the GetChannels command. GetGuildsResponse Represents the response payload structure for the GetGuilds command. SubscribeResponse Represents the response payload structure for the Subscribe command. UnsubscribeResponse Represents the response payload structure for the Unsubscribe command."
  },
  "api/Strade.Rpc.Payloads.Responses.SubscribeResponse.html": {
    "href": "api/Strade.Rpc.Payloads.Responses.SubscribeResponse.html",
    "title": "Class SubscribeResponse | Strade Developer Documentation",
    "keywords": "Class SubscribeResponse Represents the response payload structure for the Subscribe command. Inheritance Object SubscribeResponse Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Responses Assembly : Strade.Rpc.dll Syntax public sealed class SubscribeResponse Properties | Improve this Doc View Source EventType Gets or sets the event type subscribed to. Declaration [JsonPropertyName(\"evt\")] public RpcEventType EventType { get; set; } Property Value Type Description RpcEventType the event type subscribed to."
  },
  "api/Strade.Rpc.Payloads.Responses.UnsubscribeResponse.html": {
    "href": "api/Strade.Rpc.Payloads.Responses.UnsubscribeResponse.html",
    "title": "Class UnsubscribeResponse | Strade Developer Documentation",
    "keywords": "Class UnsubscribeResponse Represents the response payload structure for the Unsubscribe command. Inheritance Object UnsubscribeResponse Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Payloads.Responses Assembly : Strade.Rpc.dll Syntax public sealed class UnsubscribeResponse Properties | Improve this Doc View Source EventType Gets or sets the event type unsubscribed from. Declaration [JsonPropertyName(\"evt\")] public RpcEventType EventType { get; set; } Property Value Type Description RpcEventType the event type unsubscribed from."
  },
  "api/Strade.Rpc.Payloads.RpcCommand.html": {
    "href": "api/Strade.Rpc.Payloads.RpcCommand.html",
    "title": "Enum RpcCommand | Strade Developer Documentation",
    "keywords": "Enum RpcCommand A set of the RPC commands (see https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-commands for reference). Namespace : Strade.Rpc.Payloads Assembly : Strade.Rpc.dll Syntax [JsonConverter(typeof(StringEnumConverter<RpcCommand>))] public enum RpcCommand Fields Name Description Authenticate \"AUTHENTICATE\" RPC command. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-commands for reference. Authorize \"AUTHORIZE\" RPC command. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-commands for reference. CaptureShortcut \"CAPTURE_SHORTCUT\" RPC command. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-commands for reference. CloseActivityRequest \"CLOSE_ACTIVITY_REQUEST\" RPC command. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-commands for reference. Dispatch \"DISPATCH\" RPC command. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-commands for reference. GetChannel \"GET_CHANNEL\" RPC command. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-commands for reference. GetChannels \"GET_CHANNELS\" RPC command. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-commands for reference. GetGuild \"GET_GUILD\" RPC command. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-commands for reference. GetGuilds \"GET_GUILDS\" RPC command. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-commands for reference. GetSelectedVoiceChannel \"GET_SELECTED_VOICE_CHANNEL\" RPC command. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-commands for reference. GetVoiceSettings \"GET_VOICE_SETTINGS\" RPC command. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-commands for reference. SelectTextChannel \"SELECT_TEXT_CHANNEL\" RPC command. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-commands for reference. SelectVoiceChannel \"SELECT_VOICE_CHANNEL\" RPC command. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-commands for reference. SendActivityJoinInvite \"SEND_ACTIVITY_JOIN_INVITE\" RPC command. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-commands for reference. SetActivity \"SET_ACTIVITY\" RPC command. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-commands for reference. SetCertifiedDevices \"SET_CERTIFIED_DEVICES\" RPC command. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-commands for reference. SetUserVoiceSettings \"SET_USER_VOICE_SETTINGS\" RPC command. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-commands for reference. SetVoiceSettings \"SET_VOICE_SETTINGS\" RPC command. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-commands for reference. Subscribe \"SUBSCRIBE\" RPC command. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-commands for reference. Unsubscribe \"UNSUBSCRIBE\" RPC command. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-commands for reference. Extension Methods EnumExtensions.GetName<RpcCommand>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Rpc.Payloads.RpcErrorCode.html": {
    "href": "api/Strade.Rpc.Payloads.RpcErrorCode.html",
    "title": "Enum RpcErrorCode | Strade Developer Documentation",
    "keywords": "Enum RpcErrorCode A set of RPC error codes. Namespace : Strade.Rpc.Payloads Assembly : Strade.Rpc.dll Syntax public enum RpcErrorCode : ushort Fields Name Description CaptureShortcutAlreadyListening Capture Shortcut Already Listening: Sent when you try to capture a shortcut key when already capturing one. GetGuildTimedOut Get Guild Timed Out: Sent when an asynchronous GetGuild command times out. InvalidChannel Invalid Channel: Sent when the channel id specified is invalid. InvalidClientId Invalid Client ID: Sent when an invalid OAuth2 application ID is used to authorize or authenticate with. InvalidCommand Invalid Command: Sent when the command name specified is invalid. InvalidEvent Invalid Event: Sent when the event name specified is invalid. InvalidGuild Invalid Guild: Sent when the guild id specified is invalid. InvalidOrigin Invalid Origin: Sent when an invalid OAuth2 application origin is used to authorize or authenticate with. InvalidPayload Invalid Payload: Sent when an invalid payload is received. InvalidPermissions Invalid Permissions: Sent when the user doesn't have the permission required to access the requested resource. InvalidToken Invalid Token: Sent when an invalid OAuth2 token is used to authorize or authenticate with. InvalidUser Invalid User: Sent when the user id specified is invalid. OAuth2Error OAuth2 Error: Sent when a standard OAuth2 error occurred; check the data object for the OAuth 2 error information. SelectChannelTimedOut Select Channel Timed Out: Sent when an asynchronous SelectTextChannel / SelectVoiceChannel command times out. SelectVoiceForceRequired Select Voice Force Required: Sent when you try to join a user to a voice channel but the user is already in one. UnknownError Unknown Error: Sent when an unknown error occurred. Extension Methods EnumExtensions.GetName<RpcErrorCode>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Rpc.Payloads.RpcEventType.html": {
    "href": "api/Strade.Rpc.Payloads.RpcEventType.html",
    "title": "Enum RpcEventType | Strade Developer Documentation",
    "keywords": "Enum RpcEventType A set of RPC event types. Namespace : Strade.Rpc.Payloads Assembly : Strade.Rpc.dll Syntax [JsonConverter(typeof(StringEnumConverter<RpcEventType>))] public enum RpcEventType : ushort Fields Name Description ActivityJoin \"ACTIVITY_JOIN\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. ActivityJoinRequest \"ACTIVITY_JOIN_REQUEST\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. ActivitySpectate \"ACTIVITY_SPECTATE\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. CaptureShortcutChange \"CAPTURE_SHORTCUT_CHANGE\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. ChannelCreate \"CHANNEL_CREATE\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. Error \"ERROR\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. GuildCreate \"GUILD_CREATE\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. GuildStatus \"GUILD_STATUS\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. MessageCreate \"MESSAGE_CREATE\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. MessageDelete \"MESSAGE_DELETE\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. MessageUpdate \"MESSAGE_UPDATE\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. Ready \"READY\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. SpeakingStart \"SPEAKING_START\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. SpeakingStop \"SPEAKING_STOP\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. VoiceChannelSelect \"VOICE_CHANNEL_SELECT\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. VoiceConnectionStatus \"VOICE_CONNECTION_STATUS\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. VoiceSettingsUpdated \"VOICE_SETTINGS_UPDATE\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. VoiceStateCreate \"VOICE_STATE_CREATE\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. VoiceStateDelete \"VOICE_STATE_DELETE\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. VoiceStateUpdate \"VOICE_STATE_UPDATE\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. Extension Methods EnumExtensions.GetName<RpcEventType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Rpc.RpcClientConfiguration.html": {
    "href": "api/Strade.Rpc.RpcClientConfiguration.html",
    "title": "Class RpcClientConfiguration | Strade Developer Documentation",
    "keywords": "Class RpcClientConfiguration The client options for the DiscordRpcClient class. Inheritance Object RpcClientConfiguration Implements ICloneable < RpcClientConfiguration > ICloneable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc Assembly : Strade.Rpc.dll Syntax public sealed class RpcClientConfiguration : ICloneable<RpcClientConfiguration>, ICloneable Properties | Improve this Doc View Source ClientId Gets or sets the client identifier. Declaration public Snowflake ClientId { get; set; } Property Value Type Description Snowflake the client identifier. | Improve this Doc View Source ClientSecret Gets or sets the client secret; required for authentication. Declaration public string ClientSecret { get; set; } Property Value Type Description String the client secret; required for authentication. | Improve this Doc View Source ReadyTimeout Gets or sets the timeout after the client must receive the ready event. Declaration public TimeSpan ReadyTimeout { get; set; } Property Value Type Description TimeSpan the timeout after the client must receive the ready event. | Improve this Doc View Source TracePayloads Declaration public bool TracePayloads { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Clone() Declaration public RpcClientConfiguration Clone() Returns Type Description RpcClientConfiguration Explicit Interface Implementations | Improve this Doc View Source ICloneable.Clone() Declaration object ICloneable.Clone() Returns Type Description Object Implements ICloneable<TSelf> System.ICloneable"
  },
  "api/Strade.Rpc.RpcConnection.html": {
    "href": "api/Strade.Rpc.RpcConnection.html",
    "title": "Class RpcConnection | Strade Developer Documentation",
    "keywords": "Class RpcConnection Inheritance Object RpcConnection Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc Assembly : Strade.Rpc.dll Syntax public class RpcConnection Constructors | Improve this Doc View Source RpcConnection(RpcPayloadHandler, RpcClientConfiguration, ILogger) Declaration public RpcConnection(RpcPayloadHandler payloadHandler, RpcClientConfiguration configuration, ILogger logger = null) Parameters Type Name Description RpcPayloadHandler payloadHandler RpcClientConfiguration configuration ILogger logger | Improve this Doc View Source RpcConnection(ITransport, RpcPayloadHandler, RpcClientConfiguration, ILogger) Declaration public RpcConnection(ITransport transport, RpcPayloadHandler payloadHandler, RpcClientConfiguration configuration, ILogger logger = null) Parameters Type Name Description ITransport transport RpcPayloadHandler payloadHandler RpcClientConfiguration configuration ILogger logger Properties | Improve this Doc View Source SerializerOptions Declaration public JsonSerializerOptions SerializerOptions { get; } Property Value Type Description JsonSerializerOptions | Improve this Doc View Source Status Gets the client status. Declaration public RpcStatus Status { get; } Property Value Type Description RpcStatus the client status. | Improve this Doc View Source Transport Declaration public ITransport Transport { get; } Property Value Type Description ITransport Methods | Improve this Doc View Source ConnectAsync(CancellationToken) Connects to the local RPC server asynchronously. Declaration public Task ConnectAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition RpcException thrown if a RPC command error occurs. | Improve this Doc View Source DeserializePayload(ref RpcPayloadSerializationContext) Declaration protected virtual object DeserializePayload(ref RpcPayloadSerializationContext context) Parameters Type Name Description RpcPayloadSerializationContext context Returns Type Description Object | Improve this Doc View Source DisconnectAsync(CancellationToken) Disconnects asynchronously from the remote transport. Declaration public Task DisconnectAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source SendPayloadAsync(RpcCommand, Object, Nullable<RpcEventType>, Nullable<Guid>, CancellationToken) Sends a payload the local RPC server asynchronously. Declaration public Task<Guid> SendPayloadAsync(RpcCommand command, object payload, RpcEventType? rpcEvent = default(RpcEventType? ), Guid? nonce = default(Guid? ), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description RpcCommand command the payload command. Object payload the payload data / content. Nullable < RpcEventType > rpcEvent the event to subscribe / unsubscribe. Nullable < Guid > nonce CancellationToken cancellationToken Returns Type Description Task < Guid > a task that represents the asynchronous operation. The task result is the nonce used for awaiting responses. | Improve this Doc View Source SendPayloadAsync(RpcCommand, Object, Nullable<Guid>, CancellationToken) Sends a payload the local RPC server asynchronously. Declaration public Task<Guid> SendPayloadAsync(RpcCommand command, object payload, Guid? nonce = default(Guid? ), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description RpcCommand command the payload command. Object payload the payload data / content. Nullable < Guid > nonce CancellationToken cancellationToken Returns Type Description Task < Guid > a task that represents the asynchronous operation. The task result is the nonce used for awaiting responses. Exceptions Type Condition RpcException thrown if a RPC command error occurs."
  },
  "api/Strade.Rpc.RpcPayloadHandler.html": {
    "href": "api/Strade.Rpc.RpcPayloadHandler.html",
    "title": "Class RpcPayloadHandler | Strade Developer Documentation",
    "keywords": "Class RpcPayloadHandler Inheritance Object RpcPayloadHandler Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc Assembly : Strade.Rpc.dll Syntax public abstract class RpcPayloadHandler Methods | Improve this Doc View Source HandleActivityJoinEventAsync(ActivityJoinEvent) Handles the activity join event asynchronously. Declaration protected virtual Task HandleActivityJoinEventAsync(ActivityJoinEvent data) Parameters Type Name Description ActivityJoinEvent data the event data. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source HandleActivityJoinRequestEventAsync(ActivityJoinRequestEvent) Handles the voice state delete event asynchronously. Declaration protected virtual Task HandleActivityJoinRequestEventAsync(ActivityJoinRequestEvent data) Parameters Type Name Description ActivityJoinRequestEvent data the event data. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source HandleActivitySpectateEventAsync(ActivitySpectateEvent) Handles the activity spectate event asynchronously. Declaration protected virtual Task HandleActivitySpectateEventAsync(ActivitySpectateEvent data) Parameters Type Name Description ActivitySpectateEvent data the event data. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source HandleCaptureShortcutChangeEventAsync(CaptureShortcutChangeEvent) Handles the capture shortcut change event asynchronously. Declaration protected virtual Task HandleCaptureShortcutChangeEventAsync(CaptureShortcutChangeEvent data) Parameters Type Name Description CaptureShortcutChangeEvent data the event data. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source HandleChannelCreateEventAsync(ChannelCreateEvent) Handles the channel create event asynchronously. Declaration protected virtual Task HandleChannelCreateEventAsync(ChannelCreateEvent data) Parameters Type Name Description ChannelCreateEvent data the event data. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source HandleErrorAsync(RpcCommand, RpcErrorCode, String, Guid) Declaration protected virtual Task HandleErrorAsync(RpcCommand command, RpcErrorCode errorCode, string errorMessage, Guid nonce) Parameters Type Name Description RpcCommand command RpcErrorCode errorCode String errorMessage Guid nonce Returns Type Description Task | Improve this Doc View Source HandleGuildCreateEventAsync(GuildCreateEvent) Handles the guild create event asynchronously. Declaration protected virtual Task HandleGuildCreateEventAsync(GuildCreateEvent data) Parameters Type Name Description GuildCreateEvent data the event data. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source HandleGuildStatusEventAsync(GuildStatusEvent) Handles the guild status event asynchronously. Declaration protected virtual Task HandleGuildStatusEventAsync(GuildStatusEvent data) Parameters Type Name Description GuildStatusEvent data the event data. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source HandleMessageCreateEventAsync(MessageCreateEvent) Handles a message create update event asynchronously. Declaration protected virtual Task HandleMessageCreateEventAsync(MessageCreateEvent data) Parameters Type Name Description MessageCreateEvent data the event data. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source HandleMessageDeleteEventAsync(MessageDeleteEvent) Handles a message delete update event asynchronously. Declaration protected virtual Task HandleMessageDeleteEventAsync(MessageDeleteEvent data) Parameters Type Name Description MessageDeleteEvent data the event data. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source HandleMessageUpdateEventAsync(MessageUpdateEvent) Handles a message update update event asynchronously. Declaration protected virtual Task HandleMessageUpdateEventAsync(MessageUpdateEvent data) Parameters Type Name Description MessageUpdateEvent data the event data. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source HandleReadyEventAsync(ReadyEvent) Declaration protected virtual Task HandleReadyEventAsync(ReadyEvent data) Parameters Type Name Description ReadyEvent data Returns Type Description Task | Improve this Doc View Source HandleResponseAsync(RpcCommand, Object, Guid) Declaration protected virtual Task HandleResponseAsync(RpcCommand command, object responsePayload, Guid nonce) Parameters Type Name Description RpcCommand command Object responsePayload Guid nonce Returns Type Description Task | Improve this Doc View Source HandleSpeakingStartEventAsync(SpeakingEvent) Handles the speaking start event asynchronously. Declaration protected virtual Task HandleSpeakingStartEventAsync(SpeakingEvent data) Parameters Type Name Description SpeakingEvent data the event data. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source HandleSpeakingStopEventAsync(SpeakingEvent) Handles the speaking stop event asynchronously. Declaration protected virtual Task HandleSpeakingStopEventAsync(SpeakingEvent data) Parameters Type Name Description SpeakingEvent data the event data. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source HandleVoiceChannelSelectEventAsync(VoiceChannelSelectEvent) Handles the voice channel select event asynchronously. Declaration protected virtual Task HandleVoiceChannelSelectEventAsync(VoiceChannelSelectEvent data) Parameters Type Name Description VoiceChannelSelectEvent data the event data. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source HandleVoiceConnectionStatusEventAsync(VoiceConnectionInformationModel) Handles the voice connection status (updated) event asynchronously. Declaration protected virtual Task HandleVoiceConnectionStatusEventAsync(VoiceConnectionInformationModel data) Parameters Type Name Description VoiceConnectionInformationModel data the event data. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source HandleVoiceSettingsUpdateEventAsync(RpcVoiceSettingsModel) Handles the voice settings updated event asynchronously. Declaration protected virtual Task HandleVoiceSettingsUpdateEventAsync(RpcVoiceSettingsModel data) Parameters Type Name Description RpcVoiceSettingsModel data the event data. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source HandleVoiceStateCreateEventAsync(RpcVoiceUserModel) Handles the voice state create event asynchronously. Declaration protected virtual Task HandleVoiceStateCreateEventAsync(RpcVoiceUserModel data) Parameters Type Name Description RpcVoiceUserModel data the event data. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source HandleVoiceStateDeleteEventAsync(RpcVoiceUserModel) Handles the voice state delete event asynchronously. Declaration protected virtual Task HandleVoiceStateDeleteEventAsync(RpcVoiceUserModel data) Parameters Type Name Description RpcVoiceUserModel data the event data. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source HandleVoiceStateUpdateEventAsync(RpcVoiceUserModel) Handles the voice state update event asynchronously. Declaration protected virtual Task HandleVoiceStateUpdateEventAsync(RpcVoiceUserModel data) Parameters Type Name Description RpcVoiceUserModel data the event data. Returns Type Description Task a task that represents the asynchronous operation."
  },
  "api/Strade.Rpc.RpcStatus.html": {
    "href": "api/Strade.Rpc.RpcStatus.html",
    "title": "Enum RpcStatus | Strade Developer Documentation",
    "keywords": "Enum RpcStatus A set of RPC client states. Namespace : Strade.Rpc Assembly : Strade.Rpc.dll Syntax public enum RpcStatus : byte Fields Name Description Connected Denotes that the RPC client is connected and ready. Disconnected Denotes that the RPC client is disconnected. LoggedOut Denotes that the RPC client was connected but the user logged out. Extension Methods EnumExtensions.GetName<RpcStatus>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Rpc.Subscription.ChannelSubscriptionEvent.html": {
    "href": "api/Strade.Rpc.Subscription.ChannelSubscriptionEvent.html",
    "title": "Enum ChannelSubscriptionEvent | Strade Developer Documentation",
    "keywords": "Enum ChannelSubscriptionEvent A set of subscribable channel events. Namespace : Strade.Rpc.Subscription Assembly : Strade.Rpc.dll Syntax public enum ChannelSubscriptionEvent : ushort Fields Name Description MessageCreate \"MESSAGE_CREATE\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. MessageDelete \"MESSAGE_DELETE\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. MessageUpdate \"MESSAGE_UPDATE\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. SpeakingStart \"SPEAKING_START\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. SpeakingStop \"SPEAKING_STOP\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. VoiceStateCreate \"VOICE_STATE_CREATE\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. VoiceStateDelete \"VOICE_STATE_DELETE\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. VoiceStateUpdate \"VOICE_STATE_UPDATE\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. Extension Methods EnumExtensions.GetName<ChannelSubscriptionEvent>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Rpc.Subscription.GlobalSubscriptionEvent.html": {
    "href": "api/Strade.Rpc.Subscription.GlobalSubscriptionEvent.html",
    "title": "Enum GlobalSubscriptionEvent | Strade Developer Documentation",
    "keywords": "Enum GlobalSubscriptionEvent A set of subscribable global events. Namespace : Strade.Rpc.Subscription Assembly : Strade.Rpc.dll Syntax public enum GlobalSubscriptionEvent : ushort Fields Name Description ActivityJoin \"ACTIVITY_JOIN\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. ActivityJoinRequest \"ACTIVITY_JOIN_REQUEST\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. ActivitySpectate \"ACTIVITY_SPECTATE\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. ChannelCreate \"CHANNEL_CREATE\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. GuildCreate \"GUILD_CREATE\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. VoiceChannelSelect \"VOICE_CHANNEL_SELECT\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. VoiceConnectionStatus \"VOICE_CONNECTION_STATUS\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. VoiceSettingsUpdated \"VOICE_SETTINGS_UPDATED\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. Extension Methods EnumExtensions.GetName<GlobalSubscriptionEvent>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Rpc.Subscription.GuildSubscriptionEvent.html": {
    "href": "api/Strade.Rpc.Subscription.GuildSubscriptionEvent.html",
    "title": "Enum GuildSubscriptionEvent | Strade Developer Documentation",
    "keywords": "Enum GuildSubscriptionEvent A set of subscribable guild events. Namespace : Strade.Rpc.Subscription Assembly : Strade.Rpc.dll Syntax public enum GuildSubscriptionEvent : ushort Fields Name Description GuildStatus \"GUILD_STATUS\" RPC event. See https://discord.com/developers/docs/topics/rpc#commands-and-events-rpc-events for reference. Extension Methods EnumExtensions.GetName<GuildSubscriptionEvent>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Rpc.Subscription.html": {
    "href": "api/Strade.Rpc.Subscription.html",
    "title": "Namespace Strade.Rpc.Subscription | Strade Developer Documentation",
    "keywords": "Namespace Strade.Rpc.Subscription Enums ChannelSubscriptionEvent A set of subscribable channel events. GlobalSubscriptionEvent A set of subscribable global events. GuildSubscriptionEvent A set of subscribable guild events."
  },
  "api/Strade.Rpc.Transport.DataReceivedEventArgs.html": {
    "href": "api/Strade.Rpc.Transport.DataReceivedEventArgs.html",
    "title": "Class DataReceivedEventArgs | Strade Developer Documentation",
    "keywords": "Class DataReceivedEventArgs The event arguments for the DataReceived event. Inheritance Object EventArgs DataReceivedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Transport Assembly : Strade.Rpc.dll Syntax public sealed class DataReceivedEventArgs : EventArgs Constructors | Improve this Doc View Source DataReceivedEventArgs(ArraySegment<Byte>) Initializes a new instance of the DataReceivedEventArgs class. Declaration public DataReceivedEventArgs(ArraySegment<byte> data) Parameters Type Name Description ArraySegment < Byte > data the data received. Properties | Improve this Doc View Source Data Gets the data received. Declaration public ArraySegment<byte> Data { get; } Property Value Type Description ArraySegment < Byte > the data received."
  },
  "api/Strade.Rpc.Transport.html": {
    "href": "api/Strade.Rpc.Transport.html",
    "title": "Namespace Strade.Rpc.Transport | Strade Developer Documentation",
    "keywords": "Namespace Strade.Rpc.Transport Classes DataReceivedEventArgs The event arguments for the DataReceived event. IpcHandshake Represents the structure for an initial IPC handshake. IpcTransport An ITransport used for communication using IPC (inter-process communication). Interfaces ITransport An interface for transport types used for connections to the local RPC server. Enums IpcOpCode A set of the operation codes used for IPC/RPC communication."
  },
  "api/Strade.Rpc.Transport.IpcHandshake.html": {
    "href": "api/Strade.Rpc.Transport.IpcHandshake.html",
    "title": "Class IpcHandshake | Strade Developer Documentation",
    "keywords": "Class IpcHandshake Represents the structure for an initial IPC handshake. Inheritance Object IpcHandshake Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Transport Assembly : Strade.Rpc.dll Syntax public sealed class IpcHandshake Properties | Improve this Doc View Source ClientId Gets or sets the client identifier. Declaration [JsonPropertyName(\"client_id\")] public string ClientId { get; set; } Property Value Type Description String the client identifier. | Improve this Doc View Source Version Gets or sets the client version. Declaration [JsonPropertyName(\"v\")] public int Version { get; set; } Property Value Type Description Int32 the client version."
  },
  "api/Strade.Rpc.Transport.IpcOpCode.html": {
    "href": "api/Strade.Rpc.Transport.IpcOpCode.html",
    "title": "Enum IpcOpCode | Strade Developer Documentation",
    "keywords": "Enum IpcOpCode A set of the operation codes used for IPC/RPC communication. Namespace : Strade.Rpc.Transport Assembly : Strade.Rpc.dll Syntax public enum IpcOpCode Fields Name Description Close Denotes that the frame is a close frame. Frame Denotes that the frame is a data frame. Handshake Denotes that the frame is a handshake frame. Ping Denotes that the frame is a ping frame. Pong Denotes that the frame is a pong frame. Extension Methods EnumExtensions.GetName<IpcOpCode>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Rpc.Transport.IpcTransport.html": {
    "href": "api/Strade.Rpc.Transport.IpcTransport.html",
    "title": "Class IpcTransport | Strade Developer Documentation",
    "keywords": "Class IpcTransport An ITransport used for communication using IPC (inter-process communication). Inheritance Object IpcTransport Implements ITransport IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Rpc.Transport Assembly : Strade.Rpc.dll Syntax public sealed class IpcTransport : ITransport, IDisposable Constructors | Improve this Doc View Source IpcTransport(ILogger) Declaration public IpcTransport(ILogger logger = null) Parameters Type Name Description ILogger logger Properties | Improve this Doc View Source IsConnected Declaration public bool IsConnected { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source ConnectAsync(Snowflake, CancellationToken) Declaration public Task ConnectAsync(Snowflake clientId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake clientId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source DisconnectAsync(CancellationToken) Declaration public Task DisconnectAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source SendAsync(ReadOnlyMemory<Byte>, IpcOpCode, CancellationToken) Declaration public Task SendAsync(ReadOnlyMemory<byte> data, IpcOpCode opCode, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description ReadOnlyMemory < Byte > data IpcOpCode opCode CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source SendAsync(ReadOnlyMemory<Byte>, CancellationToken) Declaration public Task SendAsync(ReadOnlyMemory<byte> data, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description ReadOnlyMemory < Byte > data CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source SendRawAsync(ArraySegment<Byte>, CancellationToken) Declaration public Task SendRawAsync(ArraySegment<byte> buffer, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description ArraySegment < Byte > buffer CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Events | Improve this Doc View Source DataReceived Asynchronous event which is dispatched when data was received. Declaration public event AsyncEventHandler<DataReceivedEventArgs> DataReceived Event Type Type Description AsyncEventHandler < DataReceivedEventArgs > Implements ITransport System.IDisposable"
  },
  "api/Strade.Rpc.Transport.ITransport.html": {
    "href": "api/Strade.Rpc.Transport.ITransport.html",
    "title": "Interface ITransport | Strade Developer Documentation",
    "keywords": "Interface ITransport An interface for transport types used for connections to the local RPC server. Inherited Members IDisposable.Dispose() Namespace : Strade.Rpc.Transport Assembly : Strade.Rpc.dll Syntax public interface ITransport : IDisposable Properties | Improve this Doc View Source IsConnected Gets a value indicating whether the transport is connected. Declaration bool IsConnected { get; } Property Value Type Description Boolean a value indicating whether the transport is connected. Methods | Improve this Doc View Source ConnectAsync(Snowflake, CancellationToken) Connects to the local RPC server asynchronously. Declaration Task ConnectAsync(Snowflake clientId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake clientId the snowflake identifier of the client application. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source DisconnectAsync(CancellationToken) Disconnects from the remote endpoint asynchronously. Declaration Task DisconnectAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source SendAsync(ReadOnlyMemory<Byte>, CancellationToken) Declaration Task SendAsync(ReadOnlyMemory<byte> data, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description ReadOnlyMemory < Byte > data CancellationToken cancellationToken Returns Type Description Task Events | Improve this Doc View Source DataReceived An asynchronous event which is triggered when data was received from the transport. Declaration event AsyncEventHandler<DataReceivedEventArgs> DataReceived Event Type Type Description AsyncEventHandler < DataReceivedEventArgs >"
  },
  "api/Strade.Rpc.Util.html": {
    "href": "api/Strade.Rpc.Util.html",
    "title": "Namespace Strade.Rpc.Util | Strade Developer Documentation",
    "keywords": "Namespace Strade.Rpc.Util Classes MissingScopeException Exception that occurs when a required OAuth2 scope is missing. OAuthToken Represents an OAuth2 access token. PayloadAwaiter A task awaiter used to await nonced payloads. RpcException An Exception that occurs when a RPC operation failed. Structs RpcPayloadSerializationContext"
  },
  "api/Strade.Rpc.Util.MissingScopeException.html": {
    "href": "api/Strade.Rpc.Util.MissingScopeException.html",
    "title": "Class MissingScopeException | Strade Developer Documentation",
    "keywords": "Class MissingScopeException Exception that occurs when a required OAuth2 scope is missing. Inheritance Object Exception MissingScopeException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Rpc.Util Assembly : Strade.Rpc.dll Syntax public sealed class MissingScopeException : Exception, ISerializable Constructors | Improve this Doc View Source MissingScopeException() Declaration public MissingScopeException() | Improve this Doc View Source MissingScopeException(String) Initializes a new instance of the MissingScopeException class. Declaration public MissingScopeException(string scope) Parameters Type Name Description String scope the scope that is missing. | Improve this Doc View Source MissingScopeException(String, Exception) Declaration public MissingScopeException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException | Improve this Doc View Source MissingScopeException(String, String) Initializes a new instance of the MissingScopeException class. Declaration public MissingScopeException(string message, string scope) Parameters Type Name Description String message the message. String scope the scope that is missing. Properties | Improve this Doc View Source Scope Gets the scope that is missing, if present. Declaration public string Scope { get; } Property Value Type Description String the scope that is missing, if present. Implements System.Runtime.Serialization.ISerializable"
  },
  "api/Strade.Rpc.Util.OAuthToken.html": {
    "href": "api/Strade.Rpc.Util.OAuthToken.html",
    "title": "Class OAuthToken | Strade Developer Documentation",
    "keywords": "Class OAuthToken Represents an OAuth2 access token. Inheritance Object OAuthToken Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Util Assembly : Strade.Rpc.dll Syntax public sealed class OAuthToken Constructors | Improve this Doc View Source OAuthToken(OAuthTokenModel) Declaration public OAuthToken(OAuthTokenModel model) Parameters Type Name Description OAuthTokenModel model | Improve this Doc View Source OAuthToken(String) Initializes a new instance of the OAuthToken class. Declaration public OAuthToken(string accessToken) Parameters Type Name Description String accessToken the access token. Exceptions Type Condition ArgumentNullException thrown if the specified accessToken is null . Properties | Improve this Doc View Source AccessToken Gets the access token. Declaration public string AccessToken { get; } Property Value Type Description String the access token."
  },
  "api/Strade.Rpc.Util.PayloadAwaiter.html": {
    "href": "api/Strade.Rpc.Util.PayloadAwaiter.html",
    "title": "Class PayloadAwaiter | Strade Developer Documentation",
    "keywords": "Class PayloadAwaiter A task awaiter used to await nonced payloads. Inheritance Object PayloadAwaiter Implements IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc.Util Assembly : Strade.Rpc.dll Syntax public sealed class PayloadAwaiter : IDisposable Properties | Improve this Doc View Source Nonce Gets the nonce awaiting payloads for. Declaration public Guid Nonce { get; } Property Value Type Description Guid the nonce awaiting payloads for. | Improve this Doc View Source Task Gets a task that completes when the payload is received and faults when a payload error occurs. Declaration public Task<object> Task { get; } Property Value Type Description Task < Object > a task that completes when the payload is received and faults when a payload error occurs. Methods | Improve this Doc View Source AwaitAsync(DiscordRpcClient, Guid, CancellationToken) Awaits a nonced payload asynchronously. Declaration public static Task<object> AwaitAsync(DiscordRpcClient client, Guid nonce, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description DiscordRpcClient client the client. Guid nonce the payload nonce. CancellationToken cancellationToken Returns Type Description Task < Object > a task that represents the asynchronous operation. The task result is the payload received. | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements System.IDisposable"
  },
  "api/Strade.Rpc.Util.RpcException.html": {
    "href": "api/Strade.Rpc.Util.RpcException.html",
    "title": "Class RpcException | Strade Developer Documentation",
    "keywords": "Class RpcException An Exception that occurs when a RPC operation failed. Inheritance Object Exception RpcException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Rpc.Util Assembly : Strade.Rpc.dll Syntax public sealed class RpcException : Exception, ISerializable Constructors | Improve this Doc View Source RpcException() Declaration public RpcException() | Improve this Doc View Source RpcException(RpcErrorCode, String) Initializes a new instance of the RpcException class. Declaration public RpcException(RpcErrorCode errorCode, string message) Parameters Type Name Description RpcErrorCode errorCode the error code. String message the message. | Improve this Doc View Source RpcException(String) Declaration public RpcException(string message) Parameters Type Name Description String message | Improve this Doc View Source RpcException(String, Exception) Declaration public RpcException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Properties | Improve this Doc View Source ErrorCode Gets the error code. Declaration public RpcErrorCode ErrorCode { get; } Property Value Type Description RpcErrorCode the error code. Implements System.Runtime.Serialization.ISerializable"
  },
  "api/Strade.Rpc.Util.RpcPayloadSerializationContext.html": {
    "href": "api/Strade.Rpc.Util.RpcPayloadSerializationContext.html",
    "title": "Struct RpcPayloadSerializationContext | Strade Developer Documentation",
    "keywords": "Struct RpcPayloadSerializationContext Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Rpc.Util Assembly : Strade.Rpc.dll Syntax public struct RpcPayloadSerializationContext Fields | Improve this Doc View Source Command Declaration public RpcCommand? Command Field Value Type Description Nullable < RpcCommand > | Improve this Doc View Source DataSpan Declaration public ReadOnlySpan<byte> DataSpan Field Value Type Description ReadOnlySpan < Byte > | Improve this Doc View Source EventType Declaration public RpcEventType? EventType Field Value Type Description Nullable < RpcEventType > | Improve this Doc View Source Nonce Declaration public Guid? Nonce Field Value Type Description Nullable < Guid > | Improve this Doc View Source Options Declaration public JsonSerializerOptions Options Field Value Type Description JsonSerializerOptions Methods | Improve this Doc View Source DeserializeAs<T>() Declaration public T DeserializeAs<T>() Returns Type Description T Type Parameters Name Description T"
  },
  "api/Strade.Rpc.VoiceActivationSettingsModifyProperties.html": {
    "href": "api/Strade.Rpc.VoiceActivationSettingsModifyProperties.html",
    "title": "Class VoiceActivationSettingsModifyProperties | Strade Developer Documentation",
    "keywords": "Class VoiceActivationSettingsModifyProperties Inheritance Object VoiceActivationSettingsModifyProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc Assembly : Strade.Rpc.dll Syntax public sealed class VoiceActivationSettingsModifyProperties Properties | Improve this Doc View Source ActivationType Gets or sets the voice activation type the user is using. Declaration [JsonPropertyName(\"type\")] public Optional<VoiceActivationType> ActivationType { get; set; } Property Value Type Description Optional < VoiceActivationType > the voice activation type the user is using. | Improve this Doc View Source AutoThreshold Gets or sets a value indicating whether auto threshold adjustment is enabled. Declaration [JsonPropertyName(\"auto_threshold\")] public Optional<bool> AutoThreshold { get; set; } Property Value Type Description Optional < Boolean > a value indicating whether auto threshold adjustment is enabled. Remarks Valid when VoiceActivity is used as the voice activation type ( ActivationType ). See Also Threshold | Improve this Doc View Source Delay Gets or sets the PTT release time (the delay the push to talk is still active after the user released the PTT shortcut). Declaration [JsonPropertyName(\"delay\")] public Optional<float> Delay { get; set; } Property Value Type Description Optional < Single > the PTT release time (the delay the push to talk is still active after the user released the PTT shortcut). Remarks Valid when PushToTalk is used as the voice activation type ( ActivationType ). | Improve this Doc View Source PushToTalkHotkey Gets or sets the shortcut used to activate PTT (Push To Talk). Declaration [JsonPropertyName(\"shortcut\")] public Optional<IReadOnlyList<ShortcutKeyModel>> PushToTalkHotkey { get; set; } Property Value Type Description Optional < IReadOnlyList < ShortcutKeyModel >> the shortcut used to activate PTT (Push To Talk). Remarks Valid when PushToTalk is used as the voice activation type ( ActivationType ). | Improve this Doc View Source Threshold Gets or sets the decibel threshold when the user sends voice data. Declaration [JsonPropertyName(\"threshold\")] public Optional<float> Threshold { get; set; } Property Value Type Description Optional < Single > the decibel threshold when the user sends voice data. Remarks Valid when VoiceActivity is used as the voice activation type ( ActivationType )."
  },
  "api/Strade.Rpc.VoiceConfigurationModifyProperties.html": {
    "href": "api/Strade.Rpc.VoiceConfigurationModifyProperties.html",
    "title": "Class VoiceConfigurationModifyProperties | Strade Developer Documentation",
    "keywords": "Class VoiceConfigurationModifyProperties Inheritance Object VoiceConfigurationModifyProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc Assembly : Strade.Rpc.dll Syntax public sealed class VoiceConfigurationModifyProperties Properties | Improve this Doc View Source DeviceId Declaration [JsonPropertyName(\"device_id\")] public Optional<string> DeviceId { get; set; } Property Value Type Description Optional < String > | Improve this Doc View Source Volume Gets or sets the volume. Declaration [JsonPropertyName(\"volume\")] public Optional<float> Volume { get; set; } Property Value Type Description Optional < Single > the volume. Remarks Ranges from 0-100 if input; or from 0-200 if output."
  },
  "api/Strade.Rpc.VoiceSettingsModifyProperties.html": {
    "href": "api/Strade.Rpc.VoiceSettingsModifyProperties.html",
    "title": "Class VoiceSettingsModifyProperties | Strade Developer Documentation",
    "keywords": "Class VoiceSettingsModifyProperties Inheritance Object VoiceSettingsModifyProperties Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Rpc Assembly : Strade.Rpc.dll Syntax public sealed class VoiceSettingsModifyProperties Properties | Improve this Doc View Source ActivationSettings Gets or sets the voice activation mode settings. Declaration [JsonPropertyName(\"mode\")] public Optional<VoiceActivationSettingsModifyProperties> ActivationSettings { get; set; } Property Value Type Description Optional < VoiceActivationSettingsModifyProperties > the voice activation mode settings. | Improve this Doc View Source AutomaticGainControl Gets or sets a value indicating whether automatic gain control is enabled. Declaration [JsonPropertyName(\"automatic_gain_control\")] public Optional<bool> AutomaticGainControl { get; set; } Property Value Type Description Optional < Boolean > a value indicating whether automatic gain control is enabled. | Improve this Doc View Source EchoCancellation Gets or sets a value indicating whether echo cancellation is enabled. Declaration [JsonPropertyName(\"echo_cancellation\")] public Optional<bool> EchoCancellation { get; set; } Property Value Type Description Optional < Boolean > a value indicating whether echo cancellation is enabled. | Improve this Doc View Source Input Gets or sets the voice input device selection information. Declaration [JsonPropertyName(\"input\")] public Optional<VoiceConfigurationModifyProperties> Input { get; set; } Property Value Type Description Optional < VoiceConfigurationModifyProperties > the voice input device selection information. | Improve this Doc View Source IsDeafened Gets or sets a value indicating whether the user is locally deafened. Declaration [JsonPropertyName(\"deaf\")] public Optional<bool> IsDeafened { get; set; } Property Value Type Description Optional < Boolean > a value indicating whether the user is locally deafened. | Improve this Doc View Source IsMuted Gets or sets a value indicating whether the user is locally muted. Declaration [JsonPropertyName(\"mute\")] public Optional<bool> IsMuted { get; set; } Property Value Type Description Optional < Boolean > a value indicating whether the user is locally muted. | Improve this Doc View Source Output Gets or sets the voice output device selection information. Declaration [JsonPropertyName(\"output\")] public Optional<VoiceConfigurationModifyProperties> Output { get; set; } Property Value Type Description Optional < VoiceConfigurationModifyProperties > the voice output device selection information. | Improve this Doc View Source QualityOfService Gets or sets a value indicating whether the QoS (Quality of Service) option is enabled. Declaration [JsonPropertyName(\"qos\")] public Optional<bool> QualityOfService { get; set; } Property Value Type Description Optional < Boolean > a value indicating whether the QoS (Quality of Service) option is enabled. | Improve this Doc View Source ShowSilenceWarning Gets or sets a value indicating whether a silence warning is shown when no audio input is detected on the selected audio input device. Declaration [JsonPropertyName(\"silence_warning\")] public Optional<bool> ShowSilenceWarning { get; set; } Property Value Type Description Optional < Boolean > a value indicating whether a silence warning is shown when no audio input is detected on the selected audio input device."
  },
  "api/Strade.Sandbox.Actor.html": {
    "href": "api/Strade.Sandbox.Actor.html",
    "title": "Struct Actor | Strade Developer Documentation",
    "keywords": "Struct Actor Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Sandbox Assembly : Strade.Sandbox.dll Syntax public struct Actor Properties | Improve this Doc View Source Client Declaration public DiscordClient Client { get; } Property Value Type Description DiscordClient | Improve this Doc View Source Sandbox Declaration public SandboxEnvironment Sandbox { get; } Property Value Type Description SandboxEnvironment | Improve this Doc View Source User Declaration public User User { get; } Property Value Type Description User"
  },
  "api/Strade.Sandbox.Assets.ApplicationAsset.html": {
    "href": "api/Strade.Sandbox.Assets.ApplicationAsset.html",
    "title": "Class ApplicationAsset | Strade Developer Documentation",
    "keywords": "Class ApplicationAsset Inheritance Object ImageDataAsset ApplicationAsset ApplicationAssetAsset ApplicationIconAsset Implements IAsset Inherited Members ImageDataAsset.Data ImageDataAsset.IsForwarded ImageDataAsset.Type ImageDataAsset.SupportedFormat ImageDataAsset.IAsset.SupportedFormats ImageDataAsset.CreateStreamAsync(CancellationToken) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Assets Assembly : Strade.Sandbox.dll Syntax public abstract class ApplicationAsset : ImageDataAsset, IAsset Constructors | Improve this Doc View Source ApplicationAsset(Snowflake, String, ImageData) Declaration protected ApplicationAsset(Snowflake applicationId, string hash, ImageData data) Parameters Type Name Description Snowflake applicationId String hash ImageData data Properties | Improve this Doc View Source ApplicationId Declaration public Snowflake ApplicationId { get; } Property Value Type Description Snowflake | Improve this Doc View Source BaseRoute Declaration public override string BaseRoute { get; } Property Value Type Description String Overrides ImageDataAsset.BaseRoute | Improve this Doc View Source Hash Declaration public string Hash { get; } Property Value Type Description String | Improve this Doc View Source RoutePrefix Declaration protected abstract string RoutePrefix { get; } Property Value Type Description String Implements IAsset"
  },
  "api/Strade.Sandbox.Assets.ApplicationAssetAsset.html": {
    "href": "api/Strade.Sandbox.Assets.ApplicationAssetAsset.html",
    "title": "Class ApplicationAssetAsset | Strade Developer Documentation",
    "keywords": "Class ApplicationAssetAsset Inheritance Object ImageDataAsset ApplicationAsset ApplicationAssetAsset Implements IAsset Inherited Members ApplicationAsset.ApplicationId ApplicationAsset.BaseRoute ApplicationAsset.Hash ImageDataAsset.Data ImageDataAsset.IsForwarded ImageDataAsset.SupportedFormat ImageDataAsset.IAsset.SupportedFormats ImageDataAsset.CreateStreamAsync(CancellationToken) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Assets Assembly : Strade.Sandbox.dll Syntax public sealed class ApplicationAssetAsset : ApplicationAsset, IAsset Constructors | Improve this Doc View Source ApplicationAssetAsset(Snowflake, String, ImageData) Declaration public ApplicationAssetAsset(Snowflake applicationId, string hash, ImageData data) Parameters Type Name Description Snowflake applicationId String hash ImageData data Properties | Improve this Doc View Source RoutePrefix Declaration protected override string RoutePrefix { get; } Property Value Type Description String Overrides ApplicationAsset.RoutePrefix | Improve this Doc View Source Type Declaration public override AssetType Type { get; } Property Value Type Description AssetType Overrides ImageDataAsset.Type Implements IAsset"
  },
  "api/Strade.Sandbox.Assets.ApplicationIconAsset.html": {
    "href": "api/Strade.Sandbox.Assets.ApplicationIconAsset.html",
    "title": "Class ApplicationIconAsset | Strade Developer Documentation",
    "keywords": "Class ApplicationIconAsset Inheritance Object ImageDataAsset ApplicationAsset ApplicationIconAsset Implements IAsset Inherited Members ApplicationAsset.ApplicationId ApplicationAsset.BaseRoute ApplicationAsset.Hash ImageDataAsset.Data ImageDataAsset.IsForwarded ImageDataAsset.SupportedFormat ImageDataAsset.IAsset.SupportedFormats ImageDataAsset.CreateStreamAsync(CancellationToken) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Assets Assembly : Strade.Sandbox.dll Syntax public sealed class ApplicationIconAsset : ApplicationAsset, IAsset Constructors | Improve this Doc View Source ApplicationIconAsset(Snowflake, String, ImageData) Declaration public ApplicationIconAsset(Snowflake applicationId, string hash, ImageData data) Parameters Type Name Description Snowflake applicationId String hash ImageData data Properties | Improve this Doc View Source RoutePrefix Declaration protected override string RoutePrefix { get; } Property Value Type Description String Overrides ApplicationAsset.RoutePrefix | Improve this Doc View Source Type Declaration public override AssetType Type { get; } Property Value Type Description AssetType Overrides ImageDataAsset.Type Implements IAsset"
  },
  "api/Strade.Sandbox.Assets.AssetManager.html": {
    "href": "api/Strade.Sandbox.Assets.AssetManager.html",
    "title": "Class AssetManager | Strade Developer Documentation",
    "keywords": "Class AssetManager Inheritance Object AssetManager Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Assets Assembly : Strade.Sandbox.dll Syntax public sealed class AssetManager Constructors | Improve this Doc View Source AssetManager() Initializes a new instance of the AssetManager class. Declaration public AssetManager() Properties | Improve this Doc View Source Assets Gets a read-only collection that contains all assets registered to the manager. Declaration public IReadOnlyCollection<IAsset> Assets { get; } Property Value Type Description IReadOnlyCollection < IAsset > a read-only collection that contains all assets registered to the manager. Methods | Improve this Doc View Source AddApplicationAsset(Snowflake, ImageData) Adds a new application asset to the assets list. Declaration public ApplicationAssetAsset AddApplicationAsset(Snowflake applicationId, ImageData data) Parameters Type Name Description Snowflake applicationId the snowflake identifier of the application the asset is for. ImageData data the image data containing the asset data. Returns Type Description ApplicationAssetAsset the asset created. Remarks The caller handles the disposation of the specified data itself, the image data is cloned by the method and is independent of the state of the supplied data . Exceptions Type Condition ArgumentNullException thrown if the specified data is null . | Improve this Doc View Source AddApplicationAsset(Snowflake, String, ImageData) Adds a new application asset to the assets list. Declaration public ApplicationAssetAsset AddApplicationAsset(Snowflake applicationId, string hash, ImageData data) Parameters Type Name Description Snowflake applicationId the snowflake identifier of the application the asset is for. String hash the hash for the asset. ImageData data the image data containing the asset data. Returns Type Description ApplicationAssetAsset the asset created. Remarks The caller handles the disposation of the specified data itself, the image data is cloned by the method and is independent of the state of the supplied data . Exceptions Type Condition ArgumentNullException thrown if the specified data is null . | Improve this Doc View Source AddApplicationIcon(Snowflake, ImageData) Adds a new application icon to the assets list. Declaration public ApplicationIconAsset AddApplicationIcon(Snowflake applicationId, ImageData data) Parameters Type Name Description Snowflake applicationId the snowflake identifier of the application the icon is for. ImageData data the image data containing the asset data. Returns Type Description ApplicationIconAsset the asset created. Remarks The caller handles the disposation of the specified data itself, the image data is cloned by the method and is independent of the state of the supplied data . Exceptions Type Condition ArgumentNullException thrown if the specified data is null . | Improve this Doc View Source AddApplicationIcon(Snowflake, String, ImageData) Adds a new application icon to the assets list. Declaration public ApplicationIconAsset AddApplicationIcon(Snowflake applicationId, string hash, ImageData data) Parameters Type Name Description Snowflake applicationId the snowflake identifier of the application the icon is for. String hash the hash for the icon. ImageData data the image data containing the asset data. Returns Type Description ApplicationIconAsset the asset created. Remarks The caller handles the disposation of the specified data itself, the image data is cloned by the method and is independent of the state of the supplied data . Exceptions Type Condition ArgumentNullException thrown if the specified data is null . | Improve this Doc View Source AddAsset(IAsset) Adds the specified asset . Declaration public void AddAsset(IAsset asset) Parameters Type Name Description IAsset asset the asset to add. Exceptions Type Condition ArgumentNullException thrown if the specified asset is null . | Improve this Doc View Source AddCustomEmoji(Snowflake, ImageData) Adds a new custom emoji asset to the assets list. Declaration public CustomEmojiAsset AddCustomEmoji(Snowflake emojiId, ImageData data) Parameters Type Name Description Snowflake emojiId the snowflake identifier of the emoji. ImageData data the image data containing the asset data. Returns Type Description CustomEmojiAsset the asset created. Remarks The caller handles the disposation of the specified data itself, the image data is cloned by the method and is independent of the state of the supplied data . Exceptions Type Condition ArgumentNullException thrown if the specified data is null . | Improve this Doc View Source AddGuildBanner(Snowflake, ImageData) Adds a new guild banner asset to the assets list. Declaration public GuildBannerAsset AddGuildBanner(Snowflake guildId, ImageData data) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild the banner is for. ImageData data the image data containing the asset data. Returns Type Description GuildBannerAsset the asset created. Remarks The caller handles the disposation of the specified data itself, the image data is cloned by the method and is independent of the state of the supplied data . Exceptions Type Condition ArgumentNullException thrown if the specified data is null . | Improve this Doc View Source AddGuildBanner(Snowflake, String, ImageData) Adds a new guild banner asset to the assets list. Declaration public GuildBannerAsset AddGuildBanner(Snowflake guildId, string hash, ImageData data) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild the banner is for. String hash the hash for the banner. ImageData data the image data containing the asset data. Returns Type Description GuildBannerAsset the asset created. Remarks The caller handles the disposation of the specified data itself, the image data is cloned by the method and is independent of the state of the supplied data . Exceptions Type Condition ArgumentNullException thrown if the specified data is null . | Improve this Doc View Source AddGuildDiscoverySplash(Snowflake, ImageData) Adds a new guild discovery splash asset to the assets list. Declaration public GuildDiscoverySplashAsset AddGuildDiscoverySplash(Snowflake guildId, ImageData data) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild the discovery splash is for. ImageData data the image data containing the asset data. Returns Type Description GuildDiscoverySplashAsset the asset created. Remarks The caller handles the disposation of the specified data itself, the image data is cloned by the method and is independent of the state of the supplied data . Exceptions Type Condition ArgumentNullException thrown if the specified data is null . | Improve this Doc View Source AddGuildDiscoverySplash(Snowflake, String, ImageData) Adds a new guild discovery splash asset to the assets list. Declaration public GuildDiscoverySplashAsset AddGuildDiscoverySplash(Snowflake guildId, string hash, ImageData data) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild the discovery splash is for. String hash the hash for the discovery splash. ImageData data the image data containing the asset data. Returns Type Description GuildDiscoverySplashAsset the asset created. Remarks The caller handles the disposation of the specified data itself, the image data is cloned by the method and is independent of the state of the supplied data . Exceptions Type Condition ArgumentNullException thrown if the specified data is null . | Improve this Doc View Source AddGuildIcon(Snowflake, ImageData) Adds a new guild icon asset to the assets list. Declaration public GuildIconAsset AddGuildIcon(Snowflake guildId, ImageData data) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild the icon is for. ImageData data the image data containing the asset data. Returns Type Description GuildIconAsset the asset created. Remarks The caller handles the disposation of the specified data itself, the image data is cloned by the method and is independent of the state of the supplied data . Exceptions Type Condition ArgumentNullException thrown if the specified data is null . | Improve this Doc View Source AddGuildIcon(Snowflake, String, ImageData) Adds a new guild icon asset to the assets list. Declaration public GuildIconAsset AddGuildIcon(Snowflake guildId, string hash, ImageData data) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild the icon is for. String hash the hash for the icon. ImageData data the image data containing the asset data. Returns Type Description GuildIconAsset the asset created. Remarks The caller handles the disposation of the specified data itself, the image data is cloned by the method and is independent of the state of the supplied data . Exceptions Type Condition ArgumentNullException thrown if the specified data is null . | Improve this Doc View Source AddGuildSplash(Snowflake, ImageData) Adds a new guild splash asset to the assets list. Declaration public GuildSplashAsset AddGuildSplash(Snowflake guildId, ImageData data) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild the splash is for. ImageData data the image data containing the asset data. Returns Type Description GuildSplashAsset the asset created. Remarks The caller handles the disposation of the specified data itself, the image data is cloned by the method and is independent of the state of the supplied data . Exceptions Type Condition ArgumentNullException thrown if the specified data is null . | Improve this Doc View Source AddGuildSplash(Snowflake, String, ImageData) Adds a new guild splash asset to the assets list. Declaration public GuildSplashAsset AddGuildSplash(Snowflake guildId, string hash, ImageData data) Parameters Type Name Description Snowflake guildId the snowflake identifier of the guild the splash is for. String hash the hash for the splash. ImageData data the image data containing the asset data. Returns Type Description GuildSplashAsset the asset created. Remarks The caller handles the disposation of the specified data itself, the image data is cloned by the method and is independent of the state of the supplied data . Exceptions Type Condition ArgumentNullException thrown if the specified data is null . | Improve this Doc View Source AddTeamIcon(Snowflake, ImageData) Adds a new team icon to the assets list. Declaration public TeamIconAsset AddTeamIcon(Snowflake teamId, ImageData data) Parameters Type Name Description Snowflake teamId the snowflake identifier of the team the icon is for. ImageData data the image data containing the asset data. Returns Type Description TeamIconAsset the asset created. Remarks The caller handles the disposation of the specified data itself, the image data is cloned by the method and is independent of the state of the supplied data . Exceptions Type Condition ArgumentNullException thrown if the specified data is null . | Improve this Doc View Source AddTeamIcon(Snowflake, String, ImageData) Adds a new team icon to the assets list. Declaration public TeamIconAsset AddTeamIcon(Snowflake teamId, string hash, ImageData data) Parameters Type Name Description Snowflake teamId the snowflake identifier of the team the icon is for. String hash the hash for the team icon. ImageData data the image data containing the asset data. Returns Type Description TeamIconAsset the asset created. Remarks The caller handles the disposation of the specified data itself, the image data is cloned by the method and is independent of the state of the supplied data . Exceptions Type Condition ArgumentNullException thrown if the specified data is null . | Improve this Doc View Source AddUserAvatar(Snowflake, ImageData) Adds a new user avatar asset to the assets list. Declaration public UserAvatarAsset AddUserAvatar(Snowflake userId, ImageData data) Parameters Type Name Description Snowflake userId the snowflake identifier of the user the avatar is for. ImageData data the image data containing the asset data. Returns Type Description UserAvatarAsset the asset created. Remarks The caller handles the disposation of the specified data itself, the image data is cloned by the method and is independent of the state of the supplied data . Exceptions Type Condition ArgumentNullException thrown if the specified data is null . | Improve this Doc View Source AddUserAvatar(Snowflake, String, ImageData) Adds a new user avatar to the assets list. Declaration public UserAvatarAsset AddUserAvatar(Snowflake userId, string hash, ImageData data) Parameters Type Name Description Snowflake userId the snowflake identifier of the user the avatar is for. String hash the hash for the avatar. ImageData data the image data containing the asset data. Returns Type Description UserAvatarAsset the asset created. Remarks The caller handles the disposation of the specified data itself, the image data is cloned by the method and is independent of the state of the supplied data . Exceptions Type Condition ArgumentNullException thrown if the specified data is null . | Improve this Doc View Source GetHash(ImageData) Declaration public static string GetHash(ImageData data) Parameters Type Name Description ImageData data Returns Type Description String"
  },
  "api/Strade.Sandbox.Assets.AssetType.html": {
    "href": "api/Strade.Sandbox.Assets.AssetType.html",
    "title": "Enum AssetType | Strade Developer Documentation",
    "keywords": "Enum AssetType Namespace : Strade.Sandbox.Assets Assembly : Strade.Sandbox.dll Syntax public enum AssetType : byte Fields Name Description AchievementIcon ApplicationAsset ApplicationIcon CustomEmoji DefaultUserAvatar GuildBanner GuildDiscoverySplash GuildIcon GuildSplash TeamIcon UserAvatar Extension Methods EnumExtensions.GetName<AssetType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Sandbox.Assets.CustomEmojiAsset.html": {
    "href": "api/Strade.Sandbox.Assets.CustomEmojiAsset.html",
    "title": "Class CustomEmojiAsset | Strade Developer Documentation",
    "keywords": "Class CustomEmojiAsset Inheritance Object ImageDataAsset CustomEmojiAsset Implements IAsset Inherited Members ImageDataAsset.Data ImageDataAsset.IsForwarded ImageDataAsset.SupportedFormat ImageDataAsset.IAsset.SupportedFormats ImageDataAsset.CreateStreamAsync(CancellationToken) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Assets Assembly : Strade.Sandbox.dll Syntax public sealed class CustomEmojiAsset : ImageDataAsset, IAsset Constructors | Improve this Doc View Source CustomEmojiAsset(Snowflake, ImageData) Declaration public CustomEmojiAsset(Snowflake emojiId, ImageData data) Parameters Type Name Description Snowflake emojiId ImageData data Properties | Improve this Doc View Source BaseRoute Declaration public override string BaseRoute { get; } Property Value Type Description String Overrides ImageDataAsset.BaseRoute | Improve this Doc View Source EmojiId Declaration public Snowflake EmojiId { get; } Property Value Type Description Snowflake | Improve this Doc View Source Type Declaration public override AssetType Type { get; } Property Value Type Description AssetType Overrides ImageDataAsset.Type Implements IAsset"
  },
  "api/Strade.Sandbox.Assets.DefaultUserAvatarAsset.html": {
    "href": "api/Strade.Sandbox.Assets.DefaultUserAvatarAsset.html",
    "title": "Class DefaultUserAvatarAsset | Strade Developer Documentation",
    "keywords": "Class DefaultUserAvatarAsset Inheritance Object DefaultUserAvatarAsset Implements IAsset Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Assets Assembly : Strade.Sandbox.dll Syntax public sealed class DefaultUserAvatarAsset : IAsset Constructors | Improve this Doc View Source DefaultUserAvatarAsset(Int32) Declaration public DefaultUserAvatarAsset(int discriminator) Parameters Type Name Description Int32 discriminator Properties | Improve this Doc View Source BaseRoute Declaration public string BaseRoute { get; } Property Value Type Description String | Improve this Doc View Source Discriminator Declaration public int Discriminator { get; } Property Value Type Description Int32 | Improve this Doc View Source IsForwarded Declaration public bool IsForwarded { get; } Property Value Type Description Boolean | Improve this Doc View Source SupportedFormats Declaration public IReadOnlyList<ImageFormat> SupportedFormats { get; } Property Value Type Description IReadOnlyList < ImageFormat > | Improve this Doc View Source Type Declaration public AssetType Type { get; } Property Value Type Description AssetType Methods | Improve this Doc View Source CreateStreamAsync(CancellationToken) Declaration public ValueTask<Stream> CreateStreamAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask < Stream > Implements IAsset"
  },
  "api/Strade.Sandbox.Assets.GuildAsset.html": {
    "href": "api/Strade.Sandbox.Assets.GuildAsset.html",
    "title": "Class GuildAsset | Strade Developer Documentation",
    "keywords": "Class GuildAsset Inheritance Object ImageDataAsset GuildAsset GuildBannerAsset GuildDiscoverySplashAsset GuildIconAsset GuildSplashAsset Implements IAsset Inherited Members ImageDataAsset.Data ImageDataAsset.IsForwarded ImageDataAsset.Type ImageDataAsset.SupportedFormat ImageDataAsset.IAsset.SupportedFormats ImageDataAsset.CreateStreamAsync(CancellationToken) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Assets Assembly : Strade.Sandbox.dll Syntax public abstract class GuildAsset : ImageDataAsset, IAsset Constructors | Improve this Doc View Source GuildAsset(Snowflake, String, ImageData) Declaration protected GuildAsset(Snowflake guildId, string hash, ImageData data) Parameters Type Name Description Snowflake guildId String hash ImageData data Properties | Improve this Doc View Source BaseRoute Declaration public override string BaseRoute { get; } Property Value Type Description String Overrides ImageDataAsset.BaseRoute | Improve this Doc View Source GuildId Declaration public Snowflake GuildId { get; } Property Value Type Description Snowflake | Improve this Doc View Source Hash Declaration public string Hash { get; } Property Value Type Description String | Improve this Doc View Source RoutePrefix Declaration protected abstract string RoutePrefix { get; } Property Value Type Description String Implements IAsset"
  },
  "api/Strade.Sandbox.Assets.GuildBannerAsset.html": {
    "href": "api/Strade.Sandbox.Assets.GuildBannerAsset.html",
    "title": "Class GuildBannerAsset | Strade Developer Documentation",
    "keywords": "Class GuildBannerAsset Inheritance Object ImageDataAsset GuildAsset GuildBannerAsset Implements IAsset Inherited Members GuildAsset.BaseRoute GuildAsset.GuildId GuildAsset.Hash ImageDataAsset.Data ImageDataAsset.IsForwarded ImageDataAsset.SupportedFormat ImageDataAsset.IAsset.SupportedFormats ImageDataAsset.CreateStreamAsync(CancellationToken) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Assets Assembly : Strade.Sandbox.dll Syntax public sealed class GuildBannerAsset : GuildAsset, IAsset Constructors | Improve this Doc View Source GuildBannerAsset(Snowflake, String, ImageData) Declaration public GuildBannerAsset(Snowflake guildId, string hash, ImageData data) Parameters Type Name Description Snowflake guildId String hash ImageData data Properties | Improve this Doc View Source RoutePrefix Declaration protected override string RoutePrefix { get; } Property Value Type Description String Overrides GuildAsset.RoutePrefix | Improve this Doc View Source Type Declaration public override AssetType Type { get; } Property Value Type Description AssetType Overrides ImageDataAsset.Type Implements IAsset"
  },
  "api/Strade.Sandbox.Assets.GuildDiscoverySplashAsset.html": {
    "href": "api/Strade.Sandbox.Assets.GuildDiscoverySplashAsset.html",
    "title": "Class GuildDiscoverySplashAsset | Strade Developer Documentation",
    "keywords": "Class GuildDiscoverySplashAsset Inheritance Object ImageDataAsset GuildAsset GuildDiscoverySplashAsset Implements IAsset Inherited Members GuildAsset.BaseRoute GuildAsset.GuildId GuildAsset.Hash ImageDataAsset.Data ImageDataAsset.IsForwarded ImageDataAsset.SupportedFormat ImageDataAsset.IAsset.SupportedFormats ImageDataAsset.CreateStreamAsync(CancellationToken) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Assets Assembly : Strade.Sandbox.dll Syntax public sealed class GuildDiscoverySplashAsset : GuildAsset, IAsset Constructors | Improve this Doc View Source GuildDiscoverySplashAsset(Snowflake, String, ImageData) Declaration public GuildDiscoverySplashAsset(Snowflake guildId, string hash, ImageData data) Parameters Type Name Description Snowflake guildId String hash ImageData data Properties | Improve this Doc View Source RoutePrefix Declaration protected override string RoutePrefix { get; } Property Value Type Description String Overrides GuildAsset.RoutePrefix | Improve this Doc View Source Type Declaration public override AssetType Type { get; } Property Value Type Description AssetType Overrides ImageDataAsset.Type Implements IAsset"
  },
  "api/Strade.Sandbox.Assets.GuildIconAsset.html": {
    "href": "api/Strade.Sandbox.Assets.GuildIconAsset.html",
    "title": "Class GuildIconAsset | Strade Developer Documentation",
    "keywords": "Class GuildIconAsset Inheritance Object ImageDataAsset GuildAsset GuildIconAsset Implements IAsset Inherited Members GuildAsset.BaseRoute GuildAsset.GuildId GuildAsset.Hash ImageDataAsset.Data ImageDataAsset.IsForwarded ImageDataAsset.SupportedFormat ImageDataAsset.IAsset.SupportedFormats ImageDataAsset.CreateStreamAsync(CancellationToken) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Assets Assembly : Strade.Sandbox.dll Syntax public sealed class GuildIconAsset : GuildAsset, IAsset Constructors | Improve this Doc View Source GuildIconAsset(Snowflake, String, ImageData) Declaration public GuildIconAsset(Snowflake guildId, string hash, ImageData data) Parameters Type Name Description Snowflake guildId String hash ImageData data Properties | Improve this Doc View Source RoutePrefix Declaration protected override string RoutePrefix { get; } Property Value Type Description String Overrides GuildAsset.RoutePrefix | Improve this Doc View Source Type Declaration public override AssetType Type { get; } Property Value Type Description AssetType Overrides ImageDataAsset.Type Implements IAsset"
  },
  "api/Strade.Sandbox.Assets.GuildSplashAsset.html": {
    "href": "api/Strade.Sandbox.Assets.GuildSplashAsset.html",
    "title": "Class GuildSplashAsset | Strade Developer Documentation",
    "keywords": "Class GuildSplashAsset Inheritance Object ImageDataAsset GuildAsset GuildSplashAsset Implements IAsset Inherited Members GuildAsset.BaseRoute GuildAsset.GuildId GuildAsset.Hash ImageDataAsset.Data ImageDataAsset.IsForwarded ImageDataAsset.SupportedFormat ImageDataAsset.IAsset.SupportedFormats ImageDataAsset.CreateStreamAsync(CancellationToken) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Assets Assembly : Strade.Sandbox.dll Syntax public sealed class GuildSplashAsset : GuildAsset, IAsset Constructors | Improve this Doc View Source GuildSplashAsset(Snowflake, String, ImageData) Declaration public GuildSplashAsset(Snowflake guildId, string hash, ImageData data) Parameters Type Name Description Snowflake guildId String hash ImageData data Properties | Improve this Doc View Source RoutePrefix Declaration protected override string RoutePrefix { get; } Property Value Type Description String Overrides GuildAsset.RoutePrefix | Improve this Doc View Source Type Declaration public override AssetType Type { get; } Property Value Type Description AssetType Overrides ImageDataAsset.Type Implements IAsset"
  },
  "api/Strade.Sandbox.Assets.html": {
    "href": "api/Strade.Sandbox.Assets.html",
    "title": "Namespace Strade.Sandbox.Assets | Strade Developer Documentation",
    "keywords": "Namespace Strade.Sandbox.Assets Classes ApplicationAsset ApplicationAssetAsset ApplicationIconAsset AssetManager CustomEmojiAsset DefaultUserAvatarAsset GuildAsset GuildBannerAsset GuildDiscoverySplashAsset GuildIconAsset GuildSplashAsset ImageDataAsset An abstract implementation of an IAsset that stores data in an ImageData instance. TeamIconAsset Represents a team icon asset. UserAvatarAsset Represents an user avatar asset. Interfaces IAsset Enums AssetType"
  },
  "api/Strade.Sandbox.Assets.IAsset.html": {
    "href": "api/Strade.Sandbox.Assets.IAsset.html",
    "title": "Interface IAsset | Strade Developer Documentation",
    "keywords": "Interface IAsset Namespace : Strade.Sandbox.Assets Assembly : Strade.Sandbox.dll Syntax public interface IAsset Properties | Improve this Doc View Source BaseRoute Gets the route to the asset without the extension (e.g. emojis/123456778 ). Declaration string BaseRoute { get; } Property Value Type Description String the route to the asset without the extension (e.g. emojis/123456778 ). | Improve this Doc View Source IsForwarded Gets a value indicating whether the asset is forwarded to the original discord CDN. Declaration bool IsForwarded { get; } Property Value Type Description Boolean a value indicating whether the asset is forwarded to the original discord CDN. | Improve this Doc View Source SupportedFormats Gets a read-only list of supported formats. Declaration IReadOnlyList<ImageFormat> SupportedFormats { get; } Property Value Type Description IReadOnlyList < ImageFormat > a read-only list of supported formats. | Improve this Doc View Source Type Gets the type of the asset. Declaration AssetType Type { get; } Property Value Type Description AssetType the type of the asset. Methods | Improve this Doc View Source CreateStreamAsync(CancellationToken) Declaration ValueTask<Stream> CreateStreamAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask < Stream >"
  },
  "api/Strade.Sandbox.Assets.ImageDataAsset.html": {
    "href": "api/Strade.Sandbox.Assets.ImageDataAsset.html",
    "title": "Class ImageDataAsset | Strade Developer Documentation",
    "keywords": "Class ImageDataAsset An abstract implementation of an IAsset that stores data in an ImageData instance. Inheritance Object ImageDataAsset ApplicationAsset CustomEmojiAsset GuildAsset TeamIconAsset UserAvatarAsset Implements IAsset Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Assets Assembly : Strade.Sandbox.dll Syntax public abstract class ImageDataAsset : IAsset Constructors | Improve this Doc View Source ImageDataAsset(ImageData) Initializes a new instance of the ImageDataAsset class. Declaration protected ImageDataAsset(ImageData data) Parameters Type Name Description ImageData data the image data containing the asset data. Exceptions Type Condition ArgumentNullException thrown if the specified data is null . Properties | Improve this Doc View Source BaseRoute Declaration public abstract string BaseRoute { get; } Property Value Type Description String | Improve this Doc View Source Data Gets the image data containing the asset data. Declaration public ImageData Data { get; } Property Value Type Description ImageData the image data containing the asset data. | Improve this Doc View Source IsForwarded Declaration public bool IsForwarded { get; } Property Value Type Description Boolean | Improve this Doc View Source SupportedFormat Gets the supported format. Declaration public ImageFormat SupportedFormat { get; } Property Value Type Description ImageFormat the supported format. | Improve this Doc View Source Type Declaration public abstract AssetType Type { get; } Property Value Type Description AssetType Methods | Improve this Doc View Source CreateStreamAsync(CancellationToken) Declaration public ValueTask<Stream> CreateStreamAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask < Stream > Explicit Interface Implementations | Improve this Doc View Source IAsset.SupportedFormats Declaration IReadOnlyList<ImageFormat> IAsset.SupportedFormats { get; } Returns Type Description IReadOnlyList < ImageFormat > Implements IAsset"
  },
  "api/Strade.Sandbox.Assets.TeamIconAsset.html": {
    "href": "api/Strade.Sandbox.Assets.TeamIconAsset.html",
    "title": "Class TeamIconAsset | Strade Developer Documentation",
    "keywords": "Class TeamIconAsset Represents a team icon asset. Inheritance Object ImageDataAsset TeamIconAsset Implements IAsset Inherited Members ImageDataAsset.Data ImageDataAsset.IsForwarded ImageDataAsset.SupportedFormat ImageDataAsset.IAsset.SupportedFormats ImageDataAsset.CreateStreamAsync(CancellationToken) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Assets Assembly : Strade.Sandbox.dll Syntax public sealed class TeamIconAsset : ImageDataAsset, IAsset Constructors | Improve this Doc View Source TeamIconAsset(Snowflake, String, ImageData) Initializes a new instance of the TeamIconAsset class. Declaration public TeamIconAsset(Snowflake teamId, string hash, ImageData data) Parameters Type Name Description Snowflake teamId the snowflake identifier of the team the icon is for. String hash the hash of the specified data . ImageData data the image data containing the asset data. Exceptions Type Condition ArgumentNullException thrown if the specified data is null . Properties | Improve this Doc View Source BaseRoute Declaration public override string BaseRoute { get; } Property Value Type Description String Overrides ImageDataAsset.BaseRoute | Improve this Doc View Source Hash Gets the hash for the Data . Declaration public string Hash { get; } Property Value Type Description String the hash for the Data . | Improve this Doc View Source TeamId Gets the snowflake identifier of the team the icon is for.. Declaration public Snowflake TeamId { get; } Property Value Type Description Snowflake the snowflake identifier of the team the icon is for. | Improve this Doc View Source Type Declaration public override AssetType Type { get; } Property Value Type Description AssetType Overrides ImageDataAsset.Type Implements IAsset"
  },
  "api/Strade.Sandbox.Assets.UserAvatarAsset.html": {
    "href": "api/Strade.Sandbox.Assets.UserAvatarAsset.html",
    "title": "Class UserAvatarAsset | Strade Developer Documentation",
    "keywords": "Class UserAvatarAsset Represents an user avatar asset. Inheritance Object ImageDataAsset UserAvatarAsset Implements IAsset Inherited Members ImageDataAsset.Data ImageDataAsset.IsForwarded ImageDataAsset.SupportedFormat ImageDataAsset.IAsset.SupportedFormats ImageDataAsset.CreateStreamAsync(CancellationToken) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Assets Assembly : Strade.Sandbox.dll Syntax public sealed class UserAvatarAsset : ImageDataAsset, IAsset Constructors | Improve this Doc View Source UserAvatarAsset(Snowflake, String, ImageData) Initializes a new instance of the UserAvatarAsset class. Declaration public UserAvatarAsset(Snowflake userId, string hash, ImageData data) Parameters Type Name Description Snowflake userId the snowflake identifier of the user the avatar is for. String hash the hash of the specified data . ImageData data the image data containing the asset data. Exceptions Type Condition ArgumentNullException thrown if the specified data is null . Properties | Improve this Doc View Source BaseRoute Declaration public override string BaseRoute { get; } Property Value Type Description String Overrides ImageDataAsset.BaseRoute | Improve this Doc View Source Hash Gets the hash for the Data . Declaration public string Hash { get; } Property Value Type Description String the hash for the Data . | Improve this Doc View Source Type Declaration public override AssetType Type { get; } Property Value Type Description AssetType Overrides ImageDataAsset.Type | Improve this Doc View Source UserId Gets the snowflake identifier of the user the avatar is for.. Declaration public Snowflake UserId { get; } Property Value Type Description Snowflake the snowflake identifier of the user the avatar is for. Implements IAsset"
  },
  "api/Strade.Sandbox.CrudDictionary-3.html": {
    "href": "api/Strade.Sandbox.CrudDictionary-3.html",
    "title": "Class CrudDictionary<TId, TModel, TSandboxEntity> | Strade Developer Documentation",
    "keywords": "Class CrudDictionary<TId, TModel, TSandboxEntity> Inheritance Object CrudDictionary<TId, TModel, TSandboxEntity> Implements IEnumerable <TSandboxEntity> IDictionary <TId, TSandboxEntity> ICollection < KeyValuePair <TId, TSandboxEntity>> IEnumerable < KeyValuePair <TId, TSandboxEntity>> IEnumerable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox Assembly : Strade.Sandbox.dll Syntax public sealed class CrudDictionary<TId, TModel, TSandboxEntity> : IEnumerable<TSandboxEntity>, IDictionary<TId, TSandboxEntity>, ICollection<KeyValuePair<TId, TSandboxEntity>>, IEnumerable<KeyValuePair<TId, TSandboxEntity>>, IEnumerable where TModel : class, IIdentifiable<TId>, new() where TSandboxEntity : SandboxEntity<TId, TModel> Type Parameters Name Description TId TModel TSandboxEntity Constructors | Improve this Doc View Source CrudDictionary() Initializes a new instance of the CrudDictionary<TId, TModel, TSandboxEntity> class. Declaration public CrudDictionary() Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description Boolean | Improve this Doc View Source IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean | Improve this Doc View Source Item[TId] Declaration public TSandboxEntity this[TId key] { get; set; } Parameters Type Name Description TId key Property Value Type Description TSandboxEntity | Improve this Doc View Source Keys Declaration public ICollection<TId> Keys { get; } Property Value Type Description ICollection <TId> | Improve this Doc View Source Values Declaration public ICollection<TSandboxEntity> Values { get; } Property Value Type Description ICollection <TSandboxEntity> Methods | Improve this Doc View Source Add(TSandboxEntity) Declaration public void Add(TSandboxEntity entity) Parameters Type Name Description TSandboxEntity entity | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source ContainsKey(TId) Declaration public bool ContainsKey(TId key) Parameters Type Name Description TId key Returns Type Description Boolean | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<TSandboxEntity> GetEnumerator() Returns Type Description IEnumerator <TSandboxEntity> | Improve this Doc View Source GetOrDefault(TId) Declaration public TSandboxEntity GetOrDefault(TId id) Parameters Type Name Description TId id Returns Type Description TSandboxEntity | Improve this Doc View Source Remove(TId) Declaration public bool Remove(TId key) Parameters Type Name Description TId key Returns Type Description Boolean | Improve this Doc View Source TryGetValue(TId, out TSandboxEntity) Declaration public bool TryGetValue(TId id, out TSandboxEntity entity) Parameters Type Name Description TId id TSandboxEntity entity Returns Type Description Boolean Explicit Interface Implementations | Improve this Doc View Source ICollection<KeyValuePair<TId, TSandboxEntity>>.Add(KeyValuePair<TId, TSandboxEntity>) Declaration void ICollection<KeyValuePair<TId, TSandboxEntity>>.Add(KeyValuePair<TId, TSandboxEntity> item) Parameters Type Name Description KeyValuePair <TId, TSandboxEntity> item | Improve this Doc View Source ICollection<KeyValuePair<TId, TSandboxEntity>>.Contains(KeyValuePair<TId, TSandboxEntity>) Declaration bool ICollection<KeyValuePair<TId, TSandboxEntity>>.Contains(KeyValuePair<TId, TSandboxEntity> item) Parameters Type Name Description KeyValuePair <TId, TSandboxEntity> item Returns Type Description Boolean | Improve this Doc View Source ICollection<KeyValuePair<TId, TSandboxEntity>>.CopyTo(KeyValuePair<TId, TSandboxEntity>[], Int32) Declaration void ICollection<KeyValuePair<TId, TSandboxEntity>>.CopyTo(KeyValuePair<TId, TSandboxEntity>[] array, int arrayIndex) Parameters Type Name Description KeyValuePair <TId, TSandboxEntity>[] array Int32 arrayIndex | Improve this Doc View Source ICollection<KeyValuePair<TId, TSandboxEntity>>.Remove(KeyValuePair<TId, TSandboxEntity>) Declaration bool ICollection<KeyValuePair<TId, TSandboxEntity>>.Remove(KeyValuePair<TId, TSandboxEntity> item) Parameters Type Name Description KeyValuePair <TId, TSandboxEntity> item Returns Type Description Boolean | Improve this Doc View Source IDictionary<TId, TSandboxEntity>.Add(TId, TSandboxEntity) Declaration void IDictionary<TId, TSandboxEntity>.Add(TId key, TSandboxEntity value) Parameters Type Name Description TId key TSandboxEntity value | Improve this Doc View Source IEnumerable<KeyValuePair<TId, TSandboxEntity>>.GetEnumerator() Declaration IEnumerator<KeyValuePair<TId, TSandboxEntity>> IEnumerable<KeyValuePair<TId, TSandboxEntity>>.GetEnumerator() Returns Type Description IEnumerator < KeyValuePair <TId, TSandboxEntity>> | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements System.Collections.Generic.IEnumerable<T> System.Collections.Generic.IDictionary<TKey,TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/Strade.Sandbox.DataGeneration.DataGenerationContext.html": {
    "href": "api/Strade.Sandbox.DataGeneration.DataGenerationContext.html",
    "title": "Class DataGenerationContext | Strade Developer Documentation",
    "keywords": "Class DataGenerationContext Inheritance Object DataGenerationContext Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.DataGeneration Assembly : Strade.Sandbox.DataGeneration.dll Syntax public sealed class DataGenerationContext Constructors | Improve this Doc View Source DataGenerationContext() Declaration public DataGenerationContext() | Improve this Doc View Source DataGenerationContext(ISnowflakeGenerator) Declaration public DataGenerationContext(ISnowflakeGenerator snowflakeGenerator) Parameters Type Name Description ISnowflakeGenerator snowflakeGenerator | Improve this Doc View Source DataGenerationContext(Random) Declaration public DataGenerationContext(Random random) Parameters Type Name Description Random random | Improve this Doc View Source DataGenerationContext(Random, ISnowflakeGenerator) Declaration public DataGenerationContext(Random random, ISnowflakeGenerator snowflakeGenerator) Parameters Type Name Description Random random ISnowflakeGenerator snowflakeGenerator Properties | Improve this Doc View Source ChannelGenerator Declaration public ChannelGenerator ChannelGenerator { get; } Property Value Type Description ChannelGenerator | Improve this Doc View Source GuildGenerator Declaration public GuildGenerator GuildGenerator { get; } Property Value Type Description GuildGenerator | Improve this Doc View Source Random Declaration public Random Random { get; } Property Value Type Description Random | Improve this Doc View Source SnowflakeGenerator Declaration public ISnowflakeGenerator SnowflakeGenerator { get; } Property Value Type Description ISnowflakeGenerator | Improve this Doc View Source UserGenerator Declaration public UserGenerator UserGenerator { get; } Property Value Type Description UserGenerator | Improve this Doc View Source UsernameGenerator Declaration public UsernameGenerator UsernameGenerator { get; } Property Value Type Description UsernameGenerator"
  },
  "api/Strade.Sandbox.DataGeneration.Generators.ChannelGenerator.html": {
    "href": "api/Strade.Sandbox.DataGeneration.Generators.ChannelGenerator.html",
    "title": "Class ChannelGenerator | Strade Developer Documentation",
    "keywords": "Class ChannelGenerator Inheritance Object ChannelGenerator Implements IDataGenerator < ChannelModel > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.DataGeneration.Generators Assembly : Strade.Sandbox.DataGeneration.dll Syntax public sealed class ChannelGenerator : IDataGenerator<ChannelModel> Constructors | Improve this Doc View Source ChannelGenerator(DataGenerationContext) Declaration public ChannelGenerator(DataGenerationContext generationContext) Parameters Type Name Description DataGenerationContext generationContext Properties | Improve this Doc View Source GenerationContext Declaration public DataGenerationContext GenerationContext { get; } Property Value Type Description DataGenerationContext Methods | Improve this Doc View Source Next() Declaration public ChannelModel Next() Returns Type Description ChannelModel Implements IDataGenerator<T>"
  },
  "api/Strade.Sandbox.DataGeneration.Generators.GuildGenerator.html": {
    "href": "api/Strade.Sandbox.DataGeneration.Generators.GuildGenerator.html",
    "title": "Class GuildGenerator | Strade Developer Documentation",
    "keywords": "Class GuildGenerator Inheritance Object GuildGenerator Implements IDataGenerator < GuildModel > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.DataGeneration.Generators Assembly : Strade.Sandbox.DataGeneration.dll Syntax public sealed class GuildGenerator : IDataGenerator<GuildModel> Constructors | Improve this Doc View Source GuildGenerator(DataGenerationContext) Declaration public GuildGenerator(DataGenerationContext generationContext) Parameters Type Name Description DataGenerationContext generationContext Properties | Improve this Doc View Source GenerationContext Declaration public DataGenerationContext GenerationContext { get; } Property Value Type Description DataGenerationContext Methods | Improve this Doc View Source Next() Declaration public GuildModel Next() Returns Type Description GuildModel Implements IDataGenerator<T>"
  },
  "api/Strade.Sandbox.DataGeneration.Generators.html": {
    "href": "api/Strade.Sandbox.DataGeneration.Generators.html",
    "title": "Namespace Strade.Sandbox.DataGeneration.Generators | Strade Developer Documentation",
    "keywords": "Namespace Strade.Sandbox.DataGeneration.Generators Classes ChannelGenerator GuildGenerator UserGenerator UsernameGenerator Structs UserGenerationOptions UsernameGenerationOptions Interfaces IDataGenerator<T> IDataGenerator<T, TOptions>"
  },
  "api/Strade.Sandbox.DataGeneration.Generators.IDataGenerator-1.html": {
    "href": "api/Strade.Sandbox.DataGeneration.Generators.IDataGenerator-1.html",
    "title": "Interface IDataGenerator<T> | Strade Developer Documentation",
    "keywords": "Interface IDataGenerator<T> Namespace : Strade.Sandbox.DataGeneration.Generators Assembly : Strade.Sandbox.DataGeneration.dll Syntax public interface IDataGenerator<T> Type Parameters Name Description T Methods | Improve this Doc View Source Next() Declaration T Next() Returns Type Description T"
  },
  "api/Strade.Sandbox.DataGeneration.Generators.IDataGenerator-2.html": {
    "href": "api/Strade.Sandbox.DataGeneration.Generators.IDataGenerator-2.html",
    "title": "Interface IDataGenerator<T, TOptions> | Strade Developer Documentation",
    "keywords": "Interface IDataGenerator<T, TOptions> Inherited Members IDataGenerator<T>.Next() Namespace : Strade.Sandbox.DataGeneration.Generators Assembly : Strade.Sandbox.DataGeneration.dll Syntax public interface IDataGenerator<T, TOptions> : IDataGenerator<T> Type Parameters Name Description T TOptions Methods | Improve this Doc View Source Next(TOptions) Declaration T Next(TOptions options) Parameters Type Name Description TOptions options Returns Type Description T"
  },
  "api/Strade.Sandbox.DataGeneration.Generators.UserGenerationOptions.html": {
    "href": "api/Strade.Sandbox.DataGeneration.Generators.UserGenerationOptions.html",
    "title": "Struct UserGenerationOptions | Strade Developer Documentation",
    "keywords": "Struct UserGenerationOptions Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Sandbox.DataGeneration.Generators Assembly : Strade.Sandbox.DataGeneration.dll Syntax public struct UserGenerationOptions Constructors | Improve this Doc View Source UserGenerationOptions(Boolean, Boolean, Boolean, UserFlags, UsernameGenerationOptions) Declaration public UserGenerationOptions(bool generateBot = false, bool generateCurrentUser = false, bool generateEmail = false, UserFlags disallowedUserFlags = UserFlags.None, UsernameGenerationOptions usernameGenerationOptions = default(UsernameGenerationOptions)) Parameters Type Name Description Boolean generateBot Boolean generateCurrentUser Boolean generateEmail UserFlags disallowedUserFlags UsernameGenerationOptions usernameGenerationOptions Properties | Improve this Doc View Source DisallowedUserFlags Declaration public UserFlags DisallowedUserFlags { get; } Property Value Type Description UserFlags | Improve this Doc View Source GenerateBot Declaration public bool GenerateBot { get; } Property Value Type Description Boolean | Improve this Doc View Source GenerateCurrentUser Declaration public bool GenerateCurrentUser { get; } Property Value Type Description Boolean | Improve this Doc View Source GenerateEmail Declaration public bool GenerateEmail { get; } Property Value Type Description Boolean | Improve this Doc View Source UsernameGenerationOptions Declaration public UsernameGenerationOptions UsernameGenerationOptions { get; } Property Value Type Description UsernameGenerationOptions"
  },
  "api/Strade.Sandbox.DataGeneration.Generators.UserGenerator.html": {
    "href": "api/Strade.Sandbox.DataGeneration.Generators.UserGenerator.html",
    "title": "Class UserGenerator | Strade Developer Documentation",
    "keywords": "Class UserGenerator Inheritance Object UserGenerator Implements IDataGenerator < UserModel , UserGenerationOptions > IDataGenerator < UserModel > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.DataGeneration.Generators Assembly : Strade.Sandbox.DataGeneration.dll Syntax public sealed class UserGenerator : IDataGenerator<UserModel, UserGenerationOptions>, IDataGenerator<UserModel> Constructors | Improve this Doc View Source UserGenerator(DataGenerationContext) Declaration public UserGenerator(DataGenerationContext generationContext) Parameters Type Name Description DataGenerationContext generationContext Properties | Improve this Doc View Source GenerationContext Declaration public DataGenerationContext GenerationContext { get; } Property Value Type Description DataGenerationContext Methods | Improve this Doc View Source Next() Declaration public UserModel Next() Returns Type Description UserModel | Improve this Doc View Source Next(UserGenerationOptions) Declaration public UserModel Next(UserGenerationOptions options) Parameters Type Name Description UserGenerationOptions options Returns Type Description UserModel Implements IDataGenerator<T, TOptions> IDataGenerator<T>"
  },
  "api/Strade.Sandbox.DataGeneration.Generators.UsernameGenerationOptions.html": {
    "href": "api/Strade.Sandbox.DataGeneration.Generators.UsernameGenerationOptions.html",
    "title": "Struct UsernameGenerationOptions | Strade Developer Documentation",
    "keywords": "Struct UsernameGenerationOptions Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Sandbox.DataGeneration.Generators Assembly : Strade.Sandbox.DataGeneration.dll Syntax public struct UsernameGenerationOptions Constructors | Improve this Doc View Source UsernameGenerationOptions(Nullable<Int32>, Nullable<Int32>, Boolean) Declaration public UsernameGenerationOptions(int? maximumLength, int? minimumLength, bool excludeNumbers) Parameters Type Name Description Nullable < Int32 > maximumLength Nullable < Int32 > minimumLength Boolean excludeNumbers Properties | Improve this Doc View Source ExcludeNumbers Declaration public bool ExcludeNumbers { get; } Property Value Type Description Boolean | Improve this Doc View Source MaximumLength Declaration public int MaximumLength { get; } Property Value Type Description Int32 | Improve this Doc View Source MinimumLength Declaration public int MinimumLength { get; } Property Value Type Description Int32"
  },
  "api/Strade.Sandbox.DataGeneration.Generators.UsernameGenerator.html": {
    "href": "api/Strade.Sandbox.DataGeneration.Generators.UsernameGenerator.html",
    "title": "Class UsernameGenerator | Strade Developer Documentation",
    "keywords": "Class UsernameGenerator Inheritance Object UsernameGenerator Implements IDataGenerator < String , UsernameGenerationOptions > IDataGenerator < String > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.DataGeneration.Generators Assembly : Strade.Sandbox.DataGeneration.dll Syntax public class UsernameGenerator : IDataGenerator<string, UsernameGenerationOptions>, IDataGenerator<string> Constructors | Improve this Doc View Source UsernameGenerator(DataGenerationContext) Declaration public UsernameGenerator(DataGenerationContext generationContext) Parameters Type Name Description DataGenerationContext generationContext Properties | Improve this Doc View Source GenerationContext Declaration public DataGenerationContext GenerationContext { get; } Property Value Type Description DataGenerationContext Methods | Improve this Doc View Source Next() Declaration public string Next() Returns Type Description String | Improve this Doc View Source Next(UsernameGenerationOptions) Declaration public string Next(UsernameGenerationOptions options) Parameters Type Name Description UsernameGenerationOptions options Returns Type Description String Implements IDataGenerator<T, TOptions> IDataGenerator<T>"
  },
  "api/Strade.Sandbox.DataGeneration.html": {
    "href": "api/Strade.Sandbox.DataGeneration.html",
    "title": "Namespace Strade.Sandbox.DataGeneration | Strade Developer Documentation",
    "keywords": "Namespace Strade.Sandbox.DataGeneration Classes DataGenerationContext"
  },
  "api/Strade.Sandbox.Endpoints.html": {
    "href": "api/Strade.Sandbox.Endpoints.html",
    "title": "Class Endpoints | Strade Developer Documentation",
    "keywords": "Class Endpoints A class that contains the implementation of endpoints commonly used for testing bots. Inheritance Object Endpoints Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox Assembly : Strade.Sandbox.dll Syntax public static class Endpoints Methods | Improve this Doc View Source CreateDMAsync(SandboxEnvironment, HttpRequestMessage, HttpResponseMessageBuilder, IReadOnlyList<String>, QueryParameterCollection, CancellationToken) Creates a direct message channel asynchronously ( https://discord.com/developers/docs/resources/user#create-dm ). Declaration public static ValueTask CreateDMAsync(SandboxEnvironment sandbox, HttpRequestMessage requestMessage, HttpResponseMessageBuilder responseBuilder, IReadOnlyList<string> placeholders, QueryParameterCollection queryParameters, CancellationToken cancellationToken) Parameters Type Name Description SandboxEnvironment sandbox the current sandbox hosting the endpoint. HttpRequestMessage requestMessage the HTTP request message to handle. HttpResponseMessageBuilder responseBuilder the response builder to use to build the response. IReadOnlyList < String > placeholders a read-only list containing the route placeholders. QueryParameterCollection queryParameters a list of query parameters specified by the request. CancellationToken cancellationToken Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source CreateMessageAsync(SandboxEnvironment, HttpRequestMessage, HttpResponseMessageBuilder, IReadOnlyList<String>, QueryParameterCollection, CancellationToken) Creates a message in a channel specified by its snowflake identifier asynchronously ( https://discord.com/developers/docs/resources/channel#create-message ). Declaration public static ValueTask CreateMessageAsync(SandboxEnvironment sandbox, HttpRequestMessage requestMessage, HttpResponseMessageBuilder responseBuilder, IReadOnlyList<string> placeholders, QueryParameterCollection queryParameters, CancellationToken cancellationToken) Parameters Type Name Description SandboxEnvironment sandbox the current sandbox hosting the endpoint. HttpRequestMessage requestMessage the HTTP request message to handle. HttpResponseMessageBuilder responseBuilder the response builder to use to build the response. IReadOnlyList < String > placeholders a read-only list containing the route placeholders. QueryParameterCollection queryParameters a list of query parameters specified by the request. CancellationToken cancellationToken Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source CrosspostMessageAsync(SandboxEnvironment, HttpRequestMessage, HttpResponseMessageBuilder, IReadOnlyList<String>, QueryParameterCollection, CancellationToken) Gets a message specified by its snowflake identifier in a channel specified by its snowflake identifier asynchronously ( https://discord.com/developers/docs/resources/channel#get-channel-message ). Declaration public static ValueTask CrosspostMessageAsync(SandboxEnvironment sandbox, HttpRequestMessage requestMessage, HttpResponseMessageBuilder responseBuilder, IReadOnlyList<string> placeholders, QueryParameterCollection queryParameters, CancellationToken cancellationToken) Parameters Type Name Description SandboxEnvironment sandbox the current sandbox hosting the endpoint. HttpRequestMessage requestMessage the HTTP request message to handle. HttpResponseMessageBuilder responseBuilder the response builder to use to build the response. IReadOnlyList < String > placeholders a read-only list containing the route placeholders. QueryParameterCollection queryParameters a list of query parameters specified by the request. CancellationToken cancellationToken Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source DeleteOrCloseChannelAsync(SandboxEnvironment, HttpRequestMessage, HttpResponseMessageBuilder, IReadOnlyList<String>, QueryParameterCollection, CancellationToken) Closes or deletes a channel by its snowflake identifier asynchronously ( https://discord.com/developers/docs/resources/channel#deleteclose-channel ). Declaration public static ValueTask DeleteOrCloseChannelAsync(SandboxEnvironment sandbox, HttpRequestMessage requestMessage, HttpResponseMessageBuilder responseBuilder, IReadOnlyList<string> placeholders, QueryParameterCollection queryParameters, CancellationToken cancellationToken) Parameters Type Name Description SandboxEnvironment sandbox the current sandbox hosting the endpoint. HttpRequestMessage requestMessage the HTTP request message to handle. HttpResponseMessageBuilder responseBuilder the response builder to use to build the response. IReadOnlyList < String > placeholders a read-only list containing the route placeholders. QueryParameterCollection queryParameters a list of query parameters specified by the request. CancellationToken cancellationToken Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source GetChannelAsync(SandboxEnvironment, HttpRequestMessage, HttpResponseMessageBuilder, IReadOnlyList<String>, QueryParameterCollection, CancellationToken) Gets a channel by its snowflake identifier asynchronously ( https://discord.com/developers/docs/resources/channel#get-channel ). Declaration public static ValueTask GetChannelAsync(SandboxEnvironment sandbox, HttpRequestMessage requestMessage, HttpResponseMessageBuilder responseBuilder, IReadOnlyList<string> placeholders, QueryParameterCollection queryParameters, CancellationToken cancellationToken) Parameters Type Name Description SandboxEnvironment sandbox the current sandbox hosting the endpoint. HttpRequestMessage requestMessage the HTTP request message to handle. HttpResponseMessageBuilder responseBuilder the response builder to use to build the response. IReadOnlyList < String > placeholders a read-only list containing the route placeholders. QueryParameterCollection queryParameters a list of query parameters specified by the request. CancellationToken cancellationToken Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source GetChannelMessageAsync(SandboxEnvironment, HttpRequestMessage, HttpResponseMessageBuilder, IReadOnlyList<String>, QueryParameterCollection, CancellationToken) Gets a message specified by its snowflake identifier in a channel specified by its snowflake identifier asynchronously ( https://discord.com/developers/docs/resources/channel#get-channel-message ). Declaration public static ValueTask GetChannelMessageAsync(SandboxEnvironment sandbox, HttpRequestMessage requestMessage, HttpResponseMessageBuilder responseBuilder, IReadOnlyList<string> placeholders, QueryParameterCollection queryParameters, CancellationToken cancellationToken) Parameters Type Name Description SandboxEnvironment sandbox the current sandbox hosting the endpoint. HttpRequestMessage requestMessage the HTTP request message to handle. HttpResponseMessageBuilder responseBuilder the response builder to use to build the response. IReadOnlyList < String > placeholders a read-only list containing the route placeholders. QueryParameterCollection queryParameters a list of query parameters specified by the request. CancellationToken cancellationToken Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source GetChannelMessagesAsync(SandboxEnvironment, HttpRequestMessage, HttpResponseMessageBuilder, IReadOnlyList<String>, QueryParameterCollection, CancellationToken) Gets a list of the messages of a channel specified by its snowflake identifier asynchronously ( https://discord.com/developers/docs/resources/channel#get-channel-messages ). Declaration public static ValueTask GetChannelMessagesAsync(SandboxEnvironment sandbox, HttpRequestMessage requestMessage, HttpResponseMessageBuilder responseBuilder, IReadOnlyList<string> placeholders, QueryParameterCollection queryParameters, CancellationToken cancellationToken) Parameters Type Name Description SandboxEnvironment sandbox the current sandbox hosting the endpoint. HttpRequestMessage requestMessage the HTTP request message to handle. HttpResponseMessageBuilder responseBuilder the response builder to use to build the response. IReadOnlyList < String > placeholders a read-only list containing the route placeholders. QueryParameterCollection queryParameters a list of query parameters specified by the request. CancellationToken cancellationToken Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source GetCurrentUserAsync(SandboxEnvironment, HttpRequestMessage, HttpResponseMessageBuilder, IReadOnlyList<String>, QueryParameterCollection, CancellationToken) Gets the current user ( https://discord.com/developers/docs/resources/user#get-current-user ). Declaration public static ValueTask GetCurrentUserAsync(SandboxEnvironment sandbox, HttpRequestMessage requestMessage, HttpResponseMessageBuilder responseBuilder, IReadOnlyList<string> placeholders, QueryParameterCollection queryParameters, CancellationToken cancellationToken) Parameters Type Name Description SandboxEnvironment sandbox the current sandbox hosting the endpoint. HttpRequestMessage requestMessage the HTTP request message to handle. HttpResponseMessageBuilder responseBuilder the response builder to use to build the response. IReadOnlyList < String > placeholders a read-only list containing the route placeholders. QueryParameterCollection queryParameters a list of query parameters specified by the request. CancellationToken cancellationToken Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source GetCurrentUserGuildsAsync(SandboxEnvironment, HttpRequestMessage, HttpResponseMessageBuilder, IReadOnlyList<String>, QueryParameterCollection, CancellationToken) Gets a list of guilds the user is in ( https://discord.com/developers/docs/resources/user#get-current-user-guilds ). Declaration public static ValueTask GetCurrentUserGuildsAsync(SandboxEnvironment sandbox, HttpRequestMessage requestMessage, HttpResponseMessageBuilder responseBuilder, IReadOnlyList<string> placeholders, QueryParameterCollection queryParameters, CancellationToken cancellationToken) Parameters Type Name Description SandboxEnvironment sandbox the current sandbox hosting the endpoint. HttpRequestMessage requestMessage the HTTP request message to handle. HttpResponseMessageBuilder responseBuilder the response builder to use to build the response. IReadOnlyList < String > placeholders a read-only list containing the route placeholders. QueryParameterCollection queryParameters a list of query parameters specified by the request. CancellationToken cancellationToken Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source GetGatewayBotAsync(SandboxEnvironment, HttpRequestMessage, HttpResponseMessageBuilder, IReadOnlyList<String>, QueryParameterCollection, CancellationToken) Gets the user direct message channels asynchronously ( https://discord.com/developers/docs/resources/user#get-user-dms ). Declaration public static ValueTask GetGatewayBotAsync(SandboxEnvironment sandbox, HttpRequestMessage requestMessage, HttpResponseMessageBuilder responseBuilder, IReadOnlyList<string> placeholders, QueryParameterCollection queryParameters, CancellationToken cancellationToken) Parameters Type Name Description SandboxEnvironment sandbox the current sandbox hosting the endpoint. HttpRequestMessage requestMessage the HTTP request message to handle. HttpResponseMessageBuilder responseBuilder the response builder to use to build the response. IReadOnlyList < String > placeholders a read-only list containing the route placeholders. QueryParameterCollection queryParameters a list of query parameters specified by the request. CancellationToken cancellationToken Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source GetGuildAsync(SandboxEnvironment, HttpRequestMessage, HttpResponseMessageBuilder, IReadOnlyList<String>, QueryParameterCollection, CancellationToken) Gets a guild by the specified id asynchronously ( https://discord.com/developers/docs/resources/user#create-dm ). Declaration public static ValueTask GetGuildAsync(SandboxEnvironment sandbox, HttpRequestMessage requestMessage, HttpResponseMessageBuilder responseBuilder, IReadOnlyList<string> placeholders, QueryParameterCollection queryParameters, CancellationToken cancellationToken) Parameters Type Name Description SandboxEnvironment sandbox the current sandbox hosting the endpoint. HttpRequestMessage requestMessage the HTTP request message to handle. HttpResponseMessageBuilder responseBuilder the response builder to use to build the response. IReadOnlyList < String > placeholders a read-only list containing the route placeholders. QueryParameterCollection queryParameters a list of query parameters specified by the request. CancellationToken cancellationToken Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source GetGuildMemberAsync(SandboxEnvironment, HttpRequestMessage, HttpResponseMessageBuilder, IReadOnlyList<String>, QueryParameterCollection, CancellationToken) Gets a member specified by its snowflake identifier from a guild specified by its snowflake identifier asynchronously ( https://discord.com/developers/docs/resources/guild#get-guild-member ). Declaration public static ValueTask GetGuildMemberAsync(SandboxEnvironment sandbox, HttpRequestMessage requestMessage, HttpResponseMessageBuilder responseBuilder, IReadOnlyList<string> placeholders, QueryParameterCollection queryParameters, CancellationToken cancellationToken) Parameters Type Name Description SandboxEnvironment sandbox the current sandbox hosting the endpoint. HttpRequestMessage requestMessage the HTTP request message to handle. HttpResponseMessageBuilder responseBuilder the response builder to use to build the response. IReadOnlyList < String > placeholders a read-only list containing the route placeholders. QueryParameterCollection queryParameters a list of query parameters specified by the request. CancellationToken cancellationToken Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source GetUserAsync(SandboxEnvironment, HttpRequestMessage, HttpResponseMessageBuilder, IReadOnlyList<String>, QueryParameterCollection, CancellationToken) Gets a user by its snowflake identifier ( https://discord.com/developers/docs/resources/user#get-user ). Declaration public static ValueTask GetUserAsync(SandboxEnvironment sandbox, HttpRequestMessage requestMessage, HttpResponseMessageBuilder responseBuilder, IReadOnlyList<string> placeholders, QueryParameterCollection queryParameters, CancellationToken cancellationToken) Parameters Type Name Description SandboxEnvironment sandbox the current sandbox hosting the endpoint. HttpRequestMessage requestMessage the HTTP request message to handle. HttpResponseMessageBuilder responseBuilder the response builder to use to build the response. IReadOnlyList < String > placeholders a read-only list containing the route placeholders. QueryParameterCollection queryParameters a list of query parameters specified by the request. CancellationToken cancellationToken Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source GetUserDMsAsync(SandboxEnvironment, HttpRequestMessage, HttpResponseMessageBuilder, IReadOnlyList<String>, QueryParameterCollection, CancellationToken) Gets the user direct message channels asynchronously ( https://discord.com/developers/docs/resources/user#get-user-dms ). Declaration public static ValueTask GetUserDMsAsync(SandboxEnvironment sandbox, HttpRequestMessage requestMessage, HttpResponseMessageBuilder responseBuilder, IReadOnlyList<string> placeholders, QueryParameterCollection queryParameters, CancellationToken cancellationToken) Parameters Type Name Description SandboxEnvironment sandbox the current sandbox hosting the endpoint. HttpRequestMessage requestMessage the HTTP request message to handle. HttpResponseMessageBuilder responseBuilder the response builder to use to build the response. IReadOnlyList < String > placeholders a read-only list containing the route placeholders. QueryParameterCollection queryParameters a list of query parameters specified by the request. CancellationToken cancellationToken Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source LeaveGuildAsync(SandboxEnvironment, HttpRequestMessage, HttpResponseMessageBuilder, IReadOnlyList<String>, QueryParameterCollection, CancellationToken) Leaves a guild asynchronously ( https://discord.com/developers/docs/resources/user#leave-guild ). Declaration public static ValueTask LeaveGuildAsync(SandboxEnvironment sandbox, HttpRequestMessage requestMessage, HttpResponseMessageBuilder responseBuilder, IReadOnlyList<string> placeholders, QueryParameterCollection queryParameters, CancellationToken cancellationToken) Parameters Type Name Description SandboxEnvironment sandbox the current sandbox the endpoint. HttpRequestMessage requestMessage the HTTP request message to handle. HttpResponseMessageBuilder responseBuilder the response builder to use to build the response. IReadOnlyList < String > placeholders a read-only list containing the route placeholders. QueryParameterCollection queryParameters a list of query parameters specified by the request. CancellationToken cancellationToken Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source ModifyChannelAsync(SandboxEnvironment, HttpRequestMessage, HttpResponseMessageBuilder, IReadOnlyList<String>, QueryParameterCollection, CancellationToken) Modifies a channel by its snowflake identifier ( https://discord.com/developers/docs/resources/channel#modify-channel ). Declaration public static ValueTask ModifyChannelAsync(SandboxEnvironment sandbox, HttpRequestMessage requestMessage, HttpResponseMessageBuilder responseBuilder, IReadOnlyList<string> placeholders, QueryParameterCollection queryParameters, CancellationToken cancellationToken) Parameters Type Name Description SandboxEnvironment sandbox the current sandbox hosting the endpoint. HttpRequestMessage requestMessage the HTTP request message to handle. HttpResponseMessageBuilder responseBuilder the response builder to use to build the response. IReadOnlyList < String > placeholders a read-only list containing the route placeholders. QueryParameterCollection queryParameters a list of query parameters specified by the request. CancellationToken cancellationToken Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source ModifyCurrentUserAsync(SandboxEnvironment, HttpRequestMessage, HttpResponseMessageBuilder, IReadOnlyList<String>, QueryParameterCollection, CancellationToken) Gets the current user ( https://discord.com/developers/docs/resources/user#get-current-user ). Declaration public static ValueTask ModifyCurrentUserAsync(SandboxEnvironment sandbox, HttpRequestMessage requestMessage, HttpResponseMessageBuilder responseBuilder, IReadOnlyList<string> placeholders, QueryParameterCollection queryParameters, CancellationToken cancellationToken) Parameters Type Name Description SandboxEnvironment sandbox the current sandbox hosting the endpoint. HttpRequestMessage requestMessage the HTTP request message to handle. HttpResponseMessageBuilder responseBuilder the response builder to use to build the response. IReadOnlyList < String > placeholders a read-only list containing the route placeholders. QueryParameterCollection queryParameters a list of query parameters specified by the request. CancellationToken cancellationToken Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source RegisterAll(EndpointCollection) Declaration public static void RegisterAll(EndpointCollection endpoints) Parameters Type Name Description EndpointCollection endpoints"
  },
  "api/Strade.Sandbox.Entities.html": {
    "href": "api/Strade.Sandbox.Entities.html",
    "title": "Namespace Strade.Sandbox.Entities | Strade Developer Documentation",
    "keywords": "Namespace Strade.Sandbox.Entities Classes SandboxAuditLog Represents an audit log of a guild. An audit log logs administrative operations for example when a channel is created, a user was banned, etc. SandboxAuditLogEntry Represents an entry in the audit log and records an administrative operation on the guild. SandboxBan SandboxCategory SandboxChannel SandboxEmote SandboxEntity<TId, TModel> SandboxGuild SandboxGuildChannel SandboxIntegration SandboxInvite SandboxMember SandboxMessage SandboxNestedChannel SandboxPrivateChannel SandboxRole SandboxTextChannel SandboxUser SandboxWebhook"
  },
  "api/Strade.Sandbox.Entities.SandboxAuditLog.html": {
    "href": "api/Strade.Sandbox.Entities.SandboxAuditLog.html",
    "title": "Class SandboxAuditLog | Strade Developer Documentation",
    "keywords": "Class SandboxAuditLog Represents an audit log of a guild. An audit log logs administrative operations for example when a channel is created, a user was banned, etc. Inheritance Object SandboxAuditLog Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Entities Assembly : Strade.Sandbox.dll Syntax public sealed class SandboxAuditLog Remarks See https://discord.com/developers/docs/resources/audit-log#audit-log-object-audit-log-structure for more details. Constructors | Improve this Doc View Source SandboxAuditLog(SandboxGuild) Declaration public SandboxAuditLog(SandboxGuild guild) Parameters Type Name Description SandboxGuild guild Properties | Improve this Doc View Source Entries Gets an enumerable that yields through the audit log entries. Declaration public IEnumerable<SandboxAuditLogEntry> Entries { get; } Property Value Type Description IEnumerable < SandboxAuditLogEntry > an enumerable that yields through the audit log entries. | Improve this Doc View Source Guild Declaration public SandboxGuild Guild { get; } Property Value Type Description SandboxGuild | Improve this Doc View Source Integrations Gets an enumerable that yields through the integrations that the audit log intersects with. Declaration public IEnumerable<GuildIntegrationInformation> Integrations { get; } Property Value Type Description IEnumerable < GuildIntegrationInformation > an enumerable that yields through the integrations that the audit log intersects with. | Improve this Doc View Source Users Gets an enumerable that yields through the users that the audit log intersects with. Declaration public IEnumerable<User> Users { get; } Property Value Type Description IEnumerable < User > an enumerable that yields through the users that the audit log intersects with. | Improve this Doc View Source Webhooks Gets an enumerable that yields through the webhooks that the audit log intersects with. Declaration public IEnumerable<Webhook> Webhooks { get; } Property Value Type Description IEnumerable < Webhook > an enumerable that yields through the webhooks that the audit log intersects with. Methods | Improve this Doc View Source Append(OperationContext, AuditLogActionType, IReadOnlyList<AuditLogChange>, Nullable<Snowflake>, AuditLogEntryOptionsModel) Declaration public void Append(OperationContext operation, AuditLogActionType type, IReadOnlyList<AuditLogChange> changes = null, Snowflake? targetId = default(Snowflake? ), AuditLogEntryOptionsModel options = null) Parameters Type Name Description OperationContext operation AuditLogActionType type IReadOnlyList < AuditLogChange > changes Nullable < Snowflake > targetId AuditLogEntryOptionsModel options | Improve this Doc View Source GetEntry(Snowflake) Gets an entry by the specified entryId . Declaration public SandboxAuditLogEntry GetEntry(Snowflake entryId) Parameters Type Name Description Snowflake entryId the snowflake identifier of the audit log entry. Returns Type Description SandboxAuditLogEntry the audit log entry; or null if no audit log entry was found by the specified entryId . | Improve this Doc View Source GetIntegration(Snowflake) Gets an integration by the specified integrationId . Declaration public SandboxIntegration GetIntegration(Snowflake integrationId) Parameters Type Name Description Snowflake integrationId the snowflake identifier of the integration. Returns Type Description SandboxIntegration the integration; or null if no integration was found by the specified integrationId . | Improve this Doc View Source GetUser(Snowflake) Gets an user by the specified userId . Declaration public SandboxUser GetUser(Snowflake userId) Parameters Type Name Description Snowflake userId the snowflake identifier of the user. Returns Type Description SandboxUser the user; or null if no user was found by the specified userId . | Improve this Doc View Source GetWebhook(Snowflake) Gets a webhook by the specified webhookId . Declaration public SandboxWebhook GetWebhook(Snowflake webhookId) Parameters Type Name Description Snowflake webhookId the snowflake identifier of the webhook. Returns Type Description SandboxWebhook the webhook; or null if no webhook was found by the specified webhookId ."
  },
  "api/Strade.Sandbox.Entities.SandboxAuditLogEntry.html": {
    "href": "api/Strade.Sandbox.Entities.SandboxAuditLogEntry.html",
    "title": "Class SandboxAuditLogEntry | Strade Developer Documentation",
    "keywords": "Class SandboxAuditLogEntry Represents an entry in the audit log and records an administrative operation on the guild. Inheritance Object SandboxEntity < Snowflake , AuditLogEntryModel > SandboxAuditLogEntry Implements IUpdateable < AuditLogEntryModel > Inherited Members SandboxEntity<Snowflake, AuditLogEntryModel>.Exists SandboxEntity<Snowflake, AuditLogEntryModel>.Model SandboxEntity<Snowflake, AuditLogEntryModel>.Sandbox SandboxEntity<Snowflake, AuditLogEntryModel>.Id SandboxEntity<Snowflake, AuditLogEntryModel>.Delete() SandboxEntity<Snowflake, AuditLogEntryModel>.IUpdateable<AuditLogEntryModel>.Update(AuditLogEntryModel) SandboxEntity<Snowflake, AuditLogEntryModel>.EmitUpdate() SandboxEntity<Snowflake, AuditLogEntryModel>.TryDelete() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Entities Assembly : Strade.Sandbox.dll Syntax public sealed class SandboxAuditLogEntry : SandboxEntity<Snowflake, AuditLogEntryModel>, IUpdateable<AuditLogEntryModel> Remarks See https://discord.com/developers/docs/resources/audit-log#audit-log-entry-object for more details. Constructors | Improve this Doc View Source SandboxAuditLogEntry(SandboxEnvironment, AuditLogEntryModel) Declaration public SandboxAuditLogEntry(SandboxEnvironment sandbox, AuditLogEntryModel model) Parameters Type Name Description SandboxEnvironment sandbox AuditLogEntryModel model Properties | Improve this Doc View Source ActionType Gets the action type of the entry. Declaration public AuditLogActionType ActionType { get; } Property Value Type Description AuditLogActionType the action type of the entry. | Improve this Doc View Source Changes Gets a read-only list of the changes that this entry represents. Declaration public IReadOnlyList<AuditLogChange> Changes { get; } Property Value Type Description IReadOnlyList < AuditLogChange > a read-only list of the changes that this entry represents. | Improve this Doc View Source CreatedAt Gets the UTC time when the entry was created. Declaration public DateTimeOffset CreatedAt { get; } Property Value Type Description DateTimeOffset the UTC time when the entry was created. | Improve this Doc View Source Options Gets additional options included within the entry; or null if no additional options are included within the entry. Declaration public AuditLogEntryOptionsModel Options { get; } Property Value Type Description AuditLogEntryOptionsModel additional options included within the entry; or null if no additional options are included within the entry. | Improve this Doc View Source Reason Gets the reason why the operation was made; or null if the initiator did not include an action. Declaration public string Reason { get; } Property Value Type Description String the reason why the operation was made; or null if the initiator did not include an action. Remarks You can set the reason for client actions using the Reason property. | Improve this Doc View Source TargetId Gets the snowflake identifier of the entity that audit log entry refers to. Declaration public Snowflake? TargetId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the entity that audit log entry refers to. | Improve this Doc View Source User Gets the user that made the action. Declaration public SandboxUser User { get; } Property Value Type Description SandboxUser the user that made the action. Methods | Improve this Doc View Source EmitUpdate() Declaration protected override void EmitUpdate() Overrides Strade.Sandbox.Entities.SandboxEntity<Strade.Entities.Snowflake, Strade.Models.AuditLogEntryModel>.EmitUpdate() | Improve this Doc View Source TryDelete() Declaration protected override bool TryDelete() Returns Type Description Boolean Overrides Strade.Sandbox.Entities.SandboxEntity<Strade.Entities.Snowflake, Strade.Models.AuditLogEntryModel>.TryDelete() Implements IUpdateable<TModel>"
  },
  "api/Strade.Sandbox.Entities.SandboxBan.html": {
    "href": "api/Strade.Sandbox.Entities.SandboxBan.html",
    "title": "Class SandboxBan | Strade Developer Documentation",
    "keywords": "Class SandboxBan Inheritance Object SandboxEntity < Snowflake , BanModel > SandboxBan Implements IUpdateable < BanModel > Inherited Members SandboxEntity<Snowflake, BanModel>.Exists SandboxEntity<Snowflake, BanModel>.Model SandboxEntity<Snowflake, BanModel>.Sandbox SandboxEntity<Snowflake, BanModel>.Id SandboxEntity<Snowflake, BanModel>.Delete() SandboxEntity<Snowflake, BanModel>.IUpdateable<BanModel>.Update(BanModel) SandboxEntity<Snowflake, BanModel>.EmitUpdate() SandboxEntity<Snowflake, BanModel>.TryDelete() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Entities Assembly : Strade.Sandbox.dll Syntax public sealed class SandboxBan : SandboxEntity<Snowflake, BanModel>, IUpdateable<BanModel> Constructors | Improve this Doc View Source SandboxBan(SandboxEnvironment, BanModel, SandboxGuild) Declaration public SandboxBan(SandboxEnvironment sandbox, BanModel model, SandboxGuild guild) Parameters Type Name Description SandboxEnvironment sandbox BanModel model SandboxGuild guild Properties | Improve this Doc View Source Guild Declaration public SandboxGuild Guild { get; } Property Value Type Description SandboxGuild Methods | Improve this Doc View Source EmitUpdate() Declaration protected override void EmitUpdate() Overrides Strade.Sandbox.Entities.SandboxEntity<Strade.Entities.Snowflake, Strade.Models.BanModel>.EmitUpdate() | Improve this Doc View Source TryDelete() Declaration protected override bool TryDelete() Returns Type Description Boolean Overrides Strade.Sandbox.Entities.SandboxEntity<Strade.Entities.Snowflake, Strade.Models.BanModel>.TryDelete() Implements IUpdateable<TModel>"
  },
  "api/Strade.Sandbox.Entities.SandboxCategory.html": {
    "href": "api/Strade.Sandbox.Entities.SandboxCategory.html",
    "title": "Class SandboxCategory | Strade Developer Documentation",
    "keywords": "Class SandboxCategory Inheritance Object SandboxEntity < Snowflake , ChannelModel > SandboxChannel SandboxGuildChannel SandboxCategory Implements IUpdateable < ChannelModel > Inherited Members SandboxGuildChannel.Guild SandboxGuildChannel.GuildId SandboxGuildChannel.Name SandboxGuildChannel.Overwrites SandboxGuildChannel.Position SandboxGuildChannel.DeleteChannelOverwrite(OperationContext, SandboxMember) SandboxGuildChannel.DeleteChannelOverwrite(OperationContext, SandboxRole) SandboxGuildChannel.EditPermissions(OperationContext, SandboxMember, PermissionSet, PermissionSet) SandboxGuildChannel.EditPermissions(OperationContext, SandboxRole, PermissionSet, PermissionSet) SandboxGuildChannel.EmitUpdate() SandboxChannel.FollowedChannels SandboxChannel.Messages SandboxChannel.Create(SandboxEnvironment, ChannelModel) SandboxChannel.SendMessage(SandboxUser, MessageCreationProperties) SandboxChannel.SendMessage(UserModel, MessageCreationProperties) SandboxChannel.TryDelete() SandboxEntity<Snowflake, ChannelModel>.Exists SandboxEntity<Snowflake, ChannelModel>.Model SandboxEntity<Snowflake, ChannelModel>.Sandbox SandboxEntity<Snowflake, ChannelModel>.Id SandboxEntity<Snowflake, ChannelModel>.Delete() SandboxEntity<Snowflake, ChannelModel>.IUpdateable<ChannelModel>.Update(ChannelModel) SandboxEntity<Snowflake, ChannelModel>.EmitUpdate() SandboxEntity<Snowflake, ChannelModel>.TryDelete() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Entities Assembly : Strade.Sandbox.dll Syntax public sealed class SandboxCategory : SandboxGuildChannel, IUpdateable<ChannelModel> Constructors | Improve this Doc View Source SandboxCategory(SandboxEnvironment, ChannelModel) Declaration public SandboxCategory(SandboxEnvironment sandbox, ChannelModel model) Parameters Type Name Description SandboxEnvironment sandbox ChannelModel model Properties | Improve this Doc View Source Type Declaration public override ChannelType Type { get; } Property Value Type Description ChannelType Overrides SandboxChannel.Type Implements IUpdateable<TModel>"
  },
  "api/Strade.Sandbox.Entities.SandboxChannel.html": {
    "href": "api/Strade.Sandbox.Entities.SandboxChannel.html",
    "title": "Class SandboxChannel | Strade Developer Documentation",
    "keywords": "Class SandboxChannel Inheritance Object SandboxEntity < Snowflake , ChannelModel > SandboxChannel SandboxGuildChannel Implements IUpdateable < ChannelModel > Inherited Members SandboxEntity<Snowflake, ChannelModel>.Exists SandboxEntity<Snowflake, ChannelModel>.Model SandboxEntity<Snowflake, ChannelModel>.Sandbox SandboxEntity<Snowflake, ChannelModel>.Id SandboxEntity<Snowflake, ChannelModel>.Delete() SandboxEntity<Snowflake, ChannelModel>.IUpdateable<ChannelModel>.Update(ChannelModel) SandboxEntity<Snowflake, ChannelModel>.EmitUpdate() SandboxEntity<Snowflake, ChannelModel>.TryDelete() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Entities Assembly : Strade.Sandbox.dll Syntax public abstract class SandboxChannel : SandboxEntity<Snowflake, ChannelModel>, IUpdateable<ChannelModel> Constructors | Improve this Doc View Source SandboxChannel(SandboxEnvironment, ChannelModel) Declaration protected SandboxChannel(SandboxEnvironment sandbox, ChannelModel model) Parameters Type Name Description SandboxEnvironment sandbox ChannelModel model Properties | Improve this Doc View Source FollowedChannels Declaration public Dictionary<SandboxChannel, SandboxWebhook> FollowedChannels { get; } Property Value Type Description Dictionary < SandboxChannel , SandboxWebhook > | Improve this Doc View Source Messages Declaration public CrudDictionary<Snowflake, MessageModel, SandboxMessage> Messages { get; } Property Value Type Description CrudDictionary < Snowflake , MessageModel , SandboxMessage > | Improve this Doc View Source Name Gets the channel name. Declaration public string Name { get; } Property Value Type Description String the channel name. | Improve this Doc View Source Type Gets the type of the channel. Declaration public abstract ChannelType Type { get; } Property Value Type Description ChannelType the type of the channel. Methods | Improve this Doc View Source Create(SandboxEnvironment, ChannelModel) Declaration public static SandboxChannel Create(SandboxEnvironment sandbox, ChannelModel model) Parameters Type Name Description SandboxEnvironment sandbox ChannelModel model Returns Type Description SandboxChannel | Improve this Doc View Source SendMessage(UserModel, MessageCreationProperties) Declaration public SandboxMessage SendMessage(UserModel author, MessageCreationProperties properties) Parameters Type Name Description UserModel author MessageCreationProperties properties Returns Type Description SandboxMessage | Improve this Doc View Source SendMessage(SandboxUser, MessageCreationProperties) Declaration public SandboxMessage SendMessage(SandboxUser author, MessageCreationProperties properties) Parameters Type Name Description SandboxUser author MessageCreationProperties properties Returns Type Description SandboxMessage | Improve this Doc View Source TryDelete() Declaration protected override bool TryDelete() Returns Type Description Boolean Overrides Strade.Sandbox.Entities.SandboxEntity<Strade.Entities.Snowflake, Strade.Models.ChannelModel>.TryDelete() Implements IUpdateable<TModel>"
  },
  "api/Strade.Sandbox.Entities.SandboxEmote.html": {
    "href": "api/Strade.Sandbox.Entities.SandboxEmote.html",
    "title": "Class SandboxEmote | Strade Developer Documentation",
    "keywords": "Class SandboxEmote Inheritance Object SandboxEntity < Snowflake , EmoteModel > SandboxEmote Implements IUpdateable < EmoteModel > Inherited Members SandboxEntity<Snowflake, EmoteModel>.Exists SandboxEntity<Snowflake, EmoteModel>.Model SandboxEntity<Snowflake, EmoteModel>.Sandbox SandboxEntity<Snowflake, EmoteModel>.Id SandboxEntity<Snowflake, EmoteModel>.Delete() SandboxEntity<Snowflake, EmoteModel>.IUpdateable<EmoteModel>.Update(EmoteModel) SandboxEntity<Snowflake, EmoteModel>.EmitUpdate() SandboxEntity<Snowflake, EmoteModel>.TryDelete() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Entities Assembly : Strade.Sandbox.dll Syntax public sealed class SandboxEmote : SandboxEntity<Snowflake, EmoteModel>, IUpdateable<EmoteModel> Constructors | Improve this Doc View Source SandboxEmote(SandboxEnvironment, EmoteModel, SandboxGuild) Declaration public SandboxEmote(SandboxEnvironment sandbox, EmoteModel model, SandboxGuild guild) Parameters Type Name Description SandboxEnvironment sandbox EmoteModel model SandboxGuild guild Properties | Improve this Doc View Source Guild Declaration public SandboxGuild Guild { get; } Property Value Type Description SandboxGuild Methods | Improve this Doc View Source EmitUpdate() Declaration protected override void EmitUpdate() Overrides Strade.Sandbox.Entities.SandboxEntity<Strade.Entities.Snowflake, Strade.Models.EmoteModel>.EmitUpdate() | Improve this Doc View Source TryDelete() Declaration protected override bool TryDelete() Returns Type Description Boolean Overrides Strade.Sandbox.Entities.SandboxEntity<Strade.Entities.Snowflake, Strade.Models.EmoteModel>.TryDelete() Implements IUpdateable<TModel>"
  },
  "api/Strade.Sandbox.Entities.SandboxEntity-2.html": {
    "href": "api/Strade.Sandbox.Entities.SandboxEntity-2.html",
    "title": "Class SandboxEntity<TId, TModel> | Strade Developer Documentation",
    "keywords": "Class SandboxEntity<TId, TModel> Inheritance Object SandboxEntity<TId, TModel> SandboxAuditLogEntry SandboxBan SandboxChannel SandboxEmote SandboxGuild SandboxIntegration SandboxInvite SandboxMember SandboxMessage SandboxRole SandboxUser SandboxWebhook Implements IUpdateable <TModel> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Entities Assembly : Strade.Sandbox.dll Syntax public abstract class SandboxEntity<TId, TModel> : IUpdateable<TModel> where TModel : class, IIdentifiable<TId>, new() Type Parameters Name Description TId TModel Constructors | Improve this Doc View Source SandboxEntity(SandboxEnvironment, TModel) Initializes a new instance of the SandboxEntity<TId, TModel> class. Declaration protected SandboxEntity(SandboxEnvironment sandbox, TModel model) Parameters Type Name Description SandboxEnvironment sandbox the sandbox the entity is from. TModel model the model that stores the raw entity data. Exceptions Type Condition ArgumentNullException thrown if the specified sandbox is null . ArgumentNullException thrown if the specified model is null . Properties | Improve this Doc View Source Exists Gets a value indicating whether the actual entity still exists. Declaration public bool Exists { get; } Property Value Type Description Boolean a value indicating whether the actual entity still exists. | Improve this Doc View Source Id Gets the unique identifier for the entity. Declaration public TId Id { get; } Property Value Type Description TId the unique identifier for the entity. Remarks The identifier is unique for the entity type and the environment. | Improve this Doc View Source Model Gets the model that stores the raw entity data. Declaration public TModel Model { get; } Property Value Type Description TModel the model that stores the raw entity data. Exceptions Type Condition InvalidOperationException thrown if the entity no longer exists. | Improve this Doc View Source Sandbox Gets the sandbox the entity is from. Declaration public SandboxEnvironment Sandbox { get; } Property Value Type Description SandboxEnvironment the sandbox the entity is from. Methods | Improve this Doc View Source Delete() Deletes the entity. Declaration public void Delete() Exceptions Type Condition InvalidOperationException thrown if the entity is already is deleted. | Improve this Doc View Source EmitUpdate() Declaration protected abstract void EmitUpdate() | Improve this Doc View Source TryDelete() Tries to delete the entity. Declaration protected abstract bool TryDelete() Returns Type Description Boolean true , if the entity could be deleted, otherwise false . Explicit Interface Implementations | Improve this Doc View Source IUpdateable<TModel>.Update(TModel) Declaration void IUpdateable<TModel>.Update(TModel model) Parameters Type Name Description TModel model Implements IUpdateable<TModel>"
  },
  "api/Strade.Sandbox.Entities.SandboxGuild.html": {
    "href": "api/Strade.Sandbox.Entities.SandboxGuild.html",
    "title": "Class SandboxGuild | Strade Developer Documentation",
    "keywords": "Class SandboxGuild Inheritance Object SandboxEntity < Snowflake , GuildModel > SandboxGuild Implements IUpdateable < GuildModel > Inherited Members SandboxEntity<Snowflake, GuildModel>.Exists SandboxEntity<Snowflake, GuildModel>.Model SandboxEntity<Snowflake, GuildModel>.Sandbox SandboxEntity<Snowflake, GuildModel>.Id SandboxEntity<Snowflake, GuildModel>.Delete() SandboxEntity<Snowflake, GuildModel>.IUpdateable<GuildModel>.Update(GuildModel) SandboxEntity<Snowflake, GuildModel>.EmitUpdate() SandboxEntity<Snowflake, GuildModel>.TryDelete() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Entities Assembly : Strade.Sandbox.dll Syntax public sealed class SandboxGuild : SandboxEntity<Snowflake, GuildModel>, IUpdateable<GuildModel> Constructors | Improve this Doc View Source SandboxGuild(SandboxEnvironment, GuildModel) Declaration public SandboxGuild(SandboxEnvironment sandbox, GuildModel model) Parameters Type Name Description SandboxEnvironment sandbox GuildModel model Properties | Improve this Doc View Source AfkChannel Gets the AFK channel of the guild; or null if there is no explicit AFK channel. Declaration public SandboxChannel AfkChannel { get; } Property Value Type Description SandboxChannel the AFK channel of the guild; or null if there is no explicit AFK channel. | Improve this Doc View Source AfkChannelId Gets the snowflake identifier of the guild's AFK channel; or null if the guild has no assigned AFK channel. Declaration public Snowflake? AfkChannelId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the guild's AFK channel; or null if the guild has no assigned AFK channel. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. | Improve this Doc View Source AfkTimeout Gets the guild's AFK timeout when members are moved into the channel specified by AfkChannelId . Declaration public TimeSpan? AfkTimeout { get; } Property Value Type Description Nullable < TimeSpan > the guild's AFK timeout when members are moved into the channel specified by AfkChannelId in seconds. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. | Improve this Doc View Source ApplicationId Gets the snowflake identifier of the application that has created the guild; or null if the guild was not created by an application. Declaration public Snowflake? ApplicationId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the guild's AFK channel; or null if the guild has no assigned AFK channel. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also OwnerId | Improve this Doc View Source AuditLog Declaration public SandboxAuditLog AuditLog { get; } Property Value Type Description SandboxAuditLog | Improve this Doc View Source BannerHash Gets a String that contains the hash of the banner image of the guild; or null if the guild has no banner. Declaration public string BannerHash { get; } Property Value Type Description String a String that contains the hash of the banner image of the guild; or null if the guild has no banner. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. | Improve this Doc View Source BannerUrl Gets the URI of the banner of the guild; or null if the guild has no banner. Declaration public Uri BannerUrl { get; } Property Value Type Description Uri the URI of the banner of the guild; or null if the guild has no banner. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. | Improve this Doc View Source Bans Declaration public CrudDictionary<Snowflake, BanModel, SandboxBan> Bans { get; } Property Value Type Description CrudDictionary < Snowflake , BanModel , SandboxBan > | Improve this Doc View Source BoostCount Gets the number of Nitro boosts made on this guild. Declaration public int BoostCount { get; } Property Value Type Description Int32 the number of Nitro boosts made on this guild. Remarks If the guild is unavailable ( IsUnavailable ) then 0 is returned. | Improve this Doc View Source BoostTier Gets the guild's boost tier indicating what premium features this guild has. Declaration public GuildBoostTier BoostTier { get; } Property Value Type Description GuildBoostTier the guild's boost tier indicating what premium features this guild has. Remarks If the guild is unavailable ( IsUnavailable ) then None is returned. | Improve this Doc View Source CanHaveAnimatedIcon Gets a value indicating whether the guild has the AnimatedIcon feature. Declaration public bool CanHaveAnimatedIcon { get; } Property Value Type Description Boolean a value indicating whether the guild has the AnimatedIcon feature. See Also HasFeature(String) | Improve this Doc View Source CanHaveBanner Gets a value indicating whether the guild has the Banner feature. Declaration public bool CanHaveBanner { get; } Property Value Type Description Boolean a value indicating whether the guild has the Banner feature. See Also HasFeature(String) | Improve this Doc View Source CanHaveVanityUrl Gets a value indicating whether the guild has the VanityUrl feature. Declaration public bool CanHaveVanityUrl { get; } Property Value Type Description Boolean a value indicating whether the guild has the VanityUrl feature. See Also HasFeature(String) | Improve this Doc View Source DefaultMessageNotificationLevel Gets the default message notification level for this guild. Declaration public MessageNotificationLevel DefaultMessageNotificationLevel { get; } Property Value Type Description MessageNotificationLevel the default message notification level for this guild. Remarks If the guild is unavailable ( IsUnavailable ) then AllMessages is returned. | Improve this Doc View Source Description Gets the guild's description; or null if the guild has no description. Declaration public string Description { get; } Property Value Type Description String the guild's description; or null if the guild has no description. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. | Improve this Doc View Source DiscoverySplashHash Gets a String that contains the hash of the discovery splash image of the guild; or null if the guild has no discovery splash. Declaration public string DiscoverySplashHash { get; } Property Value Type Description String a String that contains the hash of the discovery splash image of the guild; or null if the guild has discovery splash. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also BuildDiscoverySplashUrl(ImageFormat, Nullable<Int32>) DiscoverySplashUrl HasDiscoverySplash | Improve this Doc View Source DiscoverySplashUrl Gets the URI for the discovery splash image of the guild; or null if the guild has no banner. Declaration public Uri DiscoverySplashUrl { get; } Property Value Type Description Uri the URI for the discovery splash of the guild; or null if the guild has no discovery splash. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also BuildBannerUrl(ImageFormat, Nullable<Int32>) DiscoverySplashHash HasDiscoverySplash | Improve this Doc View Source DownloadedMemberCount Gets the number of downloaded members from this guild. Declaration public int DownloadedMemberCount { get; } Property Value Type Description Int32 the number of downloaded members from this guild. Remarks If the guild is unavailable ( IsUnavailable ) then 0 is returned. | Improve this Doc View Source Emotes Declaration public CrudDictionary<Snowflake, EmoteModel, SandboxEmote> Emotes { get; } Property Value Type Description CrudDictionary < Snowflake , EmoteModel , SandboxEmote > | Improve this Doc View Source EveryoneRole Gets the @everyone -Role of the guild. Declaration public SandboxRole EveryoneRole { get; } Property Value Type Description SandboxRole the @everyone -Role of the guild. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. | Improve this Doc View Source ExplicitContentFilterLevel Gets the explicit content filter level enabled in the guild. Declaration public ExplicitContentFilterLevel ExplicitContentFilterLevel { get; } Property Value Type Description ExplicitContentFilterLevel the explicit content filter level enabled in the guild. Remarks If the guild is unavailable ( IsUnavailable ) then Disabled is returned. | Improve this Doc View Source Features Gets a read-only list that contains the enabled features of this guild. Declaration public IReadOnlyList<string> Features { get; } Property Value Type Description IReadOnlyList < String > a read-only list that contains the enabled features of this guild. Remarks If the guild is unavailable ( IsUnavailable ) then an empty array ( Empty<T>() ) is returned. See Also HasFeature(String) | Improve this Doc View Source HasAfkChannel Gets a value indicating whether this guild has an assigned AFK channel. Declaration public bool HasAfkChannel { get; } Property Value Type Description Boolean a value indicating whether this guild has an assigned AFK channel. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. See Also AfkChannelId AfkTimeout | Improve this Doc View Source HasBanner Gets a value indicating whether this guild has a banner image. Declaration public bool HasBanner { get; } Property Value Type Description Boolean a value indicating whether this guild has a banner image. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. See Also BuildBannerUrl(ImageFormat, Nullable<Int32>) BannerUrl BannerHash | Improve this Doc View Source HasDiscoverySplash Gets a value indicating whether this guild has a discovery splash image. Declaration public bool HasDiscoverySplash { get; } Property Value Type Description Boolean a value indicating whether this guild has a discovery splash image. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. See Also BuildDiscoverySplashUrl(ImageFormat, Nullable<Int32>) DiscoverySplashUrl DiscoverySplashHash | Improve this Doc View Source HasPublicUpdatesChannel Gets a value indicating whether this guild has an assigned public updates channel. Declaration public bool HasPublicUpdatesChannel { get; } Property Value Type Description Boolean a value indicating whether this guild has an assigned public updates channel. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. See Also PublicUpdatesChannelId | Improve this Doc View Source HasRulesChannel Gets a value indicating whether this guild has an assigned rules channel. Declaration public bool HasRulesChannel { get; } Property Value Type Description Boolean a value indicating whether this guild has an assigned rules channel. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. See Also RulesChannelId | Improve this Doc View Source HasSplash Gets a value indicating whether this guild has a splash image. Declaration public bool HasSplash { get; } Property Value Type Description Boolean a value indicating whether this guild has a splash image. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. See Also BuildSplashUrl(ImageFormat, Nullable<Int32>) SplashUrl SplashHash | Improve this Doc View Source HasSystemChannel Gets a value indicating whether this guild has an assigned system channel. Declaration public bool HasSystemChannel { get; } Property Value Type Description Boolean a value indicating whether this guild has an assigned system channel. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. See Also SystemChannelId SystemChannelFlags | Improve this Doc View Source HasVipRegions Gets a value indicating whether the guild has the VipRegions feature. Declaration public bool HasVipRegions { get; } Property Value Type Description Boolean a value indicating whether the guild has the VipRegions feature. See Also HasFeature(String) | Improve this Doc View Source HasWidgetChannel Gets a value indicating whether this guild has an assigned widget channel. Declaration public bool HasWidgetChannel { get; } Property Value Type Description Boolean a value indicating whether this guild has an assigned widget channel. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. See Also WidgetChannelId IsWidgetEnabled | Improve this Doc View Source Integrations Declaration public CrudDictionary<Snowflake, GuildIntegrationModel, SandboxIntegration> Integrations { get; } Property Value Type Description CrudDictionary < Snowflake , GuildIntegrationModel , SandboxIntegration > | Improve this Doc View Source IsBoostMessageEnabled Gets a value indicating whether the boost message is enabled in the guild. Declaration public bool IsBoostMessageEnabled { get; } Property Value Type Description Boolean a value indicating whether the boost message is enabled in the guild. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. See Also SystemChannelFlags | Improve this Doc View Source IsCommerce Gets a value indicating whether the guild has the Commerce feature. Declaration public bool IsCommerce { get; } Property Value Type Description Boolean a value indicating whether the guild has the Commerce feature. See Also HasFeature(String) | Improve this Doc View Source IsCommunity Gets a value indicating whether the guild has the Community feature. Declaration public bool IsCommunity { get; } Property Value Type Description Boolean a value indicating whether the guild has the Community feature. See Also HasFeature(String) | Improve this Doc View Source IsDiscoverable Gets a value indicating whether the guild has the Discoverable feature. Declaration public bool IsDiscoverable { get; } Property Value Type Description Boolean a value indicating whether the guild has the Discoverable feature. See Also HasFeature(String) | Improve this Doc View Source IsPartnered Gets a value indicating whether the guild has the Partnered feature. Declaration public bool IsPartnered { get; } Property Value Type Description Boolean a value indicating whether the guild has the Partnered feature. See Also HasFeature(String) | Improve this Doc View Source IsRelayEnabled Gets a value indicating whether the guild has the RelayEnabled feature. Declaration public bool IsRelayEnabled { get; } Property Value Type Description Boolean a value indicating whether the guild has the RelayEnabled feature. See Also HasFeature(String) | Improve this Doc View Source IsRelayForced Gets a value indicating whether the guild has the ForceRelay feature. Declaration public bool IsRelayForced { get; } Property Value Type Description Boolean a value indicating whether the guild has the ForceRelay feature. See Also HasFeature(String) | Improve this Doc View Source IsUnavailable Gets a value indicating whether the guild is unavailable (e.g. due server outage, etc.). Declaration public bool IsUnavailable { get; } Property Value Type Description Boolean a value indicating whether the guild is unavailable (e.g. due server outage, etc.). | Improve this Doc View Source IsVerified Gets a value indicating whether the guild has the Verified feature. Declaration public bool IsVerified { get; } Property Value Type Description Boolean a value indicating whether the guild has the Verified feature. See Also HasFeature(String) | Improve this Doc View Source IsWelcomeMessageEnabled Gets a value indicating whether the welcome message is enabled in the guild. Declaration public bool IsWelcomeMessageEnabled { get; } Property Value Type Description Boolean a value indicating whether the welcome message is enabled in the guild. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. See Also SystemChannelFlags | Improve this Doc View Source IsWelcomeScreenEnabled Gets a value indicating whether the guild has the WelcomeScreenEnabled feature. Declaration public bool IsWelcomeScreenEnabled { get; } Property Value Type Description Boolean a value indicating whether the guild has the WelcomeScreenEnabled feature. See Also HasFeature(String) | Improve this Doc View Source IsWidgetEnabled Gets a value indicating whether the widget is enabled in this guild. Declaration public bool IsWidgetEnabled { get; } Property Value Type Description Boolean a value indicating whether the widget is enabled in this guild. Remarks If the guild is unavailable ( IsUnavailable ) then false is returned. See Also WidgetChannelId HasWidgetChannel | Improve this Doc View Source MaximumMembers Gets the maximum allowed member count for this guild. Declaration public int? MaximumMembers { get; } Property Value Type Description Nullable < Int32 > the maximum allowed member count for this guild. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. | Improve this Doc View Source MaximumPresences Gets the maximum number of presences returned for the guild. Declaration public int MaximumPresences { get; } Property Value Type Description Int32 the maximum number of presences returned for the guild. Remarks If the guild is unavailable ( IsUnavailable ) then 0 is returned. | Improve this Doc View Source MaximumVideoChannelUsers Gets the maximum number of concurrent video channel users in a voice channel for this guild. Declaration public int? MaximumVideoChannelUsers { get; } Property Value Type Description Nullable < Int32 > the maximum number of concurrent video channel users in a voice channel for this guild. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. | Improve this Doc View Source Members Declaration public CrudDictionary<Snowflake, MemberModel, SandboxMember> Members { get; } Property Value Type Description CrudDictionary < Snowflake , MemberModel , SandboxMember > | Improve this Doc View Source MultiFactorAuthenticationLevel Gets the multi-factor authentication level required for administrative operations for this guild. Declaration public MultiFactorAuthenticationLevel MultiFactorAuthenticationLevel { get; } Property Value Type Description MultiFactorAuthenticationLevel the multi-factor authentication level required for administrative operations for this guild. Remarks If MultiFactorAuthenticationLevel is Elevated then administrators on the server require 2-factor authentication on their account to execute administrative operations. If the guild is unavailable ( IsUnavailable ) then None is returned. | Improve this Doc View Source Name Gets the name of the guild. Declaration public string Name { get; } Property Value Type Description String the name of the guild. Remarks If the guild is unavailable ( IsUnavailable ) then an empty string ( Empty ) is returned. | Improve this Doc View Source OwnerId Gets the snowflake identifier of the guild owner. Declaration public Snowflake OwnerId { get; } Property Value Type Description Snowflake the snowflake identifier of the guild owner. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also ApplicationId | Improve this Doc View Source PreferredCulture Gets the preferred culture/locale ( CultureInfo ) for this guild; or null if no preferred culture is set. Declaration public CultureInfo PreferredCulture { get; } Property Value Type Description CultureInfo the preferred culture/locale ( CultureInfo ) for this guild; or null if no preferred culture is set. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. | Improve this Doc View Source PublicUpdatesChannel Gets the public updates channel of the guild; or null if not present. Declaration public SandboxChannel PublicUpdatesChannel { get; } Property Value Type Description SandboxChannel the public updates channel; or null if no public updates channel is set. See Also PublicUpdatesChannelId HasPublicUpdatesChannel | Improve this Doc View Source PublicUpdatesChannelId Gets the snowflake identifier of the assigned public updates channel of the guild; or null if no public updates channel is set. Declaration public Snowflake? PublicUpdatesChannelId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the assigned public updates channel of the guild; or null if no public updates channel is set. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also HasPublicUpdatesChannel | Improve this Doc View Source Roles Declaration public CrudDictionary<Snowflake, RoleModel, SandboxRole> Roles { get; } Property Value Type Description CrudDictionary < Snowflake , RoleModel , SandboxRole > | Improve this Doc View Source RulesChannel Gets the rules channel of the guild; or null if not present. Declaration public SandboxChannel RulesChannel { get; } Property Value Type Description SandboxChannel the rules channel; or null if no rules channel is set. See Also PublicUpdatesChannelId HasPublicUpdatesChannel | Improve this Doc View Source RulesChannelId Gets the snowflake identifier of the assigned rules channel of the guild; or null if no rules channel is set. Declaration public Snowflake? RulesChannelId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the assigned rules channel of the guild; or null if no rules channel is set. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also HasRulesChannel | Improve this Doc View Source SplashHash Gets the hash of the splash (if null , the entity has no splash). Declaration public string SplashHash { get; } Property Value Type Description String the hash of the splash (if null , the entity has no splash). Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also BuildSplashUrl(ImageFormat, Nullable<Int32>) SplashUrl | Improve this Doc View Source SplashUrl Gets the URL of the splash (if null , the entity has no splash). Declaration public Uri SplashUrl { get; } Property Value Type Description Uri the URL of the splash (if null , the entity has no splash). Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also BuildSplashUrl(ImageFormat, Nullable<Int32>) SplashHash | Improve this Doc View Source SystemChannel Gets the system channel of the guild; or null if not present. Declaration public SandboxChannel SystemChannel { get; } Property Value Type Description SandboxChannel the system channel; or null if no system channel is set. See Also PublicUpdatesChannelId HasPublicUpdatesChannel | Improve this Doc View Source SystemChannelFlags Gets a set of flags for the guild's system channel. Declaration public SystemChannelFlags SystemChannelFlags { get; } Property Value Type Description SystemChannelFlags a set of flags for the guild's system channel. Remarks If the guild is unavailable ( IsUnavailable ) then None is returned. See Also SystemChannelId HasSystemChannel IsWelcomeMessageEnabled IsBoostMessageEnabled | Improve this Doc View Source SystemChannelId Gets the snowflake identifier of the assigned system channel of the guild; or null if no system channel is set. Declaration public Snowflake? SystemChannelId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the assigned system channel of the guild; or null if no system channel is set. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also SystemChannelFlags HasSystemChannel | Improve this Doc View Source VanityCode Gets the guild's vanity invite code; or null if no vanity invite enabled is set for the guild. Declaration public string VanityCode { get; } Property Value Type Description String the guild's vanity invite code; or null if no vanity invite enabled is set for the guild. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also VanityUrl | Improve this Doc View Source VanityInvite Gets the vanity invite for the guild. Declaration public VanityInvite VanityInvite { get; } Property Value Type Description VanityInvite the vanity invite for the guild. | Improve this Doc View Source VanityUrl Gets the guild's vanity invite URL used to join the guild; or null if no vanity invite enabled is set for the guild. Declaration public Uri VanityUrl { get; } Property Value Type Description Uri the guild's vanity invite URL used to join the guild; or null if no vanity invite enabled is set for the guild. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also VanityCode | Improve this Doc View Source VerificationLevel Gets the verification level required for new members for the guild. Declaration public VerificationLevel VerificationLevel { get; } Property Value Type Description VerificationLevel the verification level required for new members for the guild. Remarks If the guild is unavailable ( IsUnavailable ) then None is returned. | Improve this Doc View Source VoiceRegion Gets the guild voice region. Declaration public VoiceRegion VoiceRegion { get; } Property Value Type Description VoiceRegion the voice region. See Also VoiceRegionId VoiceRegions | Improve this Doc View Source VoiceRegionId Gets the voice region identifier set for the guild. Declaration public string VoiceRegionId { get; } Property Value Type Description String the voice region identifier set for the guild. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. | Improve this Doc View Source VoiceRegions Gets a list of available voice regions for the guild. Declaration public IReadOnlyList<VoiceRegion> VoiceRegions { get; } Property Value Type Description IReadOnlyList < VoiceRegion > a task that represents the asynchronous operation. The task result is a list of available voice regions for the guild. See Also VoiceRegion | Improve this Doc View Source Webhooks Declaration public CrudDictionary<Snowflake, WebhookModel, SandboxWebhook> Webhooks { get; } Property Value Type Description CrudDictionary < Snowflake , WebhookModel , SandboxWebhook > | Improve this Doc View Source WidgetChannel Gets the widget channel of the guild; or null if not present. Declaration public SandboxGuildChannel WidgetChannel { get; } Property Value Type Description SandboxGuildChannel the channel. See Also WidgetChannelId IsWidgetEnabled HasWidgetChannel | Improve this Doc View Source WidgetChannelId Gets the snowflake identifier of the assigned widget channel of the guild; or null if no widget channel is set. Declaration public Snowflake? WidgetChannelId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the assigned widget channel of the guild; or null if no widget channel is set. Remarks If the guild is unavailable ( IsUnavailable ) then null is returned. See Also IsWidgetEnabled HasWidgetChannel Methods | Improve this Doc View Source AddCurrentUser(OperationContext, MemberCreationProperties) Declaration public SandboxMember AddCurrentUser(OperationContext context, MemberCreationProperties properties) Parameters Type Name Description OperationContext context MemberCreationProperties properties Returns Type Description SandboxMember | Improve this Doc View Source AddMember(OperationContext, Snowflake, MemberCreationProperties) Adds a member to the guild. Declaration public SandboxMember AddMember(OperationContext context, Snowflake userId, MemberCreationProperties properties) Parameters Type Name Description OperationContext context Snowflake userId the snowflake identifier of the user to add to the guild. MemberCreationProperties properties the properties for creating the member. Returns Type Description SandboxMember the member added to the guild. Exceptions Type Condition ArgumentNullException thrown if the specified properties are null . See Also AddMember(OperationContext, Snowflake, MemberCreationProperties) AddMember(OperationContext, SandboxUser, Action<MemberCreationProperties>) AddMember(OperationContext, SandboxUser, MemberCreationProperties) | Improve this Doc View Source AddMember(OperationContext, Snowflake, Action<MemberCreationProperties>) Adds a member to the guild. Declaration public SandboxMember AddMember(OperationContext context, Snowflake userId, Action<MemberCreationProperties> action) Parameters Type Name Description OperationContext context Snowflake userId the snowflake identifier of the user to add to the guild. Action < MemberCreationProperties > action the action used to configure the properties for creating the member. Returns Type Description SandboxMember the member added to the guild. Exceptions Type Condition ArgumentNullException thrown if the specified action is null . See Also AddMember(OperationContext, Snowflake, MemberCreationProperties) AddMember(OperationContext, SandboxUser, Action<MemberCreationProperties>) AddMember(OperationContext, SandboxUser, MemberCreationProperties) | Improve this Doc View Source AddMember(OperationContext, SandboxUser, MemberCreationProperties) Adds a member to the guild. Declaration public SandboxMember AddMember(OperationContext context, SandboxUser user, MemberCreationProperties properties) Parameters Type Name Description OperationContext context SandboxUser user the user to add to the guild. MemberCreationProperties properties the properties for creating the member. Returns Type Description SandboxMember a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified properties are null . See Also AddMember(OperationContext, Snowflake, Action<MemberCreationProperties>) AddMember(OperationContext, Snowflake, MemberCreationProperties) AddMember(OperationContext, SandboxUser, Action<MemberCreationProperties>) | Improve this Doc View Source AddMember(OperationContext, SandboxUser, Action<MemberCreationProperties>) Adds a member to the guild. Declaration public SandboxMember AddMember(OperationContext context, SandboxUser user, Action<MemberCreationProperties> action) Parameters Type Name Description OperationContext context SandboxUser user the user to add to the guild. Action < MemberCreationProperties > action the action used to configure the properties for creating the member. Returns Type Description SandboxMember the member added to the guild. Exceptions Type Condition ArgumentNullException thrown if the specified action is null . See Also AddMember(OperationContext, Snowflake, Action<MemberCreationProperties>) AddMember(OperationContext, Snowflake, MemberCreationProperties) AddMember(OperationContext, SandboxUser, MemberCreationProperties) | Improve this Doc View Source BeginPrune(OperationContext, BeginPruneProperties) Begins a guild prune. Declaration public PruneInformation? BeginPrune(OperationContext context, BeginPruneProperties properties = null) Parameters Type Name Description OperationContext context BeginPruneProperties properties the prune properties. Returns Type Description Nullable < PruneInformation > a task that represents the asynchronous operation. The task result is the guild prune information; or null if properties is null or ComputePruneCount is false . See Also BeginPrune(OperationContext, Action<BeginPruneProperties>) GetPruneInformation(Action<PruneProperties>) GetPruneInformation(PruneProperties) | Improve this Doc View Source BeginPrune(OperationContext, Action<BeginPruneProperties>) Begins a guild prune. Declaration public PruneInformation? BeginPrune(OperationContext context, Action<BeginPruneProperties> action) Parameters Type Name Description OperationContext context Action < BeginPruneProperties > action the action used to configure the prune properties. Returns Type Description Nullable < PruneInformation > a task that represents the asynchronous operation. The task result is the guild prune information; or if ComputePruneCount is false . Exceptions Type Condition ArgumentNullException thrown if the specified action is null . See Also BeginPrune(OperationContext, BeginPruneProperties) GetPruneInformation(Action<PruneProperties>) GetPruneInformation(PruneProperties) | Improve this Doc View Source BuildBannerUrl(ImageFormat, Nullable<Int32>) Builds the guild's banner URL. Declaration public Uri BuildBannerUrl(ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description ImageFormat format the format of the splash. Nullable < Int32 > size the banner size; if null then the default size is used. Returns Type Description Uri the banner URL; or null if the guild has no banner image. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified format is not specified in the ImageFormat enumeration. ArgumentOutOfRangeException thrown if the specified format is not supported. ArgumentOutOfRangeException thrown if the specified size is less than 16 pixels. ArgumentOutOfRangeException thrown if the specified size is greater than 2048 pixels. ArgumentOutOfRangeException thrown if the specified size is not a power of two. See Also BannerHash BannerUrl HasBanner | Improve this Doc View Source BuildDiscoverySplashUrl(ImageFormat, Nullable<Int32>) Builds the guild's discovery splash URL. Declaration public Uri BuildDiscoverySplashUrl(ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description ImageFormat format the format of the splash. Nullable < Int32 > size the discovery splash size; if null then the default size is used. Returns Type Description Uri the discovery splash URL; or null if the guild has no discovery splash image. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified format is not specified in the ImageFormat enumeration. ArgumentOutOfRangeException thrown if the specified format is not supported. ArgumentOutOfRangeException thrown if the specified size is less than 16 pixels. ArgumentOutOfRangeException thrown if the specified size is greater than 2048 pixels. ArgumentOutOfRangeException thrown if the specified size is not a power of two. See Also DiscoverySplashHash DiscoverySplashUrl HasDiscoverySplash | Improve this Doc View Source BuildSplashUrl(ImageFormat, Nullable<Int32>) Builds the guild's splash URL. Declaration public Uri BuildSplashUrl(ImageFormat format = ImageFormat.Png, int? size = default(int? )) Parameters Type Name Description ImageFormat format the format of the splash. Nullable < Int32 > size the splash size; if null then the default size is used. Returns Type Description Uri the splash URL; or null if the guild has no splash image. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified format is not specified in the ImageFormat enumeration. ArgumentOutOfRangeException thrown if the specified format is not supported. ArgumentOutOfRangeException thrown if the specified size is less than 16 pixels. ArgumentOutOfRangeException thrown if the specified size is greater than 2048 pixels. ArgumentOutOfRangeException thrown if the specified size is not a power of two. See Also SplashHash SplashUrl HasSplash | Improve this Doc View Source CreateEmoji(Actor, EmojiCreationProperties) Creates a new emoji. Declaration public GuildEmote CreateEmoji(Actor actor, EmojiCreationProperties properties) Parameters Type Name Description Actor actor EmojiCreationProperties properties the creation properties. Returns Type Description GuildEmote the created entity. Exceptions Type Condition ArgumentNullException thrown if the specified properties are null . See Also CreateEmoji(Actor, Action<EmojiCreationProperties>) | Improve this Doc View Source CreateEmoji(Actor, Action<EmojiCreationProperties>) Creates a new emoji. Declaration public GuildEmote CreateEmoji(Actor actor, Action<EmojiCreationProperties> action) Parameters Type Name Description Actor actor Action < EmojiCreationProperties > action the creation action. Returns Type Description GuildEmote the created entity. Exceptions Type Condition ArgumentNullException thrown if the specified action is null . See Also CreateEmoji(Actor, EmojiCreationProperties) | Improve this Doc View Source CreateIntegration(GuildIntegrationCreationProperties) Creates a new guild integration. Declaration public SandboxIntegration CreateIntegration(GuildIntegrationCreationProperties properties) Parameters Type Name Description GuildIntegrationCreationProperties properties the creation properties. Returns Type Description SandboxIntegration a task that represents the asynchronous operation. The task result is the created guild integration. Exceptions Type Condition ArgumentNullException thrown if the specified properties are null . See Also CreateIntegration(Action<GuildIntegrationCreationProperties>) | Improve this Doc View Source CreateIntegration(Action<GuildIntegrationCreationProperties>) Creates a new guild integration. Declaration public SandboxIntegration CreateIntegration(Action<GuildIntegrationCreationProperties> action) Parameters Type Name Description Action < GuildIntegrationCreationProperties > action the creation action. Returns Type Description SandboxIntegration the created guild integration. Exceptions Type Condition ArgumentNullException thrown if the specified action is null . See Also CreateIntegration(GuildIntegrationCreationProperties) | Improve this Doc View Source CreateRole(OperationContext, RoleCreationProperties) Creates a new role. Declaration public SandboxRole CreateRole(OperationContext context, RoleCreationProperties properties) Parameters Type Name Description OperationContext context RoleCreationProperties properties the creation properties. Returns Type Description SandboxRole the created entity. Exceptions Type Condition ArgumentNullException thrown if the specified properties are null . See Also CreateRole(OperationContext, Action<RoleCreationProperties>) | Improve this Doc View Source CreateRole(OperationContext, Action<RoleCreationProperties>) Creates a new role. Declaration public SandboxRole CreateRole(OperationContext context, Action<RoleCreationProperties> action) Parameters Type Name Description OperationContext context Action < RoleCreationProperties > action the creation action. Returns Type Description SandboxRole a task that represents the asynchronous operation. The task result is the created entity. Exceptions Type Condition ArgumentNullException thrown if the specified action is null . See Also CreateRole(OperationContext, RoleCreationProperties) | Improve this Doc View Source EmitUpdate() Declaration protected override void EmitUpdate() Overrides Strade.Sandbox.Entities.SandboxEntity<Strade.Entities.Snowflake, Strade.Models.GuildModel>.EmitUpdate() | Improve this Doc View Source GetBan(Snowflake) Gets the ban for the user specified by userId . Declaration public SandboxBan GetBan(Snowflake userId) Parameters Type Name Description Snowflake userId the snowflake identifier of the user to get the ban for. Returns Type Description SandboxBan the ban; or null if the user is not banned. | Improve this Doc View Source GetBan(SandboxUser) Gets the ban for the specified user . Declaration public SandboxBan GetBan(SandboxUser user) Parameters Type Name Description SandboxUser user the user to get the ban for. Returns Type Description SandboxBan a task that represents the asynchronous operation. The task result is the ban; or null if the user is not banned. Exceptions Type Condition ArgumentNullException thrown if the specified user is null . See Also GetBan(Snowflake) | Improve this Doc View Source GetPruneInformation(PruneProperties) Gets the prune information for the guild. Declaration public PruneInformation GetPruneInformation(PruneProperties properties = null) Parameters Type Name Description PruneProperties properties the prune properties. Returns Type Description PruneInformation a task that represents the asynchronous operation. The task result is the prune information. See Also GetPruneInformation(Action<PruneProperties>) BeginPrune(OperationContext, Action<BeginPruneProperties>) BeginPrune(OperationContext, BeginPruneProperties) | Improve this Doc View Source GetPruneInformation(Action<PruneProperties>) Gets the prune information for the guild. Declaration public PruneInformation GetPruneInformation(Action<PruneProperties> action) Parameters Type Name Description Action < PruneProperties > action the action used to configure the prune properties. Returns Type Description PruneInformation the prune information. Exceptions Type Condition ArgumentNullException thrown if the specified action is null . See Also GetPruneInformation(PruneProperties) BeginPrune(OperationContext, Action<BeginPruneProperties>) BeginPrune(OperationContext, BeginPruneProperties) | Improve this Doc View Source HasFeature(String) Gets a value indicating whether the guild has the specified feature . Declaration public bool HasFeature(string feature) Parameters Type Name Description String feature the feature to check for. Returns Type Description Boolean a value indicating whether the guild has the specified feature . See Also Features | Improve this Doc View Source Leave(OperationContext) Leaves the guild. Declaration public void Leave(OperationContext context) Parameters Type Name Description OperationContext context | Improve this Doc View Source ModifyNickname(OperationContext, String) Modifies the current user's nickname on the guild. Declaration public void ModifyNickname(OperationContext context, string nickname) Parameters Type Name Description OperationContext context String nickname the new nickname for the user. Exceptions Type Condition ArgumentNullException thrown if the specified nickname is null . ArgumentException thrown if the specified nickname is invalid (see IsValid(String) ). | Improve this Doc View Source ModifyWidget(GuildWidgetModifyProperties) Modifies the guild embed. Declaration public void ModifyWidget(GuildWidgetModifyProperties properties) Parameters Type Name Description GuildWidgetModifyProperties properties the properties to use to modify the guild embed. Exceptions Type Condition ArgumentNullException thrown if the specified properties are null . See Also ModifyWidget(Action<GuildWidgetModifyProperties>) | Improve this Doc View Source ModifyWidget(Action<GuildWidgetModifyProperties>) Modifies the guild embed. Declaration public void ModifyWidget(Action<GuildWidgetModifyProperties> action) Parameters Type Name Description Action < GuildWidgetModifyProperties > action the action used to configure the properties to use to modify the guild embed. Exceptions Type Condition ArgumentNullException thrown if the specified action is null . See Also ModifyWidget(GuildWidgetModifyProperties) | Improve this Doc View Source TryDelete() Declaration protected override bool TryDelete() Returns Type Description Boolean Overrides Strade.Sandbox.Entities.SandboxEntity<Strade.Entities.Snowflake, Strade.Models.GuildModel>.TryDelete() | Improve this Doc View Source Unban(OperationContext, Snowflake) Unbans the user specified by the specified userId . Declaration public void Unban(OperationContext context, Snowflake userId) Parameters Type Name Description OperationContext context Snowflake userId the snowflake identifier of the user to unban. See Also Unban(OperationContext, SandboxUser) | Improve this Doc View Source Unban(OperationContext, SandboxUser) Unbans the specified user . Declaration public void Unban(OperationContext context, SandboxUser user) Parameters Type Name Description OperationContext context SandboxUser user the user to unban. Exceptions Type Condition ArgumentNullException thrown if the specified user is null . See Also Unban(OperationContext, Snowflake) | Improve this Doc View Source UpdateChannelPositions(IReadOnlyList<ChannelPositionUpdate>) Updates channel positions in the guild. Declaration public void UpdateChannelPositions(IReadOnlyList<ChannelPositionUpdate> positionUpdates) Parameters Type Name Description IReadOnlyList < ChannelPositionUpdate > positionUpdates a list of position updates to do. Exceptions Type Condition ArgumentNullException thrown if the specified positionUpdates list is null . InvalidOperationException thrown if less than two position updates are specified. | Improve this Doc View Source UpdateRolePositions(IReadOnlyList<RolePositionUpdate>) Updates role positions in the guild. Declaration public void UpdateRolePositions(IReadOnlyList<RolePositionUpdate> positionUpdates) Parameters Type Name Description IReadOnlyList < RolePositionUpdate > positionUpdates a list of position updates to do. Exceptions Type Condition ArgumentNullException thrown if the specified positionUpdates list is null . Implements IUpdateable<TModel>"
  },
  "api/Strade.Sandbox.Entities.SandboxGuildChannel.html": {
    "href": "api/Strade.Sandbox.Entities.SandboxGuildChannel.html",
    "title": "Class SandboxGuildChannel | Strade Developer Documentation",
    "keywords": "Class SandboxGuildChannel Inheritance Object SandboxEntity < Snowflake , ChannelModel > SandboxChannel SandboxGuildChannel SandboxCategory SandboxNestedChannel Implements IUpdateable < ChannelModel > Inherited Members SandboxChannel.FollowedChannels SandboxChannel.Messages SandboxChannel.Type SandboxChannel.Create(SandboxEnvironment, ChannelModel) SandboxChannel.SendMessage(SandboxUser, MessageCreationProperties) SandboxChannel.SendMessage(UserModel, MessageCreationProperties) SandboxChannel.TryDelete() SandboxEntity<Snowflake, ChannelModel>.Exists SandboxEntity<Snowflake, ChannelModel>.Model SandboxEntity<Snowflake, ChannelModel>.Sandbox SandboxEntity<Snowflake, ChannelModel>.Id SandboxEntity<Snowflake, ChannelModel>.Delete() SandboxEntity<Snowflake, ChannelModel>.IUpdateable<ChannelModel>.Update(ChannelModel) SandboxEntity<Snowflake, ChannelModel>.EmitUpdate() SandboxEntity<Snowflake, ChannelModel>.TryDelete() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Entities Assembly : Strade.Sandbox.dll Syntax public abstract class SandboxGuildChannel : SandboxChannel, IUpdateable<ChannelModel> Constructors | Improve this Doc View Source SandboxGuildChannel(SandboxEnvironment, ChannelModel) Declaration protected SandboxGuildChannel(SandboxEnvironment sandbox, ChannelModel model) Parameters Type Name Description SandboxEnvironment sandbox ChannelModel model Properties | Improve this Doc View Source Guild Declaration public SandboxGuild Guild { get; } Property Value Type Description SandboxGuild | Improve this Doc View Source GuildId Gets the snowflake identifier of the associated guild. Declaration public Snowflake GuildId { get; } Property Value Type Description Snowflake the snowflake identifier of the associated guild. | Improve this Doc View Source Name Gets the channel name. Declaration public string Name { get; } Property Value Type Description String the channel name. | Improve this Doc View Source Overwrites Gets the explicit channel permission overwrites. Declaration public IReadOnlyList<PermissionOverwrite> Overwrites { get; } Property Value Type Description IReadOnlyList < PermissionOverwrite > the explicit channel permission overwrites. | Improve this Doc View Source Position Gets the channel position / order (ascending). Declaration public int Position { get; } Property Value Type Description Int32 the channel position / order (ascending). Methods | Improve this Doc View Source DeleteChannelOverwrite(OperationContext, SandboxMember) Deletes the channel overwrite for the specified member . Declaration public void DeleteChannelOverwrite(OperationContext context, SandboxMember member) Parameters Type Name Description OperationContext context a context representing the operation. SandboxMember member the member to remove the permission overwrite for. Exceptions Type Condition ArgumentNullException thrown if the specified member is null . | Improve this Doc View Source DeleteChannelOverwrite(OperationContext, SandboxRole) Deletes the channel overwrite for the specified role . Declaration public void DeleteChannelOverwrite(OperationContext context, SandboxRole role) Parameters Type Name Description OperationContext context a context representing the operation. SandboxRole role the role to remove the permission overwrite for. Exceptions Type Condition ArgumentNullException thrown if the specified role is null . | Improve this Doc View Source EditPermissions(OperationContext, SandboxMember, PermissionSet, PermissionSet) Edits the permissions (overwrite) for the specified member . Declaration public void EditPermissions(OperationContext context, SandboxMember member, PermissionSet allowedPermissions, PermissionSet deniedPermissions) Parameters Type Name Description OperationContext context a context representing the operation. SandboxMember member the member to update the permissions for. PermissionSet allowedPermissions a set of permissions allowed for the specified member . PermissionSet deniedPermissions a set of permissions denied for the specified member . Exceptions Type Condition ArgumentNullException thrown if the specified member is null . | Improve this Doc View Source EditPermissions(OperationContext, SandboxRole, PermissionSet, PermissionSet) Edits the permissions (overwrite) for the specified role . Declaration public void EditPermissions(OperationContext context, SandboxRole role, PermissionSet allowedPermissions, PermissionSet deniedPermissions) Parameters Type Name Description OperationContext context a context representing the operation. SandboxRole role the role to update the permissions for. PermissionSet allowedPermissions a set of permissions allowed for the specified role . PermissionSet deniedPermissions a set of permissions denied for the specified role . Exceptions Type Condition ArgumentNullException thrown if the specified role is null . | Improve this Doc View Source EmitUpdate() Declaration protected override void EmitUpdate() Overrides Strade.Sandbox.Entities.SandboxEntity<Strade.Entities.Snowflake, Strade.Models.ChannelModel>.EmitUpdate() Implements IUpdateable<TModel>"
  },
  "api/Strade.Sandbox.Entities.SandboxIntegration.html": {
    "href": "api/Strade.Sandbox.Entities.SandboxIntegration.html",
    "title": "Class SandboxIntegration | Strade Developer Documentation",
    "keywords": "Class SandboxIntegration Inheritance Object SandboxEntity < Snowflake , GuildIntegrationModel > SandboxIntegration Implements IUpdateable < GuildIntegrationModel > Inherited Members SandboxEntity<Snowflake, GuildIntegrationModel>.Exists SandboxEntity<Snowflake, GuildIntegrationModel>.Model SandboxEntity<Snowflake, GuildIntegrationModel>.Sandbox SandboxEntity<Snowflake, GuildIntegrationModel>.Id SandboxEntity<Snowflake, GuildIntegrationModel>.Delete() SandboxEntity<Snowflake, GuildIntegrationModel>.IUpdateable<GuildIntegrationModel>.Update(GuildIntegrationModel) SandboxEntity<Snowflake, GuildIntegrationModel>.EmitUpdate() SandboxEntity<Snowflake, GuildIntegrationModel>.TryDelete() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Entities Assembly : Strade.Sandbox.dll Syntax public sealed class SandboxIntegration : SandboxEntity<Snowflake, GuildIntegrationModel>, IUpdateable<GuildIntegrationModel> Constructors | Improve this Doc View Source SandboxIntegration(SandboxEnvironment, GuildIntegrationModel) Declaration public SandboxIntegration(SandboxEnvironment sandbox, GuildIntegrationModel model) Parameters Type Name Description SandboxEnvironment sandbox GuildIntegrationModel model Methods | Improve this Doc View Source EmitUpdate() Declaration protected override void EmitUpdate() Overrides Strade.Sandbox.Entities.SandboxEntity<Strade.Entities.Snowflake, Strade.Models.GuildIntegrationModel>.EmitUpdate() | Improve this Doc View Source TryDelete() Declaration protected override bool TryDelete() Returns Type Description Boolean Overrides Strade.Sandbox.Entities.SandboxEntity<Strade.Entities.Snowflake, Strade.Models.GuildIntegrationModel>.TryDelete() Implements IUpdateable<TModel>"
  },
  "api/Strade.Sandbox.Entities.SandboxInvite.html": {
    "href": "api/Strade.Sandbox.Entities.SandboxInvite.html",
    "title": "Class SandboxInvite | Strade Developer Documentation",
    "keywords": "Class SandboxInvite Inheritance Object SandboxEntity < String , InviteWithMetadataModel > SandboxInvite Implements IUpdateable < InviteWithMetadataModel > Inherited Members SandboxEntity<String, InviteWithMetadataModel>.Exists SandboxEntity<String, InviteWithMetadataModel>.Model SandboxEntity<String, InviteWithMetadataModel>.Sandbox SandboxEntity<String, InviteWithMetadataModel>.Id SandboxEntity<String, InviteWithMetadataModel>.Delete() SandboxEntity<String, InviteWithMetadataModel>.IUpdateable<InviteWithMetadataModel>.Update(InviteWithMetadataModel) SandboxEntity<String, InviteWithMetadataModel>.EmitUpdate() SandboxEntity<String, InviteWithMetadataModel>.TryDelete() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Entities Assembly : Strade.Sandbox.dll Syntax public sealed class SandboxInvite : SandboxEntity<string, InviteWithMetadataModel>, IUpdateable<InviteWithMetadataModel> Constructors | Improve this Doc View Source SandboxInvite(SandboxEnvironment, InviteWithMetadataModel) Declaration public SandboxInvite(SandboxEnvironment sandbox, InviteWithMetadataModel model) Parameters Type Name Description SandboxEnvironment sandbox InviteWithMetadataModel model Methods | Improve this Doc View Source EmitUpdate() Declaration protected override void EmitUpdate() Overrides Strade.Sandbox.Entities.SandboxEntity<System.String, Strade.Models.InviteWithMetadataModel>.EmitUpdate() | Improve this Doc View Source TryDelete() Declaration protected override bool TryDelete() Returns Type Description Boolean Overrides Strade.Sandbox.Entities.SandboxEntity<System.String, Strade.Models.InviteWithMetadataModel>.TryDelete() Implements IUpdateable<TModel>"
  },
  "api/Strade.Sandbox.Entities.SandboxMember.html": {
    "href": "api/Strade.Sandbox.Entities.SandboxMember.html",
    "title": "Class SandboxMember | Strade Developer Documentation",
    "keywords": "Class SandboxMember Inheritance Object SandboxEntity < Snowflake , MemberModel > SandboxMember Implements IUpdateable < MemberModel > Inherited Members SandboxEntity<Snowflake, MemberModel>.Exists SandboxEntity<Snowflake, MemberModel>.Model SandboxEntity<Snowflake, MemberModel>.Sandbox SandboxEntity<Snowflake, MemberModel>.Id SandboxEntity<Snowflake, MemberModel>.Delete() SandboxEntity<Snowflake, MemberModel>.IUpdateable<MemberModel>.Update(MemberModel) SandboxEntity<Snowflake, MemberModel>.EmitUpdate() SandboxEntity<Snowflake, MemberModel>.TryDelete() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Entities Assembly : Strade.Sandbox.dll Syntax public sealed class SandboxMember : SandboxEntity<Snowflake, MemberModel>, IUpdateable<MemberModel> Constructors | Improve this Doc View Source SandboxMember(SandboxEnvironment, MemberModel, SandboxGuild) Declaration public SandboxMember(SandboxEnvironment sandbox, MemberModel model, SandboxGuild guild) Parameters Type Name Description SandboxEnvironment sandbox MemberModel model SandboxGuild guild Properties | Improve this Doc View Source Guild Declaration public SandboxGuild Guild { get; } Property Value Type Description SandboxGuild | Improve this Doc View Source GuildId Gets the snowflake identifier of the guild. Declaration public Snowflake GuildId { get; } Property Value Type Description Snowflake the snowflake identifier of the guild. | Improve this Doc View Source HasBoostedServer Gets a value indicating whether the guild member has boosted the server with Nitro boost. Declaration public bool HasBoostedServer { get; } Property Value Type Description Boolean a value indicating whether the guild member has boosted the server with Nitro boost. | Improve this Doc View Source IsDeafened Gets a value indicating whether the member is deafened server-wide. Declaration public bool IsDeafened { get; } Property Value Type Description Boolean a value indicating whether the member is deafened server-wide. | Improve this Doc View Source IsMuted Gets a value indicating whether the member is muted server-wide. Declaration public bool IsMuted { get; } Property Value Type Description Boolean a value indicating whether the member is muted server-wide. | Improve this Doc View Source JoinedAt Gets the time when the member has joined the guild. Declaration public DateTimeOffset JoinedAt { get; } Property Value Type Description DateTimeOffset the time when the member has joined the guild. | Improve this Doc View Source LastActivity Declaration public DateTimeOffset LastActivity { get; } Property Value Type Description DateTimeOffset | Improve this Doc View Source Name Gets the safe name of the member (if the member has no nickname then the username is used instead). Declaration public string Name { get; } Property Value Type Description String the safe name of the member (if the member has no nickname then the username is used instead). | Improve this Doc View Source Nickname Gets the nickname of the user. Declaration public string Nickname { get; } Property Value Type Description String the nickname of the user (if null the user has no explicit nickname). | Improve this Doc View Source PremiumSince Gets the time when the user has boosted the server with Nitro. Declaration public DateTimeOffset? PremiumSince { get; } Property Value Type Description Nullable < DateTimeOffset > the time when the user has boosted the server with Nitro; if null then the member has not boosted the server with Nitro. | Improve this Doc View Source RoleIds Gets a list of snowflake identifiers referring to the assigned roles of the member. Declaration public IReadOnlyList<Snowflake> RoleIds { get; } Property Value Type Description IReadOnlyList < Snowflake > a list of snowflake identifiers referring to the assigned roles of the member. | Improve this Doc View Source User Gets the associated user. Declaration public SandboxUser User { get; } Property Value Type Description SandboxUser the associated user. Methods | Improve this Doc View Source EmitUpdate() Declaration protected override void EmitUpdate() Overrides Strade.Sandbox.Entities.SandboxEntity<Strade.Entities.Snowflake, Strade.Models.MemberModel>.EmitUpdate() | Improve this Doc View Source TryDelete() Declaration protected override bool TryDelete() Returns Type Description Boolean Overrides Strade.Sandbox.Entities.SandboxEntity<Strade.Entities.Snowflake, Strade.Models.MemberModel>.TryDelete() Implements IUpdateable<TModel>"
  },
  "api/Strade.Sandbox.Entities.SandboxMessage.html": {
    "href": "api/Strade.Sandbox.Entities.SandboxMessage.html",
    "title": "Class SandboxMessage | Strade Developer Documentation",
    "keywords": "Class SandboxMessage Inheritance Object SandboxEntity < Snowflake , MessageModel > SandboxMessage Implements IUpdateable < MessageModel > Inherited Members SandboxEntity<Snowflake, MessageModel>.Exists SandboxEntity<Snowflake, MessageModel>.Model SandboxEntity<Snowflake, MessageModel>.Sandbox SandboxEntity<Snowflake, MessageModel>.Id SandboxEntity<Snowflake, MessageModel>.Delete() SandboxEntity<Snowflake, MessageModel>.IUpdateable<MessageModel>.Update(MessageModel) SandboxEntity<Snowflake, MessageModel>.EmitUpdate() SandboxEntity<Snowflake, MessageModel>.TryDelete() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Entities Assembly : Strade.Sandbox.dll Syntax public sealed class SandboxMessage : SandboxEntity<Snowflake, MessageModel>, IUpdateable<MessageModel> Constructors | Improve this Doc View Source SandboxMessage(SandboxEnvironment, MessageModel) Declaration public SandboxMessage(SandboxEnvironment sandbox, MessageModel model) Parameters Type Name Description SandboxEnvironment sandbox MessageModel model Properties | Improve this Doc View Source WasPublished Declaration public bool WasPublished { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source EmitUpdate() Declaration protected override void EmitUpdate() Overrides Strade.Sandbox.Entities.SandboxEntity<Strade.Entities.Snowflake, Strade.Models.MessageModel>.EmitUpdate() | Improve this Doc View Source TryDelete() Declaration protected override bool TryDelete() Returns Type Description Boolean Overrides Strade.Sandbox.Entities.SandboxEntity<Strade.Entities.Snowflake, Strade.Models.MessageModel>.TryDelete() Implements IUpdateable<TModel>"
  },
  "api/Strade.Sandbox.Entities.SandboxNestedChannel.html": {
    "href": "api/Strade.Sandbox.Entities.SandboxNestedChannel.html",
    "title": "Class SandboxNestedChannel | Strade Developer Documentation",
    "keywords": "Class SandboxNestedChannel Inheritance Object SandboxEntity < Snowflake , ChannelModel > SandboxChannel SandboxGuildChannel SandboxNestedChannel SandboxPrivateChannel SandboxTextChannel Implements IUpdateable < ChannelModel > Inherited Members SandboxGuildChannel.Guild SandboxGuildChannel.GuildId SandboxGuildChannel.Name SandboxGuildChannel.Overwrites SandboxGuildChannel.Position SandboxGuildChannel.DeleteChannelOverwrite(OperationContext, SandboxMember) SandboxGuildChannel.DeleteChannelOverwrite(OperationContext, SandboxRole) SandboxGuildChannel.EditPermissions(OperationContext, SandboxMember, PermissionSet, PermissionSet) SandboxGuildChannel.EditPermissions(OperationContext, SandboxRole, PermissionSet, PermissionSet) SandboxGuildChannel.EmitUpdate() SandboxChannel.FollowedChannels SandboxChannel.Messages SandboxChannel.Type SandboxChannel.Create(SandboxEnvironment, ChannelModel) SandboxChannel.SendMessage(SandboxUser, MessageCreationProperties) SandboxChannel.SendMessage(UserModel, MessageCreationProperties) SandboxChannel.TryDelete() SandboxEntity<Snowflake, ChannelModel>.Exists SandboxEntity<Snowflake, ChannelModel>.Model SandboxEntity<Snowflake, ChannelModel>.Sandbox SandboxEntity<Snowflake, ChannelModel>.Id SandboxEntity<Snowflake, ChannelModel>.Delete() SandboxEntity<Snowflake, ChannelModel>.IUpdateable<ChannelModel>.Update(ChannelModel) SandboxEntity<Snowflake, ChannelModel>.EmitUpdate() SandboxEntity<Snowflake, ChannelModel>.TryDelete() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Entities Assembly : Strade.Sandbox.dll Syntax public abstract class SandboxNestedChannel : SandboxGuildChannel, IUpdateable<ChannelModel> Constructors | Improve this Doc View Source SandboxNestedChannel(SandboxEnvironment, ChannelModel) Declaration public SandboxNestedChannel(SandboxEnvironment sandbox, ChannelModel model) Parameters Type Name Description SandboxEnvironment sandbox ChannelModel model Properties | Improve this Doc View Source HasParent Gets a value indicating whether the channel has a parent / whether the channel is nested. Declaration public bool HasParent { get; } Property Value Type Description Boolean a value indicating whether the channel has a parent / whether the channel is nested. | Improve this Doc View Source Invites Declaration public CrudDictionary<string, InviteWithMetadataModel, SandboxInvite> Invites { get; } Property Value Type Description CrudDictionary < String , InviteWithMetadataModel , SandboxInvite > | Improve this Doc View Source ParentId Gets the snowflake identifier of the parent channel. Declaration public Snowflake? ParentId { get; } Property Value Type Description Nullable < Snowflake > the snowflake identifier of the parent channel; if null the channel has no parent. Methods | Improve this Doc View Source CreateInvite(OperationContext, InviteCreationProperties) Creates an invite for the channel. Declaration public SandboxInvite CreateInvite(OperationContext context, InviteCreationProperties properties) Parameters Type Name Description OperationContext context InviteCreationProperties properties the properties. Returns Type Description SandboxInvite the invite created. | Improve this Doc View Source CreateInvite(OperationContext, Action<InviteCreationProperties>) Creates an invite for the channel. Declaration public SandboxInvite CreateInvite(OperationContext context, Action<InviteCreationProperties> action) Parameters Type Name Description OperationContext context Action < InviteCreationProperties > action the action used to create the invite properties. Returns Type Description SandboxInvite the invite created. Implements IUpdateable<TModel>"
  },
  "api/Strade.Sandbox.Entities.SandboxPrivateChannel.html": {
    "href": "api/Strade.Sandbox.Entities.SandboxPrivateChannel.html",
    "title": "Class SandboxPrivateChannel | Strade Developer Documentation",
    "keywords": "Class SandboxPrivateChannel Inheritance Object SandboxEntity < Snowflake , ChannelModel > SandboxChannel SandboxGuildChannel SandboxNestedChannel SandboxPrivateChannel Implements IUpdateable < ChannelModel > Inherited Members SandboxNestedChannel.HasParent SandboxNestedChannel.ParentId SandboxNestedChannel.Invites SandboxNestedChannel.CreateInvite(OperationContext, InviteCreationProperties) SandboxNestedChannel.CreateInvite(OperationContext, Action<InviteCreationProperties>) SandboxGuildChannel.Guild SandboxGuildChannel.GuildId SandboxGuildChannel.Name SandboxGuildChannel.Overwrites SandboxGuildChannel.Position SandboxGuildChannel.DeleteChannelOverwrite(OperationContext, SandboxMember) SandboxGuildChannel.DeleteChannelOverwrite(OperationContext, SandboxRole) SandboxGuildChannel.EditPermissions(OperationContext, SandboxMember, PermissionSet, PermissionSet) SandboxGuildChannel.EditPermissions(OperationContext, SandboxRole, PermissionSet, PermissionSet) SandboxGuildChannel.EmitUpdate() SandboxChannel.FollowedChannels SandboxChannel.Messages SandboxChannel.Create(SandboxEnvironment, ChannelModel) SandboxChannel.SendMessage(SandboxUser, MessageCreationProperties) SandboxChannel.SendMessage(UserModel, MessageCreationProperties) SandboxChannel.TryDelete() SandboxEntity<Snowflake, ChannelModel>.Exists SandboxEntity<Snowflake, ChannelModel>.Model SandboxEntity<Snowflake, ChannelModel>.Sandbox SandboxEntity<Snowflake, ChannelModel>.Id SandboxEntity<Snowflake, ChannelModel>.Delete() SandboxEntity<Snowflake, ChannelModel>.IUpdateable<ChannelModel>.Update(ChannelModel) SandboxEntity<Snowflake, ChannelModel>.EmitUpdate() SandboxEntity<Snowflake, ChannelModel>.TryDelete() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Entities Assembly : Strade.Sandbox.dll Syntax public sealed class SandboxPrivateChannel : SandboxNestedChannel, IUpdateable<ChannelModel> Constructors | Improve this Doc View Source SandboxPrivateChannel(SandboxEnvironment, ChannelModel) Declaration public SandboxPrivateChannel(SandboxEnvironment sandbox, ChannelModel model) Parameters Type Name Description SandboxEnvironment sandbox ChannelModel model Properties | Improve this Doc View Source Type Declaration public override ChannelType Type { get; } Property Value Type Description ChannelType Overrides SandboxChannel.Type Implements IUpdateable<TModel>"
  },
  "api/Strade.Sandbox.Entities.SandboxRole.html": {
    "href": "api/Strade.Sandbox.Entities.SandboxRole.html",
    "title": "Class SandboxRole | Strade Developer Documentation",
    "keywords": "Class SandboxRole Inheritance Object SandboxEntity < Snowflake , RoleModel > SandboxRole Implements IUpdateable < RoleModel > Inherited Members SandboxEntity<Snowflake, RoleModel>.Exists SandboxEntity<Snowflake, RoleModel>.Model SandboxEntity<Snowflake, RoleModel>.Sandbox SandboxEntity<Snowflake, RoleModel>.Id SandboxEntity<Snowflake, RoleModel>.Delete() SandboxEntity<Snowflake, RoleModel>.IUpdateable<RoleModel>.Update(RoleModel) SandboxEntity<Snowflake, RoleModel>.EmitUpdate() SandboxEntity<Snowflake, RoleModel>.TryDelete() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Entities Assembly : Strade.Sandbox.dll Syntax public sealed class SandboxRole : SandboxEntity<Snowflake, RoleModel>, IUpdateable<RoleModel> Constructors | Improve this Doc View Source SandboxRole(SandboxEnvironment, RoleModel, SandboxGuild) Declaration public SandboxRole(SandboxEnvironment sandbox, RoleModel model, SandboxGuild guild) Parameters Type Name Description SandboxEnvironment sandbox RoleModel model SandboxGuild guild Properties | Improve this Doc View Source Guild Declaration public SandboxGuild Guild { get; } Property Value Type Description SandboxGuild Methods | Improve this Doc View Source EmitUpdate() Declaration protected override void EmitUpdate() Overrides Strade.Sandbox.Entities.SandboxEntity<Strade.Entities.Snowflake, Strade.Models.RoleModel>.EmitUpdate() | Improve this Doc View Source TryDelete() Declaration protected override bool TryDelete() Returns Type Description Boolean Overrides Strade.Sandbox.Entities.SandboxEntity<Strade.Entities.Snowflake, Strade.Models.RoleModel>.TryDelete() Implements IUpdateable<TModel>"
  },
  "api/Strade.Sandbox.Entities.SandboxTextChannel.html": {
    "href": "api/Strade.Sandbox.Entities.SandboxTextChannel.html",
    "title": "Class SandboxTextChannel | Strade Developer Documentation",
    "keywords": "Class SandboxTextChannel Inheritance Object SandboxEntity < Snowflake , ChannelModel > SandboxChannel SandboxGuildChannel SandboxNestedChannel SandboxTextChannel Implements IUpdateable < ChannelModel > Inherited Members SandboxNestedChannel.HasParent SandboxNestedChannel.ParentId SandboxNestedChannel.Invites SandboxNestedChannel.CreateInvite(OperationContext, InviteCreationProperties) SandboxNestedChannel.CreateInvite(OperationContext, Action<InviteCreationProperties>) SandboxGuildChannel.Guild SandboxGuildChannel.GuildId SandboxGuildChannel.Name SandboxGuildChannel.Overwrites SandboxGuildChannel.Position SandboxGuildChannel.DeleteChannelOverwrite(OperationContext, SandboxMember) SandboxGuildChannel.DeleteChannelOverwrite(OperationContext, SandboxRole) SandboxGuildChannel.EditPermissions(OperationContext, SandboxMember, PermissionSet, PermissionSet) SandboxGuildChannel.EditPermissions(OperationContext, SandboxRole, PermissionSet, PermissionSet) SandboxGuildChannel.EmitUpdate() SandboxChannel.FollowedChannels SandboxChannel.Messages SandboxChannel.Create(SandboxEnvironment, ChannelModel) SandboxChannel.SendMessage(SandboxUser, MessageCreationProperties) SandboxChannel.SendMessage(UserModel, MessageCreationProperties) SandboxChannel.TryDelete() SandboxEntity<Snowflake, ChannelModel>.Exists SandboxEntity<Snowflake, ChannelModel>.Model SandboxEntity<Snowflake, ChannelModel>.Sandbox SandboxEntity<Snowflake, ChannelModel>.Id SandboxEntity<Snowflake, ChannelModel>.Delete() SandboxEntity<Snowflake, ChannelModel>.IUpdateable<ChannelModel>.Update(ChannelModel) SandboxEntity<Snowflake, ChannelModel>.EmitUpdate() SandboxEntity<Snowflake, ChannelModel>.TryDelete() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Entities Assembly : Strade.Sandbox.dll Syntax public sealed class SandboxTextChannel : SandboxNestedChannel, IUpdateable<ChannelModel> Constructors | Improve this Doc View Source SandboxTextChannel(SandboxEnvironment, ChannelModel) Declaration public SandboxTextChannel(SandboxEnvironment sandbox, ChannelModel model) Parameters Type Name Description SandboxEnvironment sandbox ChannelModel model Properties | Improve this Doc View Source Type Declaration public override ChannelType Type { get; } Property Value Type Description ChannelType Overrides SandboxChannel.Type Implements IUpdateable<TModel>"
  },
  "api/Strade.Sandbox.Entities.SandboxUser.html": {
    "href": "api/Strade.Sandbox.Entities.SandboxUser.html",
    "title": "Class SandboxUser | Strade Developer Documentation",
    "keywords": "Class SandboxUser Inheritance Object SandboxEntity < Snowflake , UserModel > SandboxUser Implements IUpdateable < UserModel > Inherited Members SandboxEntity<Snowflake, UserModel>.Exists SandboxEntity<Snowflake, UserModel>.Model SandboxEntity<Snowflake, UserModel>.Sandbox SandboxEntity<Snowflake, UserModel>.Id SandboxEntity<Snowflake, UserModel>.Delete() SandboxEntity<Snowflake, UserModel>.IUpdateable<UserModel>.Update(UserModel) SandboxEntity<Snowflake, UserModel>.EmitUpdate() SandboxEntity<Snowflake, UserModel>.TryDelete() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Entities Assembly : Strade.Sandbox.dll Syntax public sealed class SandboxUser : SandboxEntity<Snowflake, UserModel>, IUpdateable<UserModel> Constructors | Improve this Doc View Source SandboxUser(SandboxEnvironment, UserModel) Declaration public SandboxUser(SandboxEnvironment sandbox, UserModel model) Parameters Type Name Description SandboxEnvironment sandbox UserModel model Methods | Improve this Doc View Source EmitUpdate() Declaration protected override void EmitUpdate() Overrides Strade.Sandbox.Entities.SandboxEntity<Strade.Entities.Snowflake, Strade.Models.UserModel>.EmitUpdate() | Improve this Doc View Source OpenPrivateChannel() Declaration public SandboxPrivateChannel OpenPrivateChannel() Returns Type Description SandboxPrivateChannel | Improve this Doc View Source TryDelete() Declaration protected override bool TryDelete() Returns Type Description Boolean Overrides Strade.Sandbox.Entities.SandboxEntity<Strade.Entities.Snowflake, Strade.Models.UserModel>.TryDelete() Implements IUpdateable<TModel>"
  },
  "api/Strade.Sandbox.Entities.SandboxWebhook.html": {
    "href": "api/Strade.Sandbox.Entities.SandboxWebhook.html",
    "title": "Class SandboxWebhook | Strade Developer Documentation",
    "keywords": "Class SandboxWebhook Inheritance Object SandboxEntity < Snowflake , WebhookModel > SandboxWebhook Implements IUpdateable < WebhookModel > Inherited Members SandboxEntity<Snowflake, WebhookModel>.Exists SandboxEntity<Snowflake, WebhookModel>.Model SandboxEntity<Snowflake, WebhookModel>.Sandbox SandboxEntity<Snowflake, WebhookModel>.Id SandboxEntity<Snowflake, WebhookModel>.Delete() SandboxEntity<Snowflake, WebhookModel>.IUpdateable<WebhookModel>.Update(WebhookModel) SandboxEntity<Snowflake, WebhookModel>.EmitUpdate() SandboxEntity<Snowflake, WebhookModel>.TryDelete() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Entities Assembly : Strade.Sandbox.dll Syntax public sealed class SandboxWebhook : SandboxEntity<Snowflake, WebhookModel>, IUpdateable<WebhookModel> Constructors | Improve this Doc View Source SandboxWebhook(SandboxEnvironment, WebhookModel) Declaration public SandboxWebhook(SandboxEnvironment sandbox, WebhookModel model) Parameters Type Name Description SandboxEnvironment sandbox WebhookModel model Methods | Improve this Doc View Source EmitUpdate() Declaration protected override void EmitUpdate() Overrides Strade.Sandbox.Entities.SandboxEntity<Strade.Entities.Snowflake, Strade.Models.WebhookModel>.EmitUpdate() | Improve this Doc View Source TryDelete() Declaration protected override bool TryDelete() Returns Type Description Boolean Overrides Strade.Sandbox.Entities.SandboxEntity<Strade.Entities.Snowflake, Strade.Models.WebhookModel>.TryDelete() Implements IUpdateable<TModel>"
  },
  "api/Strade.Sandbox.EventBroadcastInformation.html": {
    "href": "api/Strade.Sandbox.EventBroadcastInformation.html",
    "title": "Struct EventBroadcastInformation | Strade Developer Documentation",
    "keywords": "Struct EventBroadcastInformation Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Sandbox Assembly : Strade.Sandbox.dll Syntax public struct EventBroadcastInformation Constructors | Improve this Doc View Source EventBroadcastInformation(Nullable<Snowflake>) Declaration public EventBroadcastInformation(Snowflake? guildId) Parameters Type Name Description Nullable < Snowflake > guildId Properties | Improve this Doc View Source GuildId Declaration public Snowflake? GuildId { get; } Property Value Type Description Nullable < Snowflake > | Improve this Doc View Source IsMainShard Declaration public bool IsMainShard { get; } Property Value Type Description Boolean | Improve this Doc View Source IsTargettingGuilds Declaration public bool IsTargettingGuilds { get; } Property Value Type Description Boolean"
  },
  "api/Strade.Sandbox.GatewayEvents.html": {
    "href": "api/Strade.Sandbox.GatewayEvents.html",
    "title": "Class GatewayEvents | Strade Developer Documentation",
    "keywords": "Class GatewayEvents Inheritance Object GatewayEvents Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox Assembly : Strade.Sandbox.dll Syntax public static class GatewayEvents Fields | Improve this Doc View Source ChannelCreate Declaration public const string ChannelCreate = \"CHANNEL_CREATE\" Field Value Type Description String | Improve this Doc View Source ChannelDelete Declaration public const string ChannelDelete = \"CHANNEL_DELETE\" Field Value Type Description String | Improve this Doc View Source ChannelPinsUpdate Declaration public const string ChannelPinsUpdate = \"CHANNEL_PINS_UPDATE\" Field Value Type Description String | Improve this Doc View Source ChannelUpdate Declaration public const string ChannelUpdate = \"CHANNEL_UPDATE\" Field Value Type Description String | Improve this Doc View Source GuildBanAdd Declaration public const string GuildBanAdd = \"GUILD_BAN_ADD\" Field Value Type Description String | Improve this Doc View Source GuildBanRemove Declaration public const string GuildBanRemove = \"GUILD_BAN_REMOVE\" Field Value Type Description String | Improve this Doc View Source GuildCreate Declaration public const string GuildCreate = \"GUILD_CREATE\" Field Value Type Description String | Improve this Doc View Source GuildDelete Declaration public const string GuildDelete = \"GUILD_DELETE\" Field Value Type Description String | Improve this Doc View Source GuildEmojisUpdate Declaration public const string GuildEmojisUpdate = \"GUILD_EMOJIS_UPDATE\" Field Value Type Description String | Improve this Doc View Source GuildIntegrationsUpdate Declaration public const string GuildIntegrationsUpdate = \"GUILD_INTEGRATIONS_UPDATE\" Field Value Type Description String | Improve this Doc View Source GuildMemberAdd Declaration public const string GuildMemberAdd = \"GUILD_MEMBER_ADD\" Field Value Type Description String | Improve this Doc View Source GuildMemberRemove Declaration public const string GuildMemberRemove = \"GUILD_MEMBER_REMOVE\" Field Value Type Description String | Improve this Doc View Source GuildMembersChunk Declaration public const string GuildMembersChunk = \"GUILD_MEMBERS_CHUNK\" Field Value Type Description String | Improve this Doc View Source GuildMemberUpdate Declaration public const string GuildMemberUpdate = \"GUILD_MEMBER_UPDATE\" Field Value Type Description String | Improve this Doc View Source GuildRoleCreate Declaration public const string GuildRoleCreate = \"GUILD_ROLE_CREATE\" Field Value Type Description String | Improve this Doc View Source GuildRoleDelete Declaration public const string GuildRoleDelete = \"GUILD_ROLE_DELETE\" Field Value Type Description String | Improve this Doc View Source GuildRoleUpdate Declaration public const string GuildRoleUpdate = \"GUILD_ROLE_UPDATE\" Field Value Type Description String | Improve this Doc View Source GuildUpdate Declaration public const string GuildUpdate = \"GUILD_UPDATE\" Field Value Type Description String | Improve this Doc View Source Hello Declaration public const string Hello = \"HELLO\" Field Value Type Description String | Improve this Doc View Source InvalidSession Declaration public const string InvalidSession = \"INVALID_SESSION\" Field Value Type Description String | Improve this Doc View Source InviteCreate Declaration public const string InviteCreate = \"INVITE_CREATE\" Field Value Type Description String | Improve this Doc View Source InviteDelete Declaration public const string InviteDelete = \"INVITE_DELETE\" Field Value Type Description String | Improve this Doc View Source MessageCreate Declaration public const string MessageCreate = \"MESSAGE_CREATE\" Field Value Type Description String | Improve this Doc View Source MessageDelete Declaration public const string MessageDelete = \"MESSAGE_DELETE\" Field Value Type Description String | Improve this Doc View Source MessageDeleteBulk Declaration public const string MessageDeleteBulk = \"MESSAGE_DELETE_BULK\" Field Value Type Description String | Improve this Doc View Source MessageReactionAdd Declaration public const string MessageReactionAdd = \"MESSAGE_REACTION_ADD\" Field Value Type Description String | Improve this Doc View Source MessageReactionRemove Declaration public const string MessageReactionRemove = \"MESSAGE_REACTION_REMOVE\" Field Value Type Description String | Improve this Doc View Source MessageReactionRemoveAll Declaration public const string MessageReactionRemoveAll = \"MESSAGE_REACTION_REMOVE_ALL\" Field Value Type Description String | Improve this Doc View Source MessageReactionRemoveEmoji Declaration public const string MessageReactionRemoveEmoji = \"MESSAGE_REACTION_REMOVE_EMOJI\" Field Value Type Description String | Improve this Doc View Source MessageUpdate Declaration public const string MessageUpdate = \"MESSAGE_UPDATE\" Field Value Type Description String | Improve this Doc View Source PresenceUpdate Declaration public const string PresenceUpdate = \"PRESENCE_UPDATE\" Field Value Type Description String | Improve this Doc View Source Ready Declaration public const string Ready = \"READY\" Field Value Type Description String | Improve this Doc View Source Reconnect Declaration public const string Reconnect = \"RECONNECT\" Field Value Type Description String | Improve this Doc View Source Resumed Declaration public const string Resumed = \"RESUMED\" Field Value Type Description String | Improve this Doc View Source TypingStart Declaration public const string TypingStart = \"TYPING_START\" Field Value Type Description String | Improve this Doc View Source UserUpdate Declaration public const string UserUpdate = \"USER_UPDATE\" Field Value Type Description String | Improve this Doc View Source VoiceServerUpdate Declaration public const string VoiceServerUpdate = \"VOICE_SERVER_UPDATE\" Field Value Type Description String | Improve this Doc View Source VoiceStateUpdate Declaration public const string VoiceStateUpdate = \"VOICE_STATE_UPDATE\" Field Value Type Description String | Improve this Doc View Source WebhooksUpdate Declaration public const string WebhooksUpdate = \"WEBHOOKS_UPDATE\" Field Value Type Description String"
  },
  "api/Strade.Sandbox.html": {
    "href": "api/Strade.Sandbox.html",
    "title": "Namespace Strade.Sandbox | Strade Developer Documentation",
    "keywords": "Namespace Strade.Sandbox Classes CrudDictionary<TId, TModel, TSandboxEntity> Endpoints A class that contains the implementation of endpoints commonly used for testing bots. GatewayEvents SandboxEnvironment A class used to hold the state of a testing environment used to test Strade components or Discord applications build with the Strade framework. An environment holds data in the form of models representing the data for the entities they belong to. The environment providers basic operations that include create, read, update and delete (CRUD). Structs Actor EventBroadcastInformation OperationContext"
  },
  "api/Strade.Sandbox.OperationContext.html": {
    "href": "api/Strade.Sandbox.OperationContext.html",
    "title": "Struct OperationContext | Strade Developer Documentation",
    "keywords": "Struct OperationContext Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Sandbox Assembly : Strade.Sandbox.dll Syntax public struct OperationContext Constructors | Improve this Doc View Source OperationContext(Actor, String) Declaration public OperationContext(Actor actor, string reason) Parameters Type Name Description Actor actor String reason Properties | Improve this Doc View Source Actor Declaration public Actor Actor { get; } Property Value Type Description Actor | Improve this Doc View Source Reason Declaration public string Reason { get; } Property Value Type Description String"
  },
  "api/Strade.Sandbox.Rest.EndpointCollection.html": {
    "href": "api/Strade.Sandbox.Rest.EndpointCollection.html",
    "title": "Class EndpointCollection | Strade Developer Documentation",
    "keywords": "Class EndpointCollection Inheritance Object EndpointCollection Implements ICollection < RestEndpoint > IEnumerable < RestEndpoint > IEnumerable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Rest Assembly : Strade.Sandbox.dll Syntax public sealed class EndpointCollection : ICollection<RestEndpoint>, IEnumerable<RestEndpoint>, IEnumerable Constructors | Improve this Doc View Source EndpointCollection() Initializes a new instance of the EndpointCollection class. Declaration public EndpointCollection() Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Add(EndpointRoute, EndpointDelegate, Int32) Declaration public RestEndpoint Add(EndpointRoute route, EndpointDelegate action, int priority = 0) Parameters Type Name Description EndpointRoute route EndpointDelegate action Int32 priority Returns Type Description RestEndpoint | Improve this Doc View Source Add(RestEndpoint) Declaration public void Add(RestEndpoint item) Parameters Type Name Description RestEndpoint item | Improve this Doc View Source Add(HttpMethod, String, EndpointDelegate, Int32, Boolean) Declaration public RestEndpoint Add(HttpMethod method, string route, EndpointDelegate action, int priority = 0, bool caseInsensitive = false) Parameters Type Name Description HttpMethod method String route EndpointDelegate action Int32 priority Boolean caseInsensitive Returns Type Description RestEndpoint | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Contains(RestEndpoint) Declaration public bool Contains(RestEndpoint item) Parameters Type Name Description RestEndpoint item Returns Type Description Boolean | Improve this Doc View Source CopyTo(RestEndpoint[], Int32) Declaration public void CopyTo(RestEndpoint[] array, int arrayIndex) Parameters Type Name Description RestEndpoint [] array Int32 arrayIndex | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<RestEndpoint> GetEnumerator() Returns Type Description IEnumerator < RestEndpoint > | Improve this Doc View Source RegisterDefaultEndpoints() Declaration public void RegisterDefaultEndpoints() | Improve this Doc View Source Remove(RestEndpoint) Declaration public bool Remove(RestEndpoint item) Parameters Type Name Description RestEndpoint item Returns Type Description Boolean | Improve this Doc View Source TryRoute(HttpMethod, IReadOnlyList<ReadOnlyMemory<Char>>, out RestEndpoint) Declaration public bool TryRoute(HttpMethod method, IReadOnlyList<ReadOnlyMemory<char>> route, out RestEndpoint endpoint) Parameters Type Name Description HttpMethod method IReadOnlyList < ReadOnlyMemory < Char >> route RestEndpoint endpoint Returns Type Description Boolean Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/Strade.Sandbox.Rest.EndpointComponent.html": {
    "href": "api/Strade.Sandbox.Rest.EndpointComponent.html",
    "title": "Struct EndpointComponent | Strade Developer Documentation",
    "keywords": "Struct EndpointComponent Implements IEquatable < EndpointComponent > IComparable < EndpointComponent > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Sandbox.Rest Assembly : Strade.Sandbox.dll Syntax public struct EndpointComponent : IEquatable<EndpointComponent>, IComparable<EndpointComponent> Constructors | Improve this Doc View Source EndpointComponent(ReadOnlyMemory<Char>, Boolean) Initializes a new instance of the EndpointComponent struct. Declaration public EndpointComponent(ReadOnlyMemory<char> content, bool caseInsensitive = true) Parameters Type Name Description ReadOnlyMemory < Char > content the content of the component. Boolean caseInsensitive a value indicating whether the component matches case-insensitive. Properties | Improve this Doc View Source CaseInsensitive Gets a value indicating whether the component matches case-insensitive. Declaration public bool CaseInsensitive { get; } Property Value Type Description Boolean a value indicating whether the component matches case-insensitive. | Improve this Doc View Source Content Gets the content of the component. Declaration public ReadOnlyMemory<char> Content { get; } Property Value Type Description ReadOnlyMemory < Char > the content of the component. | Improve this Doc View Source IsPlaceholder Gets a value indicating whether this component can match to any string that contains at least one non-whitespace character. Declaration public bool IsPlaceholder { get; } Property Value Type Description Boolean a value indicating whether this component can match to any string that contains at least one non-whitespace character. Methods | Improve this Doc View Source CompareTo(EndpointComponent) Declaration public int CompareTo(EndpointComponent other) Parameters Type Name Description EndpointComponent other Returns Type Description Int32 | Improve this Doc View Source Equals(EndpointComponent) Declaration public bool Equals(EndpointComponent other) Parameters Type Name Description EndpointComponent other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source Match(ReadOnlyMemory<Char>) Declaration public bool Match(ReadOnlyMemory<char> content) Parameters Type Name Description ReadOnlyMemory < Char > content Returns Type Description Boolean | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(EndpointComponent, EndpointComponent) Declaration public static bool operator ==(EndpointComponent left, EndpointComponent right) Parameters Type Name Description EndpointComponent left EndpointComponent right Returns Type Description Boolean | Improve this Doc View Source Inequality(EndpointComponent, EndpointComponent) Declaration public static bool operator !=(EndpointComponent left, EndpointComponent right) Parameters Type Name Description EndpointComponent left EndpointComponent right Returns Type Description Boolean Implements System.IEquatable<T> System.IComparable<T>"
  },
  "api/Strade.Sandbox.Rest.EndpointDelegate.html": {
    "href": "api/Strade.Sandbox.Rest.EndpointDelegate.html",
    "title": "Delegate EndpointDelegate | Strade Developer Documentation",
    "keywords": "Delegate EndpointDelegate Namespace : Strade.Sandbox.Rest Assembly : Strade.Sandbox.dll Syntax public delegate ValueTask EndpointDelegate(SandboxEnvironment sandbox, HttpRequestMessage requestMessage, HttpResponseMessageBuilder responseBuilder, IReadOnlyList<string> placeholders, QueryParameterCollection queryParameters, CancellationToken cancellationToken = default(CancellationToken)); Parameters Type Name Description SandboxEnvironment sandbox HttpRequestMessage requestMessage HttpResponseMessageBuilder responseBuilder IReadOnlyList < String > placeholders QueryParameterCollection queryParameters CancellationToken cancellationToken Returns Type Description ValueTask"
  },
  "api/Strade.Sandbox.Rest.EndpointRoute.html": {
    "href": "api/Strade.Sandbox.Rest.EndpointRoute.html",
    "title": "Struct EndpointRoute | Strade Developer Documentation",
    "keywords": "Struct EndpointRoute Implements IEquatable < EndpointRoute > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Sandbox.Rest Assembly : Strade.Sandbox.dll Syntax public struct EndpointRoute : IEquatable<EndpointRoute> Constructors | Improve this Doc View Source EndpointRoute(HttpMethod, IReadOnlyList<EndpointComponent>) Declaration public EndpointRoute(HttpMethod method, IReadOnlyList<EndpointComponent> components) Parameters Type Name Description HttpMethod method IReadOnlyList < EndpointComponent > components Properties | Improve this Doc View Source Components Declaration public IReadOnlyList<EndpointComponent> Components { get; } Property Value Type Description IReadOnlyList < EndpointComponent > | Improve this Doc View Source Method Declaration public HttpMethod Method { get; } Property Value Type Description HttpMethod Methods | Improve this Doc View Source Equals(EndpointRoute) Declaration public bool Equals(EndpointRoute other) Parameters Type Name Description EndpointRoute other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source Match(HttpMethod, IReadOnlyList<ReadOnlyMemory<Char>>) Declaration public bool Match(HttpMethod method, IReadOnlyList<ReadOnlyMemory<char>> route) Parameters Type Name Description HttpMethod method IReadOnlyList < ReadOnlyMemory < Char >> route Returns Type Description Boolean | Improve this Doc View Source Parse(HttpMethod, String, Boolean) Declaration public static EndpointRoute Parse(HttpMethod method, string route, bool caseInsensitive = true) Parameters Type Name Description HttpMethod method String route Boolean caseInsensitive Returns Type Description EndpointRoute | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(EndpointRoute, EndpointRoute) Declaration public static bool operator ==(EndpointRoute left, EndpointRoute right) Parameters Type Name Description EndpointRoute left EndpointRoute right Returns Type Description Boolean | Improve this Doc View Source Inequality(EndpointRoute, EndpointRoute) Declaration public static bool operator !=(EndpointRoute left, EndpointRoute right) Parameters Type Name Description EndpointRoute left EndpointRoute right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Sandbox.Rest.html": {
    "href": "api/Strade.Sandbox.Rest.html",
    "title": "Namespace Strade.Sandbox.Rest | Strade Developer Documentation",
    "keywords": "Namespace Strade.Sandbox.Rest Classes EndpointCollection HttpResponseMessageBuilder RestEndpoint Structs EndpointComponent EndpointRoute Delegates EndpointDelegate"
  },
  "api/Strade.Sandbox.Rest.HttpResponseMessageBuilder.html": {
    "href": "api/Strade.Sandbox.Rest.HttpResponseMessageBuilder.html",
    "title": "Class HttpResponseMessageBuilder | Strade Developer Documentation",
    "keywords": "Class HttpResponseMessageBuilder Inheritance Object HttpResponseMessageBuilder Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Rest Assembly : Strade.Sandbox.dll Syntax public sealed class HttpResponseMessageBuilder Constructors | Improve this Doc View Source HttpResponseMessageBuilder() Declaration public HttpResponseMessageBuilder() Methods | Improve this Doc View Source Build(HttpRequestMessage) Declaration public HttpResponseMessage Build(HttpRequestMessage requestMessage) Parameters Type Name Description HttpRequestMessage requestMessage Returns Type Description HttpResponseMessage | Improve this Doc View Source WithContent(HttpContent) Declaration public HttpResponseMessageBuilder WithContent(HttpContent content) Parameters Type Name Description HttpContent content Returns Type Description HttpResponseMessageBuilder | Improve this Doc View Source WithHeader(String, String) Declaration public HttpResponseMessageBuilder WithHeader(string name, string value) Parameters Type Name Description String name String value Returns Type Description HttpResponseMessageBuilder | Improve this Doc View Source WithJson(Object, JsonSerializerOptions) Declaration public HttpResponseMessageBuilder WithJson(object json, JsonSerializerOptions serializerOptions) Parameters Type Name Description Object json JsonSerializerOptions serializerOptions Returns Type Description HttpResponseMessageBuilder | Improve this Doc View Source WithNotFound() Declaration public HttpResponseMessageBuilder WithNotFound() Returns Type Description HttpResponseMessageBuilder | Improve this Doc View Source WithRestError(HttpStatusCode, RestResponseStatus, String) Declaration public HttpResponseMessageBuilder WithRestError(HttpStatusCode statusCode, RestResponseStatus responseStatus, string message) Parameters Type Name Description HttpStatusCode statusCode RestResponseStatus responseStatus String message Returns Type Description HttpResponseMessageBuilder | Improve this Doc View Source WithStatusCode(HttpStatusCode) Declaration public HttpResponseMessageBuilder WithStatusCode(HttpStatusCode statusCode) Parameters Type Name Description HttpStatusCode statusCode Returns Type Description HttpResponseMessageBuilder | Improve this Doc View Source WithSuccess() Declaration public HttpResponseMessageBuilder WithSuccess() Returns Type Description HttpResponseMessageBuilder"
  },
  "api/Strade.Sandbox.Rest.RestEndpoint.html": {
    "href": "api/Strade.Sandbox.Rest.RestEndpoint.html",
    "title": "Class RestEndpoint | Strade Developer Documentation",
    "keywords": "Class RestEndpoint Inheritance Object RestEndpoint Implements IComparable < RestEndpoint > IEquatable < RestEndpoint > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Sandbox.Rest Assembly : Strade.Sandbox.dll Syntax public sealed class RestEndpoint : IComparable<RestEndpoint>, IEquatable<RestEndpoint> Constructors | Improve this Doc View Source RestEndpoint(EndpointRoute, EndpointDelegate, Int32) Declaration public RestEndpoint(EndpointRoute route, EndpointDelegate delegate, int priority = 0) Parameters Type Name Description EndpointRoute route EndpointDelegate delegate Int32 priority Properties | Improve this Doc View Source Delegate Declaration public EndpointDelegate Delegate { get; } Property Value Type Description EndpointDelegate | Improve this Doc View Source Priority Declaration public int Priority { get; } Property Value Type Description Int32 | Improve this Doc View Source Route Declaration public EndpointRoute Route { get; } Property Value Type Description EndpointRoute Methods | Improve this Doc View Source CompareTo(RestEndpoint) Declaration public int CompareTo(RestEndpoint other) Parameters Type Name Description RestEndpoint other Returns Type Description Int32 | Improve this Doc View Source Equals(RestEndpoint) Declaration public bool Equals(RestEndpoint other) Parameters Type Name Description RestEndpoint other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Operators | Improve this Doc View Source Equality(RestEndpoint, RestEndpoint) Declaration public static bool operator ==(RestEndpoint left, RestEndpoint right) Parameters Type Name Description RestEndpoint left RestEndpoint right Returns Type Description Boolean | Improve this Doc View Source Inequality(RestEndpoint, RestEndpoint) Declaration public static bool operator !=(RestEndpoint left, RestEndpoint right) Parameters Type Name Description RestEndpoint left RestEndpoint right Returns Type Description Boolean Implements System.IComparable<T> System.IEquatable<T>"
  },
  "api/Strade.Sandbox.SandboxEnvironment.html": {
    "href": "api/Strade.Sandbox.SandboxEnvironment.html",
    "title": "Class SandboxEnvironment | Strade Developer Documentation",
    "keywords": "Class SandboxEnvironment A class used to hold the state of a testing environment used to test Strade components or Discord applications build with the Strade framework. An environment holds data in the form of models representing the data for the entities they belong to. The environment providers basic operations that include create, read, update and delete (CRUD). Inheritance Object SandboxEnvironment Implements IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox Assembly : Strade.Sandbox.dll Syntax public class SandboxEnvironment : IDisposable Constructors | Improve this Doc View Source SandboxEnvironment(UserModel, ISnowflakeGenerator, JsonSerializerOptions) Initializes a new instance of the SandboxEnvironment class. Declaration public SandboxEnvironment(UserModel currentUserModel = null, ISnowflakeGenerator snowflakeGenerator = null, JsonSerializerOptions jsonSerializerOptions = null) Parameters Type Name Description UserModel currentUserModel the model used to represent the current user; or null to create a new model. ISnowflakeGenerator snowflakeGenerator a generator used to generate random snowflakes for mock entities; or null to use the default ISnowflakeGenerator implementation. JsonSerializerOptions jsonSerializerOptions Properties | Improve this Doc View Source Assets Declaration public AssetManager Assets { get; } Property Value Type Description AssetManager | Improve this Doc View Source Channels Gets a dictionary that supports create, read, update and delete (CRUD) operations for channels contained in the sandbox. Declaration public CrudDictionary<Snowflake, ChannelModel, SandboxChannel> Channels { get; } Property Value Type Description CrudDictionary < Snowflake , ChannelModel , SandboxChannel > a dictionary that supports create, read, update and delete (CRUD) operations for channels contained in the sandbox. | Improve this Doc View Source CurrentUser Gets the current user. Declaration public SandboxUser CurrentUser { get; } Property Value Type Description SandboxUser the current user. | Improve this Doc View Source DefaultJsonSerializerOptions Declaration public static JsonSerializerOptions DefaultJsonSerializerOptions { get; } Property Value Type Description JsonSerializerOptions | Improve this Doc View Source Endpoints Declaration public EndpointCollection Endpoints { get; } Property Value Type Description EndpointCollection | Improve this Doc View Source Guilds Gets a dictionary that supports create, read, update and delete (CRUD) operations for guilds contained in the sandbox. Declaration public CrudDictionary<Snowflake, GuildModel, SandboxGuild> Guilds { get; } Property Value Type Description CrudDictionary < Snowflake , GuildModel , SandboxGuild > a dictionary that supports create, read, update and delete (CRUD) operations for guilds contained in the sandbox. | Improve this Doc View Source SerializerOptions Gets the JSON serializer options used. Declaration protected JsonSerializerOptions SerializerOptions { get; } Property Value Type Description JsonSerializerOptions the JSON serializer options used. | Improve this Doc View Source SnowflakeGenerator Declaration public ISnowflakeGenerator SnowflakeGenerator { get; } Property Value Type Description ISnowflakeGenerator | Improve this Doc View Source Users Gets a dictionary that supports create, read, update and delete (CRUD) operations for users contained in the sandbox. Declaration public CrudDictionary<Snowflake, UserModel, SandboxUser> Users { get; } Property Value Type Description CrudDictionary < Snowflake , UserModel , SandboxUser > a dictionary that supports create, read, update and delete (CRUD) operations for users contained in the sandbox. | Improve this Doc View Source Webhooks Gets a dictionary that supports create, read, update and delete (CRUD) operations for webhooks contained in the sandbox. Declaration public CrudDictionary<Snowflake, WebhookModel, SandboxWebhook> Webhooks { get; } Property Value Type Description CrudDictionary < Snowflake , WebhookModel , SandboxWebhook > a dictionary that supports create, read, update and delete (CRUD) operations for webhooks contained in the sandbox. Methods | Improve this Doc View Source CreateChannel(ChannelModel) Declaration public SandboxChannel CreateChannel(ChannelModel model) Parameters Type Name Description ChannelModel model Returns Type Description SandboxChannel | Improve this Doc View Source CreateClient(ILogger) Declaration public DiscordClient CreateClient(ILogger logger = null) Parameters Type Name Description ILogger logger Returns Type Description DiscordClient | Improve this Doc View Source CreateClient(Action<DiscordClientConfiguration>, ILogger) Declaration public DiscordClient CreateClient(Action<DiscordClientConfiguration> configure, ILogger logger = null) Parameters Type Name Description Action < DiscordClientConfiguration > configure ILogger logger Returns Type Description DiscordClient | Improve this Doc View Source CreateGuild(GuildModel) Declaration public SandboxGuild CreateGuild(GuildModel model) Parameters Type Name Description GuildModel model Returns Type Description SandboxGuild | Improve this Doc View Source CreateRestClient(AuthenticationTokenType, ILogger) Declaration public DiscordRestClient CreateRestClient(AuthenticationTokenType authenticationMode = AuthenticationTokenType.Bot, ILogger logger = null) Parameters Type Name Description AuthenticationTokenType authenticationMode ILogger logger Returns Type Description DiscordRestClient | Improve this Doc View Source CreateUser(UserModel) Declaration public void CreateUser(UserModel model) Parameters Type Name Description UserModel model | Improve this Doc View Source CreateWebhook(WebhookModel) Declaration public void CreateWebhook(WebhookModel model) Parameters Type Name Description WebhookModel model | Improve this Doc View Source CreateWebSocket() Declaration public IWebSocket CreateWebSocket() Returns Type Description IWebSocket | Improve this Doc View Source CreateWebSocketProcessor() Declaration public IWebSocketProcessor CreateWebSocketProcessor() Returns Type Description IWebSocketProcessor | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source EmitEvent(String, Object, Nullable<GatewayIntents>, EventBroadcastInformation) Declaration public void EmitEvent(string eventName, object payloadData, GatewayIntents? requiredIntents = default(GatewayIntents? ), EventBroadcastInformation broadcastInformation = default(EventBroadcastInformation)) Parameters Type Name Description String eventName Object payloadData Nullable < GatewayIntents > requiredIntents EventBroadcastInformation broadcastInformation | Improve this Doc View Source GetCurrentUserGuilds() Declaration public IEnumerable<SandboxGuild> GetCurrentUserGuilds() Returns Type Description IEnumerable < SandboxGuild > Implements System.IDisposable"
  },
  "api/Strade.Sandbox.Util.DefaultSnowflakeGenerator.html": {
    "href": "api/Strade.Sandbox.Util.DefaultSnowflakeGenerator.html",
    "title": "Class DefaultSnowflakeGenerator | Strade Developer Documentation",
    "keywords": "Class DefaultSnowflakeGenerator A simple implementation of the ISnowflakeGenerator interface. Inheritance Object DefaultSnowflakeGenerator Implements ISnowflakeGenerator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.Util Assembly : Strade.Sandbox.dll Syntax public sealed class DefaultSnowflakeGenerator : ISnowflakeGenerator Remarks Does not guarantee the uniqueness of generated snowflakes. Properties | Improve this Doc View Source Instance Gets a shared instance of the DefaultSnowflakeGenerator class. Declaration public static DefaultSnowflakeGenerator Instance { get; } Property Value Type Description DefaultSnowflakeGenerator a shared instance of the DefaultSnowflakeGenerator class Methods | Improve this Doc View Source Next() Declaration public Snowflake Next() Returns Type Description Snowflake Implements ISnowflakeGenerator"
  },
  "api/Strade.Sandbox.Util.html": {
    "href": "api/Strade.Sandbox.Util.html",
    "title": "Namespace Strade.Sandbox.Util | Strade Developer Documentation",
    "keywords": "Namespace Strade.Sandbox.Util Classes DefaultSnowflakeGenerator A simple implementation of the ISnowflakeGenerator interface. Interfaces ISnowflakeGenerator"
  },
  "api/Strade.Sandbox.Util.ISnowflakeGenerator.html": {
    "href": "api/Strade.Sandbox.Util.ISnowflakeGenerator.html",
    "title": "Interface ISnowflakeGenerator | Strade Developer Documentation",
    "keywords": "Interface ISnowflakeGenerator Namespace : Strade.Sandbox.Util Assembly : Strade.Sandbox.dll Syntax public interface ISnowflakeGenerator Methods | Improve this Doc View Source Next() Declaration Snowflake Next() Returns Type Description Snowflake"
  },
  "api/Strade.Sandbox.WebSockets.html": {
    "href": "api/Strade.Sandbox.WebSockets.html",
    "title": "Namespace Strade.Sandbox.WebSockets | Strade Developer Documentation",
    "keywords": "Namespace Strade.Sandbox.WebSockets Classes LocalWebSocket An IWebSocket implementation that does not use a socket connection to interchange data. A local WebSocket relies on a IWebSocketProcessor implementation that maintains the connection flow. Structs LocalWebSocket.Handle Represents a handle for the remote part of a WebSocket. Interfaces IWebSocketProcessor An interface used to create WebSocket processors used to maintain a WebSocket connection flow."
  },
  "api/Strade.Sandbox.WebSockets.IWebSocketProcessor.html": {
    "href": "api/Strade.Sandbox.WebSockets.IWebSocketProcessor.html",
    "title": "Interface IWebSocketProcessor | Strade Developer Documentation",
    "keywords": "Interface IWebSocketProcessor An interface used to create WebSocket processors used to maintain a WebSocket connection flow. Namespace : Strade.Sandbox.WebSockets Assembly : Strade.Sandbox.dll Syntax public interface IWebSocketProcessor Properties | Improve this Doc View Source IsOpen Gets a value indicating whether the processor is still open. Declaration bool IsOpen { get; } Property Value Type Description Boolean a value indicating whether the processor is still open. Methods | Improve this Doc View Source HandleCloseAsync(LocalWebSocket.Handle, UInt16, String, CancellationToken) Handles a connection close asynchronously. Declaration ValueTask HandleCloseAsync(LocalWebSocket.Handle webSocket, ushort closeStatus, string statusDescription, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description LocalWebSocket.Handle webSocket the WebSocket handle. UInt16 closeStatus the close status. String statusDescription the status description. CancellationToken cancellationToken Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source HandleConnectAsync(LocalWebSocket.Handle, Uri, CancellationToken) Handles an incoming connection asynchronously. Declaration ValueTask HandleConnectAsync(LocalWebSocket.Handle webSocket, Uri uri, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description LocalWebSocket.Handle webSocket the WebSocket handle. Uri uri the endpoint URI. CancellationToken cancellationToken Returns Type Description ValueTask a task that represents the asynchronous operation. | Improve this Doc View Source ProcessDataAsync(LocalWebSocket.Handle, ArraySegment<Byte>, Boolean, CancellationToken) Handles WebSocket data asynchronously. Declaration ValueTask ProcessDataAsync(LocalWebSocket.Handle webSocket, ArraySegment<byte> data, bool binary = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description LocalWebSocket.Handle webSocket the WebSocket handle. ArraySegment < Byte > data the data. Boolean binary a value indicating whether the specified data is binary. CancellationToken cancellationToken Returns Type Description ValueTask a task that represents the asynchronous operation."
  },
  "api/Strade.Sandbox.WebSockets.LocalWebSocket.Handle.html": {
    "href": "api/Strade.Sandbox.WebSockets.LocalWebSocket.Handle.html",
    "title": "Struct LocalWebSocket.Handle | Strade Developer Documentation",
    "keywords": "Struct LocalWebSocket.Handle Represents a handle for the remote part of a WebSocket. Implements IEquatable < LocalWebSocket.Handle > Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Sandbox.WebSockets Assembly : Strade.Sandbox.dll Syntax public struct Handle : IEquatable<LocalWebSocket.Handle> Properties | Improve this Doc View Source WebSocket Gets the WebSocket. Declaration public LocalWebSocket WebSocket { get; } Property Value Type Description LocalWebSocket the WebSocket. Exceptions Type Condition InvalidOperationException thrown if the underlying handle is invalid. Methods | Improve this Doc View Source Close(WebSocketCloseCode, String) Closes the remote connection. Declaration public void Close(WebSocketCloseCode closeStatus, string statusDescription) Parameters Type Name Description WebSocketCloseCode closeStatus the close status. String statusDescription the close status description. Exceptions Type Condition InvalidOperationException thrown if the underlying handle is invalid. | Improve this Doc View Source Close(UInt16, String) Closes the remote connection. Declaration public void Close(ushort closeStatus, string statusDescription) Parameters Type Name Description UInt16 closeStatus the close status. String statusDescription the close status description. Exceptions Type Condition InvalidOperationException thrown if the underlying handle is invalid. | Improve this Doc View Source Equals(LocalWebSocket.Handle) Declaration public bool Equals(LocalWebSocket.Handle other) Parameters Type Name Description LocalWebSocket.Handle other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source Send(ArraySegment<Byte>, Boolean) Sends data to the underlying WebSocket. Declaration public void Send(ArraySegment<byte> data, bool binary = false) Parameters Type Name Description ArraySegment < Byte > data the binary data to send. Boolean binary a value indicating whether the specified data is binary data. Exceptions Type Condition InvalidOperationException thrown if the underlying handle is invalid. Operators | Improve this Doc View Source Equality(LocalWebSocket.Handle, LocalWebSocket.Handle) Declaration public static bool operator ==(LocalWebSocket.Handle left, LocalWebSocket.Handle right) Parameters Type Name Description LocalWebSocket.Handle left LocalWebSocket.Handle right Returns Type Description Boolean | Improve this Doc View Source Inequality(LocalWebSocket.Handle, LocalWebSocket.Handle) Declaration public static bool operator !=(LocalWebSocket.Handle left, LocalWebSocket.Handle right) Parameters Type Name Description LocalWebSocket.Handle left LocalWebSocket.Handle right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.Sandbox.WebSockets.LocalWebSocket.html": {
    "href": "api/Strade.Sandbox.WebSockets.LocalWebSocket.html",
    "title": "Class LocalWebSocket | Strade Developer Documentation",
    "keywords": "Class LocalWebSocket An IWebSocket implementation that does not use a socket connection to interchange data. A local WebSocket relies on a IWebSocketProcessor implementation that maintains the connection flow. Inheritance Object LocalWebSocket Implements IWebSocket IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Sandbox.WebSockets Assembly : Strade.Sandbox.dll Syntax public sealed class LocalWebSocket : IWebSocket, IDisposable Constructors | Improve this Doc View Source LocalWebSocket(IWebSocketProcessor) Initializes a new instance of the LocalWebSocket class. Declaration public LocalWebSocket(IWebSocketProcessor webSocketProcessor) Parameters Type Name Description IWebSocketProcessor webSocketProcessor the WebSocket processor used to maintain the WebSocket. Exceptions Type Condition ArgumentNullException thrown if the specified webSocketProcessor is null . Properties | Improve this Doc View Source CloseCode Declaration public WebSocketCloseCode? CloseCode { get; } Property Value Type Description Nullable < WebSocketCloseCode > | Improve this Doc View Source IsConnected Declaration public bool IsConnected { get; } Property Value Type Description Boolean | Improve this Doc View Source StatusDescription Declaration public string StatusDescription { get; } Property Value Type Description String Methods | Improve this Doc View Source CloseAsync(WebSocketCloseCode, String, CancellationToken) Declaration public Task CloseAsync(WebSocketCloseCode closeStatus, string statusDescription, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description WebSocketCloseCode closeStatus String statusDescription CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source CloseAsync(UInt16, String, CancellationToken) Declaration public Task CloseAsync(ushort closeStatus, string statusDescription, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description UInt16 closeStatus String statusDescription CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ConnectAsync(Uri, CancellationToken) Declaration public Task ConnectAsync(Uri uri, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Uri uri CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source ReceiveAsync(CancellationToken) Declaration public Task<WebSocketReceiveResult> ReceiveAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < WebSocketReceiveResult > | Improve this Doc View Source SendAsync(ArraySegment<Byte>, Boolean, Boolean, CancellationToken) Declaration public Task SendAsync(ArraySegment<byte> data, bool binary = false, bool endOfMessage = true, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description ArraySegment < Byte > data Boolean binary Boolean endOfMessage CancellationToken cancellationToken Returns Type Description Task Implements IWebSocket System.IDisposable"
  },
  "api/Strade.ShardingConfiguration.html": {
    "href": "api/Strade.ShardingConfiguration.html",
    "title": "Class ShardingConfiguration | Strade Developer Documentation",
    "keywords": "Class ShardingConfiguration Inheritance Object ShardingConfiguration Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade Assembly : Strade.dll Syntax public sealed class ShardingConfiguration Constructors | Improve this Doc View Source ShardingConfiguration(IEnumerable<Int32>, Int32) Declaration public ShardingConfiguration(IEnumerable<int> shards, int totalShards) Parameters Type Name Description IEnumerable < Int32 > shards Int32 totalShards | Improve this Doc View Source ShardingConfiguration(Int32) Declaration public ShardingConfiguration(int totalShards) Parameters Type Name Description Int32 totalShards Properties | Improve this Doc View Source Shards Declaration public IEnumerable<int> Shards { get; } Property Value Type Description IEnumerable < Int32 > | Improve this Doc View Source TotalShards Declaration public int TotalShards { get; } Property Value Type Description Int32"
  },
  "api/Strade.Util.CompressionContext.html": {
    "href": "api/Strade.Util.CompressionContext.html",
    "title": "Class CompressionContext | Strade Developer Documentation",
    "keywords": "Class CompressionContext Represents a compression context used to decompress incoming gateway payloads. Inheritance Object CompressionContext Implements IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Util Assembly : Strade.dll Syntax public sealed class CompressionContext : IDisposable Constructors | Improve this Doc View Source CompressionContext(GatewayCompressionMode) Initializes a new instance of the CompressionContext class. Declaration public CompressionContext(GatewayCompressionMode compressionMode = GatewayCompressionMode.Stream) Parameters Type Name Description GatewayCompressionMode compressionMode the compression mode to use. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified compressionMode is not defined in the GatewayCompressionMode enumeration. ArgumentOutOfRangeException thrown if the specified compressionMode is None . Properties | Improve this Doc View Source CompressionMode Gets the compression mode used. Declaration public GatewayCompressionMode CompressionMode { get; } Property Value Type Description GatewayCompressionMode the compression mode used. Methods | Improve this Doc View Source Decompress(ArraySegment<Byte>, MemoryStream) Decompresses a payload with the specified data to the specified payloadStream . Declaration public void Decompress(ArraySegment<byte> data, MemoryStream payloadStream) Parameters Type Name Description ArraySegment < Byte > data the payload data. MemoryStream payloadStream the output stream. Exceptions Type Condition ArgumentNullException thrown if the specified payloadStream is null . | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Reset() Resets the streams. Declaration public void Reset() Implements System.IDisposable"
  },
  "api/Strade.Util.Enums.EnumExtensions.html": {
    "href": "api/Strade.Util.Enums.EnumExtensions.html",
    "title": "Class EnumExtensions | Strade Developer Documentation",
    "keywords": "Class EnumExtensions Inheritance Object EnumExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Util.Enums Assembly : Strade.Rest.dll Syntax public static class EnumExtensions Methods | Improve this Doc View Source GetName<TEnum>(TEnum) Gets the name of the specified enum value . Declaration public static string GetName<TEnum>(this TEnum value) where TEnum : struct, Enum Parameters Type Name Description TEnum value the enum value. Returns Type Description String the name. Type Parameters Name Description TEnum the type of the enumeration. Exceptions Type Condition ArgumentNullException thrown if the specified value is null . | Improve this Doc View Source IsDefined(Enum) Gets a value indicating whether the specified enum value is defined. Declaration public static bool IsDefined(this Enum value) Parameters Type Name Description Enum value the enumeration value to check. Returns Type Description Boolean a value indicating whether the specified enum value is defined. Exceptions Type Condition ArgumentNullException thrown if the specified value is null ."
  },
  "api/Strade.Util.Enums.html": {
    "href": "api/Strade.Util.Enums.html",
    "title": "Namespace Strade.Util.Enums | Strade Developer Documentation",
    "keywords": "Namespace Strade.Util.Enums Classes EnumExtensions"
  },
  "api/Strade.Util.GatewayCloseCode.html": {
    "href": "api/Strade.Util.GatewayCloseCode.html",
    "title": "Enum GatewayCloseCode | Strade Developer Documentation",
    "keywords": "Enum GatewayCloseCode A set of gateway close codes. Namespace : Strade.Util Assembly : Strade.dll Syntax public enum GatewayCloseCode Fields Name Description Abnormal Denotes that the connection was closed from an abnormal connection error without receiving a close frame. AlreadyAuthenticated The client already completed the authentication handshake with the server-side, but send another request for authentication. Normally the client should try to authenticate once when opening the connection. AuthenticationFailed The authentication failed, check your bot / user token in the configuration. DisallowedIntentSpecified Denotes that a disallowed intent was specified in intents. InvalidApiVersion An invalid version was sent for the gateway. InvalidIntentSpecified Denotes that an invalid intent was specified for the gateway intents. InvalidSequenceNumber The server received an invalid sequence number while resuming the session. InvalidShardInformation The client provided invalid sharding information. NotAuthenticated A payload that requires authentication was send before sending the identify / resume payload. PayloadDecodeError An error occurred while decoding the JSON payload content on the server-side. Try updating. RateLimited The client exceeded the server-side rate limit and sent too many payloads in a short amount of time. Try updating. SessionTimeout The client session timed out. ShardingRequired The server decided that sharding is required due the bot serves too many guilds. Enable sharding to solve this issue and restart the bot. UnknownError An unknown error occurred and no further information is available. A reconnect may help. UnknownOperationCode The client sent an invalid operation code ( OpCode ). Maybe the client is outdated. Try updating. Extension Methods EnumExtensions.GetName<GatewayCloseCode>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Util.GatewayCompressionMode.html": {
    "href": "api/Strade.Util.GatewayCompressionMode.html",
    "title": "Enum GatewayCompressionMode | Strade Developer Documentation",
    "keywords": "Enum GatewayCompressionMode A set of modes used to configure how payloads should be compressed. Namespace : Strade.Util Assembly : Strade.dll Syntax public enum GatewayCompressionMode : byte Fields Name Description None Denotes that no compression should be used. Payload Denotes that the stream should be encrypted using Zlib compression on a per-payload basis. Stream Denotes that the stream should be encrypted using Zlib compression. Extension Methods EnumExtensions.GetName<GatewayCompressionMode>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Util.GatewayRateLimiter.html": {
    "href": "api/Strade.Util.GatewayRateLimiter.html",
    "title": "Class GatewayRateLimiter | Strade Developer Documentation",
    "keywords": "Class GatewayRateLimiter A rate limiter used to limit by requests per second. Inheritance Object GatewayRateLimiter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Util Assembly : Strade.dll Syntax public sealed class GatewayRateLimiter Constructors | Improve this Doc View Source GatewayRateLimiter(Int32) Initializes a new instance of the GatewayRateLimiter class. Declaration public GatewayRateLimiter(int payloadsPerSecond) Parameters Type Name Description Int32 payloadsPerSecond the number of payloads available in a single second. | Improve this Doc View Source GatewayRateLimiter(Int32, TimeSpan) Initializes a new instance of the GatewayRateLimiter class. Declaration public GatewayRateLimiter(int payloadsPerInterval, TimeSpan interval) Parameters Type Name Description Int32 payloadsPerInterval the number of payloads available in the specified interval . TimeSpan interval the interval after which the payload counter is reset. Methods | Improve this Doc View Source Enter() Waits until the next request is available. Declaration public void Enter() | Improve this Doc View Source EnterAsync(CancellationToken) Waits until the next request is available asynchronously. Declaration public Task EnterAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation."
  },
  "api/Strade.Util.GatewayReconnectBehavior.html": {
    "href": "api/Strade.Util.GatewayReconnectBehavior.html",
    "title": "Enum GatewayReconnectBehavior | Strade Developer Documentation",
    "keywords": "Enum GatewayReconnectBehavior A set of available gateway error handling options. Namespace : Strade.Util Assembly : Strade.dll Syntax public enum GatewayReconnectBehavior : byte Fields Name Description None Denotes that the connection should be closed. There is no reconnect attempt made. Reconnect Denotes that the connection should be opened without resuming the old session. Resume Denotes that the connection should be opened with resuming the old session. Extension Methods EnumExtensions.GetName<GatewayReconnectBehavior>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Util.html": {
    "href": "api/Strade.Util.html",
    "title": "Namespace Strade.Util | Strade Developer Documentation",
    "keywords": "Namespace Strade.Util Classes CompressionContext Represents a compression context used to decompress incoming gateway payloads. GatewayRateLimiter A rate limiter used to limit by requests per second. JsonContent Represents a HTTP content which holds JSON-encoded data. QueryParameterCollection RestRoute Constant definitions for RESTful routes to the discord API. UsernameUtil An utility class used for username validation. Structs PayloadSerializationContext Interfaces ICloneable<TSelf> An interface for clone-able objects. Enums GatewayCloseCode A set of gateway close codes. GatewayCompressionMode A set of modes used to configure how payloads should be compressed. GatewayReconnectBehavior A set of available gateway error handling options. RestResponseBehavior A set of rest error handling behaviors. RestResponseStatus A set of REST status codes that can occur. UsernameValidationResult A set of the return results for Validate(String) ."
  },
  "api/Strade.Util.ICloneable-1.html": {
    "href": "api/Strade.Util.ICloneable-1.html",
    "title": "Interface ICloneable<TSelf> | Strade Developer Documentation",
    "keywords": "Interface ICloneable<TSelf> An interface for clone-able objects. Namespace : Strade.Util Assembly : Strade.Rest.dll Syntax public interface ICloneable<TSelf> : ICloneable Type Parameters Name Description TSelf the type of the current type. Methods | Improve this Doc View Source Clone() Clones the current instance. Declaration TSelf Clone() Returns Type Description TSelf the cloned instance."
  },
  "api/Strade.Util.JsonContent.html": {
    "href": "api/Strade.Util.JsonContent.html",
    "title": "Class JsonContent | Strade Developer Documentation",
    "keywords": "Class JsonContent Represents a HTTP content which holds JSON-encoded data. Inheritance Object HttpContent JsonContent Implements IDisposable Inherited Members HttpContent.CopyToAsync(Stream) HttpContent.CopyToAsync(Stream, TransportContext) HttpContent.CreateContentReadStreamAsync() HttpContent.Dispose() HttpContent.Dispose(Boolean) HttpContent.LoadIntoBufferAsync() HttpContent.LoadIntoBufferAsync(Int64) HttpContent.ReadAsByteArrayAsync() HttpContent.ReadAsStreamAsync() HttpContent.ReadAsStringAsync() HttpContent.Headers Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Util Assembly : Strade.Rest.dll Syntax public sealed class JsonContent : HttpContent, IDisposable Constructors | Improve this Doc View Source JsonContent(Object, JsonSerializerOptions) Initializes a new instance of the JsonContent class. Declaration public JsonContent(object value, JsonSerializerOptions serializerOptions) Parameters Type Name Description Object value the JSON object to write. JsonSerializerOptions serializerOptions the JSON serializer options. Exceptions Type Condition ArgumentNullException thrown if the specified serializerOptions is null . Properties | Improve this Doc View Source Value Gets the object to write. Declaration public object Value { get; } Property Value Type Description Object the object to write. Methods | Improve this Doc View Source SerializeToStreamAsync(Stream, TransportContext) Declaration protected override Task SerializeToStreamAsync(Stream stream, TransportContext context) Parameters Type Name Description Stream stream TransportContext context Returns Type Description Task Overrides HttpContent.SerializeToStreamAsync(Stream, TransportContext) | Improve this Doc View Source TryComputeLength(out Int64) Declaration protected override bool TryComputeLength(out long length) Parameters Type Name Description Int64 length Returns Type Description Boolean Overrides HttpContent.TryComputeLength(Int64) Implements System.IDisposable"
  },
  "api/Strade.Util.PayloadSerializationContext.html": {
    "href": "api/Strade.Util.PayloadSerializationContext.html",
    "title": "Struct PayloadSerializationContext | Strade Developer Documentation",
    "keywords": "Struct PayloadSerializationContext Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Util Assembly : Strade.dll Syntax public struct PayloadSerializationContext Constructors | Improve this Doc View Source PayloadSerializationContext(DateTimeOffset, JsonSerializerOptions) Declaration public PayloadSerializationContext(DateTimeOffset timeReceived, JsonSerializerOptions serializerOptions) Parameters Type Name Description DateTimeOffset timeReceived JsonSerializerOptions serializerOptions Fields | Improve this Doc View Source EventType Declaration public string EventType Field Value Type Description String | Improve this Doc View Source IsValid Declaration public bool IsValid Field Value Type Description Boolean | Improve this Doc View Source OpCode Declaration public OpCode OpCode Field Value Type Description OpCode | Improve this Doc View Source SequenceNumber Declaration public int? SequenceNumber Field Value Type Description Nullable < Int32 > | Improve this Doc View Source SerializerOptions Declaration public JsonSerializerOptions SerializerOptions Field Value Type Description JsonSerializerOptions | Improve this Doc View Source TimeReceived Declaration public DateTimeOffset TimeReceived Field Value Type Description DateTimeOffset Methods | Improve this Doc View Source DeserializeAs<T>(ref Utf8JsonReader) Declaration public T DeserializeAs<T>(ref Utf8JsonReader jsonReader) Parameters Type Name Description Utf8JsonReader jsonReader Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source Validate() Declaration public void Validate()"
  },
  "api/Strade.Util.QueryParameterCollection.html": {
    "href": "api/Strade.Util.QueryParameterCollection.html",
    "title": "Class QueryParameterCollection | Strade Developer Documentation",
    "keywords": "Class QueryParameterCollection Inheritance Object Dictionary < String , String > QueryParameterCollection Implements IDictionary < String , String > ICollection < KeyValuePair < String , String >> IReadOnlyDictionary < String , String > IReadOnlyCollection < KeyValuePair < String , String >> IEnumerable < KeyValuePair < String , String >> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable Inherited Members System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<String, String>.Add(String, String) Dictionary<String, String>.Clear() Dictionary<String, String>.ContainsKey(String) Dictionary<String, String>.ContainsValue(String) Dictionary<String, String>.GetEnumerator() Dictionary<String, String>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, String>.OnDeserialization(Object) Dictionary<String, String>.Remove(String) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Add(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Contains(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, System.String>[], System.Int32) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Remove(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>.GetEnumerator() Dictionary<String, String>.ICollection.CopyTo(Array, Int32) Dictionary<String, String>.IDictionary.Add(Object, Object) Dictionary<String, String>.IDictionary.Contains(Object) Dictionary<String, String>.IDictionary.GetEnumerator() Dictionary<String, String>.IDictionary.Remove(Object) Dictionary<String, String>.IEnumerable.GetEnumerator() Dictionary<String, String>.TryGetValue(String, String) Dictionary<String, String>.Comparer Dictionary<String, String>.Count Dictionary<String, String>.Item[String] Dictionary<String, String>.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.IsReadOnly System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Values System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Values Dictionary<String, String>.ICollection.IsSynchronized Dictionary<String, String>.ICollection.SyncRoot Dictionary<String, String>.IDictionary.IsFixedSize Dictionary<String, String>.IDictionary.IsReadOnly Dictionary<String, String>.IDictionary.Item[Object] Dictionary<String, String>.IDictionary.Keys Dictionary<String, String>.IDictionary.Values Dictionary<String, String>.Values Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Util Assembly : Strade.Rest.dll Syntax public sealed class QueryParameterCollection : Dictionary<string, string>, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IReadOnlyDictionary<string, string>, IReadOnlyCollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable Constructors | Improve this Doc View Source QueryParameterCollection() Declaration public QueryParameterCollection() | Improve this Doc View Source QueryParameterCollection(QueryParameterCollection) Declaration public QueryParameterCollection(QueryParameterCollection query) Parameters Type Name Description QueryParameterCollection query | Improve this Doc View Source QueryParameterCollection(IDictionary<String, String>) Declaration public QueryParameterCollection(IDictionary<string, string> dictionary) Parameters Type Name Description IDictionary < String , String > dictionary | Improve this Doc View Source QueryParameterCollection(String, Boolean) Declaration public QueryParameterCollection(string queryString, bool decode = true) Parameters Type Name Description String queryString Boolean decode | Improve this Doc View Source QueryParameterCollection(Uri) Declaration public QueryParameterCollection(Uri uri) Parameters Type Name Description Uri uri Methods | Improve this Doc View Source ToString() Returns the built query string. Declaration public override string ToString() Returns Type Description String the built query string. Overrides Object.ToString() Implements System.Collections.Generic.IDictionary<TKey,TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IDictionary System.Collections.ICollection System.Collections.IEnumerable System.Runtime.Serialization.IDeserializationCallback System.Runtime.Serialization.ISerializable"
  },
  "api/Strade.Util.RestResponseBehavior.html": {
    "href": "api/Strade.Util.RestResponseBehavior.html",
    "title": "Enum RestResponseBehavior | Strade Developer Documentation",
    "keywords": "Enum RestResponseBehavior A set of rest error handling behaviors. Namespace : Strade.Util Assembly : Strade.Rest.dll Syntax public enum RestResponseBehavior : byte Fields Name Description Continue Denotes that the response should be processed. Retry Denotes that the request should be retried. ReturnDefault Denotes that the method should return the default value. If the maximum number of attempts (specified in MaxRequestRetries ) is reached then Throw is used. Throw Denotes that the method should throw an exception because the request failed. Extension Methods EnumExtensions.GetName<RestResponseBehavior>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Util.RestResponseStatus.html": {
    "href": "api/Strade.Util.RestResponseStatus.html",
    "title": "Enum RestResponseStatus | Strade Developer Documentation",
    "keywords": "Enum RestResponseStatus A set of REST status codes that can occur. Namespace : Strade.Util Assembly : Strade.Rest.dll Syntax public enum RestResponseStatus Fields Name Description AccountVerificationRequired Denotes that the client's account have to be verified. ApplicationHasNoBot Denotes that the OAuth2 application does not have a bot. ApplicationLimitReached Denotes that the OAuth2 application limit was reached. AttachmentLimitExceeded Denotes that the maximum number of attachments is reached ( 10 ). BadRequest Denotes that the request sent was not well formed. BotsOnlyEndpoint Denotes that the request endpoint can only be used by bots. BulkDeleteFailed Denotes that too few or too many messages to delete were provided (Must provide at least 2 and fewer than 100 messages to delete). CannotAcceptInvite Denotes that an invite was accepted to a guild the application's bot is not in. CannotExecuteOnSystemMessage Denotes that the requested action can not be executed on a system message. CannotSendEmptyMessage Denotes that it was tried to send an empty message. CannotSendMessagesInVoiceChannel Denotes that it was tried to send messages in a voice channel. CannotSendMessageToSpecifiedUser Denotes that the client is not allowed to send messages to the target user. ChannelLimitExceeded Denotes that the maximum number of guild channels is reached ( 500 ). FeatureTemporarilyDisabled Denotes that the feature has been disabled temporarily on the server-side. FriendLimitExceeded Denotes that the maximum number of friends is reached ( 1000 ). GuildLimitExceeded Denotes that the maximum number of guilds is reached ( 100 ). InvalidAccountType Denotes that an invalid account type was specified. InvalidApiVersion Denotes that an Invalid API version was specified. InvalidAuthenticationToken Denotes that an Invalid authentication token was passed. InvalidDmChannelRequest Denotes that the request can not be executed on a direct message channel. InvalidFormBody Denotes that an Invalid Form Body was passed. InvalidInviteCode Denotes that the specified invite code is either invalid or taken. InvalidOAuth2AccessToken Denotes that an Invalid OAuth2 access token was specified. InvalidOAuthState Denotes that an invalid OAuth state was used. InvalidPinMessage Denotes that the specified message to pin was not sent in the channel. InvalidStickerSent Denotes that an invalid sticker was sent. InviteLimitExceeded Denotes that the maximum number of invites is reached ( 1000 ). MessageAlreadyCrossposted Denotes that the target message has been already crossposted. MessageTooOld Denotes that a message provided was too old to bulk delete. MissingAccess Denotes that the client has no access to the request resource. MissingPermissions Denotes that the client had missing permissions for the operation. NotAuthenticated Denotes that the request required authentication or the authentication failed. NoteIsTooLong Denotes that the note is too long. NotFound Denotes that the requested resource was not found. OnlyAuthorCanEditMessage Denotes that the message tried to edit can only be edited by the user who created the message. PinLimitExceeded Denotes that the maximum number of pins is reached ( 50 ). RateLimited Denotes that the request is rate-limited. ReactionBlocked Denotes that the requested reaction is blocked. ReactionLimitExceeded Denotes that the maximum number of reactions is reached ( 20 ). RequestEntityTooLarge Denotes that the request body was too large. ResourceOverloaded Denotes that the requested resource is overloaded and not available at the moment. RoleLimitExceeded Denotes that the maximum number of guild roles is reached ( 250 ). ServerError Denotes that an internal server error occurred. Success Denotes that no error occurred. TemplateLimitReached Denotes that the maximum number of guild templates is reached ( 1 ). Unauthorized Denotes that the request was unauthorized. UnknownAccount Denotes that an unknown account was specified. UnknownApplication Denotes that an unknown application was specified. UnknownBan Denotes that an unknown ban was specified. UnknownBranch Denotes that an unknown branch was specified. UnknownBuild Denotes that an unknown build was specified. UnknownChannel Denotes that an unknown channel was specified. UnknownEmoji Denotes that an unknown emoji was specified. UnknownEntitlement Denotes that an unknown entitlement was specified. UnknownError Denotes that an unknown error occurred. UnknownGuild Denotes that an unknown guild was specified. UnknownIntegration Denotes that an unknown integration was specified. UnknownInvite Denotes that an unknown invite was specified. UnknownLobby Denotes that an unknown lobby was specified. UnknownMember Denotes that an unknown member was specified. UnknownMessage Denotes that an unknown message was specified. UnknownOverwrite Denotes that an unknown overwrite was specified. UnknownProvider Denotes that an unknown provider was specified. UnknownRedistributable Denotes that an unknown redistributable was specified. UnknownRole Denotes that an unknown role was specified. UnknownSKU Denotes that an unknown SKU was specified. UnknownStoreListing Denotes that an unknown store listing was specified. UnknownToken Denotes that an unknown token was specified. UnknownUser Denotes that the user was unknown. UnknownWebhook Denotes that an unknown webhook was specified. UserBanned Denotes that the client user has been banned from the guild. UserOnlyEndpoint Denotes that the request endpoint can not be used by bots. VerificationLevelNotFulfilled Denotes that the channel verification level is too high. WebhookLimitExceeded Denotes that the maximum number of webhooks is reached ( 10 ). WidgetDisabled Denotes that the guild widget is disabled. WriteRateLimitExceed Denotes that the channel writing too has hit the write rate limit. Extension Methods EnumExtensions.GetName<RestResponseStatus>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Util.RestRoute.html": {
    "href": "api/Strade.Util.RestRoute.html",
    "title": "Class RestRoute | Strade Developer Documentation",
    "keywords": "Class RestRoute Constant definitions for RESTful routes to the discord API. Inheritance Object RestRoute Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Util Assembly : Strade.Rest.dll Syntax public static class RestRoute Fields | Improve this Doc View Source ApplicationCommand Gets the commands route for a specific application. The first parameter is the snowflake identifier of the target application. The second parameter is the snowflake identifier of the target command. Declaration public static readonly string ApplicationCommand Field Value Type Description String | Improve this Doc View Source ApplicationCommands Gets the commands route for a specific application. The first parameter is the snowflake identifier of the target application. Declaration public static readonly string ApplicationCommands Field Value Type Description String | Improve this Doc View Source BotGateway Gets the route for retrieving the bot gateway information. Declaration public static readonly string BotGateway Field Value Type Description String | Improve this Doc View Source Channel Gets the channel route to a specific channel. The first parameter is the snowflake identifier of the target channel. Declaration public static readonly string Channel Field Value Type Description String | Improve this Doc View Source ChannelBulkDelete Gets the channel bulk message delete route to a specific channel. The first parameter is the snowflake identifier of the target channel. Declaration public static readonly string ChannelBulkDelete Field Value Type Description String | Improve this Doc View Source ChannelFollowers Gets the followers route for a specific channel. The first parameter it the snowflake identifier of the target channel. Declaration public static readonly string ChannelFollowers Field Value Type Description String | Improve this Doc View Source ChannelInvites Gets the invites route for a specific channel. The first parameter it the snowflake identifier of the target channel. Declaration public static readonly string ChannelInvites Field Value Type Description String | Improve this Doc View Source ChannelPermissionOverwrite Gets the permission overwrite route in a specific channel. The first parameter it the snowflake identifier of the target channel. The second parameter is the snowflake identifier of the overwrite target. Declaration public static readonly string ChannelPermissionOverwrite Field Value Type Description String | Improve this Doc View Source ChannelPin Gets the message pin route for a message in a specific channel. The first parameter it the snowflake identifier of the target channel. The second parameter is the snowflake identifier of the message. Declaration public static readonly string ChannelPin Field Value Type Description String | Improve this Doc View Source ChannelPins Gets the message pins route for a specific channel. The first parameter it the snowflake identifier of the target channel. Declaration public static readonly string ChannelPins Field Value Type Description String | Improve this Doc View Source ChannelRecipient Gets the recipient for a specific channel. The first parameter is the snowflake identifier of the target channel. The second parameter is the snowflake identifier of the recipient / user. Declaration public static readonly string ChannelRecipient Field Value Type Description String | Improve this Doc View Source ChannelTyping Gets the channel typing route to a specific channel. The first parameter is the snowflake identifier of the target channel. Declaration public static readonly string ChannelTyping Field Value Type Description String | Improve this Doc View Source ChannelWebhooks Gets the webhooks route in a specific channel. The first parameter it the snowflake identifier of the target channel. Declaration public static readonly string ChannelWebhooks Field Value Type Description String | Improve this Doc View Source CurrentApplication Gets the route to retrieve information about the current Oauth2 application. Declaration public static readonly string CurrentApplication Field Value Type Description String | Improve this Doc View Source CurrentUser Gets the route to retrieve information about the current user. Declaration public static readonly string CurrentUser Field Value Type Description String | Improve this Doc View Source CurrentUserConnections Gets the connections route for the current user. Declaration public static readonly string CurrentUserConnections Field Value Type Description String | Improve this Doc View Source CurrentUserNick Gets the route for changing the current user nickname. The first parameter is the snowflake identifier of the target guild. Declaration public static readonly string CurrentUserNick Field Value Type Description String | Improve this Doc View Source EmojiReactions Gets the reaction route for a specific message in a specific channel with a specific emote. The first parameter is the snowflake identifier of the target channel. The second parameter is the snowflake identifier of the target message. The third parameter is the emoji. Declaration public static readonly string EmojiReactions Field Value Type Description String | Improve this Doc View Source Gateway Gets the route for retrieving the gateway information. Declaration public static readonly string Gateway Field Value Type Description String | Improve this Doc View Source Guild Gets the guild route to a specific guild. The first parameter it the snowflake identifier of the target guild. Declaration public static readonly string Guild Field Value Type Description String | Improve this Doc View Source GuildApplicationCommand Gets the commands route for a specific application. The first parameter is the snowflake identifier of the target application.The second parameter is the snowflake identifier of the target guild. The third parameter is the snowflake identifier of the target command. Declaration public static readonly string GuildApplicationCommand Field Value Type Description String | Improve this Doc View Source GuildApplicationCommands Gets the commands route for a specific application. The first parameter is the snowflake identifier of the target application. The second parameter is the snowflake identifier of the target guild. Declaration public static readonly string GuildApplicationCommands Field Value Type Description String | Improve this Doc View Source GuildAuditLog Gets the audit log route for a specific guild. The first parameter it the snowflake identifier of the target guild. Declaration public static readonly string GuildAuditLog Field Value Type Description String | Improve this Doc View Source GuildBan Gets the ban route for retrieving the bans for a specified member in a specific guild. The first parameter is the snowflake identifier of the guild to retrieve the bans for. The second parameter is the snowflake identifier of the member. Declaration public static readonly string GuildBan Field Value Type Description String | Improve this Doc View Source GuildBans Gets the bans route for retrieving the bans for a specific guild. The first parameter is the snowflake identifier of the guild to retrieve the bans for. Declaration public static readonly string GuildBans Field Value Type Description String | Improve this Doc View Source GuildChannels Gets the channels route for a specific guild. The first parameter it the snowflake identifier of the target guild. Declaration public static readonly string GuildChannels Field Value Type Description String | Improve this Doc View Source GuildEmoji Gets the emoji route for a specific guild. The first parameter is the snowflake identifier of the target guild. The second parameter is the emoji id. Declaration public static readonly string GuildEmoji Field Value Type Description String | Improve this Doc View Source GuildEmojis Gets the emoji route for a specific guild. The first parameter is the snowflake identifier of the target guild. Declaration public static readonly string GuildEmojis Field Value Type Description String | Improve this Doc View Source GuildIntegration Gets the integration route for a specific guild. The first parameter is the snowflake identifier of the target guild to retrieve the integrations for. The second parameter is the snowflake identifier of the target integration. Declaration public static readonly string GuildIntegration Field Value Type Description String | Improve this Doc View Source GuildIntegrations Gets the integrations route for a specific guild. The first parameter is the snowflake identifier of the target guild to retrieve the integrations for. Declaration public static readonly string GuildIntegrations Field Value Type Description String | Improve this Doc View Source GuildIntegrationSync Gets the integration synchronization route for a specific guild. The first parameter is the snowflake identifier of the target guild to retrieve the integrations for. The second parameter is the snowflake identifier of the target integration. Declaration public static readonly string GuildIntegrationSync Field Value Type Description String | Improve this Doc View Source GuildInvites Gets the invites route for a specific guild. The first parameter it the snowflake identifier of the target guild. Declaration public static readonly string GuildInvites Field Value Type Description String | Improve this Doc View Source GuildMember Gets the member route for a specific member in a specified guild. The first parameter is the snowflake identifier of the target guild. The second parameter is the snowflake identifier of the guild member. Declaration public static readonly string GuildMember Field Value Type Description String | Improve this Doc View Source GuildMembers Gets the member for the members of the specified guild. The first parameter is the snowflake identifier of the target guild. Declaration public static readonly string GuildMembers Field Value Type Description String | Improve this Doc View Source GuildPrune Gets the prune route for a specific guild. The first parameter it the snowflake identifier of the target guild. Declaration public static readonly string GuildPrune Field Value Type Description String | Improve this Doc View Source GuildRole Gets the role route for a specific guild. The first parameter is the snowflake identifier of the target guild. The second parameter is the snowflake identifier of the target role. Declaration public static readonly string GuildRole Field Value Type Description String | Improve this Doc View Source GuildRoles Gets the roles route for a specific guild. The first parameter is the snowflake identifier of the target guild. Declaration public static readonly string GuildRoles Field Value Type Description String | Improve this Doc View Source Guilds Gets the guilds route. Declaration public static readonly string Guilds Field Value Type Description String | Improve this Doc View Source GuildVanityUrl Gets the vanity URL route for a specific guild. The first parameter is the snowflake identifier of the target guild. Declaration public static readonly string GuildVanityUrl Field Value Type Description String | Improve this Doc View Source GuildVoiceRegions Gets the voice regions route for a specified guild. The first parameter is the snowflake identifier of the target guild. Declaration public static readonly string GuildVoiceRegions Field Value Type Description String | Improve this Doc View Source GuildWebhooks Gets the webhooks route in a specific guild. The first parameter it the snowflake identifier of the target guild. Declaration public static readonly string GuildWebhooks Field Value Type Description String | Improve this Doc View Source GuildWidget Gets the widget route for a specific guild. The first parameter is the snowflake identifier of the target guild. Declaration public static readonly string GuildWidget Field Value Type Description String | Improve this Doc View Source InteractionCallback Gets the interaction callback response route for an interaction. The first parameter is the snowflake identifier of the target interaction. The second parameter is the continuation token of the interaction. Declaration public static readonly string InteractionCallback Field Value Type Description String | Improve this Doc View Source Invite Gets the invite route to a specific invite. The first parameter it the code of the target invite. Declaration public static readonly string Invite Field Value Type Description String | Improve this Doc View Source MemberRole Gets the route for a member's role. The first parameter is the guild snowflake identifier. The second parameter is the member snowflake identifier. The third parameter is the role snowflake identifier. Declaration public static readonly string MemberRole Field Value Type Description String | Improve this Doc View Source Message Gets the message route to a specific message in a specific channel. The first parameter it the snowflake identifier of the target channel. The second parameter it the snowflake identifier of the target message. Declaration public static readonly string Message Field Value Type Description String | Improve this Doc View Source MessageCrosspost Gets the crosspost route for a specific message in a specific channel. The first parameter is the snowflake identifier of the target channel. The second parameter is the snowflake identifier of the target message. Declaration public static readonly string MessageCrosspost Field Value Type Description String | Improve this Doc View Source Messages Gets the message route to messages in a specific channel. The first parameter it the snowflake identifier of the target channel. Declaration public static readonly string Messages Field Value Type Description String | Improve this Doc View Source OwnReaction Gets the reaction route for the current bot user to a specific reaction. The first parameter is the snowflake identifier of the target channel. The second parameter is the snowflake identifier of the target message. The third parameter is the reaction representation. Declaration public static readonly string OwnReaction Field Value Type Description String | Improve this Doc View Source Reaction Gets the reaction route for the a specific user to a specific reaction. The first parameter is the snowflake identifier of the target channel. The second parameter is the snowflake identifier of the target message. The third parameter is the reaction representation. The fourth parameter is the snowflake identifier of the target user. Declaration public static readonly string Reaction Field Value Type Description String | Improve this Doc View Source Reactions Gets the reaction route for a specific message in a specific channel. The first parameter is the snowflake identifier of the target channel. The second parameter is the snowflake identifier of the target message. Declaration public static readonly string Reactions Field Value Type Description String | Improve this Doc View Source ReactionWithEmote Gets the reaction route for the user to a specific reaction. The first parameter is the snowflake identifier of the target channel. The second parameter is the snowflake identifier of the target message. The third parameter is the reaction representation. Declaration public static readonly string ReactionWithEmote Field Value Type Description String | Improve this Doc View Source User Gets the user route to a specific user. The first parameter is the snowflake identifier of the target user. Declaration public static readonly string User Field Value Type Description String | Improve this Doc View Source UserChannels Gets the channel creation route for the current user. Declaration public static readonly string UserChannels Field Value Type Description String | Improve this Doc View Source UserGuild Gets the guild route for the current user. Declaration public static readonly string UserGuild Field Value Type Description String | Improve this Doc View Source UserGuilds Gets the current user guilds route. Declaration public static readonly string UserGuilds Field Value Type Description String | Improve this Doc View Source VoiceRegions Gets the voice regions route. Declaration public static readonly string VoiceRegions Field Value Type Description String | Improve this Doc View Source Webhook Gets the webhooks route to a specific webhook. The first parameter it the snowflake identifier of the target webhook. Declaration public static readonly string Webhook Field Value Type Description String | Improve this Doc View Source WebhookMessage Gets the message route for a specific webhook message. The first parameter it the snowflake identifier of the target webhook. The second parameter is the webhook token. The third parameter is the message id. Declaration public static readonly string WebhookMessage Field Value Type Description String | Improve this Doc View Source WebhookWithToken Gets the webhooks route to a specific webhook. The first parameter it the snowflake identifier of the target webhook. The second parameter is the webhook token. Declaration public static readonly string WebhookWithToken Field Value Type Description String"
  },
  "api/Strade.Util.UsernameUtil.html": {
    "href": "api/Strade.Util.UsernameUtil.html",
    "title": "Class UsernameUtil | Strade Developer Documentation",
    "keywords": "Class UsernameUtil An utility class used for username validation. Inheritance Object UsernameUtil Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Util Assembly : Strade.Rest.dll Syntax public static class UsernameUtil Fields | Improve this Doc View Source MaximumLength Gets the maximum length of an username. Declaration public const int MaximumLength = 32 Field Value Type Description Int32 | Improve this Doc View Source MinimumLength Gets the minimum length of an username. Declaration public const int MinimumLength = 2 Field Value Type Description Int32 Properties | Improve this Doc View Source InvalidSequences Gets a list of invalid sequences an username can not contain. Declaration public static IReadOnlyList<string> InvalidSequences { get; } Property Value Type Description IReadOnlyList < String > | Improve this Doc View Source ReservedUsernames Gets a list of reserved discord usernames (case-insensitive). Declaration public static IReadOnlyList<string> ReservedUsernames { get; } Property Value Type Description IReadOnlyList < String > Methods | Improve this Doc View Source IsReserved(String) Checks whether the specified username is reserved ( ReservedUsernames ). Declaration public static bool IsReserved(string username) Parameters Type Name Description String username the username to check. Returns Type Description Boolean a value indicating whether the specified username is reserved ( ReservedUsernames ). Exceptions Type Condition ArgumentNullException thrown if the specified username is null . | Improve this Doc View Source IsValid(String) Validates the specified username according to https://discord.com/developers/docs/resources/user#usernames-and-nicknames [external, Discord Developer Documentation]. Declaration public static bool IsValid(string username) Parameters Type Name Description String username the username to validate. Returns Type Description Boolean the username validation result; true if the specified username is valid; otherwise false . Exceptions Type Condition ArgumentNullException thrown if the specified username is null . | Improve this Doc View Source Validate(String) Validates the specified username according to https://discord.com/developers/docs/resources/user#usernames-and-nicknames [external, Discord Developer Documentation]. Declaration public static UsernameValidationResult Validate(string username) Parameters Type Name Description String username the username to validate. Returns Type Description UsernameValidationResult the username validation result. Remarks All checks are included except checking of zero-width and non-rendering characters. The checks are made in the following order: Blank Ensures that the username is blank and invalid. MinimumLengthRequired Ensures that the username does not satisfy the minimum required length. MaximumLengthExceeded Ensures that the username is longer than allowed. Reserved Ensures that the username contains an invalid substring. InvalidCharacter Ensures that the username is reserved. If all of them pass then Success is returned. Exceptions Type Condition ArgumentNullException thrown if the specified username is null ."
  },
  "api/Strade.Util.UsernameValidationResult.html": {
    "href": "api/Strade.Util.UsernameValidationResult.html",
    "title": "Enum UsernameValidationResult | Strade Developer Documentation",
    "keywords": "Enum UsernameValidationResult A set of the return results for Validate(String) . Namespace : Strade.Util Assembly : Strade.Rest.dll Syntax public enum UsernameValidationResult : byte Fields Name Description Blank Denotes that the username is blank and invalid. InvalidCharacter Denotes that the username contains an invalid substring. MaximumLengthExceeded Denotes that the username is longer than allowed. MinimumLengthRequired Denotes that the username does not satisfy the minimum required length. Reserved Denotes that the username is reserved. Success Denotes that the username is valid. Extension Methods EnumExtensions.GetName<UsernameValidationResult>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Voice.AudioProviderFactory.html": {
    "href": "api/Strade.Voice.AudioProviderFactory.html",
    "title": "Delegate AudioProviderFactory | Strade Developer Documentation",
    "keywords": "Delegate AudioProviderFactory Namespace : Strade.Voice Assembly : Strade.Voice.Abstractions.dll Syntax public delegate ValueTask<IAudioProvider> AudioProviderFactory(Stream stream, CancellationToken cancellationToken = default(CancellationToken)); Parameters Type Name Description Stream stream CancellationToken cancellationToken Returns Type Description ValueTask < IAudioProvider >"
  },
  "api/Strade.Voice.AudioService.html": {
    "href": "api/Strade.Voice.AudioService.html",
    "title": "Class AudioService | Strade Developer Documentation",
    "keywords": "Class AudioService Inheritance Object BaseAudioService AudioService Implements IAudioService IAudioTrackManager IDisposable Inherited Members BaseAudioService.PlayerPaused BaseAudioService.PlayerResumed BaseAudioService.PlayerVolumeChanged BaseAudioService.TrackEnded BaseAudioService.TrackSeek BaseAudioService.TrackStarted BaseAudioService.Providers BaseAudioService.TrackManager BaseAudioService.Dispose() BaseAudioService.FindProviders(String) BaseAudioService.GetPlayer(Snowflake) BaseAudioService.GetPlayer(IGuild) BaseAudioService.GetPlayer<TPlayer>(IGuild) BaseAudioService.JoinAsync(Snowflake, Snowflake, CancellationToken) BaseAudioService.JoinAsync(IVoiceChannel, CancellationToken) BaseAudioService.JoinAsync<TPlayer>(IVoiceChannel, AudioPlayerFactory<TPlayer>, CancellationToken) BaseAudioService.LoadTrackAsync(String, AudioTrackProviderOptions, CancellationToken) BaseAudioService.LoadTrackAsync(String, String, AudioTrackProviderOptions, CancellationToken) BaseAudioService.LoadTracksAsync(String, AudioTrackProviderOptions, Int32, CancellationToken) BaseAudioService.LoadTracksAsync(String, String, AudioTrackProviderOptions, Int32, CancellationToken) BaseAudioService.DispatchPausedAsync(PlayerPausedEventArgs) BaseAudioService.DispatchResumedAsync(PlayerResumedEventArgs) BaseAudioService.DispatchTrackEndedAsync(PlayerTrackEndedEventArgs) BaseAudioService.DispatchTrackSeekAsync(PlayerTrackSeekEventArgs) BaseAudioService.DispatchTrackStartedAsync(PlayerTrackStartedEventArgs) BaseAudioService.DispatchVolumeChangedAsync(PlayerVolumeChangedEventArgs) BaseAudioService.OnPausedAsync(PlayerPausedEventArgs) BaseAudioService.OnResumedAsync(PlayerResumedEventArgs) BaseAudioService.OnTrackEndedAsync(PlayerTrackEndedEventArgs) BaseAudioService.OnTrackStartedAsync(PlayerTrackStartedEventArgs) BaseAudioService.OnVolumeChangedAsync(PlayerVolumeChangedEventArgs) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice Assembly : Strade.Voice.dll Syntax public class AudioService : BaseAudioService, IAudioService, IAudioTrackManager, IDisposable Constructors | Improve this Doc View Source AudioService(DiscordClient, AudioServiceOptions, ILogger) Declaration public AudioService(DiscordClient client, AudioServiceOptions options = null, ILogger logger = null) Parameters Type Name Description DiscordClient client AudioServiceOptions options ILogger logger Methods | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides BaseAudioService.Dispose(Boolean) | Improve this Doc View Source GetPlayer<TPlayer>(Snowflake) Declaration public override TPlayer GetPlayer<TPlayer>(Snowflake guildId) where TPlayer : AudioPlayer Parameters Type Name Description Snowflake guildId Returns Type Description TPlayer Type Parameters Name Description TPlayer Overrides BaseAudioService.GetPlayer<TPlayer>(Snowflake) | Improve this Doc View Source HandleChannelUpdated(Object, ChannelUpdatedEventArgs) Declaration protected virtual Task HandleChannelUpdated(object sender, ChannelUpdatedEventArgs eventArgs) Parameters Type Name Description Object sender ChannelUpdatedEventArgs eventArgs Returns Type Description Task | Improve this Doc View Source HandleVoiceServerUpdated(Object, VoiceServerUpdatedEventArgs) Declaration protected virtual Task HandleVoiceServerUpdated(object sender, VoiceServerUpdatedEventArgs eventArgs) Parameters Type Name Description Object sender VoiceServerUpdatedEventArgs eventArgs Returns Type Description Task | Improve this Doc View Source JoinAsync<TPlayer>(Snowflake, Snowflake, AudioPlayerFactory<TPlayer>, CancellationToken) Declaration public override ValueTask<TPlayer> JoinAsync<TPlayer>(Snowflake guildId, Snowflake voiceChannelId, AudioPlayerFactory<TPlayer> playerFactory, CancellationToken cancellationToken = default(CancellationToken)) where TPlayer : AudioPlayer Parameters Type Name Description Snowflake guildId Snowflake voiceChannelId AudioPlayerFactory <TPlayer> playerFactory CancellationToken cancellationToken Returns Type Description ValueTask <TPlayer> Type Parameters Name Description TPlayer Overrides Strade.Voice.BaseAudioService.JoinAsync<TPlayer>(Strade.Entities.Snowflake, Strade.Entities.Snowflake, Strade.Voice.Players.AudioPlayerFactory<TPlayer>, System.Threading.CancellationToken) | Improve this Doc View Source NotifyDisposal(DefaultAudioPlayerContext) Declaration protected virtual void NotifyDisposal(DefaultAudioPlayerContext context) Parameters Type Name Description DefaultAudioPlayerContext context | Improve this Doc View Source TryGetPlayer(IAudioPlayerContext, out AudioPlayer) Declaration protected virtual bool TryGetPlayer(IAudioPlayerContext context, out AudioPlayer player) Parameters Type Name Description IAudioPlayerContext context AudioPlayer player Returns Type Description Boolean Implements IAudioService IAudioTrackManager System.IDisposable"
  },
  "api/Strade.Voice.AudioServiceOptions.html": {
    "href": "api/Strade.Voice.AudioServiceOptions.html",
    "title": "Class AudioServiceOptions | Strade Developer Documentation",
    "keywords": "Class AudioServiceOptions Inheritance Object AudioServiceOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice Assembly : Strade.Voice.dll Syntax public sealed class AudioServiceOptions Properties | Improve this Doc View Source AutoAdjustBitrate Declaration public bool AutoAdjustBitrate { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ConnectionOptions Declaration public AudioOptions ConnectionOptions { get; set; } Property Value Type Description AudioOptions | Improve this Doc View Source DefaultVolume Declaration public float DefaultVolume { get; set; } Property Value Type Description Single | Improve this Doc View Source EncryptionManager Declaration public IEncryptionManager EncryptionManager { get; set; } Property Value Type Description IEncryptionManager | Improve this Doc View Source InvalidationInterval Declaration public TimeSpan InvalidationInterval { get; set; } Property Value Type Description TimeSpan | Improve this Doc View Source InvalidationThreshold Declaration public TimeSpan InvalidationThreshold { get; set; } Property Value Type Description TimeSpan | Improve this Doc View Source ProviderFactory Declaration public AudioProviderFactory ProviderFactory { get; set; } Property Value Type Description AudioProviderFactory | Improve this Doc View Source TrackManager Declaration public IAudioTrackManager TrackManager { get; set; } Property Value Type Description IAudioTrackManager | Improve this Doc View Source WebSocketFactory Declaration public WebSocketFactory WebSocketFactory { get; set; } Property Value Type Description WebSocketFactory"
  },
  "api/Strade.Voice.BaseAudioService.html": {
    "href": "api/Strade.Voice.BaseAudioService.html",
    "title": "Class BaseAudioService | Strade Developer Documentation",
    "keywords": "Class BaseAudioService Inheritance Object BaseAudioService AudioService Implements IAudioService IAudioTrackManager IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice Assembly : Strade.Voice.Abstractions.dll Syntax public abstract class BaseAudioService : IAudioService, IAudioTrackManager, IDisposable Constructors | Improve this Doc View Source BaseAudioService(IAudioTrackManager, Boolean) Declaration protected BaseAudioService(IAudioTrackManager trackManager, bool ownsTrackManager = true) Parameters Type Name Description IAudioTrackManager trackManager Boolean ownsTrackManager Properties | Improve this Doc View Source Providers Declaration public IEnumerable<IAudioTrackProvider> Providers { get; } Property Value Type Description IEnumerable < IAudioTrackProvider > | Improve this Doc View Source TrackManager Declaration public IAudioTrackManager TrackManager { get; } Property Value Type Description IAudioTrackManager Methods | Improve this Doc View Source DispatchPausedAsync(PlayerPausedEventArgs) Dispatches the PlayerPaused event asynchronously. Declaration protected Task DispatchPausedAsync(PlayerPausedEventArgs eventArgs) Parameters Type Name Description PlayerPausedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified eventArgs parameter is null . | Improve this Doc View Source DispatchResumedAsync(PlayerResumedEventArgs) Dispatches the PlayerResumed event asynchronously. Declaration protected Task DispatchResumedAsync(PlayerResumedEventArgs eventArgs) Parameters Type Name Description PlayerResumedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified eventArgs parameter is null . | Improve this Doc View Source DispatchTrackEndedAsync(PlayerTrackEndedEventArgs) Dispatches the TrackEnded event asynchronously. Declaration protected Task DispatchTrackEndedAsync(PlayerTrackEndedEventArgs eventArgs) Parameters Type Name Description PlayerTrackEndedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified eventArgs parameter is null . | Improve this Doc View Source DispatchTrackSeekAsync(PlayerTrackSeekEventArgs) Dispatches the PlayerTrackSeekEventArgs event asynchronously. Declaration protected Task DispatchTrackSeekAsync(PlayerTrackSeekEventArgs eventArgs) Parameters Type Name Description PlayerTrackSeekEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified eventArgs parameter is null . | Improve this Doc View Source DispatchTrackStartedAsync(PlayerTrackStartedEventArgs) Dispatches the TrackStarted event asynchronously. Declaration protected Task DispatchTrackStartedAsync(PlayerTrackStartedEventArgs eventArgs) Parameters Type Name Description PlayerTrackStartedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified eventArgs parameter is null . | Improve this Doc View Source DispatchVolumeChangedAsync(PlayerVolumeChangedEventArgs) Dispatches the PlayerVolumeChanged event asynchronously. Declaration protected Task DispatchVolumeChangedAsync(PlayerVolumeChangedEventArgs eventArgs) Parameters Type Name Description PlayerVolumeChangedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified eventArgs parameter is null . | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Releases the unmanaged resources used by the BaseAudioService and optionally releases the managed resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. | Improve this Doc View Source FindProviders(String) Declaration public IEnumerable<IAudioTrackProvider> FindProviders(string name) Parameters Type Name Description String name Returns Type Description IEnumerable < IAudioTrackProvider > | Improve this Doc View Source GetPlayer(IGuild) Declaration public AudioPlayer GetPlayer(IGuild guild) Parameters Type Name Description IGuild guild Returns Type Description AudioPlayer | Improve this Doc View Source GetPlayer(Snowflake) Declaration public AudioPlayer GetPlayer(Snowflake guildId) Parameters Type Name Description Snowflake guildId Returns Type Description AudioPlayer | Improve this Doc View Source GetPlayer<TPlayer>(IGuild) Declaration public TPlayer GetPlayer<TPlayer>(IGuild guild) where TPlayer : AudioPlayer Parameters Type Name Description IGuild guild Returns Type Description TPlayer Type Parameters Name Description TPlayer | Improve this Doc View Source GetPlayer<TPlayer>(Snowflake) Declaration public abstract TPlayer GetPlayer<TPlayer>(Snowflake guildId) where TPlayer : AudioPlayer Parameters Type Name Description Snowflake guildId Returns Type Description TPlayer Type Parameters Name Description TPlayer | Improve this Doc View Source JoinAsync(IVoiceChannel, CancellationToken) Declaration public ValueTask<AudioPlayer> JoinAsync(IVoiceChannel voiceChannel, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IVoiceChannel voiceChannel CancellationToken cancellationToken Returns Type Description ValueTask < AudioPlayer > | Improve this Doc View Source JoinAsync(Snowflake, Snowflake, CancellationToken) Declaration public ValueTask<AudioPlayer> JoinAsync(Snowflake guildId, Snowflake voiceChannelId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId Snowflake voiceChannelId CancellationToken cancellationToken Returns Type Description ValueTask < AudioPlayer > | Improve this Doc View Source JoinAsync<TPlayer>(IVoiceChannel, AudioPlayerFactory<TPlayer>, CancellationToken) Declaration public ValueTask<TPlayer> JoinAsync<TPlayer>(IVoiceChannel voiceChannel, AudioPlayerFactory<TPlayer> playerFactory, CancellationToken cancellationToken = default(CancellationToken)) where TPlayer : AudioPlayer Parameters Type Name Description IVoiceChannel voiceChannel AudioPlayerFactory <TPlayer> playerFactory CancellationToken cancellationToken Returns Type Description ValueTask <TPlayer> Type Parameters Name Description TPlayer | Improve this Doc View Source JoinAsync<TPlayer>(Snowflake, Snowflake, AudioPlayerFactory<TPlayer>, CancellationToken) Declaration public abstract ValueTask<TPlayer> JoinAsync<TPlayer>(Snowflake guildId, Snowflake voiceChannelId, AudioPlayerFactory<TPlayer> playerFactory, CancellationToken cancellationToken = default(CancellationToken)) where TPlayer : AudioPlayer Parameters Type Name Description Snowflake guildId Snowflake voiceChannelId AudioPlayerFactory <TPlayer> playerFactory CancellationToken cancellationToken Returns Type Description ValueTask <TPlayer> Type Parameters Name Description TPlayer | Improve this Doc View Source LoadTrackAsync(String, AudioTrackProviderOptions, CancellationToken) Declaration public Task<IAudioTrack> LoadTrackAsync(string query, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query AudioTrackProviderOptions options CancellationToken cancellationToken Returns Type Description Task < IAudioTrack > | Improve this Doc View Source LoadTrackAsync(String, String, AudioTrackProviderOptions, CancellationToken) Declaration public Task<IAudioTrack> LoadTrackAsync(string query, string provider, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query String provider AudioTrackProviderOptions options CancellationToken cancellationToken Returns Type Description Task < IAudioTrack > | Improve this Doc View Source LoadTracksAsync(String, AudioTrackProviderOptions, Int32, CancellationToken) Declaration public Task<ITrackLoadResult> LoadTracksAsync(string query, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), int count = 100, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query AudioTrackProviderOptions options Int32 count CancellationToken cancellationToken Returns Type Description Task < ITrackLoadResult > | Improve this Doc View Source LoadTracksAsync(String, String, AudioTrackProviderOptions, Int32, CancellationToken) Declaration public Task<ITrackLoadResult> LoadTracksAsync(string query, string provider, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), int count = 100, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query String provider AudioTrackProviderOptions options Int32 count CancellationToken cancellationToken Returns Type Description Task < ITrackLoadResult > | Improve this Doc View Source OnPausedAsync(PlayerPausedEventArgs) Handles the PlayerPaused event asynchronously. Declaration protected virtual Task OnPausedAsync(PlayerPausedEventArgs eventArgs) Parameters Type Name Description PlayerPausedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnResumedAsync(PlayerResumedEventArgs) Handles the PlayerResumed event asynchronously. Declaration protected virtual Task OnResumedAsync(PlayerResumedEventArgs eventArgs) Parameters Type Name Description PlayerResumedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnTrackEndedAsync(PlayerTrackEndedEventArgs) Handles the TrackEnded event asynchronously. Declaration protected virtual Task OnTrackEndedAsync(PlayerTrackEndedEventArgs eventArgs) Parameters Type Name Description PlayerTrackEndedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnTrackStartedAsync(PlayerTrackStartedEventArgs) Handles the TrackStarted event asynchronously. Declaration protected virtual Task OnTrackStartedAsync(PlayerTrackStartedEventArgs eventArgs) Parameters Type Name Description PlayerTrackStartedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnVolumeChangedAsync(PlayerVolumeChangedEventArgs) Handles the PlayerVolumeChanged event asynchronously. Declaration protected virtual Task OnVolumeChangedAsync(PlayerVolumeChangedEventArgs eventArgs) Parameters Type Name Description PlayerVolumeChangedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. Events | Improve this Doc View Source PlayerPaused Declaration public event AsyncEventHandler<PlayerPausedEventArgs> PlayerPaused Event Type Type Description AsyncEventHandler < PlayerPausedEventArgs > | Improve this Doc View Source PlayerResumed Declaration public event AsyncEventHandler<PlayerResumedEventArgs> PlayerResumed Event Type Type Description AsyncEventHandler < PlayerResumedEventArgs > | Improve this Doc View Source PlayerVolumeChanged Declaration public event AsyncEventHandler<PlayerVolumeChangedEventArgs> PlayerVolumeChanged Event Type Type Description AsyncEventHandler < PlayerVolumeChangedEventArgs > | Improve this Doc View Source TrackEnded Declaration public event AsyncEventHandler<PlayerTrackEndedEventArgs> TrackEnded Event Type Type Description AsyncEventHandler < PlayerTrackEndedEventArgs > | Improve this Doc View Source TrackSeek Declaration public event AsyncEventHandler<PlayerTrackSeekEventArgs> TrackSeek Event Type Type Description AsyncEventHandler < PlayerTrackSeekEventArgs > | Improve this Doc View Source TrackStarted Declaration public event AsyncEventHandler<PlayerTrackStartedEventArgs> TrackStarted Event Type Type Description AsyncEventHandler < PlayerTrackStartedEventArgs > Implements IAudioService IAudioTrackManager System.IDisposable"
  },
  "api/Strade.Voice.Connection.AudioConnection.html": {
    "href": "api/Strade.Voice.Connection.AudioConnection.html",
    "title": "Class AudioConnection | Strade Developer Documentation",
    "keywords": "Class AudioConnection Inheritance Object AudioConnection Implements IAsyncDisposable IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Connection Assembly : Strade.Voice.Connection.dll Syntax public class AudioConnection : IAsyncDisposable, IDisposable Constructors | Improve this Doc View Source AudioConnection(AudioOptions, Snowflake, WebSocketFactory, IEncryptionManager, UInt64, String, ILogger) Initializes a new instance of the AudioConnection class. Declaration public AudioConnection(AudioOptions options, Snowflake guildId, WebSocketFactory webSocketFactory, IEncryptionManager encryptionManager, ulong currentUserId, string label = null, ILogger logger = null) Parameters Type Name Description AudioOptions options the options for the audio connection. Snowflake guildId the snowflake identifier of the guild the connection is for. WebSocketFactory webSocketFactory the WebSocket factory used to create WebSockets for the audio connection to the voice server. IEncryptionManager encryptionManager the encryption manager used to find encryption providers for securing the audio connection to the voice server. UInt64 currentUserId the snowflake identifier of the current user that owns the discord client. String label ILogger logger the optional logger used for debug logging; or null to disable logging. Remarks After passing the specified options to the audio connection, the options are made read-only to avoid modifications. Exceptions Type Condition ArgumentNullException thrown if the specified webSocketFactory is null . ArgumentNullException thrown if the specified options parameter is null . ArgumentNullException thrown if the specified encryptionManager is null . Fields | Improve this Doc View Source VoiceVersion Gets the voice version used for the voice gateway. Declaration public const int VoiceVersion = 4 Field Value Type Description Int32 Remarks More details can be found on https://discord.com/developers/docs/topics/voice-connections#voice-gateway-versioning-gateway-versions [external, Discord Developer Documentation]. Properties | Improve this Doc View Source ConnectionStatus Gets the current connection status. Declaration public AudioConnectionStatus ConnectionStatus { get; } Property Value Type Description AudioConnectionStatus the current connection status. | Improve this Doc View Source EncryptionProvider Gets the encryption provider. Declaration public IEncryptionProvider EncryptionProvider { get; } Property Value Type Description IEncryptionProvider the encryption provider; or null if not selected. Exceptions Type Condition ObjectDisposedException thrown if the AudioConnection is disposed. | Improve this Doc View Source Endpoint Declaration public string Endpoint { get; } Property Value Type Description String | Improve this Doc View Source GuildId Gets the snowflake identifier of the guild the audio connection is for. Declaration public Snowflake GuildId { get; } Property Value Type Description Snowflake the snowflake identifier of the guild the audio connection is for. | Improve this Doc View Source IsOpen Gets a value indicating whether the connection is open. Declaration public bool IsOpen { get; } Property Value Type Description Boolean a value indicating whether the connection is open. | Improve this Doc View Source IsReady Gets a value indicating whether the connection is ready. Declaration public bool IsReady { get; } Property Value Type Description Boolean a value indicating whether the connection is ready. | Improve this Doc View Source Label Declaration public string Label { get; } Property Value Type Description String | Improve this Doc View Source Latency Gets the connection latency. Declaration public TimeSpan? Latency { get; } Property Value Type Description Nullable < TimeSpan > the connection latency; or null if unknown. | Improve this Doc View Source LocalEndPoint Gets the local end point of the current machine discovered using the voice server's IP discovery feature. Declaration public IPEndPoint LocalEndPoint { get; } Property Value Type Description IPEndPoint the local end point of the current machine discovered using the voice server's IP discovery feature; or null if not yet discovered. Remarks See https://discord.com/developers/docs/topics/voice-connections#ip-discovery or UDP hole-punching for reference about discovering the local end point. | Improve this Doc View Source Logger Gets the logger used for debug logging. Declaration public ILogger Logger { get; } Property Value Type Description ILogger the logger used for debug logging; or null if logging is disabled. | Improve this Doc View Source Options Gets the options for the audio connection. Declaration public AudioOptions Options { get; } Property Value Type Description AudioOptions the options for the audio connection. | Improve this Doc View Source RemoteEndPoint Gets the remote end point of the voice server connected to. Declaration public IPEndPoint RemoteEndPoint { get; } Property Value Type Description IPEndPoint the remote end point of the voice server connected to; or null if not connected. | Improve this Doc View Source SecretKey Gets the (last) secret key used for encryption for securing the audio connection. Declaration public byte[] SecretKey { get; } Property Value Type Description Byte [] the (last) secret key used for encryption for securing the audio connection; or null if the connection was never ready. | Improve this Doc View Source Sender Gets the sender used for sending audio. Declaration public AudioSender Sender { get; } Property Value Type Description AudioSender the sender used for sending audio; or null if the connection is not open. Exceptions Type Condition ObjectDisposedException thrown if the AudioConnection is disposed. | Improve this Doc View Source SSRC Gets the client's SSRC. Declaration public uint? SSRC { get; } Property Value Type Description Nullable < UInt32 > the client's SSRC; or null if unknown. | Improve this Doc View Source Token Declaration public string Token { get; } Property Value Type Description String | Improve this Doc View Source UdpClient Gets the UDP client used for sending or receiving data to / from the voice server using UDP. Declaration protected UdpClient UdpClient { get; } Property Value Type Description UdpClient | Improve this Doc View Source WebSocket Gets the WebSocket used for communication with the voice WebSocket server. Declaration public IWebSocket WebSocket { get; } Property Value Type Description IWebSocket Methods | Improve this Doc View Source ConnectAsync(Boolean, CancellationToken) Connects to a voice server asynchronously. Declaration public Task ConnectAsync(bool mayResume = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Boolean mayResume CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ObjectDisposedException thrown if the AudioConnection is disposed. | Improve this Doc View Source DisconnectAsync(UInt16, String, CancellationToken) Disconnects from the audio connection asynchronously. Declaration public Task DisconnectAsync(ushort closeCode, string closeDescription = \"Disconnected.\", CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description UInt16 closeCode the close code indicating why the connection was closed. String closeDescription the close status description indicating why the connection was closed. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ObjectDisposedException thrown if the AudioConnection is disposed. | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source DisposeAsync() Declaration public ValueTask DisposeAsync() Returns Type Description ValueTask | Improve this Doc View Source DisposeAsyncCore() Declaration protected virtual ValueTask DisposeAsyncCore() Returns Type Description ValueTask | Improve this Doc View Source GetReconnectMode(VoiceCloseCode) Gets the reconnect mode used for the specified closeCode . Declaration protected virtual AudioConnectionReconnectMode GetReconnectMode(VoiceCloseCode closeCode) Parameters Type Name Description VoiceCloseCode closeCode the close code indicating why the connection was closed. Returns Type Description AudioConnectionReconnectMode the reconnect mode used for the specified closeCode . Exceptions Type Condition ObjectDisposedException thrown if the AudioConnection is disposed. | Improve this Doc View Source HandleClientDisconnectAsync(ClientDisconnectPayload, CancellationToken) Declaration protected virtual Task HandleClientDisconnectAsync(ClientDisconnectPayload payload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description ClientDisconnectPayload payload CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source HandleConnectionCloseAsync(WebSocketCloseCode, String, CancellationToken) Declaration protected virtual Task HandleConnectionCloseAsync(WebSocketCloseCode closeCode, string statusDescription, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description WebSocketCloseCode closeCode String statusDescription CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source HandleHeartbeatAckAsync(Int64, CancellationToken) Declaration protected virtual Task HandleHeartbeatAckAsync(long nonce, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Int64 nonce CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source HandleHelloAsync(HelloPayload, CancellationToken) Declaration protected virtual Task HandleHelloAsync(HelloPayload payload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description HelloPayload payload CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source HandleReadyAsync(ReadyPayload, CancellationToken) Declaration protected virtual Task HandleReadyAsync(ReadyPayload payload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description ReadyPayload payload CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source HandleResumedAsync(CancellationToken) Declaration protected virtual Task HandleResumedAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source HandleSessionDescriptionAsync(SessionDescriptionPayload, CancellationToken) Declaration protected virtual Task HandleSessionDescriptionAsync(SessionDescriptionPayload payload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description SessionDescriptionPayload payload CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source HandleSpeakingAsync(SpeakingPayload, CancellationToken) Declaration protected virtual Task HandleSpeakingAsync(SpeakingPayload payload, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description SpeakingPayload payload CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source OnClientDisconnectedAsync(ClientDisconnectedEventArgs) Dispatches the ClientDisconnected event asynchronously. Declaration protected virtual Task OnClientDisconnectedAsync(ClientDisconnectedEventArgs eventArgs) Parameters Type Name Description ClientDisconnectedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnConnectionClosedAsync(ConnectionClosedEventArgs) Dispatches the ConnectionClosed event asynchronously. Declaration protected virtual Task OnConnectionClosedAsync(ConnectionClosedEventArgs eventArgs) Parameters Type Name Description ConnectionClosedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnConnectionStatusChangedAsync(ConnectionStatusChangedEventArgs) Dispatches the ConnectionStatusChanged event asynchronously. Declaration protected virtual Task OnConnectionStatusChangedAsync(ConnectionStatusChangedEventArgs eventArgs) Parameters Type Name Description ConnectionStatusChangedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnSpeakingAsync(SpeakingEventArgs) Dispatches the Speaking event asynchronously. Declaration protected virtual Task OnSpeakingAsync(SpeakingEventArgs eventArgs) Parameters Type Name Description SpeakingEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source ProcessDataAsync(ArraySegment<Byte>, CancellationToken) Declaration protected virtual Task ProcessDataAsync(ArraySegment<byte> data, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description ArraySegment < Byte > data CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source SendAsync(VoiceOpCode, Object, CancellationToken) Sends a payload with the specified opCode and data asynchronously. Declaration protected Task SendAsync(VoiceOpCode opCode, object data, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description VoiceOpCode opCode the payload operation code that indicates for what the payload is for and how it should be processed and parsed by the gateway. Object data the payload data content to serialize. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source SendHeartbeatAsync(CancellationToken) Declaration protected Task SendHeartbeatAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source SetSpeakingAsync(SpeakingFlags, Int32, CancellationToken) Sets whether the current is speaking asynchronously. Declaration public Task SetSpeakingAsync(SpeakingFlags flags, int delay = 0, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description SpeakingFlags flags the flags for the payload. Int32 delay the delay in milliseconds when the speaking is active. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ObjectDisposedException thrown if the AudioConnection is disposed. | Improve this Doc View Source TryGetUser(UInt32, out Snowflake) Tries to get the snowflake identifier of a user by using the associated SSRC (Synchronization source identifier). Declaration public bool TryGetUser(uint ssrc, out Snowflake userId) Parameters Type Name Description UInt32 ssrc the SSRC of the user to find (Synchronization source identifier). Snowflake userId (out) the snowflake identifier of the user. Returns Type Description Boolean a value indicating whether the user could be found by the associated SSRC (Synchronization source identifier). Exceptions Type Condition ObjectDisposedException thrown if the AudioConnection is disposed. | Improve this Doc View Source UpdateVoiceServerAsync(VoiceServer, String, CancellationToken) Declaration public ValueTask UpdateVoiceServerAsync(VoiceServer voiceServer, string sessionId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description VoiceServer voiceServer String sessionId CancellationToken cancellationToken Returns Type Description ValueTask Events | Improve this Doc View Source ClientDisconnected Asynchronous event which is dispatched when a user disconnected from the voice channel. Declaration public event AsyncEventHandler<ClientDisconnectedEventArgs> ClientDisconnected Event Type Type Description AsyncEventHandler < ClientDisconnectedEventArgs > | Improve this Doc View Source ConnectionClosed Asynchronous event which is dispatched when the connection was closed to the voice server. Declaration public event AsyncEventHandler<ConnectionClosedEventArgs> ConnectionClosed Event Type Type Description AsyncEventHandler < ConnectionClosedEventArgs > | Improve this Doc View Source ConnectionStatusChanged Asynchronous event which is dispatched when the connection status was changed. Declaration public event AsyncEventHandler<ConnectionStatusChangedEventArgs> ConnectionStatusChanged Event Type Type Description AsyncEventHandler < ConnectionStatusChangedEventArgs > | Improve this Doc View Source Speaking Asynchronous event which is dispatched when a user started / stopped speaking. Declaration public event AsyncEventHandler<SpeakingEventArgs> Speaking Event Type Type Description AsyncEventHandler < SpeakingEventArgs > Implements System.IAsyncDisposable System.IDisposable"
  },
  "api/Strade.Voice.Connection.AudioConnectionReconnectMode.html": {
    "href": "api/Strade.Voice.Connection.AudioConnectionReconnectMode.html",
    "title": "Enum AudioConnectionReconnectMode | Strade Developer Documentation",
    "keywords": "Enum AudioConnectionReconnectMode A set of different audio connection reconnection behaviors / modes. Namespace : Strade.Voice.Connection Assembly : Strade.Voice.Connection.dll Syntax public enum AudioConnectionReconnectMode : byte Fields Name Description Reconnect Denotes that the client should reconnect to the voice endpoint (but should not try to resume the last session). Resume Denotes that the client should reconnect to the voice endpoint with resuming the session. Stop Denotes that the client should not reconnect. Extension Methods EnumExtensions.GetName<AudioConnectionReconnectMode>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Voice.Connection.AudioConnectionStatus.html": {
    "href": "api/Strade.Voice.Connection.AudioConnectionStatus.html",
    "title": "Enum AudioConnectionStatus | Strade Developer Documentation",
    "keywords": "Enum AudioConnectionStatus Namespace : Strade.Voice.Connection Assembly : Strade.Voice.Connection.dll Syntax public enum AudioConnectionStatus : byte Fields Name Description Authenticating Denotes that the connection send an authenticate request to the voice WebSocket server and awaiting a response. AwaitingEndpoint Denotes that the connection is awaiting the remote endpoint. Connected Denotes that the connection is open and ready. Connecting Denotes that the connection is connecting to the voice WebSocket server and awaiting a Hello payload from the server. Destroyed Denotes that the connection was destroyed. NotConnected Denotes that the connection is not open. Extension Methods EnumExtensions.GetName<AudioConnectionStatus>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Voice.Connection.AudioOptions.html": {
    "href": "api/Strade.Voice.Connection.AudioOptions.html",
    "title": "Class AudioOptions | Strade Developer Documentation",
    "keywords": "Class AudioOptions Audio options. Inheritance Object AudioOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Connection Assembly : Strade.Voice.Connection.dll Syntax public sealed class AudioOptions Properties | Improve this Doc View Source BufferedPacketMillis Gets the total duration of buffered audio packets in milliseconds. Declaration public int BufferedPacketMillis { get; } Property Value Type Description Int32 the total duration of buffered audio packets in milliseconds. | Improve this Doc View Source BufferedPackets Gets or sets the total amount of buffered packets (default: 15 ). Declaration public int BufferedPackets { get; set; } Property Value Type Description Int32 the total amount of buffered packets (default: 15 ). Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified value is zero or negative. InvalidOperationException thrown if the options are read-only. | Improve this Doc View Source EndpointTimeout Declaration public TimeSpan EndpointTimeout { get; set; } Property Value Type Description TimeSpan | Improve this Doc View Source IsReadOnly Gets a value indicating whether the options are read-only. Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean a value indicating whether the options are read-only. | Improve this Doc View Source MaxSilencedFrames Gets or sets the number of silence frames to avoid unintended voice interpolation issues. Declaration public int MaxSilencedFrames { get; set; } Property Value Type Description Int32 the number of silence frames to avoid unintended voice interpolation issues. If negative or zero, then no silenced frames are sent. (default: 100 ). Exceptions Type Condition InvalidOperationException thrown if the options are read-only. | Improve this Doc View Source PacketDuration Gets or sets the total duration of a single audio packet in milliseconds (default: 20ms ). Declaration public int PacketDuration { get; set; } Property Value Type Description Int32 the total duration of a single audio packet in milliseconds (default: 20ms ). Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified value is not 5ms , 10ms , 20ms , 40ms , 60ms , 80ms , 100ms or 120ms . InvalidOperationException thrown if the options are read-only. | Improve this Doc View Source PacketShiftThreshold Gets or sets the number of milliseconds after which the internal timer should reset and delayed frames should be shifted. Declaration public int PacketShiftThreshold { get; set; } Property Value Type Description Int32 the number of milliseconds after which the internal timer should reset and delayed frames should be shifted. Remarks If this value is too low then there may be accelerated frames; otherwise if this value is too high packets may be sent too slow. You can control after which delay packets should be shifted to another position to correct latency issues. The default value is 4000 (4 seconds). Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified value is not in range of 10 (milliseconds) - 8000 (milliseconds). InvalidOperationException thrown if the options are read-only. | Improve this Doc View Source PerPacketSize Gets or sets the number of bytes allocated for each packet. Declaration public int PerPacketSize { get; set; } Property Value Type Description Int32 the number of bytes allocated for each packet. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified value is not in range of 1,024 (1 KiB) and 61,440 (60 KiB). InvalidOperationException thrown if the options are read-only. | Improve this Doc View Source PreloadThreshold Gets or sets the preload buffer fill threshold after which the audio sender should start sending audio data to the remote voice server. Declaration public float PreloadThreshold { get; set; } Property Value Type Description Single the preload buffer fill threshold after which the audio sender should start sending audio data to the remote voice server. Remarks The default value is .75F . If 0F then preloading is disabled. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified value is not in range of 0F - 1F . InvalidOperationException thrown if the options are read-only. | Improve this Doc View Source TracePayloads Gets or sets a value indicating whether voice payloads should be traced to the logger. Declaration public bool TracePayloads { get; set; } Property Value Type Description Boolean a value indicating whether voice payloads should be traced to the logger. Methods | Improve this Doc View Source AsReadOnly() Marks the options as read-only. Declaration public void AsReadOnly()"
  },
  "api/Strade.Voice.Connection.AudioPacket.html": {
    "href": "api/Strade.Voice.Connection.AudioPacket.html",
    "title": "Class AudioPacket | Strade Developer Documentation",
    "keywords": "Class AudioPacket Inheritance Object AudioPacket Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Connection Assembly : Strade.Voice.Connection.dll Syntax public sealed class AudioPacket Constructors | Improve this Doc View Source AudioPacket(ArraySegment<Byte>, RtpHeader, Nullable<Snowflake>) Declaration public AudioPacket(ArraySegment<byte> buffer, RtpHeader rtpHeader, Snowflake? userId) Parameters Type Name Description ArraySegment < Byte > buffer RtpHeader rtpHeader Nullable < Snowflake > userId | Improve this Doc View Source AudioPacket(ArraySegment<Byte>, UInt32, UInt16, UInt32, Nullable<Snowflake>) Declaration public AudioPacket(ArraySegment<byte> buffer, uint ssrc, ushort sequence, uint timestamp, Snowflake? userId) Parameters Type Name Description ArraySegment < Byte > buffer UInt32 ssrc UInt16 sequence UInt32 timestamp Nullable < Snowflake > userId Properties | Improve this Doc View Source Buffer Declaration public ArraySegment<byte> Buffer { get; } Property Value Type Description ArraySegment < Byte > | Improve this Doc View Source Sequence Declaration public ushort Sequence { get; } Property Value Type Description UInt16 | Improve this Doc View Source SSRC Declaration public uint SSRC { get; } Property Value Type Description UInt32 | Improve this Doc View Source Timestamp Declaration public uint Timestamp { get; } Property Value Type Description UInt32 | Improve this Doc View Source UserId Declaration public Snowflake? UserId { get; } Property Value Type Description Nullable < Snowflake >"
  },
  "api/Strade.Voice.Connection.AudioReceiver.html": {
    "href": "api/Strade.Voice.Connection.AudioReceiver.html",
    "title": "Class AudioReceiver | Strade Developer Documentation",
    "keywords": "Class AudioReceiver Inheritance Object AudioReceiver Implements IObservable < AudioPacket > IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Connection Assembly : Strade.Voice.Connection.dll Syntax public sealed class AudioReceiver : IObservable<AudioPacket>, IDisposable Constructors | Improve this Doc View Source AudioReceiver(AudioConnection) Declaration public AudioReceiver(AudioConnection audioConnection) Parameters Type Name Description AudioConnection audioConnection Properties | Improve this Doc View Source AudioConnection Declaration public AudioConnection AudioConnection { get; } Property Value Type Description AudioConnection | Improve this Doc View Source IsReceiving Declaration public bool IsReceiving { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source ReceiveAudioAsync() Declaration public Task ReceiveAudioAsync() Returns Type Description Task | Improve this Doc View Source Subscribe(IObserver<AudioPacket>) Declaration public IDisposable Subscribe(IObserver<AudioPacket> observer) Parameters Type Name Description IObserver < AudioPacket > observer Returns Type Description IDisposable Implements System.IObservable<T> System.IDisposable"
  },
  "api/Strade.Voice.Connection.AudioReceiveStream.html": {
    "href": "api/Strade.Voice.Connection.AudioReceiveStream.html",
    "title": "Class AudioReceiveStream | Strade Developer Documentation",
    "keywords": "Class AudioReceiveStream Inheritance Object MarshalByRefObject Stream AudioReceiveStream Implements IDisposable Inherited Members Stream.Null Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object) Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object) Stream.Close() Stream.CopyTo(Stream) Stream.CopyTo(Stream, Int32) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, Int32) Stream.CopyToAsync(Stream, Int32, CancellationToken) Stream.CreateWaitHandle() Stream.Dispose() Stream.EndRead(IAsyncResult) Stream.EndWrite(IAsyncResult) Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.ObjectInvariant() Stream.ReadAsync(Byte[], Int32, Int32) Stream.ReadByte() Stream.Synchronized(Stream) Stream.WriteAsync(Byte[], Int32, Int32) Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken) Stream.WriteByte(Byte) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(Boolean) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Connection Assembly : Strade.Voice.Connection.dll Syntax public class AudioReceiveStream : Stream, IDisposable Constructors | Improve this Doc View Source AudioReceiveStream(AudioReceiver) Declaration public AudioReceiveStream(AudioReceiver audioReceiver) Parameters Type Name Description AudioReceiver audioReceiver Properties | Improve this Doc View Source AudioReceiver Declaration public AudioReceiver AudioReceiver { get; } Property Value Type Description AudioReceiver | Improve this Doc View Source CanRead Declaration public override bool CanRead { get; } Property Value Type Description Boolean Overrides Stream.CanRead | Improve this Doc View Source CanSeek Declaration public override bool CanSeek { get; } Property Value Type Description Boolean Overrides Stream.CanSeek | Improve this Doc View Source CanWrite Declaration public override bool CanWrite { get; } Property Value Type Description Boolean Overrides Stream.CanWrite | Improve this Doc View Source Length Declaration public override long Length { get; } Property Value Type Description Int64 Overrides Stream.Length | Improve this Doc View Source Position Declaration public override long Position { get; set; } Property Value Type Description Int64 Overrides Stream.Position | Improve this Doc View Source Users Declaration public IEnumerable<AudioSessionUser> Users { get; } Property Value Type Description IEnumerable < AudioSessionUser > Methods | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides Stream.Dispose(Boolean) | Improve this Doc View Source Flush() Declaration public override void Flush() Overrides Stream.Flush() | Improve this Doc View Source GetActiveVoiceUsers() Declaration protected IReadOnlyList<AudioSessionUser> GetActiveVoiceUsers() Returns Type Description IReadOnlyList < AudioSessionUser > | Improve this Doc View Source GetOrCreateUser(UInt32) Declaration protected AudioSessionUser GetOrCreateUser(uint ssrc) Parameters Type Name Description UInt32 ssrc Returns Type Description AudioSessionUser | Improve this Doc View Source NotifyEndOfTransmission() Declaration protected virtual void NotifyEndOfTransmission() | Improve this Doc View Source Read(Byte[], Int32, Int32) Declaration public override int Read(byte[] buffer, int offset, int count) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count Returns Type Description Int32 Overrides Stream.Read(Byte[], Int32, Int32) | Improve this Doc View Source ReadAsync(Byte[], Int32, Int32, CancellationToken) Declaration public override Task<int> ReadAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count CancellationToken cancellationToken Returns Type Description Task < Int32 > Overrides Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken) | Improve this Doc View Source Seek(Int64, SeekOrigin) Declaration public override long Seek(long offset, SeekOrigin origin) Parameters Type Name Description Int64 offset SeekOrigin origin Returns Type Description Int64 Overrides Stream.Seek(Int64, SeekOrigin) | Improve this Doc View Source SetLength(Int64) Declaration public override void SetLength(long value) Parameters Type Name Description Int64 value Overrides Stream.SetLength(Int64) | Improve this Doc View Source Write(Byte[], Int32, Int32) Declaration public override void Write(byte[] buffer, int offset, int count) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count Overrides Stream.Write(Byte[], Int32, Int32) Implements System.IDisposable"
  },
  "api/Strade.Voice.Connection.AudioSender.html": {
    "href": "api/Strade.Voice.Connection.AudioSender.html",
    "title": "Class AudioSender | Strade Developer Documentation",
    "keywords": "Class AudioSender Inheritance Object AudioSender Implements IDisposable IAsyncDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Connection Assembly : Strade.Voice.Connection.dll Syntax public class AudioSender : IDisposable, IAsyncDisposable Constructors | Improve this Doc View Source AudioSender(AudioConnection) Declaration public AudioSender(AudioConnection audioConnection) Parameters Type Name Description AudioConnection audioConnection Properties | Improve this Doc View Source AudioConnection Declaration public AudioConnection AudioConnection { get; } Property Value Type Description AudioConnection | Improve this Doc View Source Buffer Gets the packet buffer. Declaration public PacketBuffer Buffer { get; } Property Value Type Description PacketBuffer the packet buffer. Exceptions Type Condition ObjectDisposedException thrown if the AudioSender instance is disposed. | Improve this Doc View Source IsSending Gets a value indicating whether the sender is sending audio data ( Status == Buffering or Status == Sending ). Declaration public bool IsSending { get; } Property Value Type Description Boolean a value indicating whether the sender is sending audio data ( Status == Buffering or Status == Sending ). | Improve this Doc View Source SpeakingFlags Declaration public SpeakingFlags SpeakingFlags { get; set; } Property Value Type Description SpeakingFlags | Improve this Doc View Source Status Declaration public AudioSendStatus Status { get; } Property Value Type Description AudioSendStatus Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source DisposeAsync() Declaration public ValueTask DisposeAsync() Returns Type Description ValueTask | Improve this Doc View Source DisposeAsyncCore() Declaration protected virtual ValueTask DisposeAsyncCore() Returns Type Description ValueTask | Improve this Doc View Source StartSending() Declaration public void StartSending() | Improve this Doc View Source StopSending() Notifies the sender that sending should be stopped if no more packets are available. Declaration public void StopSending() Implements System.IDisposable System.IAsyncDisposable"
  },
  "api/Strade.Voice.Connection.AudioSendStatus.html": {
    "href": "api/Strade.Voice.Connection.AudioSendStatus.html",
    "title": "Enum AudioSendStatus | Strade Developer Documentation",
    "keywords": "Enum AudioSendStatus Namespace : Strade.Voice.Connection Assembly : Strade.Voice.Connection.dll Syntax public enum AudioSendStatus : byte Fields Name Description Buffering Denotes that the sender is out of packets and is buffering new audio packets to continue the send loop. None Denotes that the sender is not sending anything. PreBuffering Denotes that the sender is pre-buffering audio packets before entering the send loop. Sending Denotes that the sender is sending packets. WaitingForConnection Denotes that the sender is waiting for the connection to be established. Extension Methods EnumExtensions.GetName<AudioSendStatus>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Voice.Connection.AudioSessionUser.html": {
    "href": "api/Strade.Voice.Connection.AudioSessionUser.html",
    "title": "Class AudioSessionUser | Strade Developer Documentation",
    "keywords": "Class AudioSessionUser Inheritance Object AudioSessionUser Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Connection Assembly : Strade.Voice.Connection.dll Syntax public sealed class AudioSessionUser Constructors | Improve this Doc View Source AudioSessionUser(UInt32, JitterBuffer) Declaration public AudioSessionUser(uint ssrc, JitterBuffer jitterBuffer) Parameters Type Name Description UInt32 ssrc JitterBuffer jitterBuffer Properties | Improve this Doc View Source IsSuppressed Declaration public bool IsSuppressed { get; set; } Property Value Type Description Boolean | Improve this Doc View Source JitterBuffer Declaration public JitterBuffer JitterBuffer { get; } Property Value Type Description JitterBuffer | Improve this Doc View Source SSRC Declaration public uint SSRC { get; } Property Value Type Description UInt32 | Improve this Doc View Source Volume Declaration public float Volume { get; set; } Property Value Type Description Single"
  },
  "api/Strade.Voice.Connection.html": {
    "href": "api/Strade.Voice.Connection.html",
    "title": "Namespace Strade.Voice.Connection | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Connection Classes AudioConnection AudioOptions Audio options. AudioPacket AudioReceiver AudioReceiveStream AudioSender AudioSessionUser PacketBuffer A packet buffer used to reduce computation delays and fluctuations and improved memory management. Enums AudioConnectionReconnectMode A set of different audio connection reconnection behaviors / modes. AudioConnectionStatus AudioSendStatus"
  },
  "api/Strade.Voice.Connection.PacketBuffer.html": {
    "href": "api/Strade.Voice.Connection.PacketBuffer.html",
    "title": "Class PacketBuffer | Strade Developer Documentation",
    "keywords": "Class PacketBuffer A packet buffer used to reduce computation delays and fluctuations and improved memory management. Inheritance Object PacketBuffer Implements IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Connection Assembly : Strade.Voice.Connection.dll Syntax public sealed class PacketBuffer : IDisposable Constructors | Improve this Doc View Source PacketBuffer(Int32, Int32) Initializes a new instance of the PacketBuffer class. Declaration public PacketBuffer(int packetSize = 1024, int capacity = 15) Parameters Type Name Description Int32 packetSize the number of bytes used for a packet. Int32 capacity the number of packets stored in the buffer. Fields | Improve this Doc View Source DefaultCapacity The default number of packets used for buffering. Declaration public const int DefaultCapacity = 15 Field Value Type Description Int32 Properties | Improve this Doc View Source AvailableBuffers Gets the number of free buffers in the packet buffer. Declaration public int AvailableBuffers { get; } Property Value Type Description Int32 the number of free buffers in the packet buffer. Exceptions Type Condition ObjectDisposedException thrown if the PacketBuffer instance is disposed. | Improve this Doc View Source Capacity Gets the number of packets that the packet buffer can store. Declaration public int Capacity { get; } Property Value Type Description Int32 the number of packets that the packet buffer can store. Exceptions Type Condition ObjectDisposedException thrown if the PacketBuffer instance is disposed. | Improve this Doc View Source PendingPackets Gets the number of unconsumed packets. Declaration public int PendingPackets { get; } Property Value Type Description Int32 the number of unconsumed packets. Exceptions Type Condition ObjectDisposedException thrown if the PacketBuffer instance is disposed. Methods | Improve this Doc View Source Clear() Clears all pending packets. Declaration public void Clear() Remarks Note that packets which are dequeued can not be cleared and need to be released to be cleared. Exceptions Type Condition ObjectDisposedException thrown if the PacketBuffer instance is disposed. | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Enqueue(ArraySegment<Byte>) Enqueues a new audio packet. Declaration public void Enqueue(ArraySegment<byte> segment) Parameters Type Name Description ArraySegment < Byte > segment the segment. Exceptions Type Condition ObjectDisposedException thrown if the PacketBuffer instance is disposed. | Improve this Doc View Source FlushAsync(CancellationToken) Flushes all packets asynchronously. Declaration public Task FlushAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ObjectDisposedException thrown if the PacketBuffer instance is disposed. | Improve this Doc View Source ReleaseBuffer(Byte[]) Releases / frees the specified buffer . Declaration public void ReleaseBuffer(byte[] buffer) Parameters Type Name Description Byte [] buffer the buffer. Exceptions Type Condition ObjectDisposedException thrown if the PacketBuffer instance is disposed. | Improve this Doc View Source RentBufferAsync(CancellationToken) Rents a buffer from the pool asynchronously. Declaration public Task<byte[]> RentBufferAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < Byte []> a task that represents the asynchronous operation. The task result is the buffer. Exceptions Type Condition ObjectDisposedException thrown if the PacketBuffer instance is disposed. | Improve this Doc View Source TryDequeue(out ArraySegment<Byte>) Tries to dequeue an audio packet. Declaration public bool TryDequeue(out ArraySegment<byte> packet) Parameters Type Name Description ArraySegment < Byte > packet the audio packet dequeued; or default. Returns Type Description Boolean a value indicating whether an audio packet could be dequeued. Exceptions Type Condition ObjectDisposedException thrown if the PacketBuffer instance is disposed. Implements System.IDisposable"
  },
  "api/Strade.Voice.DefaultAudioPlayerContext.html": {
    "href": "api/Strade.Voice.DefaultAudioPlayerContext.html",
    "title": "Class DefaultAudioPlayerContext | Strade Developer Documentation",
    "keywords": "Class DefaultAudioPlayerContext Inheritance Object DefaultAudioPlayerContext Implements IAudioPlayerContext IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice Assembly : Strade.Voice.dll Syntax public sealed class DefaultAudioPlayerContext : IAudioPlayerContext, IDisposable Constructors | Improve this Doc View Source DefaultAudioPlayerContext(AudioService, AudioConnection, AudioProviderFactory, ILogger) Declaration public DefaultAudioPlayerContext(AudioService audioService, AudioConnection connection, AudioProviderFactory providerFactory, ILogger logger) Parameters Type Name Description AudioService audioService AudioConnection connection AudioProviderFactory providerFactory ILogger logger Properties | Improve this Doc View Source AudioService Declaration public IAudioService AudioService { get; } Property Value Type Description IAudioService | Improve this Doc View Source CanSeek Declaration public bool CanSeek { get; } Property Value Type Description Boolean | Improve this Doc View Source CurrentTrack Declaration public IAudioTrack CurrentTrack { get; } Property Value Type Description IAudioTrack | Improve this Doc View Source Duration Declaration public TimeSpan Duration { get; } Property Value Type Description TimeSpan | Improve this Doc View Source Filters Declaration public IFilterCollection Filters { get; } Property Value Type Description IFilterCollection | Improve this Doc View Source GuildId Declaration public Snowflake GuildId { get; } Property Value Type Description Snowflake | Improve this Doc View Source Position Declaration public TimeSpan Position { get; } Property Value Type Description TimeSpan | Improve this Doc View Source PreferredBitrate Declaration public int PreferredBitrate { get; } Property Value Type Description Int32 | Improve this Doc View Source State Declaration public PlayerState State { get; } Property Value Type Description PlayerState | Improve this Doc View Source Volume Declaration public float Volume { get; } Property Value Type Description Single Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source PauseAsync(CancellationToken) Declaration public Task PauseAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source PlayAsync(IAudioTrack, CancellationToken) Declaration public Task PlayAsync(IAudioTrack track, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IAudioTrack track CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ResumeAsync(CancellationToken) Declaration public Task ResumeAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source SeekAsync(TimeSpan, SeekOrigin, CancellationToken) Declaration public Task<TimeSpan> SeekAsync(TimeSpan offset, SeekOrigin origin = SeekOrigin.Begin, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TimeSpan offset SeekOrigin origin CancellationToken cancellationToken Returns Type Description Task < TimeSpan > | Improve this Doc View Source SetVolumeAsync(Single, CancellationToken) Declaration public Task SetVolumeAsync(float volume, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Single volume CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source StopAsync(CancellationToken) Declaration public Task StopAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task Implements IAudioPlayerContext System.IDisposable"
  },
  "api/Strade.Voice.DefaultAudioTrackManager.html": {
    "href": "api/Strade.Voice.DefaultAudioTrackManager.html",
    "title": "Class DefaultAudioTrackManager | Strade Developer Documentation",
    "keywords": "Class DefaultAudioTrackManager The default implementation of the IAudioTrackManager interface. Inheritance Object DefaultAudioTrackManager Implements IAudioTrackManager IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice Assembly : Strade.Voice.dll Syntax public class DefaultAudioTrackManager : IAudioTrackManager, IDisposable Constructors | Improve this Doc View Source DefaultAudioTrackManager(Boolean) Initializes a new instance of the DefaultAudioTrackManager class. Declaration public DefaultAudioTrackManager(bool registerDefaultProviders = true) Parameters Type Name Description Boolean registerDefaultProviders a value indicating whether default providers should be registered. Properties | Improve this Doc View Source Providers Declaration public IEnumerable<IAudioTrackProvider> Providers { get; } Property Value Type Description IEnumerable < IAudioTrackProvider > Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Releases the unmanaged resources used by the DefaultAudioTrackManager and optionally releases the managed resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. | Improve this Doc View Source FindProviders(String) Declaration public IEnumerable<IAudioTrackProvider> FindProviders(string name) Parameters Type Name Description String name Returns Type Description IEnumerable < IAudioTrackProvider > | Improve this Doc View Source LoadTrackAsync(String, AudioTrackProviderOptions, CancellationToken) Declaration public Task<IAudioTrack> LoadTrackAsync(string query, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query AudioTrackProviderOptions options CancellationToken cancellationToken Returns Type Description Task < IAudioTrack > | Improve this Doc View Source LoadTrackAsync(String, String, AudioTrackProviderOptions, CancellationToken) Declaration public Task<IAudioTrack> LoadTrackAsync(string query, string provider, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query String provider AudioTrackProviderOptions options CancellationToken cancellationToken Returns Type Description Task < IAudioTrack > | Improve this Doc View Source LoadTracksAsync(String, AudioTrackProviderOptions, Int32, CancellationToken) Declaration public Task<ITrackLoadResult> LoadTracksAsync(string query, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), int count = 100, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query AudioTrackProviderOptions options Int32 count CancellationToken cancellationToken Returns Type Description Task < ITrackLoadResult > | Improve this Doc View Source LoadTracksAsync(String, String, AudioTrackProviderOptions, Int32, CancellationToken) Declaration public Task<ITrackLoadResult> LoadTracksAsync(string query, string provider, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), int count = 100, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query String provider AudioTrackProviderOptions options Int32 count CancellationToken cancellationToken Returns Type Description Task < ITrackLoadResult > | Improve this Doc View Source RegisterDefaultProviders() Registers the default providers. Declaration public void RegisterDefaultProviders() | Improve this Doc View Source RegisterProvider(IAudioTrackProvider, Boolean) Registers the specified provider . Declaration public void RegisterProvider(IAudioTrackProvider provider, bool leaveOpen = false) Parameters Type Name Description IAudioTrackProvider provider the provider to register. Boolean leaveOpen a value indicating whether to leave the specified provider open when disposing the track manager. Exceptions Type Condition ArgumentNullException thrown if the specified provider is null . | Improve this Doc View Source UnregisterProvider(IAudioTrackProvider) Unregisters the specified provider . Declaration public bool UnregisterProvider(IAudioTrackProvider provider) Parameters Type Name Description IAudioTrackProvider provider the provider to unregister. Returns Type Description Boolean a value indicating whether the provider was unregister. Exceptions Type Condition ArgumentNullException thrown if the specified provider is null . Implements IAudioTrackManager System.IDisposable"
  },
  "api/Strade.Voice.Encryption.EncryptionManager.html": {
    "href": "api/Strade.Voice.Encryption.EncryptionManager.html",
    "title": "Class EncryptionManager | Strade Developer Documentation",
    "keywords": "Class EncryptionManager Inheritance Object EncryptionManager Implements IEncryptionManager Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Encryption Assembly : Strade.Voice.Connection.dll Syntax public sealed class EncryptionManager : IEncryptionManager Constructors | Improve this Doc View Source EncryptionManager(Boolean) Declaration public EncryptionManager(bool registerDefaultProviders = true) Parameters Type Name Description Boolean registerDefaultProviders Methods | Improve this Doc View Source GetProvider(IEnumerable<String>, StringComparison) Declaration public EncryptionProviderInformation GetProvider(IEnumerable<string> advertisedProviders, StringComparison comparisonType = StringComparison.OrdinalIgnoreCase) Parameters Type Name Description IEnumerable < String > advertisedProviders StringComparison comparisonType Returns Type Description EncryptionProviderInformation | Improve this Doc View Source GetProvider(String, StringComparison) Declaration public EncryptionProviderInformation GetProvider(string name, StringComparison comparisonType = StringComparison.OrdinalIgnoreCase) Parameters Type Name Description String name StringComparison comparisonType Returns Type Description EncryptionProviderInformation | Improve this Doc View Source Register(EncryptionProviderInformation) Declaration public void Register(EncryptionProviderInformation providerInformation) Parameters Type Name Description EncryptionProviderInformation providerInformation | Improve this Doc View Source Register(String, EncryptionProviderFactory, Single) Declaration public EncryptionProviderInformation Register(string name, EncryptionProviderFactory factory, float rating = 1F) Parameters Type Name Description String name EncryptionProviderFactory factory Single rating Returns Type Description EncryptionProviderInformation | Improve this Doc View Source Register<T>(String, Single) Declaration public EncryptionProviderInformation Register<T>(string name, float rating = 1F) where T : IEncryptionProvider, new() Parameters Type Name Description String name Single rating Returns Type Description EncryptionProviderInformation Type Parameters Name Description T | Improve this Doc View Source RegisterDefaultProviders() Declaration public void RegisterDefaultProviders() | Improve this Doc View Source TryGetProvider(IEnumerable<String>, out EncryptionProviderInformation, StringComparison) Declaration public bool TryGetProvider(IEnumerable<string> advertisedProviders, out EncryptionProviderInformation provider, StringComparison comparison = StringComparison.OrdinalIgnoreCase) Parameters Type Name Description IEnumerable < String > advertisedProviders EncryptionProviderInformation provider StringComparison comparison Returns Type Description Boolean | Improve this Doc View Source TryGetProvider(String, out EncryptionProviderInformation, StringComparison) Declaration public bool TryGetProvider(string name, out EncryptionProviderInformation provider, StringComparison comparison = StringComparison.OrdinalIgnoreCase) Parameters Type Name Description String name EncryptionProviderInformation provider StringComparison comparison Returns Type Description Boolean | Improve this Doc View Source Unregister(EncryptionProviderInformation) Declaration public bool Unregister(EncryptionProviderInformation providerInformation) Parameters Type Name Description EncryptionProviderInformation providerInformation Returns Type Description Boolean Implements IEncryptionManager"
  },
  "api/Strade.Voice.Encryption.EncryptionProviderFactory.html": {
    "href": "api/Strade.Voice.Encryption.EncryptionProviderFactory.html",
    "title": "Delegate EncryptionProviderFactory | Strade Developer Documentation",
    "keywords": "Delegate EncryptionProviderFactory Namespace : Strade.Voice.Encryption Assembly : Strade.Voice.Connection.dll Syntax public delegate IEncryptionProvider EncryptionProviderFactory(); Returns Type Description IEncryptionProvider"
  },
  "api/Strade.Voice.Encryption.EncryptionProviderInformation.html": {
    "href": "api/Strade.Voice.Encryption.EncryptionProviderInformation.html",
    "title": "Class EncryptionProviderInformation | Strade Developer Documentation",
    "keywords": "Class EncryptionProviderInformation Inheritance Object EncryptionProviderInformation Implements IComparable < EncryptionProviderInformation > IEquatable < EncryptionProviderInformation > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Encryption Assembly : Strade.Voice.Connection.dll Syntax public sealed class EncryptionProviderInformation : IComparable<EncryptionProviderInformation>, IEquatable<EncryptionProviderInformation> Constructors | Improve this Doc View Source EncryptionProviderInformation(String, EncryptionProviderFactory, Single) Declaration public EncryptionProviderInformation(string name, EncryptionProviderFactory factory, float rating) Parameters Type Name Description String name EncryptionProviderFactory factory Single rating Properties | Improve this Doc View Source Factory Gets the encryption provider factory. Declaration public EncryptionProviderFactory Factory { get; } Property Value Type Description EncryptionProviderFactory the encryption provider factory. | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Rating Gets the rating for the provider (higher = more preferred). Declaration public float Rating { get; } Property Value Type Description Single the rating for the provider (higher = more preferred). Methods | Improve this Doc View Source CompareTo(EncryptionProviderInformation) Declaration public int CompareTo(EncryptionProviderInformation other) Parameters Type Name Description EncryptionProviderInformation other Returns Type Description Int32 | Improve this Doc View Source Equals(EncryptionProviderInformation) Declaration public bool Equals(EncryptionProviderInformation other) Parameters Type Name Description EncryptionProviderInformation other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() Operators | Improve this Doc View Source Equality(EncryptionProviderInformation, EncryptionProviderInformation) Declaration public static bool operator ==(EncryptionProviderInformation left, EncryptionProviderInformation right) Parameters Type Name Description EncryptionProviderInformation left EncryptionProviderInformation right Returns Type Description Boolean | Improve this Doc View Source GreaterThan(EncryptionProviderInformation, EncryptionProviderInformation) Declaration public static bool operator>(EncryptionProviderInformation left, EncryptionProviderInformation right) Parameters Type Name Description EncryptionProviderInformation left EncryptionProviderInformation right Returns Type Description Boolean | Improve this Doc View Source GreaterThanOrEqual(EncryptionProviderInformation, EncryptionProviderInformation) Declaration public static bool operator >=(EncryptionProviderInformation left, EncryptionProviderInformation right) Parameters Type Name Description EncryptionProviderInformation left EncryptionProviderInformation right Returns Type Description Boolean | Improve this Doc View Source Inequality(EncryptionProviderInformation, EncryptionProviderInformation) Declaration public static bool operator !=(EncryptionProviderInformation left, EncryptionProviderInformation right) Parameters Type Name Description EncryptionProviderInformation left EncryptionProviderInformation right Returns Type Description Boolean | Improve this Doc View Source LessThan(EncryptionProviderInformation, EncryptionProviderInformation) Declaration public static bool operator <(EncryptionProviderInformation left, EncryptionProviderInformation right) Parameters Type Name Description EncryptionProviderInformation left EncryptionProviderInformation right Returns Type Description Boolean | Improve this Doc View Source LessThanOrEqual(EncryptionProviderInformation, EncryptionProviderInformation) Declaration public static bool operator <=(EncryptionProviderInformation left, EncryptionProviderInformation right) Parameters Type Name Description EncryptionProviderInformation left EncryptionProviderInformation right Returns Type Description Boolean Implements System.IComparable<T> System.IEquatable<T>"
  },
  "api/Strade.Voice.Encryption.html": {
    "href": "api/Strade.Voice.Encryption.html",
    "title": "Namespace Strade.Voice.Encryption | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Encryption Classes EncryptionManager EncryptionProviderInformation PlainEncryptionProvider Interfaces IEncryptionManager IEncryptionProvider Delegates EncryptionProviderFactory"
  },
  "api/Strade.Voice.Encryption.IEncryptionManager.html": {
    "href": "api/Strade.Voice.Encryption.IEncryptionManager.html",
    "title": "Interface IEncryptionManager | Strade Developer Documentation",
    "keywords": "Interface IEncryptionManager Namespace : Strade.Voice.Encryption Assembly : Strade.Voice.Connection.dll Syntax public interface IEncryptionManager Methods | Improve this Doc View Source GetProvider(IEnumerable<String>, StringComparison) Declaration EncryptionProviderInformation GetProvider(IEnumerable<string> advertisedProviders, StringComparison comparisonType = StringComparison.OrdinalIgnoreCase) Parameters Type Name Description IEnumerable < String > advertisedProviders StringComparison comparisonType Returns Type Description EncryptionProviderInformation | Improve this Doc View Source GetProvider(String, StringComparison) Declaration EncryptionProviderInformation GetProvider(string name, StringComparison comparisonType = StringComparison.OrdinalIgnoreCase) Parameters Type Name Description String name StringComparison comparisonType Returns Type Description EncryptionProviderInformation | Improve this Doc View Source TryGetProvider(IEnumerable<String>, out EncryptionProviderInformation, StringComparison) Declaration bool TryGetProvider(IEnumerable<string> advertisedProviders, out EncryptionProviderInformation provider, StringComparison comparison = StringComparison.OrdinalIgnoreCase) Parameters Type Name Description IEnumerable < String > advertisedProviders EncryptionProviderInformation provider StringComparison comparison Returns Type Description Boolean | Improve this Doc View Source TryGetProvider(String, out EncryptionProviderInformation, StringComparison) Declaration bool TryGetProvider(string name, out EncryptionProviderInformation provider, StringComparison comparison = StringComparison.OrdinalIgnoreCase) Parameters Type Name Description String name EncryptionProviderInformation provider StringComparison comparison Returns Type Description Boolean"
  },
  "api/Strade.Voice.Encryption.IEncryptionProvider.html": {
    "href": "api/Strade.Voice.Encryption.IEncryptionProvider.html",
    "title": "Interface IEncryptionProvider | Strade Developer Documentation",
    "keywords": "Interface IEncryptionProvider Namespace : Strade.Voice.Encryption Assembly : Strade.Voice.Connection.dll Syntax public interface IEncryptionProvider Properties | Improve this Doc View Source ByteOverhead Gets the number of extra bytes used additional to the data by the encryption provider. Declaration int ByteOverhead { get; } Property Value Type Description Int32 the number of extra bytes used additional to the data by the encryption provider. Methods | Improve this Doc View Source Decrypt(ArraySegment<Byte>, ArraySegment<Byte>, ArraySegment<Byte>, RtpHeader) Decrypts the specified message. Declaration int Decrypt(ArraySegment<byte> source, ArraySegment<byte> target, ArraySegment<byte> key, RtpHeader rtpHeader) Parameters Type Name Description ArraySegment < Byte > source a byte-array segment containing the source data to decrypt. ArraySegment < Byte > target a byte-array segment for the output of the decrypted data. ArraySegment < Byte > key the encryption key. RtpHeader rtpHeader the RTP header for the packet. Returns Type Description Int32 the number of total bytes in the output buffer ( target ); or negative if the decryption failed. | Improve this Doc View Source Encrypt(ArraySegment<Byte>, ArraySegment<Byte>, ArraySegment<Byte>, RtpHeader) Decrypts the specified message. Declaration int Encrypt(ArraySegment<byte> source, ArraySegment<byte> target, ArraySegment<byte> key, RtpHeader rtpHeader) Parameters Type Name Description ArraySegment < Byte > source a byte-array segment containing the source data to decrypt. ArraySegment < Byte > target a byte-array segment for the output of the decrypted data. ArraySegment < Byte > key the encryption key. RtpHeader rtpHeader the RTP header for the packet. Returns Type Description Int32 the number of total bytes in the output buffer ( target ); or negative if the encryption failed."
  },
  "api/Strade.Voice.Encryption.PlainEncryptionProvider.html": {
    "href": "api/Strade.Voice.Encryption.PlainEncryptionProvider.html",
    "title": "Class PlainEncryptionProvider | Strade Developer Documentation",
    "keywords": "Class PlainEncryptionProvider Inheritance Object PlainEncryptionProvider Implements IEncryptionProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Encryption Assembly : Strade.Voice.Connection.dll Syntax public sealed class PlainEncryptionProvider : IEncryptionProvider Properties | Improve this Doc View Source ByteOverhead Declaration public int ByteOverhead { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Decrypt(ArraySegment<Byte>, ArraySegment<Byte>, ArraySegment<Byte>, RtpHeader) Declaration public int Decrypt(ArraySegment<byte> source, ArraySegment<byte> target, ArraySegment<byte> key, RtpHeader rtpHeader) Parameters Type Name Description ArraySegment < Byte > source ArraySegment < Byte > target ArraySegment < Byte > key RtpHeader rtpHeader Returns Type Description Int32 | Improve this Doc View Source Encrypt(ArraySegment<Byte>, ArraySegment<Byte>, ArraySegment<Byte>, RtpHeader) Declaration public int Encrypt(ArraySegment<byte> source, ArraySegment<byte> target, ArraySegment<byte> key, RtpHeader rtpHeader) Parameters Type Name Description ArraySegment < Byte > source ArraySegment < Byte > target ArraySegment < Byte > key RtpHeader rtpHeader Returns Type Description Int32 Implements IEncryptionProvider"
  },
  "api/Strade.Voice.Encryption.Xsalsa20Poly1305.html": {
    "href": "api/Strade.Voice.Encryption.Xsalsa20Poly1305.html",
    "title": "Namespace Strade.Voice.Encryption.Xsalsa20Poly1305 | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Encryption.Xsalsa20Poly1305 Classes Xsalsa20Poly1305EncryptionProvider An IEncryptionProvider that uses the \"xsalsa20_poly1305\" encryption algorithm to encrypt / decrypt voice packets. Xsalsa20Poly1305LiteEncryptionProvider An IEncryptionProvider that uses the \"xsalsa20_poly1305_lite\" encryption algorithm to encrypt / decrypt voice packets. Xsalsa20Poly1305SuffixEncryptionProvider An IEncryptionProvider that uses the \"xsalsa20_poly1305_suffix\" encryption algorithm to encrypt / decrypt voice packets."
  },
  "api/Strade.Voice.Encryption.Xsalsa20Poly1305.Xsalsa20Poly1305EncryptionProvider.html": {
    "href": "api/Strade.Voice.Encryption.Xsalsa20Poly1305.Xsalsa20Poly1305EncryptionProvider.html",
    "title": "Class Xsalsa20Poly1305EncryptionProvider | Strade Developer Documentation",
    "keywords": "Class Xsalsa20Poly1305EncryptionProvider An IEncryptionProvider that uses the \"xsalsa20_poly1305\" encryption algorithm to encrypt / decrypt voice packets. Inheritance Object Xsalsa20Poly1305EncryptionProvider Implements IEncryptionProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Encryption.Xsalsa20Poly1305 Assembly : Strade.Voice.Connection.dll Syntax public sealed class Xsalsa20Poly1305EncryptionProvider : IEncryptionProvider Properties | Improve this Doc View Source ByteOverhead Declaration public int ByteOverhead { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Decrypt(ArraySegment<Byte>, ArraySegment<Byte>, ArraySegment<Byte>, RtpHeader) Declaration public int Decrypt(ArraySegment<byte> source, ArraySegment<byte> target, ArraySegment<byte> key, RtpHeader rtpHeader) Parameters Type Name Description ArraySegment < Byte > source ArraySegment < Byte > target ArraySegment < Byte > key RtpHeader rtpHeader Returns Type Description Int32 | Improve this Doc View Source Encrypt(ArraySegment<Byte>, ArraySegment<Byte>, ArraySegment<Byte>, RtpHeader) Declaration public int Encrypt(ArraySegment<byte> source, ArraySegment<byte> target, ArraySegment<byte> key, RtpHeader rtpHeader) Parameters Type Name Description ArraySegment < Byte > source ArraySegment < Byte > target ArraySegment < Byte > key RtpHeader rtpHeader Returns Type Description Int32 Implements IEncryptionProvider"
  },
  "api/Strade.Voice.Encryption.Xsalsa20Poly1305.Xsalsa20Poly1305LiteEncryptionProvider.html": {
    "href": "api/Strade.Voice.Encryption.Xsalsa20Poly1305.Xsalsa20Poly1305LiteEncryptionProvider.html",
    "title": "Class Xsalsa20Poly1305LiteEncryptionProvider | Strade Developer Documentation",
    "keywords": "Class Xsalsa20Poly1305LiteEncryptionProvider An IEncryptionProvider that uses the \"xsalsa20_poly1305_lite\" encryption algorithm to encrypt / decrypt voice packets. Inheritance Object Xsalsa20Poly1305LiteEncryptionProvider Implements IEncryptionProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Encryption.Xsalsa20Poly1305 Assembly : Strade.Voice.Connection.dll Syntax public sealed class Xsalsa20Poly1305LiteEncryptionProvider : IEncryptionProvider Properties | Improve this Doc View Source ByteOverhead Declaration public int ByteOverhead { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Decrypt(ArraySegment<Byte>, ArraySegment<Byte>, ArraySegment<Byte>, RtpHeader) Declaration public int Decrypt(ArraySegment<byte> source, ArraySegment<byte> target, ArraySegment<byte> key, RtpHeader rtpHeader) Parameters Type Name Description ArraySegment < Byte > source ArraySegment < Byte > target ArraySegment < Byte > key RtpHeader rtpHeader Returns Type Description Int32 | Improve this Doc View Source Encrypt(ArraySegment<Byte>, ArraySegment<Byte>, ArraySegment<Byte>, RtpHeader) Declaration public int Encrypt(ArraySegment<byte> source, ArraySegment<byte> target, ArraySegment<byte> key, RtpHeader rtpHeader) Parameters Type Name Description ArraySegment < Byte > source ArraySegment < Byte > target ArraySegment < Byte > key RtpHeader rtpHeader Returns Type Description Int32 Implements IEncryptionProvider"
  },
  "api/Strade.Voice.Encryption.Xsalsa20Poly1305.Xsalsa20Poly1305SuffixEncryptionProvider.html": {
    "href": "api/Strade.Voice.Encryption.Xsalsa20Poly1305.Xsalsa20Poly1305SuffixEncryptionProvider.html",
    "title": "Class Xsalsa20Poly1305SuffixEncryptionProvider | Strade Developer Documentation",
    "keywords": "Class Xsalsa20Poly1305SuffixEncryptionProvider An IEncryptionProvider that uses the \"xsalsa20_poly1305_suffix\" encryption algorithm to encrypt / decrypt voice packets. Inheritance Object Xsalsa20Poly1305SuffixEncryptionProvider Implements IEncryptionProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Encryption.Xsalsa20Poly1305 Assembly : Strade.Voice.Connection.dll Syntax public sealed class Xsalsa20Poly1305SuffixEncryptionProvider : IEncryptionProvider Properties | Improve this Doc View Source ByteOverhead Declaration public int ByteOverhead { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Decrypt(ArraySegment<Byte>, ArraySegment<Byte>, ArraySegment<Byte>, RtpHeader) Declaration public int Decrypt(ArraySegment<byte> source, ArraySegment<byte> target, ArraySegment<byte> key, RtpHeader rtpHeader) Parameters Type Name Description ArraySegment < Byte > source ArraySegment < Byte > target ArraySegment < Byte > key RtpHeader rtpHeader Returns Type Description Int32 | Improve this Doc View Source Encrypt(ArraySegment<Byte>, ArraySegment<Byte>, ArraySegment<Byte>, RtpHeader) Declaration public int Encrypt(ArraySegment<byte> source, ArraySegment<byte> target, ArraySegment<byte> key, RtpHeader rtpHeader) Parameters Type Name Description ArraySegment < Byte > source ArraySegment < Byte > target ArraySegment < Byte > key RtpHeader rtpHeader Returns Type Description Int32 Implements IEncryptionProvider"
  },
  "api/Strade.Voice.Events.ClientDisconnectedEventArgs.html": {
    "href": "api/Strade.Voice.Events.ClientDisconnectedEventArgs.html",
    "title": "Class ClientDisconnectedEventArgs | Strade Developer Documentation",
    "keywords": "Class ClientDisconnectedEventArgs The event arguments for the ClientDisconnected event. Inheritance Object EventArgs ClientDisconnectedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Events Assembly : Strade.Voice.Connection.dll Syntax public sealed class ClientDisconnectedEventArgs : EventArgs Constructors | Improve this Doc View Source ClientDisconnectedEventArgs(Snowflake, Nullable<UInt32>) Initializes a new instance of the ClientDisconnectedEventArgs class. Declaration public ClientDisconnectedEventArgs(Snowflake userId, uint? ssrc) Parameters Type Name Description Snowflake userId the snowflake identifier of the client that disconnected. Nullable < UInt32 > ssrc the Synchronization source identifier (SSRC) of the client that disconnected from the voice channel. Properties | Improve this Doc View Source SSRC Gets the Synchronization source identifier (SSRC) of the client that disconnected from the voice channel. Declaration public uint? SSRC { get; } Property Value Type Description Nullable < UInt32 > the Synchronization source identifier (SSRC) of the client that disconnected from the voice channel. | Improve this Doc View Source UserId Gets the snowflake identifier of the client that disconnected. Declaration public Snowflake UserId { get; } Property Value Type Description Snowflake the snowflake identifier of the client that disconnected."
  },
  "api/Strade.Voice.Events.ConnectionClosedEventArgs.html": {
    "href": "api/Strade.Voice.Events.ConnectionClosedEventArgs.html",
    "title": "Class ConnectionClosedEventArgs | Strade Developer Documentation",
    "keywords": "Class ConnectionClosedEventArgs Inheritance Object EventArgs ConnectionClosedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Events Assembly : Strade.Voice.Connection.dll Syntax public sealed class ConnectionClosedEventArgs : EventArgs Constructors | Improve this Doc View Source ConnectionClosedEventArgs(AudioConnection, AudioConnectionReconnectMode) Declaration public ConnectionClosedEventArgs(AudioConnection connection, AudioConnectionReconnectMode reconnectMode) Parameters Type Name Description AudioConnection connection AudioConnectionReconnectMode reconnectMode Properties | Improve this Doc View Source Connection Declaration public AudioConnection Connection { get; } Property Value Type Description AudioConnection | Improve this Doc View Source ReconnectMode Declaration public AudioConnectionReconnectMode ReconnectMode { get; } Property Value Type Description AudioConnectionReconnectMode"
  },
  "api/Strade.Voice.Events.ConnectionStatusChangedEventArgs.html": {
    "href": "api/Strade.Voice.Events.ConnectionStatusChangedEventArgs.html",
    "title": "Class ConnectionStatusChangedEventArgs | Strade Developer Documentation",
    "keywords": "Class ConnectionStatusChangedEventArgs The event arguments containing the event data for the ConnectionStatusChanged event. Inheritance Object EventArgs ConnectionStatusChangedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Events Assembly : Strade.Voice.Connection.dll Syntax public sealed class ConnectionStatusChangedEventArgs : EventArgs Constructors | Improve this Doc View Source ConnectionStatusChangedEventArgs(AudioConnection, AudioConnectionStatus, AudioConnectionStatus) Initializes a new instance of the ConnectionStatusChangedEventArgs class. Declaration public ConnectionStatusChangedEventArgs(AudioConnection connection, AudioConnectionStatus oldStatus, AudioConnectionStatus status) Parameters Type Name Description AudioConnection connection the affected connection which status has changed. AudioConnectionStatus oldStatus the old status of the connection. AudioConnectionStatus status the new status of the connection. Properties | Improve this Doc View Source Connection Gets the affected connection which status has changed. Declaration public AudioConnection Connection { get; } Property Value Type Description AudioConnection the affected connection which status has changed. | Improve this Doc View Source OldStatus Gets the old status of the connection. Declaration public AudioConnectionStatus OldStatus { get; } Property Value Type Description AudioConnectionStatus the old status of the connection. | Improve this Doc View Source Status Gets the new status of the connection. Declaration public AudioConnectionStatus Status { get; } Property Value Type Description AudioConnectionStatus the new status of the connection."
  },
  "api/Strade.Voice.Events.html": {
    "href": "api/Strade.Voice.Events.html",
    "title": "Namespace Strade.Voice.Events | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Events Classes ClientDisconnectedEventArgs The event arguments for the ClientDisconnected event. ConnectionClosedEventArgs ConnectionStatusChangedEventArgs The event arguments containing the event data for the ConnectionStatusChanged event. PlayerEventArgs PlayerPausedEventArgs PlayerResumedEventArgs PlayerTrackEndedEventArgs PlayerTrackEventArgs PlayerTrackSeekEventArgs PlayerTrackStartedEventArgs PlayerVolumeChangedEventArgs SpeakingEventArgs The event arguments containing the data for the Speaking event. Enums TrackEndReason A set of track end reasons."
  },
  "api/Strade.Voice.Events.PlayerEventArgs.html": {
    "href": "api/Strade.Voice.Events.PlayerEventArgs.html",
    "title": "Class PlayerEventArgs | Strade Developer Documentation",
    "keywords": "Class PlayerEventArgs Inheritance Object EventArgs PlayerEventArgs PlayerTrackEventArgs PlayerVolumeChangedEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Events Assembly : Strade.Voice.Abstractions.dll Syntax public abstract class PlayerEventArgs : EventArgs Constructors | Improve this Doc View Source PlayerEventArgs(AudioPlayer) Initializes a new instance of the PlayerEventArgs class. Declaration protected PlayerEventArgs(AudioPlayer player) Parameters Type Name Description AudioPlayer player the player that is related to the event. Exceptions Type Condition ArgumentNullException thrown if the specified player is null . Properties | Improve this Doc View Source Player Gets the player that is related to the event. Declaration public AudioPlayer Player { get; } Property Value Type Description AudioPlayer the player that is related to the event."
  },
  "api/Strade.Voice.Events.PlayerPausedEventArgs.html": {
    "href": "api/Strade.Voice.Events.PlayerPausedEventArgs.html",
    "title": "Class PlayerPausedEventArgs | Strade Developer Documentation",
    "keywords": "Class PlayerPausedEventArgs Inheritance Object EventArgs PlayerEventArgs PlayerTrackEventArgs PlayerPausedEventArgs Inherited Members PlayerTrackEventArgs.Track PlayerEventArgs.Player EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Events Assembly : Strade.Voice.Abstractions.dll Syntax public sealed class PlayerPausedEventArgs : PlayerTrackEventArgs Constructors | Improve this Doc View Source PlayerPausedEventArgs(AudioPlayer, IAudioTrack) Initializes a new instance of the PlayerPausedEventArgs class. Declaration public PlayerPausedEventArgs(AudioPlayer player, IAudioTrack track) Parameters Type Name Description AudioPlayer player the player that is related to the event. IAudioTrack track the audio track. Exceptions Type Condition ArgumentNullException thrown if the specified player is null . ArgumentNullException thrown if the specified track is null ."
  },
  "api/Strade.Voice.Events.PlayerResumedEventArgs.html": {
    "href": "api/Strade.Voice.Events.PlayerResumedEventArgs.html",
    "title": "Class PlayerResumedEventArgs | Strade Developer Documentation",
    "keywords": "Class PlayerResumedEventArgs Inheritance Object EventArgs PlayerEventArgs PlayerTrackEventArgs PlayerResumedEventArgs Inherited Members PlayerTrackEventArgs.Track PlayerEventArgs.Player EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Events Assembly : Strade.Voice.Abstractions.dll Syntax public sealed class PlayerResumedEventArgs : PlayerTrackEventArgs Constructors | Improve this Doc View Source PlayerResumedEventArgs(AudioPlayer, IAudioTrack) Initializes a new instance of the PlayerResumedEventArgs class. Declaration public PlayerResumedEventArgs(AudioPlayer player, IAudioTrack track) Parameters Type Name Description AudioPlayer player the player that is related to the event. IAudioTrack track the audio track. Exceptions Type Condition ArgumentNullException thrown if the specified player is null . ArgumentNullException thrown if the specified track is null ."
  },
  "api/Strade.Voice.Events.PlayerTrackEndedEventArgs.html": {
    "href": "api/Strade.Voice.Events.PlayerTrackEndedEventArgs.html",
    "title": "Class PlayerTrackEndedEventArgs | Strade Developer Documentation",
    "keywords": "Class PlayerTrackEndedEventArgs Inheritance Object EventArgs PlayerEventArgs PlayerTrackEventArgs PlayerTrackEndedEventArgs Inherited Members PlayerTrackEventArgs.Track PlayerEventArgs.Player EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Events Assembly : Strade.Voice.Abstractions.dll Syntax public sealed class PlayerTrackEndedEventArgs : PlayerTrackEventArgs Constructors | Improve this Doc View Source PlayerTrackEndedEventArgs(AudioPlayer, IAudioTrack, TrackEndReason, String) Initializes a new instance of the PlayerTrackEndedEventArgs class. Declaration public PlayerTrackEndedEventArgs(AudioPlayer player, IAudioTrack track, TrackEndReason reason = TrackEndReason.Finished, string message = null) Parameters Type Name Description AudioPlayer player the player that is related to the event. IAudioTrack track the audio track. TrackEndReason reason the reason why the track ended. String message a message indicating why the track ended, if present. Exceptions Type Condition ArgumentNullException thrown if the specified player is null . ArgumentNullException thrown if the specified track is null . Properties | Improve this Doc View Source MayPlayNext Gets a value indicating whether the next track maybe played. Declaration public bool MayPlayNext { get; } Property Value Type Description Boolean a value indicating whether the next track maybe played. | Improve this Doc View Source Message Gets a message indicating why the track ended, if present. Declaration public string Message { get; } Property Value Type Description String a message indicating why the track ended, if present. | Improve this Doc View Source Reason Gets the reason why the track ended. Declaration public TrackEndReason Reason { get; } Property Value Type Description TrackEndReason the reason why the track ended."
  },
  "api/Strade.Voice.Events.PlayerTrackEventArgs.html": {
    "href": "api/Strade.Voice.Events.PlayerTrackEventArgs.html",
    "title": "Class PlayerTrackEventArgs | Strade Developer Documentation",
    "keywords": "Class PlayerTrackEventArgs Inheritance Object EventArgs PlayerEventArgs PlayerTrackEventArgs PlayerPausedEventArgs PlayerResumedEventArgs PlayerTrackEndedEventArgs PlayerTrackSeekEventArgs PlayerTrackStartedEventArgs Inherited Members PlayerEventArgs.Player EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Events Assembly : Strade.Voice.Abstractions.dll Syntax public abstract class PlayerTrackEventArgs : PlayerEventArgs Constructors | Improve this Doc View Source PlayerTrackEventArgs(AudioPlayer, IAudioTrack) Initializes a new instance of the PlayerTrackEventArgs class. Declaration protected PlayerTrackEventArgs(AudioPlayer player, IAudioTrack track) Parameters Type Name Description AudioPlayer player the player that is related to the event. IAudioTrack track the audio track. Exceptions Type Condition ArgumentNullException thrown if the specified player is null . ArgumentNullException thrown if the specified track is null . Properties | Improve this Doc View Source Track Gets the audio track. Declaration public IAudioTrack Track { get; } Property Value Type Description IAudioTrack the audio track."
  },
  "api/Strade.Voice.Events.PlayerTrackSeekEventArgs.html": {
    "href": "api/Strade.Voice.Events.PlayerTrackSeekEventArgs.html",
    "title": "Class PlayerTrackSeekEventArgs | Strade Developer Documentation",
    "keywords": "Class PlayerTrackSeekEventArgs Inheritance Object EventArgs PlayerEventArgs PlayerTrackEventArgs PlayerTrackSeekEventArgs Inherited Members PlayerTrackEventArgs.Track PlayerEventArgs.Player EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Events Assembly : Strade.Voice.Abstractions.dll Syntax public sealed class PlayerTrackSeekEventArgs : PlayerTrackEventArgs Constructors | Improve this Doc View Source PlayerTrackSeekEventArgs(AudioPlayer, IAudioTrack, TimeSpan) Declaration public PlayerTrackSeekEventArgs(AudioPlayer player, IAudioTrack track, TimeSpan position) Parameters Type Name Description AudioPlayer player IAudioTrack track TimeSpan position Properties | Improve this Doc View Source Position Declaration public TimeSpan Position { get; } Property Value Type Description TimeSpan"
  },
  "api/Strade.Voice.Events.PlayerTrackStartedEventArgs.html": {
    "href": "api/Strade.Voice.Events.PlayerTrackStartedEventArgs.html",
    "title": "Class PlayerTrackStartedEventArgs | Strade Developer Documentation",
    "keywords": "Class PlayerTrackStartedEventArgs Inheritance Object EventArgs PlayerEventArgs PlayerTrackEventArgs PlayerTrackStartedEventArgs Inherited Members PlayerTrackEventArgs.Track PlayerEventArgs.Player EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Events Assembly : Strade.Voice.Abstractions.dll Syntax public sealed class PlayerTrackStartedEventArgs : PlayerTrackEventArgs Constructors | Improve this Doc View Source PlayerTrackStartedEventArgs(AudioPlayer, IAudioTrack) Initializes a new instance of the PlayerTrackStartedEventArgs class. Declaration public PlayerTrackStartedEventArgs(AudioPlayer player, IAudioTrack track) Parameters Type Name Description AudioPlayer player the player that is related to the event. IAudioTrack track the audio track started. Exceptions Type Condition ArgumentNullException thrown if the specified player is null . ArgumentNullException thrown if the specified track is null ."
  },
  "api/Strade.Voice.Events.PlayerVolumeChangedEventArgs.html": {
    "href": "api/Strade.Voice.Events.PlayerVolumeChangedEventArgs.html",
    "title": "Class PlayerVolumeChangedEventArgs | Strade Developer Documentation",
    "keywords": "Class PlayerVolumeChangedEventArgs Inheritance Object EventArgs PlayerEventArgs PlayerVolumeChangedEventArgs Inherited Members PlayerEventArgs.Player EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Events Assembly : Strade.Voice.Abstractions.dll Syntax public sealed class PlayerVolumeChangedEventArgs : PlayerEventArgs Constructors | Improve this Doc View Source PlayerVolumeChangedEventArgs(AudioPlayer, Single) Initializes a new instance of the PlayerVolumeChangedEventArgs class. Declaration public PlayerVolumeChangedEventArgs(AudioPlayer player, float volume) Parameters Type Name Description AudioPlayer player the player that is related to the event. Single volume the new player volume. Exceptions Type Condition ArgumentNullException thrown if the specified player is null . Properties | Improve this Doc View Source Volume Gets the new player volume. Declaration public float Volume { get; } Property Value Type Description Single the new player volume."
  },
  "api/Strade.Voice.Events.SpeakingEventArgs.html": {
    "href": "api/Strade.Voice.Events.SpeakingEventArgs.html",
    "title": "Class SpeakingEventArgs | Strade Developer Documentation",
    "keywords": "Class SpeakingEventArgs The event arguments containing the data for the Speaking event. Inheritance Object EventArgs SpeakingEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Events Assembly : Strade.Voice.Connection.dll Syntax public sealed class SpeakingEventArgs : EventArgs Constructors | Improve this Doc View Source SpeakingEventArgs(UInt32, Snowflake, Int32, SpeakingFlags, Boolean) Initializes a new instance of the SpeakingEventArgs class. Declaration public SpeakingEventArgs(uint ssrc, Snowflake userId, int delay = 0, SpeakingFlags flags = SpeakingFlags.None, bool self = false) Parameters Type Name Description UInt32 ssrc the SSRC of the speaking client. Snowflake userId the snowflake identifier of the user that started / stopped speaking. Int32 delay the delay (after which the speaking takes effect). SpeakingFlags flags the audio flags. Boolean self a value indicating whether the client is the current audio client. Properties | Improve this Doc View Source Delay Gets the delay (after which the speaking takes effect). Declaration public int Delay { get; } Property Value Type Description Int32 the delay (after which the speaking takes effect). | Improve this Doc View Source Flags Gets the flags for the client. Declaration public SpeakingFlags Flags { get; } Property Value Type Description SpeakingFlags the flags for the client. | Improve this Doc View Source IsSelf Gets a value indicating whether the client is the current audio client. Declaration public bool IsSelf { get; } Property Value Type Description Boolean a value indicating whether the client is the current audio client. | Improve this Doc View Source SSRC Gets the SSRC of the speaking client. Declaration public uint SSRC { get; } Property Value Type Description UInt32 the SSRC of the speaking client. | Improve this Doc View Source UserId Gets the snowflake identifier of the user that started / stopped speaking. Declaration public Snowflake UserId { get; } Property Value Type Description Snowflake the snowflake identifier of the user that started / stopped speaking."
  },
  "api/Strade.Voice.Events.TrackEndReason.html": {
    "href": "api/Strade.Voice.Events.TrackEndReason.html",
    "title": "Enum TrackEndReason | Strade Developer Documentation",
    "keywords": "Enum TrackEndReason A set of track end reasons. Namespace : Strade.Voice.Events Assembly : Strade.Voice.Abstractions.dll Syntax public enum TrackEndReason : byte Fields Name Description CleanUp Denotes that the player that played the track was cleaned-up / disposed. Exception Denotes that an exception occurred while playing the track. Finished Denotes that the track ended normally (a track was played and ran to end). Stop Denotes that the ended because it was stopped forcefully. Extension Methods EnumExtensions.GetName<TrackEndReason>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Voice.Exceptions.html": {
    "href": "api/Strade.Voice.Exceptions.html",
    "title": "Namespace Strade.Voice.Exceptions | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Exceptions Classes PlayerConflictException"
  },
  "api/Strade.Voice.Exceptions.PlayerConflictException.html": {
    "href": "api/Strade.Voice.Exceptions.PlayerConflictException.html",
    "title": "Class PlayerConflictException | Strade Developer Documentation",
    "keywords": "Class PlayerConflictException Inheritance Object Exception PlayerConflictException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Voice.Exceptions Assembly : Strade.Voice.Abstractions.dll Syntax public sealed class PlayerConflictException : Exception, ISerializable Constructors | Improve this Doc View Source PlayerConflictException() Declaration public PlayerConflictException() | Improve this Doc View Source PlayerConflictException(AudioPlayer, Type) Declaration public PlayerConflictException(AudioPlayer conflictingPlayer, Type targetPlayerType) Parameters Type Name Description AudioPlayer conflictingPlayer Type targetPlayerType | Improve this Doc View Source PlayerConflictException(String) Declaration public PlayerConflictException(string message) Parameters Type Name Description String message | Improve this Doc View Source PlayerConflictException(String, AudioPlayer, Type) Declaration public PlayerConflictException(string message, AudioPlayer conflictingPlayer, Type targetPlayerType) Parameters Type Name Description String message AudioPlayer conflictingPlayer Type targetPlayerType | Improve this Doc View Source PlayerConflictException(String, Exception) Declaration public PlayerConflictException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Properties | Improve this Doc View Source ConflictingPlayer Gets the audio player that was found, if present. Declaration public AudioPlayer ConflictingPlayer { get; } Property Value Type Description AudioPlayer the audio player that was found, if present. | Improve this Doc View Source TargetPlayerType Gets the type of the target player that conflicted, if present. Declaration public Type TargetPlayerType { get; } Property Value Type Description Type the type of the target player that conflicted, if present. Implements System.Runtime.Serialization.ISerializable"
  },
  "api/Strade.Voice.html": {
    "href": "api/Strade.Voice.html",
    "title": "Namespace Strade.Voice | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice Classes AudioService AudioServiceOptions BaseAudioService DefaultAudioPlayerContext DefaultAudioTrackManager The default implementation of the IAudioTrackManager interface. Interfaces IAudioPlayerContext An interface used to implement the backend context of an audio player. IAudioService IFilterCollection Enums PlayerState A set of possible player states. Delegates AudioProviderFactory"
  },
  "api/Strade.Voice.IAudioPlayerContext.html": {
    "href": "api/Strade.Voice.IAudioPlayerContext.html",
    "title": "Interface IAudioPlayerContext | Strade Developer Documentation",
    "keywords": "Interface IAudioPlayerContext An interface used to implement the backend context of an audio player. Inherited Members IDisposable.Dispose() Namespace : Strade.Voice Assembly : Strade.Voice.Abstractions.dll Syntax public interface IAudioPlayerContext : IDisposable Properties | Improve this Doc View Source AudioService Gets the audio service the context is bound to. Declaration IAudioService AudioService { get; } Property Value Type Description IAudioService the audio service the context is bound to. | Improve this Doc View Source CanSeek Gets a value indicating whether the current playing track can be seeked. Declaration bool CanSeek { get; } Property Value Type Description Boolean a value indicating whether the current playing track can be seeked. Remarks If the player is not playing a track ( State == NotPlaying or State == Destroyed ) then the value is false . | Improve this Doc View Source CurrentTrack Gets the current track that is playing. Declaration IAudioTrack CurrentTrack { get; } Property Value Type Description IAudioTrack the current track that is playing; or null if the player is not playing ( State == NotPlaying or State == Destroyed ). | Improve this Doc View Source Duration Gets the duration of the track that is playing. Declaration TimeSpan Duration { get; } Property Value Type Description TimeSpan the duration of the track that is playing; or Zero if the player is not playing ( State == NotPlaying or State == Destroyed ). Exceptions Type Condition InvalidOperationException thrown if the player is destroyed ( State == Destroyed ). | Improve this Doc View Source Filters Gets the filter collection. Declaration IFilterCollection Filters { get; } Property Value Type Description IFilterCollection the filter collection for the player. Exceptions Type Condition InvalidOperationException thrown if the player is destroyed ( State == Destroyed ). | Improve this Doc View Source GuildId Gets the snowflake identifier of the guild the player is for. Declaration Snowflake GuildId { get; } Property Value Type Description Snowflake the snowflake identifier of the guild the player is for. | Improve this Doc View Source Position Gets the position of the track that is playing. Declaration TimeSpan Position { get; } Property Value Type Description TimeSpan the position of the track that is playing; or Zero if the player is not playing ( State == NotPlaying or State == Destroyed ). Exceptions Type Condition InvalidOperationException thrown if the player is destroyed ( State == Destroyed ). | Improve this Doc View Source State Gets the current player state. Declaration PlayerState State { get; } Property Value Type Description PlayerState the current player state. NotPlaying Denotes that the player is not playing a track. Playing Denotes that the player is playing a track. Paused Denotes that the player is paused. Destroyed Denotes that the player is destroyed. | Improve this Doc View Source Volume Gets the player volume. Declaration float Volume { get; } Property Value Type Description Single the player volume. Remarks The default value for the volume is 1F , values equal or below 0F indicate that the output is muted. See Also SetVolumeAsync(Single, CancellationToken) Methods | Improve this Doc View Source PauseAsync(CancellationToken) Pauses the player asynchronously. Declaration Task PauseAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Remarks If the player is already paused, nothing will happen. Exceptions Type Condition InvalidOperationException thrown if the player is not playing a track. InvalidOperationException thrown if the player is destroyed ( State == Destroyed ). | Improve this Doc View Source PlayAsync(IAudioTrack, CancellationToken) Plays the specified track asynchronously. Declaration Task PlayAsync(IAudioTrack track, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IAudioTrack track the track to play. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Remarks If a track is currently playing then the track will be aborted. Exceptions Type Condition ArgumentNullException thrown if the specified track is null . InvalidOperationException thrown if the player is destroyed ( State == Destroyed ). | Improve this Doc View Source ResumeAsync(CancellationToken) Resumes the playback asynchronously. Declaration Task ResumeAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Remarks If the player is not paused, nothing will happen. Exceptions Type Condition InvalidOperationException thrown if the player is not playing a track. InvalidOperationException thrown if the player is destroyed ( State == Destroyed ). | Improve this Doc View Source SeekAsync(TimeSpan, SeekOrigin, CancellationToken) Seeks a specific position in the track asynchronously. Declaration Task<TimeSpan> SeekAsync(TimeSpan offset, SeekOrigin origin = SeekOrigin.Begin, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TimeSpan offset the relative seek offset. SeekOrigin origin the seek origin specifying the origin of the specified offset . CancellationToken cancellationToken Returns Type Description Task < TimeSpan > a task that represents the asynchronous operation. The task result is the new track position. Exceptions Type Condition InvalidOperationException thrown if the player is not playing a track. InvalidOperationException thrown if the player is destroyed ( State == Destroyed ). NotSupportedException thrown if seeking is not supported (! CanSeek ). | Improve this Doc View Source SetVolumeAsync(Single, CancellationToken) Sets the volume ( Volume ) asynchronously. Declaration Task SetVolumeAsync(float volume, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Single volume the new volume. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition InvalidOperationException thrown if the player is destroyed ( State == Destroyed ). See Also Volume | Improve this Doc View Source StopAsync(CancellationToken) Stops the playback asynchronously. Declaration Task StopAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Remarks If the player is not playing, nothing will happen. Exceptions Type Condition InvalidOperationException thrown if the player is destroyed ( State == Destroyed )."
  },
  "api/Strade.Voice.IAudioService.html": {
    "href": "api/Strade.Voice.IAudioService.html",
    "title": "Interface IAudioService | Strade Developer Documentation",
    "keywords": "Interface IAudioService Inherited Members IAudioTrackManager.Providers IAudioTrackManager.FindProviders(String) IAudioTrackManager.LoadTrackAsync(String, AudioTrackProviderOptions, CancellationToken) IAudioTrackManager.LoadTrackAsync(String, String, AudioTrackProviderOptions, CancellationToken) IAudioTrackManager.LoadTracksAsync(String, AudioTrackProviderOptions, Int32, CancellationToken) IAudioTrackManager.LoadTracksAsync(String, String, AudioTrackProviderOptions, Int32, CancellationToken) IDisposable.Dispose() Namespace : Strade.Voice Assembly : Strade.Voice.Abstractions.dll Syntax public interface IAudioService : IAudioTrackManager, IDisposable Properties | Improve this Doc View Source TrackManager Gets the underlying track manager. Declaration IAudioTrackManager TrackManager { get; } Property Value Type Description IAudioTrackManager the underlying track manager. Methods | Improve this Doc View Source GetPlayer(IGuild) Declaration AudioPlayer GetPlayer(IGuild guild) Parameters Type Name Description IGuild guild Returns Type Description AudioPlayer | Improve this Doc View Source GetPlayer(Snowflake) Declaration AudioPlayer GetPlayer(Snowflake guildId) Parameters Type Name Description Snowflake guildId Returns Type Description AudioPlayer | Improve this Doc View Source GetPlayer<TPlayer>(IGuild) Declaration TPlayer GetPlayer<TPlayer>(IGuild guild) where TPlayer : AudioPlayer Parameters Type Name Description IGuild guild Returns Type Description TPlayer Type Parameters Name Description TPlayer | Improve this Doc View Source GetPlayer<TPlayer>(Snowflake) Declaration TPlayer GetPlayer<TPlayer>(Snowflake guildId) where TPlayer : AudioPlayer Parameters Type Name Description Snowflake guildId Returns Type Description TPlayer Type Parameters Name Description TPlayer | Improve this Doc View Source JoinAsync(IVoiceChannel, CancellationToken) Declaration ValueTask<AudioPlayer> JoinAsync(IVoiceChannel voiceChannel, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IVoiceChannel voiceChannel CancellationToken cancellationToken Returns Type Description ValueTask < AudioPlayer > | Improve this Doc View Source JoinAsync(Snowflake, Snowflake, CancellationToken) Declaration ValueTask<AudioPlayer> JoinAsync(Snowflake guildId, Snowflake voiceChannelId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Snowflake guildId Snowflake voiceChannelId CancellationToken cancellationToken Returns Type Description ValueTask < AudioPlayer > | Improve this Doc View Source JoinAsync<TPlayer>(IVoiceChannel, AudioPlayerFactory<TPlayer>, CancellationToken) Declaration ValueTask<TPlayer> JoinAsync<TPlayer>(IVoiceChannel voiceChannel, AudioPlayerFactory<TPlayer> playerFactory, CancellationToken cancellationToken = default(CancellationToken)) where TPlayer : AudioPlayer Parameters Type Name Description IVoiceChannel voiceChannel AudioPlayerFactory <TPlayer> playerFactory CancellationToken cancellationToken Returns Type Description ValueTask <TPlayer> Type Parameters Name Description TPlayer | Improve this Doc View Source JoinAsync<TPlayer>(Snowflake, Snowflake, AudioPlayerFactory<TPlayer>, CancellationToken) Declaration ValueTask<TPlayer> JoinAsync<TPlayer>(Snowflake guildId, Snowflake voiceChannelId, AudioPlayerFactory<TPlayer> playerFactory, CancellationToken cancellationToken = default(CancellationToken)) where TPlayer : AudioPlayer Parameters Type Name Description Snowflake guildId Snowflake voiceChannelId AudioPlayerFactory <TPlayer> playerFactory CancellationToken cancellationToken Returns Type Description ValueTask <TPlayer> Type Parameters Name Description TPlayer Events | Improve this Doc View Source PlayerPaused Asynchronous event which is dispatched when a player was paused. Declaration event AsyncEventHandler<PlayerPausedEventArgs> PlayerPaused Event Type Type Description AsyncEventHandler < PlayerPausedEventArgs > | Improve this Doc View Source PlayerResumed Asynchronous event which is dispatched when a player was paused. Declaration event AsyncEventHandler<PlayerResumedEventArgs> PlayerResumed Event Type Type Description AsyncEventHandler < PlayerResumedEventArgs > | Improve this Doc View Source PlayerVolumeChanged Asynchronous event which is dispatched when a player's volume has been changed. Declaration event AsyncEventHandler<PlayerVolumeChangedEventArgs> PlayerVolumeChanged Event Type Type Description AsyncEventHandler < PlayerVolumeChangedEventArgs > | Improve this Doc View Source TrackEnded Asynchronous event which is dispatched when a track ended. Declaration event AsyncEventHandler<PlayerTrackEndedEventArgs> TrackEnded Event Type Type Description AsyncEventHandler < PlayerTrackEndedEventArgs > | Improve this Doc View Source TrackSeek Asynchronous event which is dispatched when a position in a track was seeked. Declaration event AsyncEventHandler<PlayerTrackSeekEventArgs> TrackSeek Event Type Type Description AsyncEventHandler < PlayerTrackSeekEventArgs > | Improve this Doc View Source TrackStarted Asynchronous event which is dispatched when a track started. Declaration event AsyncEventHandler<PlayerTrackStartedEventArgs> TrackStarted Event Type Type Description AsyncEventHandler < PlayerTrackStartedEventArgs >"
  },
  "api/Strade.Voice.IFilterCollection.html": {
    "href": "api/Strade.Voice.IFilterCollection.html",
    "title": "Interface IFilterCollection | Strade Developer Documentation",
    "keywords": "Interface IFilterCollection Inherited Members ICollection<IAudioFilter>.Add(IAudioFilter) ICollection<IAudioFilter>.Clear() ICollection<IAudioFilter>.Contains(IAudioFilter) ICollection<IAudioFilter>.CopyTo(IAudioFilter[], Int32) ICollection<IAudioFilter>.Remove(IAudioFilter) ICollection<IAudioFilter>.Count ICollection<IAudioFilter>.IsReadOnly IEnumerable<IAudioFilter>.GetEnumerator() Namespace : Strade.Voice Assembly : Strade.Voice.Abstractions.dll Syntax public interface IFilterCollection : ICollection<IAudioFilter>, IEnumerable<IAudioFilter>, IEnumerable"
  },
  "api/Strade.Voice.Jitter.html": {
    "href": "api/Strade.Voice.Jitter.html",
    "title": "Namespace Strade.Voice.Jitter | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Jitter Classes JitterBuffer JitterBufferPacket OpusJitterBuffer"
  },
  "api/Strade.Voice.Jitter.JitterBuffer.html": {
    "href": "api/Strade.Voice.Jitter.JitterBuffer.html",
    "title": "Class JitterBuffer | Strade Developer Documentation",
    "keywords": "Class JitterBuffer Inheritance Object JitterBuffer OpusJitterBuffer Implements IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Jitter Assembly : Strade.Voice.Connection.dll Syntax public abstract class JitterBuffer : IDisposable Constructors | Improve this Doc View Source JitterBuffer(Int32) Declaration protected JitterBuffer(int maxDepth = 30) Parameters Type Name Description Int32 maxDepth Properties | Improve this Doc View Source Buffered Declaration public int Buffered { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Depth Declaration public int Depth { get; } Property Value Type Description Int32 | Improve this Doc View Source DroppedCount Declaration public int DroppedCount { get; } Property Value Type Description Int32 | Improve this Doc View Source IsBuffering Declaration public bool IsBuffering { get; } Property Value Type Description Boolean | Improve this Doc View Source MaxDepth Declaration public int MaxDepth { get; set; } Property Value Type Description Int32 | Improve this Doc View Source MergedCount Declaration public int MergedCount { get; } Property Value Type Description Int32 | Improve this Doc View Source MissedCount Declaration public int MissedCount { get; } Property Value Type Description Int32 | Improve this Doc View Source OutOfOrderCount Declaration public int OutOfOrderCount { get; } Property Value Type Description Int32 | Improve this Doc View Source PlayoutDelay Declaration public int PlayoutDelay { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source Decode(JitterBufferPacket, ArraySegment<Byte>) Declaration protected abstract int Decode(JitterBufferPacket packet, ArraySegment<byte> output) Parameters Type Name Description JitterBufferPacket packet ArraySegment < Byte > output Returns Type Description Int32 | Improve this Doc View Source DecodeEmpty(ArraySegment<Byte>) Declaration protected abstract int DecodeEmpty(ArraySegment<byte> output) Parameters Type Name Description ArraySegment < Byte > output Returns Type Description Int32 | Improve this Doc View Source DecodeFEC(Int32, ArraySegment<Byte>) Declaration protected abstract int DecodeFEC(int duration, ArraySegment<byte> output) Parameters Type Name Description Int32 duration ArraySegment < Byte > output Returns Type Description Int32 | Improve this Doc View Source DecodeMerged(JitterBufferPacket, JitterBufferPacket, ArraySegment<Byte>) Declaration protected abstract int DecodeMerged(JitterBufferPacket packet1, JitterBufferPacket packet2, ArraySegment<byte> output) Parameters Type Name Description JitterBufferPacket packet1 JitterBufferPacket packet2 ArraySegment < Byte > output Returns Type Description Int32 | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source Pop(ArraySegment<Byte>) Declaration public int Pop(ArraySegment<byte> buffer) Parameters Type Name Description ArraySegment < Byte > buffer Returns Type Description Int32 | Improve this Doc View Source Push(JitterBufferPacket) Declaration public void Push(JitterBufferPacket packet) Parameters Type Name Description JitterBufferPacket packet | Improve this Doc View Source Synchronize() Declaration public void Synchronize() Implements System.IDisposable"
  },
  "api/Strade.Voice.Jitter.JitterBufferPacket.html": {
    "href": "api/Strade.Voice.Jitter.JitterBufferPacket.html",
    "title": "Class JitterBufferPacket | Strade Developer Documentation",
    "keywords": "Class JitterBufferPacket Inheritance Object JitterBufferPacket Implements IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Voice.Jitter Assembly : Strade.Voice.Connection.dll Syntax public sealed class JitterBufferPacket : IDisposable Constructors | Improve this Doc View Source JitterBufferPacket(Int32, UInt16, UInt32) Declaration public JitterBufferPacket(int count, ushort sequence, uint timestamp) Parameters Type Name Description Int32 count UInt16 sequence UInt32 timestamp Properties | Improve this Doc View Source Data Declaration public ArraySegment<byte> Data { get; } Property Value Type Description ArraySegment < Byte > | Improve this Doc View Source Sequence Declaration public ushort Sequence { get; } Property Value Type Description UInt16 | Improve this Doc View Source Timestamp Declaration public uint Timestamp { get; } Property Value Type Description UInt32 Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements System.IDisposable"
  },
  "api/Strade.Voice.Jitter.OpusJitterBuffer.html": {
    "href": "api/Strade.Voice.Jitter.OpusJitterBuffer.html",
    "title": "Class OpusJitterBuffer | Strade Developer Documentation",
    "keywords": "Class OpusJitterBuffer Inheritance Object JitterBuffer OpusJitterBuffer Implements IDisposable Inherited Members JitterBuffer.Buffered JitterBuffer.Depth JitterBuffer.DroppedCount JitterBuffer.IsBuffering JitterBuffer.MaxDepth JitterBuffer.MergedCount JitterBuffer.MissedCount JitterBuffer.OutOfOrderCount JitterBuffer.PlayoutDelay JitterBuffer.Dispose() JitterBuffer.Pop(ArraySegment<Byte>) JitterBuffer.Push(JitterBufferPacket) JitterBuffer.Synchronize() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Jitter Assembly : Strade.Voice.Connection.dll Syntax public sealed class OpusJitterBuffer : JitterBuffer, IDisposable Constructors | Improve this Doc View Source OpusJitterBuffer() Declaration public OpusJitterBuffer() Methods | Improve this Doc View Source Decode(JitterBufferPacket, ArraySegment<Byte>) Declaration protected override int Decode(JitterBufferPacket packet, ArraySegment<byte> output) Parameters Type Name Description JitterBufferPacket packet ArraySegment < Byte > output Returns Type Description Int32 Overrides JitterBuffer.Decode(JitterBufferPacket, ArraySegment<Byte>) | Improve this Doc View Source DecodeEmpty(ArraySegment<Byte>) Declaration protected override int DecodeEmpty(ArraySegment<byte> output) Parameters Type Name Description ArraySegment < Byte > output Returns Type Description Int32 Overrides JitterBuffer.DecodeEmpty(ArraySegment<Byte>) | Improve this Doc View Source DecodeFEC(Int32, ArraySegment<Byte>) Declaration protected override int DecodeFEC(int duration, ArraySegment<byte> output) Parameters Type Name Description Int32 duration ArraySegment < Byte > output Returns Type Description Int32 Overrides JitterBuffer.DecodeFEC(Int32, ArraySegment<Byte>) | Improve this Doc View Source DecodeMerged(JitterBufferPacket, JitterBufferPacket, ArraySegment<Byte>) Declaration protected override int DecodeMerged(JitterBufferPacket packet1, JitterBufferPacket packet2, ArraySegment<byte> output) Parameters Type Name Description JitterBufferPacket packet1 JitterBufferPacket packet2 ArraySegment < Byte > output Returns Type Description Int32 Overrides JitterBuffer.DecodeMerged(JitterBufferPacket, JitterBufferPacket, ArraySegment<Byte>) | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides JitterBuffer.Dispose(Boolean) Implements System.IDisposable"
  },
  "api/Strade.Voice.M3u.html": {
    "href": "api/Strade.Voice.M3u.html",
    "title": "Namespace Strade.Voice.M3u | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.M3u Classes M3uDataElement Represents a M3u playlist data element. M3uDirective Represents a M3u playlist directive element. M3uPlaylistParser An utility class used to parse M3u playlist files. M3uSegmentAudioStream A stream that reads audio data from M3U segments. M3uStreamSegment Represents a M3u stream segment. Interfaces IM3uPlaylistElement Interface for M3U playlist elements. Enums M3uPlaylistElementType A set of M3u playlist element types."
  },
  "api/Strade.Voice.M3u.IM3uPlaylistElement.html": {
    "href": "api/Strade.Voice.M3u.IM3uPlaylistElement.html",
    "title": "Interface IM3uPlaylistElement | Strade Developer Documentation",
    "keywords": "Interface IM3uPlaylistElement Interface for M3U playlist elements. Namespace : Strade.Voice.M3u Assembly : Strade.Voice.dll Syntax public interface IM3uPlaylistElement Properties | Improve this Doc View Source Type Gets the type of the tile. Declaration M3uPlaylistElementType Type { get; } Property Value Type Description M3uPlaylistElementType"
  },
  "api/Strade.Voice.M3u.M3uDataElement.html": {
    "href": "api/Strade.Voice.M3u.M3uDataElement.html",
    "title": "Class M3uDataElement | Strade Developer Documentation",
    "keywords": "Class M3uDataElement Represents a M3u playlist data element. Inheritance Object M3uDataElement Implements IM3uPlaylistElement Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.M3u Assembly : Strade.Voice.dll Syntax public sealed class M3uDataElement : IM3uPlaylistElement Constructors | Improve this Doc View Source M3uDataElement(String) Initializes a new instance of the M3uDataElement class. Declaration public M3uDataElement(string data) Parameters Type Name Description String data the raw data. Exceptions Type Condition ArgumentNullException thrown if the specified data is null . Properties | Improve this Doc View Source Data Gets the raw data. Declaration public string Data { get; } Property Value Type Description String | Improve this Doc View Source Type Declaration public M3uPlaylistElementType Type { get; } Property Value Type Description M3uPlaylistElementType Implements IM3uPlaylistElement"
  },
  "api/Strade.Voice.M3u.M3uDirective.html": {
    "href": "api/Strade.Voice.M3u.M3uDirective.html",
    "title": "Class M3uDirective | Strade Developer Documentation",
    "keywords": "Class M3uDirective Represents a M3u playlist directive element. Inheritance Object M3uDirective Implements IM3uPlaylistElement Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.M3u Assembly : Strade.Voice.dll Syntax public sealed class M3uDirective : IM3uPlaylistElement Constructors | Improve this Doc View Source M3uDirective(String, String) Initializes a new instance of the M3uDirective class. Declaration public M3uDirective(string key, string value) Parameters Type Name Description String key the directive key / property name. String value the value. Exceptions Type Condition ArgumentNullException thrown if the specified key is null . Properties | Improve this Doc View Source Key Gets the directive key / property name. Declaration public string Key { get; } Property Value Type Description String | Improve this Doc View Source Type Declaration public M3uPlaylistElementType Type { get; } Property Value Type Description M3uPlaylistElementType | Improve this Doc View Source Value Gets the value. Declaration public string Value { get; } Property Value Type Description String Implements IM3uPlaylistElement"
  },
  "api/Strade.Voice.M3u.M3uPlaylistElementType.html": {
    "href": "api/Strade.Voice.M3u.M3uPlaylistElementType.html",
    "title": "Enum M3uPlaylistElementType | Strade Developer Documentation",
    "keywords": "Enum M3uPlaylistElementType A set of M3u playlist element types. Namespace : Strade.Voice.M3u Assembly : Strade.Voice.dll Syntax public enum M3uPlaylistElementType : byte Fields Name Description Data Denotes that the element is a data element. Directive Denotes that the element is a directive element. Extension Methods EnumExtensions.GetName<M3uPlaylistElementType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Voice.M3u.M3uPlaylistParser.html": {
    "href": "api/Strade.Voice.M3u.M3uPlaylistParser.html",
    "title": "Class M3uPlaylistParser | Strade Developer Documentation",
    "keywords": "Class M3uPlaylistParser An utility class used to parse M3u playlist files. Inheritance Object M3uPlaylistParser Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.M3u Assembly : Strade.Voice.dll Syntax public static class M3uPlaylistParser Fields | Improve this Doc View Source DirectivePrefix The char prefix for M3u playlist directives. Declaration public const char DirectivePrefix = '#' Field Value Type Description Char Methods | Improve this Doc View Source Parse(IEnumerable<String>) Parses the specified M3u playlist content . Declaration public static IEnumerable<IM3uPlaylistElement> Parse(IEnumerable<string> content) Parameters Type Name Description IEnumerable < String > content the content. Returns Type Description IEnumerable < IM3uPlaylistElement > an enumerable that yields through the M3u playlist elements parsed. Exceptions Type Condition ArgumentNullException thrown if the specified content is null . | Improve this Doc View Source Parse(String) Parses the specified M3u playlist content . Declaration public static IEnumerable<IM3uPlaylistElement> Parse(string content) Parameters Type Name Description String content the content. Returns Type Description IEnumerable < IM3uPlaylistElement > an enumerable that yields through the M3u playlist elements parsed. Exceptions Type Condition ArgumentNullException thrown if the specified content is null or empty. | Improve this Doc View Source ParseElement(String) Parses a single M3u element ( IM3uPlaylistElement ). Declaration public static IM3uPlaylistElement ParseElement(string lineContent) Parameters Type Name Description String lineContent the content of the line. Returns Type Description IM3uPlaylistElement the parsed playlist element; or null if no element was found in the specified content. Exceptions Type Condition ArgumentNullException thrown if the specified lineContent is null or empty."
  },
  "api/Strade.Voice.M3u.M3uSegmentAudioStream.html": {
    "href": "api/Strade.Voice.M3u.M3uSegmentAudioStream.html",
    "title": "Class M3uSegmentAudioStream | Strade Developer Documentation",
    "keywords": "Class M3uSegmentAudioStream A stream that reads audio data from M3U segments. Inheritance Object MarshalByRefObject Stream M3uSegmentAudioStream Implements IDisposable Inherited Members Stream.Null Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object) Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object) Stream.Close() Stream.CopyTo(Stream) Stream.CopyTo(Stream, Int32) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, Int32) Stream.CopyToAsync(Stream, Int32, CancellationToken) Stream.CreateWaitHandle() Stream.Dispose() Stream.EndRead(IAsyncResult) Stream.EndWrite(IAsyncResult) Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.ObjectInvariant() Stream.ReadAsync(Byte[], Int32, Int32) Stream.ReadByte() Stream.Synchronized(Stream) Stream.WriteAsync(Byte[], Int32, Int32) Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken) Stream.WriteByte(Byte) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(Boolean) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.M3u Assembly : Strade.Voice.dll Syntax public sealed class M3uSegmentAudioStream : Stream, IDisposable Constructors | Improve this Doc View Source M3uSegmentAudioStream(HttpClient, IEnumerable<M3uStreamSegment>, Boolean) Initializes a new instance of the M3uSegmentAudioStream class. Declaration public M3uSegmentAudioStream(HttpClient httpClient, IEnumerable<M3uStreamSegment> segments, bool leaveOpen = false) Parameters Type Name Description HttpClient httpClient the HTTP client. IEnumerable < M3uStreamSegment > segments the segments contained in the stream. Boolean leaveOpen a value indicating whether the specified httpClient should be disposed when disposing the M3uSegmentAudioStream instance is disposed. Exceptions Type Condition ArgumentNullException thrown if the specified httpClient is null . ArgumentNullException thrown if the specified segments enumerable is null . Properties | Improve this Doc View Source CanRead Declaration public override bool CanRead { get; } Property Value Type Description Boolean Overrides Stream.CanRead | Improve this Doc View Source CanSeek Declaration public override bool CanSeek { get; } Property Value Type Description Boolean Overrides Stream.CanSeek | Improve this Doc View Source CanWrite Declaration public override bool CanWrite { get; } Property Value Type Description Boolean Overrides Stream.CanWrite | Improve this Doc View Source Length Declaration public override long Length { get; } Property Value Type Description Int64 Overrides Stream.Length | Improve this Doc View Source Position Declaration public override long Position { get; set; } Property Value Type Description Int64 Overrides Stream.Position | Improve this Doc View Source RemainingSegments Gets the number of remaining segments. Declaration public int RemainingSegments { get; } Property Value Type Description Int32 Exceptions Type Condition ObjectDisposedException thrown if the M3uSegmentAudioStream instance is disposed. | Improve this Doc View Source Segment Gets the current segment. Declaration public M3uStreamSegment Segment { get; } Property Value Type Description M3uStreamSegment the current segment. Exceptions Type Condition ObjectDisposedException thrown if the M3uSegmentAudioStream instance is disposed. | Improve this Doc View Source Segments Gets the total number of segments. Declaration public int Segments { get; } Property Value Type Description Int32 the total number of segments. Exceptions Type Condition ObjectDisposedException thrown if the M3uSegmentAudioStream instance is disposed. Methods | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides Stream.Dispose(Boolean) | Improve this Doc View Source Flush() Declaration public override void Flush() Overrides Stream.Flush() Exceptions Type Condition ObjectDisposedException thrown if the M3uSegmentAudioStream instance is disposed. | Improve this Doc View Source Read(Byte[], Int32, Int32) Declaration public override int Read(byte[] buffer, int offset, int count) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count Returns Type Description Int32 Overrides Stream.Read(Byte[], Int32, Int32) Exceptions Type Condition ObjectDisposedException thrown if the M3uSegmentAudioStream instance is disposed. | Improve this Doc View Source ReadAsync(Byte[], Int32, Int32, CancellationToken) Declaration public override Task<int> ReadAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count CancellationToken cancellationToken Returns Type Description Task < Int32 > Overrides Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken) Exceptions Type Condition ObjectDisposedException thrown if the M3uSegmentAudioStream instance is disposed. | Improve this Doc View Source Seek(Int64, SeekOrigin) Declaration public override long Seek(long offset, SeekOrigin origin) Parameters Type Name Description Int64 offset SeekOrigin origin Returns Type Description Int64 Overrides Stream.Seek(Int64, SeekOrigin) | Improve this Doc View Source SetLength(Int64) Declaration public override void SetLength(long value) Parameters Type Name Description Int64 value Overrides Stream.SetLength(Int64) | Improve this Doc View Source Write(Byte[], Int32, Int32) Declaration public override void Write(byte[] buffer, int offset, int count) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count Overrides Stream.Write(Byte[], Int32, Int32) Implements System.IDisposable"
  },
  "api/Strade.Voice.M3u.M3uStreamSegment.html": {
    "href": "api/Strade.Voice.M3u.M3uStreamSegment.html",
    "title": "Class M3uStreamSegment | Strade Developer Documentation",
    "keywords": "Class M3uStreamSegment Represents a M3u stream segment. Inheritance Object M3uStreamSegment Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.M3u Assembly : Strade.Voice.dll Syntax public sealed class M3uStreamSegment Constructors | Improve this Doc View Source M3uStreamSegment(String, Nullable<TimeSpan>, String) Initializes a new instance of the M3uStreamSegment class. Declaration public M3uStreamSegment(string uri, TimeSpan? duration, string title) Parameters Type Name Description String uri the stream URI. Nullable < TimeSpan > duration the stream duration; or null if not present. String title the segment title. Properties | Improve this Doc View Source Duration Gets the stream duration; or null if not present. Declaration public TimeSpan? Duration { get; } Property Value Type Description Nullable < TimeSpan > | Improve this Doc View Source Title Gets the segment title. Declaration public string Title { get; } Property Value Type Description String | Improve this Doc View Source Uri Gets the stream URI. Declaration public string Uri { get; } Property Value Type Description String Methods | Improve this Doc View Source FromTiles(IEnumerable<IM3uPlaylistElement>) Parses stream segments from the specified elements . Declaration public static IEnumerable<M3uStreamSegment> FromTiles(IEnumerable<IM3uPlaylistElement> elements) Parameters Type Name Description IEnumerable < IM3uPlaylistElement > elements the M3u playlist elements. Returns Type Description IEnumerable < M3uStreamSegment > an enumerable that enumerates through the parsed stream segments. Exceptions Type Condition ArgumentNullException thrown if the specified elements is null ."
  },
  "api/Strade.Voice.Opus.html": {
    "href": "api/Strade.Voice.Opus.html",
    "title": "Namespace Strade.Voice.Opus | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Opus Classes OpusConverter The base class for the OPUS encoder / decoder. OpusDecoder Implementation of an OPUS decoder wrapper (with native backend). OpusEncoder Implementation of an OPUS encoder wrapper (with native backend). Enums OpusApplication A set of specific application-optimizations for the OPUS encoder. OpusBandwidth A set of supported OPUS bandwidth types. OpusError A set of errors returned by the \"libopus\" library. OpusSignal A set of different input signals for the OPUS converter."
  },
  "api/Strade.Voice.Opus.OpusApplication.html": {
    "href": "api/Strade.Voice.Opus.OpusApplication.html",
    "title": "Enum OpusApplication | Strade Developer Documentation",
    "keywords": "Enum OpusApplication A set of specific application-optimizations for the OPUS encoder. Namespace : Strade.Voice.Opus Assembly : Strade.Voice.Connection.dll Syntax public enum OpusApplication Fields Name Description Audio Best for broadcast/high-fidelity application where the decoded audio should be as close as possible to the input. (source: http://opus-codec.org/docs/opus_api-1.2/group__opus__ctlvalues.html#ga5909f7cb35c04f1110026c6889edd345 [OPUS documentation]). RestrictedLowDelay Only use when lowest-achievable latency is what matters most. Voice-optimized modes cannot be used. (source: http://opus-codec.org/docs/opus_api-1.2/group__opus__ctlvalues.html#ga592232fb39db60c1369989c5c5d19a07 [OPUS documentation]). VoiceOverIP Best for most VoIP/videoconference applications where listening quality and intelligibility matter most. (source: http://opus-codec.org/docs/opus_api-1.2/group__opus__ctlvalues.html#ga07884aa018303a419d1f7acb2f3fa669 [OPUS documentation]). Extension Methods EnumExtensions.GetName<OpusApplication>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Voice.Opus.OpusBandwidth.html": {
    "href": "api/Strade.Voice.Opus.OpusBandwidth.html",
    "title": "Enum OpusBandwidth | Strade Developer Documentation",
    "keywords": "Enum OpusBandwidth A set of supported OPUS bandwidth types. Namespace : Strade.Voice.Opus Assembly : Strade.Voice.Connection.dll Syntax public enum OpusBandwidth Fields Name Description Fullband 20 kHz passband. Mediumband 6 kHz passband. Narrowband 4 kHz passband. Superwideband 12 kHz passband. Wideband 8 kHz passband. Extension Methods EnumExtensions.GetName<OpusBandwidth>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Voice.Opus.OpusConverter.html": {
    "href": "api/Strade.Voice.Opus.OpusConverter.html",
    "title": "Class OpusConverter | Strade Developer Documentation",
    "keywords": "Class OpusConverter The base class for the OPUS encoder / decoder. Inheritance Object OpusConverter OpusDecoder OpusEncoder Implements IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Opus Assembly : Strade.Voice.Connection.dll Syntax public abstract class OpusConverter : IDisposable Constructors | Improve this Doc View Source OpusConverter(Int32, Int32) Initializes a new instance of the OpusConverter class. Declaration public OpusConverter(int sampleRate = 48000, int channels = 2) Parameters Type Name Description Int32 sampleRate the sample rate for the encoder (supported values are: 8 KHz ( 8000 ), 12 KHz ( 12000 ), 16 KHz ( 16000 ), 24 KHz ( 24000 ) and 48 KHz ( 48000 )). Int32 channels the number of output channels (supported values are Mono ( 1 ) and Stereo ( 2 )). Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified sampleRate is not 8000 , 12000 , 16000 , 24000 or 48000 . ArgumentOutOfRangeException thrown if the specified channels parameter is not 1 or 2 . Fields | Improve this Doc View Source DefaultChannels The default value for the number of channels (2, Stereo). Declaration public const int DefaultChannels = 2 Field Value Type Description Int32 | Improve this Doc View Source DefaultSampleRate The default value for the sample rate (48 kHz). Declaration public const int DefaultSampleRate = 48000 Field Value Type Description Int32 Properties | Improve this Doc View Source Channels Gets the number of channels used for encoding / decoding. Declaration public int Channels { get; } Property Value Type Description Int32 | Improve this Doc View Source IsHandleCreated Gets a value indicating whether the handle was created for the converter. Declaration protected bool IsHandleCreated { get; } Property Value Type Description Boolean | Improve this Doc View Source SampleRate Gets the sample rate used for encoding / decoding. Declaration public int SampleRate { get; } Property Value Type Description Int32 | Improve this Doc View Source UsePhaseInversion Gets or sets a value indicating whether to enable the use of phase inversion for intensity stereo. Disabling phase inversion improves the quality of mono down-mixes, but slightly reduces normal stereo quality. Declaration public bool UsePhaseInversion { get; set; } Property Value Type Description Boolean Remarks See http://opus-codec.org/docs/opus_api-1.2/group__opus__genericctls.html#ga10fa1f6eab136baf83c232afa989b6a8 for more details. Methods | Improve this Doc View Source CheckError(Int32) Validates the specified status statusCode . Declaration protected static void CheckError(int statusCode) Parameters Type Name Description Int32 statusCode the status code. | Improve this Doc View Source CreateHandle(out OpusError) Creates the handle for the converter. Declaration protected abstract IntPtr CreateHandle(out OpusError errorCode) Parameters Type Name Description OpusError errorCode the error code. Returns Type Description IntPtr the created handle; or default if errorCode is not Success . | Improve this Doc View Source Destroy(IntPtr) Destroys the specified handle . Declaration protected abstract void Destroy(IntPtr handle) Parameters Type Name Description IntPtr handle the handle to destroy. | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Disposes the OpusConverter instance. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing a value indicating whether to free managed resources. | Improve this Doc View Source Finalize() Finalizes an instance of the OpusConverter class. Declaration protected void Finalize() | Improve this Doc View Source GetCtlRequest(Int32) Requests the value for the specified request . Declaration protected abstract int GetCtlRequest(int request) Parameters Type Name Description Int32 request the CTL request constant. Returns Type Description Int32 the value for the request. | Improve this Doc View Source RequestHandle() Requests the creation of the handle. Declaration protected IntPtr RequestHandle() Returns Type Description IntPtr the handle. | Improve this Doc View Source Reset() Resets the converter to its initial state. Declaration public void Reset() | Improve this Doc View Source ResetState(IntPtr) Resets the converter state to the initial state. Declaration protected abstract void ResetState(IntPtr handle) Parameters Type Name Description IntPtr handle the handle to reset the state. | Improve this Doc View Source SetCtlRequest(Int32, Int32) Invokes a CTL request to call the specified request with the specified value . Declaration protected abstract void SetCtlRequest(int request, int value) Parameters Type Name Description Int32 request the CTL request code. Int32 value the value. Implements System.IDisposable"
  },
  "api/Strade.Voice.Opus.OpusDecoder.html": {
    "href": "api/Strade.Voice.Opus.OpusDecoder.html",
    "title": "Class OpusDecoder | Strade Developer Documentation",
    "keywords": "Class OpusDecoder Implementation of an OPUS decoder wrapper (with native backend). Inheritance Object OpusConverter OpusDecoder Implements IDisposable Inherited Members OpusConverter.DefaultChannels OpusConverter.DefaultSampleRate OpusConverter.Channels OpusConverter.SampleRate OpusConverter.UsePhaseInversion OpusConverter.IsHandleCreated OpusConverter.Dispose() OpusConverter.Reset() OpusConverter.CheckError(Int32) OpusConverter.Dispose(Boolean) OpusConverter.RequestHandle() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Opus Assembly : Strade.Voice.Connection.dll Syntax public sealed class OpusDecoder : OpusConverter, IDisposable Constructors | Improve this Doc View Source OpusDecoder(Int32, Int32) Initializes a new instance of the OpusDecoder class. Declaration public OpusDecoder(int sampleRate = 48000, int channels = 2) Parameters Type Name Description Int32 sampleRate the sample rate for the encoder (supported values are: 8 KHz ( 8000 ), 12 KHz ( 12000 ), 16 KHz ( 16000 ), 24 KHz ( 24000 ) and 48 KHz ( 48000 )). Int32 channels the number of output channels (supported values are Mono ( 1 ) and Stereo ( 2 )). Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified sampleRate is not 8000 , 12000 , 16000 , 24000 or 48000 . ArgumentOutOfRangeException thrown if the specified channels parameter is not 1 or 2 . Properties | Improve this Doc View Source Gain Declaration public int Gain { get; set; } Property Value Type Description Int32 | Improve this Doc View Source LastPacketDuration Declaration public int LastPacketDuration { get; } Property Value Type Description Int32 | Improve this Doc View Source Pitch Declaration public int Pitch { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source CreateHandle(out OpusError) Declaration protected override IntPtr CreateHandle(out OpusError error) Parameters Type Name Description OpusError error Returns Type Description IntPtr Overrides OpusConverter.CreateHandle(out OpusError) | Improve this Doc View Source Decode(ArraySegment<Byte>, ArraySegment<Int16>, Int32, Boolean) Decodes the specified source to the specified buffer . Declaration public int Decode(ArraySegment<byte> source, ArraySegment<short> buffer, int frameSize, bool forwardErrorCorrection = false) Parameters Type Name Description ArraySegment < Byte > source the source buffer. ArraySegment < Int16 > buffer the output buffer. Int32 frameSize the frame size. Boolean forwardErrorCorrection a value indicating whether to use forward error correction (FEC). Returns Type Description Int32 the number of samples decoded. | Improve this Doc View Source Decode(ArraySegment<Byte>, ArraySegment<Single>, Int32, Boolean) Decodes the specified source to the specified buffer . Declaration public int Decode(ArraySegment<byte> source, ArraySegment<float> buffer, int frameSize, bool forwardErrorCorrection = false) Parameters Type Name Description ArraySegment < Byte > source the source buffer. ArraySegment < Single > buffer the output buffer. Int32 frameSize the frame size. Boolean forwardErrorCorrection a value indicating whether to use forward error correction (FEC). Returns Type Description Int32 the number of samples decoded. | Improve this Doc View Source Decode(Byte*, Int32, Int16*, Int32, Boolean) Decodes the specified buffer to the specified pcmData . Declaration public int Decode(byte *buffer, int bufferSize, short *pcmData, int frameSize, bool forwardErrorCorrection = false) Parameters Type Name Description Byte * buffer the source buffer pointer. Int32 bufferSize the total source buffer size. Int16 * pcmData the output buffer pointer. Int32 frameSize the frame size. Boolean forwardErrorCorrection a value indicating whether to use forward error correction (FEC). Returns Type Description Int32 the number of samples decoded. | Improve this Doc View Source Decode(Byte*, Int32, Single*, Int32, Boolean) Decodes the specified buffer to the specified pcmData . Declaration public int Decode(byte *buffer, int bufferSize, float *pcmData, int frameSize, bool forwardErrorCorrection = false) Parameters Type Name Description Byte * buffer the source buffer pointer. Int32 bufferSize the total source buffer size. Single * pcmData the output buffer pointer. Int32 frameSize the frame size. Boolean forwardErrorCorrection a value indicating whether to use forward error correction (FEC). Returns Type Description Int32 the number of samples decoded. | Improve this Doc View Source Destroy(IntPtr) Declaration protected override void Destroy(IntPtr handle) Parameters Type Name Description IntPtr handle Overrides OpusConverter.Destroy(IntPtr) | Improve this Doc View Source GetCtlRequest(Int32) Declaration protected override int GetCtlRequest(int request) Parameters Type Name Description Int32 request Returns Type Description Int32 Overrides OpusConverter.GetCtlRequest(Int32) | Improve this Doc View Source GetSamplesCount(ArraySegment<Byte>) Declaration public int GetSamplesCount(ArraySegment<byte> packet) Parameters Type Name Description ArraySegment < Byte > packet Returns Type Description Int32 | Improve this Doc View Source GetSamplesCount(Byte*, Int32) Declaration public int GetSamplesCount(byte *packet, int packetLength) Parameters Type Name Description Byte * packet Int32 packetLength Returns Type Description Int32 | Improve this Doc View Source ResetState(IntPtr) Declaration protected override void ResetState(IntPtr handle) Parameters Type Name Description IntPtr handle Overrides OpusConverter.ResetState(IntPtr) | Improve this Doc View Source SetCtlRequest(Int32, Int32) Declaration protected override void SetCtlRequest(int request, int value) Parameters Type Name Description Int32 request Int32 value Overrides OpusConverter.SetCtlRequest(Int32, Int32) Implements System.IDisposable"
  },
  "api/Strade.Voice.Opus.OpusEncoder.html": {
    "href": "api/Strade.Voice.Opus.OpusEncoder.html",
    "title": "Class OpusEncoder | Strade Developer Documentation",
    "keywords": "Class OpusEncoder Implementation of an OPUS encoder wrapper (with native backend). Inheritance Object OpusConverter OpusEncoder Implements IDisposable Inherited Members OpusConverter.DefaultChannels OpusConverter.DefaultSampleRate OpusConverter.Channels OpusConverter.SampleRate OpusConverter.UsePhaseInversion OpusConverter.IsHandleCreated OpusConverter.Dispose() OpusConverter.Reset() OpusConverter.CheckError(Int32) OpusConverter.Dispose(Boolean) OpusConverter.RequestHandle() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Opus Assembly : Strade.Voice.Connection.dll Syntax public sealed class OpusEncoder : OpusConverter, IDisposable Constructors | Improve this Doc View Source OpusEncoder(Int32, Int32, OpusApplication) Initializes a new instance of the OpusEncoder class. Declaration public OpusEncoder(int sampleRate = 48000, int channels = 2, OpusApplication application = OpusApplication.Audio) Parameters Type Name Description Int32 sampleRate the sample rate for the encoder (supported values are: 8 KHz ( 8000 ), 12 KHz ( 12000 ), 16 KHz ( 16000 ), 24 KHz ( 24000 ) and 48 KHz ( 48000 )). Int32 channels the number of output channels (supported values are Mono ( 1 ) and Stereo ( 2 )). OpusApplication application the opus-specific application to optimize the encoded data for. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified sampleRate is not 8000 , 12000 , 16000 , 24000 or 48000 . ArgumentOutOfRangeException thrown if the specified channels parameter is not 1 or 2 . ArgumentOutOfRangeException thrown if the specified OPUS application is not defined in the OpusApplication enumeration. SEHException thrown if the OPUS encoder initialization failed. Fields | Improve this Doc View Source DefaultApplication The default OPUS application type used in the constructor. Declaration public const OpusApplication DefaultApplication = OpusApplication.Audio Field Value Type Description OpusApplication Properties | Improve this Doc View Source Application Gets or sets the OPUS application for the encoder. Declaration public OpusApplication Application { get; set; } Property Value Type Description OpusApplication | Improve this Doc View Source Bandwidth Gets or sets the encoder's bandpass value. Declaration public OpusBandwidth Bandwidth { get; set; } Property Value Type Description OpusBandwidth Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified value is not defined in the OpusBandwidth enumeration. | Improve this Doc View Source Bitrate Gets or sets the encoder bitrate. Declaration public int? Bitrate { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source Complexity Gets or sets the encoder's computational complexity. Declaration public int Complexity { get; set; } Property Value Type Description Int32 Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified value is not in range of 0 - 10 . | Improve this Doc View Source DiscontinuousTransmission Gets or sets a value indicating whether DTX (discontinuous transmission) is enabled. Declaration public bool DiscontinuousTransmission { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ExpertFrameDuration Gets or sets the encoder's use of variable duration frames. Declaration public float? ExpertFrameDuration { get; set; } Property Value Type Description Nullable < Single > | Improve this Doc View Source ForceChannels Gets or sets the forced channel count of the encoder. Declaration public int? ForceChannels { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source IsConstrainedVBREnabled Gets or sets a value indicating whether Variable Bitrate is enabled on the encoder. Declaration public bool IsConstrainedVBREnabled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsVariableBitrateSupported Gets a value indicating whether VBR (variable bitrate) is supported by the encoder. Declaration public bool IsVariableBitrateSupported { get; } Property Value Type Description Boolean | Improve this Doc View Source LookaheadSamples Gets the number of samples of delay added by the encoder. Declaration public int LookaheadSamples { get; } Property Value Type Description Int32 | Improve this Doc View Source PacketLossPercentage Gets or sets the expected packet loss percentage (0-100). Declaration public int PacketLossPercentage { get; set; } Property Value Type Description Int32 Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified value is not in range of 0 - 100 . | Improve this Doc View Source Signal Gets or sets the input signal type. Declaration public OpusSignal Signal { get; set; } Property Value Type Description OpusSignal Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified value is not defined in the OpusSignal enumeration. | Improve this Doc View Source SignalDepth Gets or sets the LSB signal depth. Declaration public int SignalDepth { get; set; } Property Value Type Description Int32 Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified value is not in range of 8 - 24 . | Improve this Doc View Source UseInbandForwardErrorCorrection Gets or sets a value indicating whether FEC (in-band forward error correction) is enabled. Declaration public bool UseInbandForwardErrorCorrection { get; set; } Property Value Type Description Boolean | Improve this Doc View Source UsePrediction Gets or sets a value indicating whether prediction is enabled (default: enabled, turning off reduces quality). Declaration public bool UsePrediction { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source CreateHandle(out OpusError) Declaration protected override IntPtr CreateHandle(out OpusError error) Parameters Type Name Description OpusError error Returns Type Description IntPtr Overrides OpusConverter.CreateHandle(out OpusError) | Improve this Doc View Source Destroy(IntPtr) Declaration protected override void Destroy(IntPtr handle) Parameters Type Name Description IntPtr handle Overrides OpusConverter.Destroy(IntPtr) | Improve this Doc View Source Encode(Int16*, Byte*, Int32, Int32) Encodes the specified source buffer to the specified output buffer . Declaration public int Encode(short *source, byte *buffer, int bufferSize, int frameSize) Parameters Type Name Description Int16 * source the source buffer pointer containing the raw PCM data. Byte * buffer the output buffer pointer for the encoded OPUS data. Int32 bufferSize the total buffer size. Int32 frameSize the frame size. Returns Type Description Int32 the number of bytes encoded. | Improve this Doc View Source Encode(ReadOnlySpan<Int16>, Span<Byte>, Int32) Encodes the specified source buffer to the specified output buffer . Declaration public int Encode(ReadOnlySpan<short> source, Span<byte> buffer, int frameSize) Parameters Type Name Description ReadOnlySpan < Int16 > source the source buffer containing the raw PCM data. Span < Byte > buffer the output buffer for the encoded OPUS data. Int32 frameSize the frame size. Returns Type Description Int32 the number of bytes encoded. | Improve this Doc View Source Encode(ReadOnlySpan<Single>, Span<Byte>, Int32) Encodes the specified source buffer to the specified output buffer . Declaration public int Encode(ReadOnlySpan<float> source, Span<byte> buffer, int frameSize) Parameters Type Name Description ReadOnlySpan < Single > source the source buffer containing the raw PCM data. Span < Byte > buffer the output buffer for the encoded OPUS data. Int32 frameSize the frame size. Returns Type Description Int32 the number of bytes encoded. | Improve this Doc View Source Encode(Single*, Byte*, Int32, Int32) Encodes the specified source buffer to the specified output buffer . Declaration public int Encode(float *source, byte *buffer, int bufferSize, int frameSize) Parameters Type Name Description Single * source the source buffer pointer containing the raw PCM data. Byte * buffer the output buffer pointer for the encoded OPUS data. Int32 bufferSize the total buffer size. Int32 frameSize the frame size. Returns Type Description Int32 the number of bytes encoded. | Improve this Doc View Source GetCtlRequest(Int32) Declaration protected override int GetCtlRequest(int request) Parameters Type Name Description Int32 request Returns Type Description Int32 Overrides OpusConverter.GetCtlRequest(Int32) | Improve this Doc View Source ResetState(IntPtr) Declaration protected override void ResetState(IntPtr handle) Parameters Type Name Description IntPtr handle Overrides OpusConverter.ResetState(IntPtr) | Improve this Doc View Source SetCtlRequest(Int32, Int32) Declaration protected override void SetCtlRequest(int request, int value) Parameters Type Name Description Int32 request Int32 value Overrides OpusConverter.SetCtlRequest(Int32, Int32) Implements System.IDisposable"
  },
  "api/Strade.Voice.Opus.OpusError.html": {
    "href": "api/Strade.Voice.Opus.OpusError.html",
    "title": "Enum OpusError | Strade Developer Documentation",
    "keywords": "Enum OpusError A set of errors returned by the \"libopus\" library. Namespace : Strade.Voice.Opus Assembly : Strade.Voice.Connection.dll Syntax public enum OpusError Fields Name Description BadArgument Denotes that one or more arguments were invalid or out of range. BufferTooSmall Denotes that not enough bytes were allocated in the buffer. InternalError Denotes that an internal error occurred. InvalidPacket Denotes that the compressed data packet is corrupt. InvalidState Denotes that the OPUS encoder / decoder is in invalid state or already freed. NotImplemented Denotes that the requested function is not implemented. OutOfMemory Denotes that the memory allocation failed. Success Denotes that no error occurred and that the operation completed successfully. Extension Methods EnumExtensions.GetName<OpusError>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Voice.Opus.OpusSignal.html": {
    "href": "api/Strade.Voice.Opus.OpusSignal.html",
    "title": "Enum OpusSignal | Strade Developer Documentation",
    "keywords": "Enum OpusSignal A set of different input signals for the OPUS converter. Namespace : Strade.Voice.Opus Assembly : Strade.Voice.Connection.dll Syntax public enum OpusSignal Fields Name Description Auto Denotes that the input signal should be chosen automatically. Music Denotes that the input signal contains music data. Voice Denotes that the input signal contains voice data. Extension Methods EnumExtensions.GetName<OpusSignal>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Voice.Payloads.ClientDisconnectPayload.html": {
    "href": "api/Strade.Voice.Payloads.ClientDisconnectPayload.html",
    "title": "Class ClientDisconnectPayload | Strade Developer Documentation",
    "keywords": "Class ClientDisconnectPayload Represents a voice client disconnect payload. Inheritance Object ClientDisconnectPayload Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Payloads Assembly : Strade.Voice.Connection.dll Syntax public sealed class ClientDisconnectPayload Properties | Improve this Doc View Source UserId Gets or sets the snowflake identifier of the user that left the channel. Declaration [JsonPropertyName(\"user_id\")] public Snowflake UserId { get; set; } Property Value Type Description Snowflake"
  },
  "api/Strade.Voice.Payloads.HelloPayload.html": {
    "href": "api/Strade.Voice.Payloads.HelloPayload.html",
    "title": "Class HelloPayload | Strade Developer Documentation",
    "keywords": "Class HelloPayload Represents a voice hello payload. Inheritance Object HelloPayload Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Payloads Assembly : Strade.Voice.Connection.dll Syntax public sealed class HelloPayload Remarks More details can be found on https://discord.com/developers/docs/topics/voice-connections#heartbeating-example-hello-payload-v3 [external, Discord Developer Documentation]. Properties | Improve this Doc View Source HeartbeatInterval Gets or sets the heartbeat interval in milliseconds. Declaration [JsonPropertyName(\"heartbeat_interval\")] public double HeartbeatInterval { get; set; } Property Value Type Description Double"
  },
  "api/Strade.Voice.Payloads.html": {
    "href": "api/Strade.Voice.Payloads.html",
    "title": "Namespace Strade.Voice.Payloads | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Payloads Classes ClientDisconnectPayload Represents a voice client disconnect payload. HelloPayload Represents a voice hello payload. IdentifyPayload Represents a voice identify payload used to identify the client. ReadyPayload Represents a voice ready payload. ResumePayload Represents a voice resume payload. SelectProtocolPayload Represents a voice select protocol payload. SessionDescriptionPayload Represents a voice session description payload. SpeakingPayload Represents a voice speaking payload. VoiceConnectInformation Represents a voice connection information object. Enums VoiceOpCode A set of voice operation codes. VoiceProtocolType Protocol type definitions (there is currently only \"udp\") for voice connections."
  },
  "api/Strade.Voice.Payloads.IdentifyPayload.html": {
    "href": "api/Strade.Voice.Payloads.IdentifyPayload.html",
    "title": "Class IdentifyPayload | Strade Developer Documentation",
    "keywords": "Class IdentifyPayload Represents a voice identify payload used to identify the client. Inheritance Object IdentifyPayload Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Payloads Assembly : Strade.Voice.Connection.dll Syntax public sealed class IdentifyPayload Remarks More details can be found on https://discord.com/developers/docs/topics/voice-connections#establishing-a-voice-websocket-connection-example-voice-identify-payload [external, Discord Developer Documentation]. Properties | Improve this Doc View Source GuildId Gets or sets the guild snowflake identifier. Declaration [JsonPropertyName(\"server_id\")] public Snowflake GuildId { get; set; } Property Value Type Description Snowflake | Improve this Doc View Source SessionId Gets or sets the voice session identifier (from the voice state). Declaration [JsonPropertyName(\"session_id\")] public string SessionId { get; set; } Property Value Type Description String | Improve this Doc View Source UserId Gets or sets the current user snowflake identifier. Declaration [JsonPropertyName(\"user_id\")] public Snowflake UserId { get; set; } Property Value Type Description Snowflake | Improve this Doc View Source VoiceToken Gets or sets the voice session token (from the voice server). Declaration [JsonPropertyName(\"token\")] public string VoiceToken { get; set; } Property Value Type Description String"
  },
  "api/Strade.Voice.Payloads.ReadyPayload.html": {
    "href": "api/Strade.Voice.Payloads.ReadyPayload.html",
    "title": "Class ReadyPayload | Strade Developer Documentation",
    "keywords": "Class ReadyPayload Represents a voice ready payload. Inheritance Object ReadyPayload Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Payloads Assembly : Strade.Voice.Connection.dll Syntax public sealed class ReadyPayload Remarks More details can be found on https://discord.com/developers/docs/topics/voice-connections#establishing-a-voice-websocket-connection-example-voice-ready-payload [external, Discord Developer Documentation]. Properties | Improve this Doc View Source IpAddress Gets or sets the IP address of the voice server to connect to. Declaration [JsonPropertyName(\"ip\")] public string IpAddress { get; set; } Property Value Type Description String | Improve this Doc View Source Port Gets or sets the port of the voice server to connect to. Declaration [JsonPropertyName(\"port\")] public ushort Port { get; set; } Property Value Type Description UInt16 | Improve this Doc View Source SSRC Gets or sets the client's SSRC. Declaration [JsonPropertyName(\"ssrc\")] public uint SSRC { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source SupportedEncryptions Gets or sets a list of the supported encryption modes. Declaration [JsonPropertyName(\"modes\")] public IReadOnlyList<string> SupportedEncryptions { get; set; } Property Value Type Description IReadOnlyList < String >"
  },
  "api/Strade.Voice.Payloads.ResumePayload.html": {
    "href": "api/Strade.Voice.Payloads.ResumePayload.html",
    "title": "Class ResumePayload | Strade Developer Documentation",
    "keywords": "Class ResumePayload Represents a voice resume payload. Inheritance Object ResumePayload Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Payloads Assembly : Strade.Voice.Connection.dll Syntax public sealed class ResumePayload Remarks More details can be found on https://discord.com/developers/docs/topics/voice-connections#resuming-voice-connection-example-resume-connection-payload [external, Discord Developer Documentation]. Properties | Improve this Doc View Source GuildId Gets or sets the snowflake identifier of the affected guild. Declaration [JsonPropertyName(\"server_id\")] public Snowflake GuildId { get; set; } Property Value Type Description Snowflake | Improve this Doc View Source SessionId Gets or sets the session identifier. Declaration [JsonPropertyName(\"session_id\")] public string SessionId { get; set; } Property Value Type Description String | Improve this Doc View Source Token Gets or sets the voice token. Declaration [JsonPropertyName(\"token\")] public string Token { get; set; } Property Value Type Description String"
  },
  "api/Strade.Voice.Payloads.SelectProtocolPayload.html": {
    "href": "api/Strade.Voice.Payloads.SelectProtocolPayload.html",
    "title": "Class SelectProtocolPayload | Strade Developer Documentation",
    "keywords": "Class SelectProtocolPayload Represents a voice select protocol payload. Inheritance Object SelectProtocolPayload Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Payloads Assembly : Strade.Voice.Connection.dll Syntax public sealed class SelectProtocolPayload Remarks More details can be found on https://discord.com/developers/docs/topics/voice-connections#establishing-a-voice-udp-connection-example-select-protocol-payload [external, Discord Developer Documentation]. Properties | Improve this Doc View Source ConnectionInformation Gets or sets the connection information for the server connecting to. Declaration [JsonPropertyName(\"data\")] public VoiceConnectInformation ConnectionInformation { get; set; } Property Value Type Description VoiceConnectInformation | Improve this Doc View Source Protocol Gets or sets the type of the protocol. Declaration [JsonPropertyName(\"protocol\")] public VoiceProtocolType Protocol { get; set; } Property Value Type Description VoiceProtocolType"
  },
  "api/Strade.Voice.Payloads.SessionDescriptionPayload.html": {
    "href": "api/Strade.Voice.Payloads.SessionDescriptionPayload.html",
    "title": "Class SessionDescriptionPayload | Strade Developer Documentation",
    "keywords": "Class SessionDescriptionPayload Represents a voice session description payload. Inheritance Object SessionDescriptionPayload Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Payloads Assembly : Strade.Voice.Connection.dll Syntax public sealed class SessionDescriptionPayload Remarks More details can be found on https://discord.com/developers/docs/topics/voice-connections#establishing-a-voice-websocket-connection-example-voice-identify-payload [external, Discord Developer Documentation]. Properties | Improve this Doc View Source EncryptionMode Gets or sets the encryption mode used for the connection. Declaration [JsonPropertyName(\"mode\")] public string EncryptionMode { get; set; } Property Value Type Description String | Improve this Doc View Source SecretKey Gets or sets the secret / encryption key for encrypting the voice connection. Declaration [JsonPropertyName(\"secret_key\")] [JsonConverter(typeof(SecretKeyJsonConverter))] public byte[] SecretKey { get; set; } Property Value Type Description Byte []"
  },
  "api/Strade.Voice.Payloads.SpeakingPayload.html": {
    "href": "api/Strade.Voice.Payloads.SpeakingPayload.html",
    "title": "Class SpeakingPayload | Strade Developer Documentation",
    "keywords": "Class SpeakingPayload Represents a voice speaking payload. Inheritance Object SpeakingPayload Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Payloads Assembly : Strade.Voice.Connection.dll Syntax public sealed class SpeakingPayload Remarks More details can be found on https://discord.com/developers/docs/topics/voice-connections#speaking-example-speaking-payload [external, Discord Developer Documentation]. Properties | Improve this Doc View Source Delay Gets or sets the delay (after which the payload takes effect). Declaration [JsonPropertyName(\"delay\")] public int Delay { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Flags Gets or sets the flags for speaking. Declaration [JsonPropertyName(\"speaking\")] public SpeakingFlags Flags { get; set; } Property Value Type Description SpeakingFlags | Improve this Doc View Source SSRC Gets or sets the client's SSRC. Declaration [JsonPropertyName(\"ssrc\")] public uint SSRC { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source UserId Gets or sets the snowflake identifier of the user that started / stopped speaking. Declaration [JsonPropertyName(\"user_id\")] public Snowflake UserId { get; set; } Property Value Type Description Snowflake"
  },
  "api/Strade.Voice.Payloads.VoiceConnectInformation.html": {
    "href": "api/Strade.Voice.Payloads.VoiceConnectInformation.html",
    "title": "Class VoiceConnectInformation | Strade Developer Documentation",
    "keywords": "Class VoiceConnectInformation Represents a voice connection information object. Inheritance Object VoiceConnectInformation Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Payloads Assembly : Strade.Voice.Connection.dll Syntax public sealed class VoiceConnectInformation Remarks More details can be found on https://discord.com/developers/docs/topics/voice-connections#establishing-a-voice-udp-connection-example-select-protocol-payload [external, Discord Developer Documentation]. Properties | Improve this Doc View Source EncryptionMode Gets or sets the encryption mode used for encryption. Declaration [JsonPropertyName(\"mode\")] public string EncryptionMode { get; set; } Property Value Type Description String | Improve this Doc View Source IpAddress Gets or sets the IP address of the voice server connecting to. Declaration [JsonPropertyName(\"address\")] public string IpAddress { get; set; } Property Value Type Description String | Improve this Doc View Source Port Gets or sets the port of the voice server connecting to. Declaration [JsonPropertyName(\"port\")] public ushort Port { get; set; } Property Value Type Description UInt16"
  },
  "api/Strade.Voice.Payloads.VoiceOpCode.html": {
    "href": "api/Strade.Voice.Payloads.VoiceOpCode.html",
    "title": "Enum VoiceOpCode | Strade Developer Documentation",
    "keywords": "Enum VoiceOpCode A set of voice operation codes. Namespace : Strade.Voice.Payloads Assembly : Strade.Voice.Connection.dll Syntax public enum VoiceOpCode : byte Fields Name Description ClientDisconnect Denotes that the payload is a ClientDisconnect payload. See https://discord.com/developers/docs/topics/opcodes-and-status-codes#voice-voice-opcodes for more details. Heartbeat Denotes that the payload is a Heartbeat payload. See https://discord.com/developers/docs/topics/opcodes-and-status-codes#voice-voice-opcodes for more details. HeartbeatAck Denotes that the payload is a Heartbeat (ACK) payload. See https://discord.com/developers/docs/topics/opcodes-and-status-codes#voice-voice-opcodes for more details. Hello Denotes that the payload is a Hello payload. See https://discord.com/developers/docs/topics/opcodes-and-status-codes#voice-voice-opcodes for more details. Identify Denotes that the payload is an Identify payload. See https://discord.com/developers/docs/topics/opcodes-and-status-codes#voice-voice-opcodes for more details. Ready Denotes that the payload is a Ready payload. See https://discord.com/developers/docs/topics/opcodes-and-status-codes#voice-voice-opcodes for more details. Resume Denotes that the payload is a Resume payload. See https://discord.com/developers/docs/topics/opcodes-and-status-codes#voice-voice-opcodes for more details. Resumed Denotes that the payload is a Resumed payload. See https://discord.com/developers/docs/topics/opcodes-and-status-codes#voice-voice-opcodes for more details. SelectProtocol Denotes that the payload is a Select Protocol payload. See https://discord.com/developers/docs/topics/opcodes-and-status-codes#voice-voice-opcodes for more details. SessionDescription Denotes that the payload is a Session Description payload. See https://discord.com/developers/docs/topics/opcodes-and-status-codes#voice-voice-opcodes for more details. Speaking Denotes that the payload is a Speaking payload. See https://discord.com/developers/docs/topics/opcodes-and-status-codes#voice-voice-opcodes for more details. Extension Methods EnumExtensions.GetName<VoiceOpCode>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Voice.Payloads.VoiceProtocolType.html": {
    "href": "api/Strade.Voice.Payloads.VoiceProtocolType.html",
    "title": "Enum VoiceProtocolType | Strade Developer Documentation",
    "keywords": "Enum VoiceProtocolType Protocol type definitions (there is currently only \"udp\") for voice connections. Namespace : Strade.Voice.Payloads Assembly : Strade.Voice.Connection.dll Syntax [JsonConverter(typeof(StringEnumConverter<VoiceProtocolType>))] public enum VoiceProtocolType : byte Fields Name Description Udp Denotes that the User-Datagram-Protocol (UDP) should be used for voice communication. Extension Methods EnumExtensions.GetName<VoiceProtocolType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Voice.Players.AudioPlayer.html": {
    "href": "api/Strade.Voice.Players.AudioPlayer.html",
    "title": "Class AudioPlayer | Strade Developer Documentation",
    "keywords": "Class AudioPlayer A basic implementation for an audio player. Inheritance Object AudioPlayer BaseQueuedAudioPlayer Implements IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Players Assembly : Strade.Voice.Abstractions.dll Syntax public class AudioPlayer : IDisposable Constructors | Improve this Doc View Source AudioPlayer(IAudioPlayerContext) Initializes a new instance of the AudioPlayer class. Declaration public AudioPlayer(IAudioPlayerContext context) Parameters Type Name Description IAudioPlayerContext context the underlying player context. Exceptions Type Condition ArgumentNullException thrown if the specified context is null . Properties | Improve this Doc View Source AudioService Gets the audio service the context is bound to. Declaration public IAudioService AudioService { get; } Property Value Type Description IAudioService the audio service the context is bound to. Exceptions Type Condition ObjectDisposedException thrown if the current AudioPlayer instance is disposed. | Improve this Doc View Source CanSeek Gets a value indicating whether the current playing track can be seeked. Declaration public bool CanSeek { get; } Property Value Type Description Boolean a value indicating whether the current playing track can be seeked. Remarks If the player is not playing a track ( State == NotPlaying or State == Destroyed ) then the value is false . | Improve this Doc View Source Context Gets the underlying player context. Declaration public IAudioPlayerContext Context { get; } Property Value Type Description IAudioPlayerContext the underlying player context. Exceptions Type Condition ObjectDisposedException thrown if the current AudioPlayer instance is disposed. | Improve this Doc View Source CurrentTrack Gets the current track that is playing. Declaration public IAudioTrack CurrentTrack { get; } Property Value Type Description IAudioTrack the current track that is playing; or null if the player is not playing ( State == NotPlaying or State == Destroyed ). | Improve this Doc View Source Duration Gets the duration of the track that is playing. Declaration public TimeSpan Duration { get; } Property Value Type Description TimeSpan the duration of the track that is playing; or Zero if the player is not playing ( State == NotPlaying or State == Destroyed ). Exceptions Type Condition InvalidOperationException thrown if the player is destroyed ( State == Destroyed ). ObjectDisposedException thrown if the current AudioPlayer instance is disposed. | Improve this Doc View Source Factory Gets the player factory. Declaration public static AudioPlayerFactory<AudioPlayer> Factory { get; } Property Value Type Description AudioPlayerFactory < AudioPlayer > the player factory. | Improve this Doc View Source Filters Gets the filter collection. Declaration public IFilterCollection Filters { get; } Property Value Type Description IFilterCollection the filter collection for the player. Exceptions Type Condition InvalidOperationException thrown if the player is destroyed ( State == Destroyed ). ObjectDisposedException thrown if the current AudioPlayer instance is disposed. | Improve this Doc View Source GuildId Gets the snowflake identifier of the guild the player is for. Declaration public Snowflake GuildId { get; } Property Value Type Description Snowflake the snowflake identifier of the guild the player is for. Exceptions Type Condition ObjectDisposedException thrown if the current AudioPlayer instance is disposed. | Improve this Doc View Source Position Gets the position of the track that is playing. Declaration public TimeSpan Position { get; } Property Value Type Description TimeSpan the position of the track that is playing; or Zero if the player is not playing ( State == NotPlaying or State == Destroyed ). Exceptions Type Condition InvalidOperationException thrown if the player is destroyed ( State == Destroyed ). ObjectDisposedException thrown if the current AudioPlayer instance is disposed. | Improve this Doc View Source State Gets the current player state. Declaration public PlayerState State { get; } Property Value Type Description PlayerState the current player state. NotPlaying Denotes that the player is not playing a track. Playing Denotes that the player is playing a track. Paused Denotes that the player is paused. Destroyed Denotes that the player is destroyed. | Improve this Doc View Source Volume Gets the player volume. Declaration public float Volume { get; } Property Value Type Description Single the player volume. Remarks The default value for the volume is 1F , values equal or below 0F indicate that the output is muted. Exceptions Type Condition ObjectDisposedException thrown if the current AudioPlayer instance is disposed. See Also SetVolumeAsync(Single, CancellationToken) Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Releases the unmanaged resources used by the AudioPlayer and optionally releases the managed resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. Remarks If the AudioPlayer is already disposed no action is done. | Improve this Doc View Source EnsureNotDestroyed() Ensures that the player is not destroyed. Declaration protected void EnsureNotDestroyed() Exceptions Type Condition InvalidOperationException thrown if the player was destroyed. | Improve this Doc View Source EnsureNotDisposed() Ensures that the player is not disposed. Declaration protected void EnsureNotDisposed() Exceptions Type Condition ObjectDisposedException thrown if the player was disposed. | Improve this Doc View Source OnPausedAsync(PlayerPausedEventArgs) Handles the PlayerPausedEventArgs event asynchronously. Declaration protected virtual Task OnPausedAsync(PlayerPausedEventArgs eventArgs) Parameters Type Name Description PlayerPausedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnResumedAsync(PlayerResumedEventArgs) Handles the PlayerResumedEventArgs event asynchronously. Declaration protected virtual Task OnResumedAsync(PlayerResumedEventArgs eventArgs) Parameters Type Name Description PlayerResumedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnTrackEndedAsync(PlayerTrackEndedEventArgs) Handles the PlayerTrackEndedEventArgs event asynchronously. Declaration protected virtual Task OnTrackEndedAsync(PlayerTrackEndedEventArgs eventArgs) Parameters Type Name Description PlayerTrackEndedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnTrackSeekAsync(PlayerTrackSeekEventArgs) Handles the PlayerTrackSeekEventArgs event asynchronously. Declaration protected virtual Task OnTrackSeekAsync(PlayerTrackSeekEventArgs eventArgs) Parameters Type Name Description PlayerTrackSeekEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnTrackStartedAsync(PlayerTrackStartedEventArgs) Handles the PlayerTrackStartedEventArgs event asynchronously. Declaration protected virtual Task OnTrackStartedAsync(PlayerTrackStartedEventArgs eventArgs) Parameters Type Name Description PlayerTrackStartedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source OnVolumeChangedAsync(PlayerVolumeChangedEventArgs) Handles the PlayerVolumeChangedEventArgs event asynchronously. Declaration protected virtual Task OnVolumeChangedAsync(PlayerVolumeChangedEventArgs eventArgs) Parameters Type Name Description PlayerVolumeChangedEventArgs eventArgs the event arguments passed with the event. Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source PauseAsync(CancellationToken) Pauses the player asynchronously. Declaration public virtual Task PauseAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Remarks If the player is already paused, nothing will happen. Exceptions Type Condition InvalidOperationException thrown if the player is not playing a track. InvalidOperationException thrown if the player is destroyed ( State == Destroyed ). ObjectDisposedException thrown if the current AudioPlayer instance is disposed. | Improve this Doc View Source PlayAsync(IAudioTrack, CancellationToken) Plays the specified track asynchronously. Declaration public virtual Task PlayAsync(IAudioTrack track, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IAudioTrack track the track to play. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified track is null . InvalidOperationException thrown if the player is destroyed ( State == Destroyed ). ObjectDisposedException thrown if the current AudioPlayer instance is disposed. | Improve this Doc View Source ResumeAsync(CancellationToken) Resumes the playback asynchronously. Declaration public virtual Task ResumeAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Remarks If the player is not paused, nothing will happen. Exceptions Type Condition InvalidOperationException thrown if the player is not playing a track. InvalidOperationException thrown if the player is destroyed ( State == Destroyed ). ObjectDisposedException thrown if the current AudioPlayer instance is disposed. | Improve this Doc View Source SeekAsync(TimeSpan, SeekOrigin, CancellationToken) Seeks a specific position in the track asynchronously. Declaration public virtual Task<TimeSpan> SeekAsync(TimeSpan offset, SeekOrigin origin = SeekOrigin.Begin, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TimeSpan offset the relative seek offset. SeekOrigin origin the seek origin specifying the origin of the specified offset . CancellationToken cancellationToken Returns Type Description Task < TimeSpan > a task that represents the asynchronous operation. The task result is the new track position. Exceptions Type Condition InvalidOperationException thrown if the player is not playing a track. InvalidOperationException thrown if the player is destroyed ( State == Destroyed ). ObjectDisposedException thrown if the current AudioPlayer instance is disposed. | Improve this Doc View Source SetVolumeAsync(Single, CancellationToken) Sets the volume ( Volume ) asynchronously. Declaration public virtual Task SetVolumeAsync(float volume, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Single volume the new volume. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition InvalidOperationException thrown if the player is destroyed ( State == Destroyed ). ObjectDisposedException thrown if the current AudioPlayer instance is disposed. See Also Volume | Improve this Doc View Source StopAsync(CancellationToken) Stops the playback asynchronously. Declaration public virtual Task StopAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Remarks If the player is not playing, nothing will happen. Exceptions Type Condition InvalidOperationException thrown if the player is destroyed ( State == Destroyed ). ObjectDisposedException thrown if the current AudioPlayer instance is disposed. Implements System.IDisposable"
  },
  "api/Strade.Voice.Players.AudioPlayerFactory-1.html": {
    "href": "api/Strade.Voice.Players.AudioPlayerFactory-1.html",
    "title": "Delegate AudioPlayerFactory<T> | Strade Developer Documentation",
    "keywords": "Delegate AudioPlayerFactory<T> A delegate used to create audio players. Creates an audio player of the specified T type using the specified context asynchronously. Namespace : Strade.Voice.Players Assembly : Strade.Voice.Abstractions.dll Syntax public delegate ValueTask<T> AudioPlayerFactory<T>(IAudioPlayerContext context, CancellationToken cancellationToken = default(CancellationToken)); Parameters Type Name Description IAudioPlayerContext context the audio player context. CancellationToken cancellationToken Returns Type Description ValueTask <T> a task that represents the asynchronous operation. The task result is the created audio player. Type Parameters Name Description T the type of the audio player."
  },
  "api/Strade.Voice.Players.BaseQueuedAudioPlayer.html": {
    "href": "api/Strade.Voice.Players.BaseQueuedAudioPlayer.html",
    "title": "Class BaseQueuedAudioPlayer | Strade Developer Documentation",
    "keywords": "Class BaseQueuedAudioPlayer A base implementation of a queued audio player that relies on a queue implemented using the ITrackQueue interface. Inheritance Object AudioPlayer BaseQueuedAudioPlayer QueuedAudioPlayer Implements IDisposable Inherited Members AudioPlayer.AudioService AudioPlayer.Context AudioPlayer.CurrentTrack AudioPlayer.Duration AudioPlayer.Filters AudioPlayer.GuildId AudioPlayer.Position AudioPlayer.State AudioPlayer.Volume AudioPlayer.CanSeek AudioPlayer.Dispose() AudioPlayer.PauseAsync(CancellationToken) AudioPlayer.ResumeAsync(CancellationToken) AudioPlayer.SeekAsync(TimeSpan, SeekOrigin, CancellationToken) AudioPlayer.SetVolumeAsync(Single, CancellationToken) AudioPlayer.OnPausedAsync(PlayerPausedEventArgs) AudioPlayer.OnResumedAsync(PlayerResumedEventArgs) AudioPlayer.OnTrackSeekAsync(PlayerTrackSeekEventArgs) AudioPlayer.OnTrackStartedAsync(PlayerTrackStartedEventArgs) AudioPlayer.OnVolumeChangedAsync(PlayerVolumeChangedEventArgs) AudioPlayer.Dispose(Boolean) AudioPlayer.EnsureNotDestroyed() AudioPlayer.EnsureNotDisposed() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Players Assembly : Strade.Voice.Abstractions.dll Syntax public class BaseQueuedAudioPlayer : AudioPlayer, IDisposable Constructors | Improve this Doc View Source BaseQueuedAudioPlayer(IAudioPlayerContext, ITrackQueue) Initializes a new instance of the BaseQueuedAudioPlayer class. Declaration public BaseQueuedAudioPlayer(IAudioPlayerContext context, ITrackQueue queue) Parameters Type Name Description IAudioPlayerContext context the underlying player context. ITrackQueue queue the underlying queue. Exceptions Type Condition ArgumentNullException thrown if the specified context is null . Properties | Improve this Doc View Source Factory Gets the player factory. Declaration public static AudioPlayerFactory<BaseQueuedAudioPlayer> Factory { get; } Property Value Type Description AudioPlayerFactory < BaseQueuedAudioPlayer > the player factory. | Improve this Doc View Source IsLooping Gets or sets a value indicating whether the current track should be looped. Declaration public bool IsLooping { get; set; } Property Value Type Description Boolean a value indicating whether the current track should be looped. | Improve this Doc View Source Queue Gets the underlying queue. Declaration public ITrackQueue Queue { get; } Property Value Type Description ITrackQueue the underlying queue. Methods | Improve this Doc View Source CreateDefaultQueueItem(IAudioTrack) Creates the default track queue item for the specified track . Declaration protected virtual ITrackQueueItem CreateDefaultQueueItem(IAudioTrack track) Parameters Type Name Description IAudioTrack track the track. Returns Type Description ITrackQueueItem the track queue item created. Exceptions Type Condition ArgumentNullException thrown if the specified track is null . ObjectDisposedException thrown if the current BaseQueuedAudioPlayer instance is disposed. | Improve this Doc View Source OnTrackEndedAsync(PlayerTrackEndedEventArgs) Declaration protected override Task OnTrackEndedAsync(PlayerTrackEndedEventArgs eventArgs) Parameters Type Name Description PlayerTrackEndedEventArgs eventArgs Returns Type Description Task Overrides AudioPlayer.OnTrackEndedAsync(PlayerTrackEndedEventArgs) | Improve this Doc View Source PlayAsync(ITrackQueueItem, Boolean, CancellationToken) Plays the specified track asynchronously. Declaration public virtual ValueTask<int> PlayAsync(ITrackQueueItem track, bool enqueue, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description ITrackQueueItem track the track to play. Boolean enqueue a value indicating whether the track should be enqueued. CancellationToken cancellationToken Returns Type Description ValueTask < Int32 > a task that represents the asynchronous operation. The task result is the position in queue. Exceptions Type Condition InvalidOperationException thrown if the player is destroyed ( State == Destroyed ). ObjectDisposedException thrown if the current BaseQueuedAudioPlayer instance is disposed. | Improve this Doc View Source PlayAsync(ITrackQueueItem, CancellationToken) Plays the specified track asynchronously. Declaration public ValueTask<int> PlayAsync(ITrackQueueItem track, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description ITrackQueueItem track the track to play. CancellationToken cancellationToken Returns Type Description ValueTask < Int32 > a task that represents the asynchronous operation. The task result is the position in queue. Exceptions Type Condition InvalidOperationException thrown if the player is destroyed ( State == Destroyed ). ObjectDisposedException thrown if the current BaseQueuedAudioPlayer instance is disposed. | Improve this Doc View Source PlayAsync(IAudioTrack, Boolean, CancellationToken) Plays the specified track asynchronously. Declaration public ValueTask<int> PlayAsync(IAudioTrack track, bool enqueue, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IAudioTrack track the track to play. Boolean enqueue a value indicating whether the track should be enqueued. CancellationToken cancellationToken Returns Type Description ValueTask < Int32 > a task that represents the asynchronous operation. The task result is the position in queue. Exceptions Type Condition InvalidOperationException thrown if the player is destroyed ( State == Destroyed ). ObjectDisposedException thrown if the current BaseQueuedAudioPlayer instance is disposed. | Improve this Doc View Source PlayAsync(IAudioTrack, CancellationToken) Plays the specified track asynchronously. Declaration public ValueTask<int> PlayAsync(IAudioTrack track, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IAudioTrack track the track to play. CancellationToken cancellationToken Returns Type Description ValueTask < Int32 > a task that represents the asynchronous operation. The task result is the position in queue. Exceptions Type Condition InvalidOperationException thrown if the player is destroyed ( State == Destroyed ). ObjectDisposedException thrown if the current BaseQueuedAudioPlayer instance is disposed. | Improve this Doc View Source ShouldPlayNextAsync(PlayerTrackEndedEventArgs, CancellationToken) Decides whether to play the next track asynchronously. Declaration protected virtual ValueTask<bool> ShouldPlayNextAsync(PlayerTrackEndedEventArgs eventArgs, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description PlayerTrackEndedEventArgs eventArgs the event arguments. CancellationToken cancellationToken Returns Type Description ValueTask < Boolean > a task that represents the asynchronous operation. The task result is a value indicating whether the next track should be played. Exceptions Type Condition ArgumentNullException thrown if the specified eventArgs is null . ObjectDisposedException thrown if the current BaseQueuedAudioPlayer instance is disposed. | Improve this Doc View Source SkipAsync(CancellationToken) Skips the current track asynchronously. Declaration public virtual ValueTask SkipAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask a task that represents the asynchronous operation. Exceptions Type Condition InvalidOperationException thrown if the player is destroyed ( State == Destroyed ). ObjectDisposedException thrown if the current BaseQueuedAudioPlayer instance is disposed. | Improve this Doc View Source StopAsync(Boolean, CancellationToken) Stops the playback asynchronously. Declaration public virtual Task StopAsync(bool clearQueue, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Boolean clearQueue a value indicating whether to clear the track queue. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Remarks If the player is not playing, nothing will happen. Exceptions Type Condition InvalidOperationException thrown if the player is destroyed ( State == Destroyed ). ObjectDisposedException thrown if the current BaseQueuedAudioPlayer instance is disposed. | Improve this Doc View Source StopAsync(CancellationToken) Stops the playback asynchronously. Declaration public override sealed Task StopAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Overrides AudioPlayer.StopAsync(CancellationToken) Remarks If the player is not playing, nothing will happen. Exceptions Type Condition InvalidOperationException thrown if the player is destroyed ( State == Destroyed ). ObjectDisposedException thrown if the current BaseQueuedAudioPlayer instance is disposed. Implements System.IDisposable"
  },
  "api/Strade.Voice.Players.html": {
    "href": "api/Strade.Voice.Players.html",
    "title": "Namespace Strade.Voice.Players | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Players Classes AudioPlayer A basic implementation for an audio player. BaseQueuedAudioPlayer A base implementation of a queued audio player that relies on a queue implemented using the ITrackQueue interface. QueuedAudioPlayer An implementation of an audio player that relies on a TrackQueue for the queue backend. Delegates AudioPlayerFactory<T> A delegate used to create audio players. Creates an audio player of the specified T type using the specified context asynchronously."
  },
  "api/Strade.Voice.Players.QueuedAudioPlayer.html": {
    "href": "api/Strade.Voice.Players.QueuedAudioPlayer.html",
    "title": "Class QueuedAudioPlayer | Strade Developer Documentation",
    "keywords": "Class QueuedAudioPlayer An implementation of an audio player that relies on a TrackQueue for the queue backend. Inheritance Object AudioPlayer BaseQueuedAudioPlayer QueuedAudioPlayer Implements IDisposable Inherited Members BaseQueuedAudioPlayer.IsLooping BaseQueuedAudioPlayer.PlayAsync(IAudioTrack, Boolean, CancellationToken) BaseQueuedAudioPlayer.PlayAsync(ITrackQueueItem, Boolean, CancellationToken) BaseQueuedAudioPlayer.PlayAsync(ITrackQueueItem, CancellationToken) BaseQueuedAudioPlayer.PlayAsync(IAudioTrack, CancellationToken) BaseQueuedAudioPlayer.SkipAsync(CancellationToken) BaseQueuedAudioPlayer.StopAsync(Boolean, CancellationToken) BaseQueuedAudioPlayer.StopAsync(CancellationToken) BaseQueuedAudioPlayer.OnTrackEndedAsync(PlayerTrackEndedEventArgs) BaseQueuedAudioPlayer.CreateDefaultQueueItem(IAudioTrack) BaseQueuedAudioPlayer.ShouldPlayNextAsync(PlayerTrackEndedEventArgs, CancellationToken) AudioPlayer.AudioService AudioPlayer.Context AudioPlayer.CurrentTrack AudioPlayer.Duration AudioPlayer.Filters AudioPlayer.GuildId AudioPlayer.Position AudioPlayer.State AudioPlayer.Volume AudioPlayer.CanSeek AudioPlayer.Dispose() AudioPlayer.PauseAsync(CancellationToken) AudioPlayer.ResumeAsync(CancellationToken) AudioPlayer.SeekAsync(TimeSpan, SeekOrigin, CancellationToken) AudioPlayer.SetVolumeAsync(Single, CancellationToken) AudioPlayer.OnPausedAsync(PlayerPausedEventArgs) AudioPlayer.OnResumedAsync(PlayerResumedEventArgs) AudioPlayer.OnTrackSeekAsync(PlayerTrackSeekEventArgs) AudioPlayer.OnTrackStartedAsync(PlayerTrackStartedEventArgs) AudioPlayer.OnVolumeChangedAsync(PlayerVolumeChangedEventArgs) AudioPlayer.Dispose(Boolean) AudioPlayer.EnsureNotDestroyed() AudioPlayer.EnsureNotDisposed() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Players Assembly : Strade.Voice.Abstractions.dll Syntax public class QueuedAudioPlayer : BaseQueuedAudioPlayer, IDisposable Constructors | Improve this Doc View Source QueuedAudioPlayer(IAudioPlayerContext, Int32, Int32) Initializes a new instance of the QueuedAudioPlayer class. Declaration public QueuedAudioPlayer(IAudioPlayerContext context, int initialCapacity = 5, int historyCapacity = 8) Parameters Type Name Description IAudioPlayerContext context the underlying player context. Int32 initialCapacity the initial capacity. Int32 historyCapacity the capacity of the history; or 0 to disable the queue history. Exceptions Type Condition ArgumentNullException thrown if the specified context is null . ArgumentOutOfRangeException thrown if the specified initial capacity ( initialCapacity ) is negative. ArgumentOutOfRangeException thrown if the specified history capacity ( historyCapacity ) is negative. Properties | Improve this Doc View Source Factory Gets the player factory. Declaration public static AudioPlayerFactory<QueuedAudioPlayer> Factory { get; } Property Value Type Description AudioPlayerFactory < QueuedAudioPlayer > the player factory. | Improve this Doc View Source Queue Gets the underlying queue. Declaration public TrackQueue Queue { get; } Property Value Type Description TrackQueue the underlying queue. Implements System.IDisposable"
  },
  "api/Strade.Voice.PlayerState.html": {
    "href": "api/Strade.Voice.PlayerState.html",
    "title": "Enum PlayerState | Strade Developer Documentation",
    "keywords": "Enum PlayerState A set of possible player states. Namespace : Strade.Voice Assembly : Strade.Voice.Abstractions.dll Syntax public enum PlayerState : byte Fields Name Description Destroyed Denotes that the player is destroyed. NotPlaying Denotes that the player is not playing a track. Paused Denotes that the player is paused. Playing Denotes that the player is playing a track. Extension Methods EnumExtensions.GetName<PlayerState>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Voice.Protocol.html": {
    "href": "api/Strade.Voice.Protocol.html",
    "title": "Namespace Strade.Voice.Protocol | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Protocol Classes RtpHeader Represents a structure of a RTP header with a buffer backend. This is a minimal implementation of a discord-style RTP header. Enums SpeakingFlags A set of audio speaking flags. VoiceCloseCode A set of voice close codes."
  },
  "api/Strade.Voice.Protocol.RtpHeader.html": {
    "href": "api/Strade.Voice.Protocol.RtpHeader.html",
    "title": "Class RtpHeader | Strade Developer Documentation",
    "keywords": "Class RtpHeader Represents a structure of a RTP header with a buffer backend. This is a minimal implementation of a discord-style RTP header. Inheritance Object RtpHeader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Protocol Assembly : Strade.Voice.Connection.dll Syntax public sealed class RtpHeader Remarks See https://tools.ietf.org/html/rfc3550 and https://discord.com/developers/docs/topics/voice-connections#encrypting-and-sending-voice-voice-packet-structure for reference. Constructors | Improve this Doc View Source RtpHeader(Byte[], UInt32) Initializes a new instance of the RtpHeader class. Declaration public RtpHeader(byte[] buffer, uint ssrc) Parameters Type Name Description Byte [] buffer the buffer. UInt32 ssrc the Synchronization source identifier (SSRC). Exceptions Type Condition ArgumentNullException thrown if the specified buffer is null . Fields | Improve this Doc View Source DefaultHeaderVersion The default header version for RTP headers (applies to non-parsed headers). Declaration public const byte DefaultHeaderVersion = 128 Field Value Type Description Byte | Improve this Doc View Source DefaultPayloadType The default payload type for RTP headers (applies to non-parsed headers). Declaration public const byte DefaultPayloadType = 120 Field Value Type Description Byte | Improve this Doc View Source Size Gets the default size of the RTP header (without extensions, additional CSRC identifiers...). Declaration public const int Size = 12 Field Value Type Description Int32 Properties | Improve this Doc View Source Buffer Gets the underlying buffer. Declaration public byte[] Buffer { get; } Property Value Type Description Byte [] the underlying buffer. | Improve this Doc View Source HasExtension Gets a value indicating whether extension information follows the RTP header. Declaration public bool HasExtension { get; } Property Value Type Description Boolean a value indicating whether extension information follows the RTP header. | Improve this Doc View Source Sequence Gets or sets the incremental sequence of the packet. Declaration public ushort Sequence { get; set; } Property Value Type Description UInt16 the incremental sequence of the packet. | Improve this Doc View Source SSRC Gets or sets the Synchronization source identifier (SSRC). Declaration public uint SSRC { get; set; } Property Value Type Description UInt32 the Synchronization source identifier (SSRC). | Improve this Doc View Source Timestamp Gets or sets the timestamp (in samples). Declaration public uint Timestamp { get; set; } Property Value Type Description UInt32 the timestamp (in samples). Methods | Improve this Doc View Source TryParse(Byte[], out RtpHeader) Tries to parse an RTP header. Declaration public static bool TryParse(byte[] buffer, out RtpHeader header) Parameters Type Name Description Byte [] buffer the buffer to parse the header from. RtpHeader header the RTP header; or default. Returns Type Description Boolean a value indicating whether the RTP header was valid. Exceptions Type Condition NotSupportedException thrown if the type of the RTP header is not supported."
  },
  "api/Strade.Voice.Protocol.SpeakingFlags.html": {
    "href": "api/Strade.Voice.Protocol.SpeakingFlags.html",
    "title": "Enum SpeakingFlags | Strade Developer Documentation",
    "keywords": "Enum SpeakingFlags A set of audio speaking flags. Namespace : Strade.Voice.Protocol Assembly : Strade.Voice.Connection.dll Syntax [Flags] public enum SpeakingFlags : byte Fields Name Description Microphone Denotes that the client is speaking and the indicator is shown. None Denotes that the client is not speaking and not sending any audio data. Priority Denotes that the speaker acquires priority speaker (lowers the audio of other speakers in the same channel). Soundshare Denotes that the speaking indicator is hidden. Extension Methods EnumExtensions.GetName<SpeakingFlags>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Voice.Protocol.VoiceCloseCode.html": {
    "href": "api/Strade.Voice.Protocol.VoiceCloseCode.html",
    "title": "Enum VoiceCloseCode | Strade Developer Documentation",
    "keywords": "Enum VoiceCloseCode A set of voice close codes. Namespace : Strade.Voice.Protocol Assembly : Strade.Voice.Connection.dll Syntax public enum VoiceCloseCode : ushort Fields Name Description AlreadyAuthenticated Denotes that the voice gateway closed the connection because the client was already authenticated. AuthenticationFailed Denotes that the voice gateway closed the connection because the authentication failed. Disconnected Denotes that the voice gateway closed the connection because the channel was deleted or the client was kicked. NotAuthenticated Denotes that the voice gateway closed the connection because the client was not authenticated. ServerNotFound Denotes that the voice gateway closed the connection because the specified voice endpoint was not found. SessionNoLongerValid Denotes that the voice gateway closed the connection because the client's session expired. SessionTimeout Denotes that the voice gateway closed the connection because the client's session timed out. UnknownEncryptionMode Denotes that the voice gateway closed the connection because the specified encryption mode was unrecognized. UnknownOpCode Denotes that the voice gateway closed the connection because the client sent an invalid operation code. UnknownProtocol Denotes that the voice gateway closed the connection because the client specified an unknown protocol. VoiceServerCrashed Denotes that the voice gateway closed the connection because the voice server crashed. Extension Methods EnumExtensions.GetName<VoiceCloseCode>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Voice.Providers.AudioProviderExtensions.html": {
    "href": "api/Strade.Voice.Providers.AudioProviderExtensions.html",
    "title": "Class AudioProviderExtensions | Strade Developer Documentation",
    "keywords": "Class AudioProviderExtensions Inheritance Object AudioProviderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Providers Assembly : Strade.Voice.Connection.dll Syntax public static class AudioProviderExtensions Methods | Improve this Doc View Source PlayAsync(IAudioDataProvider, AudioSender, Boolean, Boolean, CancellationToken) Declaration public static Task PlayAsync(this IAudioDataProvider audioProvider, AudioSender sender, bool stopSending = true, bool dispose = true, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IAudioDataProvider audioProvider AudioSender sender Boolean stopSending Boolean dispose CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/Strade.Voice.Providers.BaseAudioTrackProvider.html": {
    "href": "api/Strade.Voice.Providers.BaseAudioTrackProvider.html",
    "title": "Class BaseAudioTrackProvider | Strade Developer Documentation",
    "keywords": "Class BaseAudioTrackProvider The base implementation of the IAudioTrackProvider interface. Inheritance Object BaseAudioTrackProvider BaseHttpAudioTrackProvider Implements IAudioTrackProvider IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Providers Assembly : Strade.Voice.dll Syntax public abstract class BaseAudioTrackProvider : IAudioTrackProvider, IDisposable Properties | Improve this Doc View Source Name Declaration public abstract string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source LoadAsync(String, AudioTrackProviderOptions, CancellationToken) Declaration public virtual Task<IAudioTrack> LoadAsync(string query, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query AudioTrackProviderOptions options CancellationToken cancellationToken Returns Type Description Task < IAudioTrack > | Improve this Doc View Source LoadPlaylistAsync(String, Int32, AudioTrackProviderOptions, CancellationToken) Declaration public virtual Task<Playlist> LoadPlaylistAsync(string query, int count, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query Int32 count AudioTrackProviderOptions options CancellationToken cancellationToken Returns Type Description Task < Playlist > | Improve this Doc View Source SearchAsync(String, Int32, AudioTrackProviderOptions, CancellationToken) Declaration public virtual Task<IEnumerable<IAudioTrack>> SearchAsync(string query, int count, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query Int32 count AudioTrackProviderOptions options CancellationToken cancellationToken Returns Type Description Task < IEnumerable < IAudioTrack >> Implements IAudioTrackProvider System.IDisposable"
  },
  "api/Strade.Voice.Providers.BaseHttpAudioTrackProvider.html": {
    "href": "api/Strade.Voice.Providers.BaseHttpAudioTrackProvider.html",
    "title": "Class BaseHttpAudioTrackProvider | Strade Developer Documentation",
    "keywords": "Class BaseHttpAudioTrackProvider The base implementation of the IAudioTrackProvider interface for track providers that depend on a HTTP source. Inheritance Object BaseAudioTrackProvider BaseHttpAudioTrackProvider DailymotionAudioTrackProvider HttpAudioTrackProvider SoundCloudAudioTrackProvider VimeoAudioTrackProvider YouTubeAudioTrackProvider Implements IAudioTrackProvider IDisposable Inherited Members BaseAudioTrackProvider.Name BaseAudioTrackProvider.Dispose() BaseAudioTrackProvider.LoadAsync(String, AudioTrackProviderOptions, CancellationToken) BaseAudioTrackProvider.LoadPlaylistAsync(String, Int32, AudioTrackProviderOptions, CancellationToken) BaseAudioTrackProvider.SearchAsync(String, Int32, AudioTrackProviderOptions, CancellationToken) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Providers Assembly : Strade.Voice.dll Syntax public abstract class BaseHttpAudioTrackProvider : BaseAudioTrackProvider, IAudioTrackProvider, IDisposable Constructors | Improve this Doc View Source BaseHttpAudioTrackProvider(Uri, Boolean) Initializes a new instance of the BaseHttpAudioTrackProvider class. Declaration protected BaseHttpAudioTrackProvider(Uri baseAddress = null, bool allowAutoRedirect = true) Parameters Type Name Description Uri baseAddress the base address for the underlying HTTP client. Boolean allowAutoRedirect Properties | Improve this Doc View Source HttpClient Gets the HTTP client for the provider. Declaration protected HttpClient HttpClient { get; } Property Value Type Description HttpClient the HTTP client for the provider. Exceptions Type Condition ObjectDisposedException thrown if the BaseHttpAudioTrackProvider instance is disposed. Methods | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides BaseAudioTrackProvider.Dispose(Boolean) Implements IAudioTrackProvider System.IDisposable"
  },
  "api/Strade.Voice.Providers.Dailymotion.DailymotionAudioTrackProvider.html": {
    "href": "api/Strade.Voice.Providers.Dailymotion.DailymotionAudioTrackProvider.html",
    "title": "Class DailymotionAudioTrackProvider | Strade Developer Documentation",
    "keywords": "Class DailymotionAudioTrackProvider Inheritance Object BaseAudioTrackProvider BaseHttpAudioTrackProvider DailymotionAudioTrackProvider Implements IAudioTrackProvider IDisposable Inherited Members BaseHttpAudioTrackProvider.HttpClient BaseHttpAudioTrackProvider.Dispose(Boolean) BaseAudioTrackProvider.Dispose() BaseAudioTrackProvider.LoadPlaylistAsync(String, Int32, AudioTrackProviderOptions, CancellationToken) BaseAudioTrackProvider.SearchAsync(String, Int32, AudioTrackProviderOptions, CancellationToken) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Providers.Dailymotion Assembly : Strade.Voice.dll Syntax public sealed class DailymotionAudioTrackProvider : BaseHttpAudioTrackProvider, IAudioTrackProvider, IDisposable Constructors | Improve this Doc View Source DailymotionAudioTrackProvider() Initializes a new instance of the DailymotionAudioTrackProvider class. Declaration public DailymotionAudioTrackProvider() Fields | Improve this Doc View Source BaseAddress Gets the base address. Declaration public static readonly Uri BaseAddress Field Value Type Description Uri Properties | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseAudioTrackProvider.Name Methods | Improve this Doc View Source LoadAsync(String, AudioTrackProviderOptions, CancellationToken) Declaration public override Task<IAudioTrack> LoadAsync(string query, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query AudioTrackProviderOptions options CancellationToken cancellationToken Returns Type Description Task < IAudioTrack > Overrides BaseAudioTrackProvider.LoadAsync(String, AudioTrackProviderOptions, CancellationToken) Implements IAudioTrackProvider System.IDisposable"
  },
  "api/Strade.Voice.Providers.Dailymotion.html": {
    "href": "api/Strade.Voice.Providers.Dailymotion.html",
    "title": "Namespace Strade.Voice.Providers.Dailymotion | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Providers.Dailymotion Classes DailymotionAudioTrackProvider"
  },
  "api/Strade.Voice.Providers.FFmpeg.FFmpegAudioProvider.html": {
    "href": "api/Strade.Voice.Providers.FFmpeg.FFmpegAudioProvider.html",
    "title": "Class FFmpegAudioProvider | Strade Developer Documentation",
    "keywords": "Class FFmpegAudioProvider Inheritance Object FFmpegAudioProvider Implements IAudioProvider IAudioDataProvider IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Providers.FFmpeg Assembly : Strade.Voice.Providers.FFmpeg.dll Syntax public class FFmpegAudioProvider : IAudioProvider, IAudioDataProvider, IDisposable Constructors | Improve this Doc View Source FFmpegAudioProvider(AudioOptions, IAudioInput, Boolean, ILogger) Declaration public FFmpegAudioProvider(AudioOptions options, IAudioInput audioInput, bool leaveOpen = false, ILogger logger = null) Parameters Type Name Description AudioOptions options IAudioInput audioInput Boolean leaveOpen ILogger logger Properties | Improve this Doc View Source CanSeek Declaration public bool CanSeek { get; } Property Value Type Description Boolean | Improve this Doc View Source Duration Declaration public TimeSpan Duration { get; } Property Value Type Description TimeSpan | Improve this Doc View Source Filters Declaration public IEnumerable<IAudioFilter> Filters { get; set; } Property Value Type Description IEnumerable < IAudioFilter > | Improve this Doc View Source FrameSize Declaration public int FrameSize { get; } Property Value Type Description Int32 | Improve this Doc View Source Position Declaration public TimeSpan Position { get; set; } Property Value Type Description TimeSpan | Improve this Doc View Source PreferredBitrate Declaration public int? PreferredBitrate { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source Volume Declaration public float Volume { get; set; } Property Value Type Description Single Methods | Improve this Doc View Source BuildArguments(IAudioInput, Int32, Nullable<TimeSpan>, Nullable<Int32>) Declaration protected virtual string BuildArguments(IAudioInput audioInput, int chunkSize = 960, TimeSpan? offset = default(TimeSpan? ), int? preferredBitrate) Parameters Type Name Description IAudioInput audioInput Int32 chunkSize Nullable < TimeSpan > offset Nullable < Int32 > preferredBitrate Returns Type Description String | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source EscapeArgument(String) Declaration protected static string EscapeArgument(string arg) Parameters Type Name Description String arg Returns Type Description String | Improve this Doc View Source Seek(TimeSpan, SeekOrigin) Declaration public TimeSpan Seek(TimeSpan offset, SeekOrigin origin = SeekOrigin.Begin) Parameters Type Name Description TimeSpan offset SeekOrigin origin Returns Type Description TimeSpan | Improve this Doc View Source TryProvide(Byte[], out Int32) Declaration public bool TryProvide(byte[] buffer, out int length) Parameters Type Name Description Byte [] buffer Int32 length Returns Type Description Boolean Implements IAudioProvider IAudioDataProvider System.IDisposable"
  },
  "api/Strade.Voice.Providers.FFmpeg.FileAudioInput.html": {
    "href": "api/Strade.Voice.Providers.FFmpeg.FileAudioInput.html",
    "title": "Class FileAudioInput | Strade Developer Documentation",
    "keywords": "Class FileAudioInput Inheritance Object FileAudioInput Implements IAudioInput IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Providers.FFmpeg Assembly : Strade.Voice.Providers.FFmpeg.dll Syntax public sealed class FileAudioInput : IAudioInput, IDisposable Constructors | Improve this Doc View Source FileAudioInput(FileInfo) Declaration public FileAudioInput(FileInfo file) Parameters Type Name Description FileInfo file Properties | Improve this Doc View Source File Declaration public FileInfo File { get; } Property Value Type Description FileInfo | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Start(Process, CancellationToken) Declaration public void Start(Process process, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Process process CancellationToken cancellationToken Implements IAudioInput System.IDisposable"
  },
  "api/Strade.Voice.Providers.FFmpeg.html": {
    "href": "api/Strade.Voice.Providers.FFmpeg.html",
    "title": "Namespace Strade.Voice.Providers.FFmpeg | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Providers.FFmpeg Classes FFmpegAudioProvider FileAudioInput PipedAudioInput Interfaces IAudioInput"
  },
  "api/Strade.Voice.Providers.FFmpeg.IAudioInput.html": {
    "href": "api/Strade.Voice.Providers.FFmpeg.IAudioInput.html",
    "title": "Interface IAudioInput | Strade Developer Documentation",
    "keywords": "Interface IAudioInput Inherited Members IDisposable.Dispose() Namespace : Strade.Voice.Providers.FFmpeg Assembly : Strade.Voice.Providers.FFmpeg.dll Syntax public interface IAudioInput : IDisposable Properties | Improve this Doc View Source Name Declaration string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source Start(Process, CancellationToken) Declaration void Start(Process process, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Process process CancellationToken cancellationToken"
  },
  "api/Strade.Voice.Providers.FFmpeg.PipedAudioInput.html": {
    "href": "api/Strade.Voice.Providers.FFmpeg.PipedAudioInput.html",
    "title": "Class PipedAudioInput | Strade Developer Documentation",
    "keywords": "Class PipedAudioInput Inheritance Object PipedAudioInput Implements IAudioInput IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Providers.FFmpeg Assembly : Strade.Voice.Providers.FFmpeg.dll Syntax public sealed class PipedAudioInput : IAudioInput, IDisposable Constructors | Improve this Doc View Source PipedAudioInput(Stream, Boolean) Declaration public PipedAudioInput(Stream stream, bool leaveOpen = false) Parameters Type Name Description Stream stream Boolean leaveOpen Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Stream Declaration public Stream Stream { get; } Property Value Type Description Stream Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Start(Process, CancellationToken) Declaration public void Start(Process process, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Process process CancellationToken cancellationToken Implements IAudioInput System.IDisposable"
  },
  "api/Strade.Voice.Providers.html": {
    "href": "api/Strade.Voice.Providers.html",
    "title": "Namespace Strade.Voice.Providers | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Providers Classes AudioProviderExtensions BaseAudioTrackProvider The base implementation of the IAudioTrackProvider interface. BaseHttpAudioTrackProvider The base implementation of the IAudioTrackProvider interface for track providers that depend on a HTTP source. HttpAudioStream An HTTP stream that automatically reconnects and resumes the connection if the session invalidates or the connection closes abruptly. Interfaces IAudioDataProvider IAudioFilter IAudioProvider"
  },
  "api/Strade.Voice.Providers.Http.html": {
    "href": "api/Strade.Voice.Providers.Http.html",
    "title": "Namespace Strade.Voice.Providers.Http | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Providers.Http Classes HttpAudioTrackProvider"
  },
  "api/Strade.Voice.Providers.Http.HttpAudioTrackProvider.html": {
    "href": "api/Strade.Voice.Providers.Http.HttpAudioTrackProvider.html",
    "title": "Class HttpAudioTrackProvider | Strade Developer Documentation",
    "keywords": "Class HttpAudioTrackProvider Inheritance Object BaseAudioTrackProvider BaseHttpAudioTrackProvider HttpAudioTrackProvider Implements IAudioTrackProvider IDisposable Inherited Members BaseHttpAudioTrackProvider.HttpClient BaseHttpAudioTrackProvider.Dispose(Boolean) BaseAudioTrackProvider.Dispose() BaseAudioTrackProvider.LoadPlaylistAsync(String, Int32, AudioTrackProviderOptions, CancellationToken) BaseAudioTrackProvider.SearchAsync(String, Int32, AudioTrackProviderOptions, CancellationToken) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Providers.Http Assembly : Strade.Voice.dll Syntax public sealed class HttpAudioTrackProvider : BaseHttpAudioTrackProvider, IAudioTrackProvider, IDisposable Constructors | Improve this Doc View Source HttpAudioTrackProvider() Initializes a new instance of the HttpAudioTrackProvider class. Declaration public HttpAudioTrackProvider() Properties | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseAudioTrackProvider.Name Methods | Improve this Doc View Source LoadAsync(String, AudioTrackProviderOptions, CancellationToken) Declaration public override Task<IAudioTrack> LoadAsync(string query, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query AudioTrackProviderOptions options CancellationToken cancellationToken Returns Type Description Task < IAudioTrack > Overrides BaseAudioTrackProvider.LoadAsync(String, AudioTrackProviderOptions, CancellationToken) Implements IAudioTrackProvider System.IDisposable"
  },
  "api/Strade.Voice.Providers.HttpAudioStream.html": {
    "href": "api/Strade.Voice.Providers.HttpAudioStream.html",
    "title": "Class HttpAudioStream | Strade Developer Documentation",
    "keywords": "Class HttpAudioStream An HTTP stream that automatically reconnects and resumes the connection if the session invalidates or the connection closes abruptly. Inheritance Object MarshalByRefObject Stream HttpAudioStream Implements IDisposable Inherited Members Stream.Null Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object) Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object) Stream.Close() Stream.CopyTo(Stream) Stream.CopyTo(Stream, Int32) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, Int32) Stream.CopyToAsync(Stream, Int32, CancellationToken) Stream.CreateWaitHandle() Stream.Dispose() Stream.EndRead(IAsyncResult) Stream.EndWrite(IAsyncResult) Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.ObjectInvariant() Stream.ReadAsync(Byte[], Int32, Int32) Stream.ReadByte() Stream.Synchronized(Stream) Stream.WriteAsync(Byte[], Int32, Int32) Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken) Stream.WriteByte(Byte) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(Boolean) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Providers Assembly : Strade.Voice.dll Syntax public class HttpAudioStream : Stream, IDisposable Constructors | Improve this Doc View Source HttpAudioStream(HttpClient, Uri, Nullable<Int64>, Nullable<Int64>) Initializes a new instance of the HttpAudioStream class. Declaration public HttpAudioStream(HttpClient httpClient, Uri requestUri, long? contentLength = default(long? ), long? segmentSize = default(long? )) Parameters Type Name Description HttpClient httpClient the HTTP client used to create requests for the stream. Uri requestUri the Uri used to create requests to the stream endpoint. Nullable < Int64 > contentLength the content length of the audio stream; or null if not present. Nullable < Int64 > segmentSize Exceptions Type Condition ArgumentNullException thrown if the specified httpClient is null . ArgumentNullException thrown if the specified requestUri is null . Properties | Improve this Doc View Source CanRead Declaration public override bool CanRead { get; } Property Value Type Description Boolean Overrides Stream.CanRead | Improve this Doc View Source CanSeek Declaration public override bool CanSeek { get; } Property Value Type Description Boolean Overrides Stream.CanSeek | Improve this Doc View Source CanWrite Declaration public override bool CanWrite { get; } Property Value Type Description Boolean Overrides Stream.CanWrite | Improve this Doc View Source HttpClient Gets the HTTP client used to request the resource. Declaration protected HttpClient HttpClient { get; } Property Value Type Description HttpClient | Improve this Doc View Source Length Declaration public override long Length { get; } Property Value Type Description Int64 Overrides Stream.Length | Improve this Doc View Source Position Declaration public override long Position { get; set; } Property Value Type Description Int64 Overrides Stream.Position | Improve this Doc View Source RequestUri Gets the request URI for the stream. Declaration public Uri RequestUri { get; } Property Value Type Description Uri Methods | Improve this Doc View Source CreateRequest(Int64, Nullable<Int64>) Creates the HTTP request for requesting the stream resource. Declaration protected virtual HttpRequestMessage CreateRequest(long offset, long? length = default(long? )) Parameters Type Name Description Int64 offset the byte-offset the stream should start at. Nullable < Int64 > length Returns Type Description HttpRequestMessage the HTTP request message. | Improve this Doc View Source CreateStreamAsync(Int64, Nullable<Int64>, CancellationToken) Creates the stream asynchronously. Declaration protected Task<Stream> CreateStreamAsync(long offset, long? length = default(long? ), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Int64 offset the position the stream should start at. Nullable < Int64 > length CancellationToken cancellationToken Returns Type Description Task < Stream > a task that represents the asynchronous operation. The task result is the stream. | Improve this Doc View Source Dispose(Boolean) Disposes the HttpAudioStream instance. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides Stream.Dispose(Boolean) | Improve this Doc View Source EnsureNotDisposed() Ensures that the HttpAudioStream instance is not disposed. Declaration protected void EnsureNotDisposed() Exceptions Type Condition ObjectDisposedException thrown if the HttpAudioStream instance is disposed. | Improve this Doc View Source Flush() Declaration public override void Flush() Overrides Stream.Flush() | Improve this Doc View Source ProcessResponseAsync(HttpResponseMessage, CancellationToken) Declaration protected virtual ValueTask ProcessResponseAsync(HttpResponseMessage responseMessage, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description HttpResponseMessage responseMessage CancellationToken cancellationToken Returns Type Description ValueTask | Improve this Doc View Source Read(Byte[], Int32, Int32) Declaration public override int Read(byte[] buffer, int offset, int count) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count Returns Type Description Int32 Overrides Stream.Read(Byte[], Int32, Int32) | Improve this Doc View Source ReadAsync(Byte[], Int32, Int32, CancellationToken) Declaration public override Task<int> ReadAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count CancellationToken cancellationToken Returns Type Description Task < Int32 > Overrides Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken) | Improve this Doc View Source ResetStream() Aborts the HTTP stream (and drains the stream if possible used to resume the connection) and invalidates the stream. Declaration public void ResetStream() | Improve this Doc View Source Seek(Int64, SeekOrigin) Declaration public override long Seek(long offset, SeekOrigin origin) Parameters Type Name Description Int64 offset SeekOrigin origin Returns Type Description Int64 Overrides Stream.Seek(Int64, SeekOrigin) | Improve this Doc View Source SetLength(Int64) Declaration public override void SetLength(long value) Parameters Type Name Description Int64 value Overrides Stream.SetLength(Int64) | Improve this Doc View Source ShouldRetry(HttpResponseMessage) Declaration protected virtual bool ShouldRetry(HttpResponseMessage responseMessage) Parameters Type Name Description HttpResponseMessage responseMessage Returns Type Description Boolean | Improve this Doc View Source Write(Byte[], Int32, Int32) Declaration public override void Write(byte[] buffer, int offset, int count) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count Overrides Stream.Write(Byte[], Int32, Int32) Implements System.IDisposable"
  },
  "api/Strade.Voice.Providers.IAudioDataProvider.html": {
    "href": "api/Strade.Voice.Providers.IAudioDataProvider.html",
    "title": "Interface IAudioDataProvider | Strade Developer Documentation",
    "keywords": "Interface IAudioDataProvider Inherited Members IDisposable.Dispose() Namespace : Strade.Voice.Providers Assembly : Strade.Voice.Connection.dll Syntax public interface IAudioDataProvider : IDisposable Methods | Improve this Doc View Source TryProvide(Byte[], out Int32) Tries to provide OPUS-encoded audio data. Declaration bool TryProvide(byte[] buffer, out int length) Parameters Type Name Description Byte [] buffer the buffer to write the OPUS data to. Int32 length (out) the length of the encoded OPUS data. Returns Type Description Boolean a value indicating whether the OPUS data could be provided. Extension Methods AudioProviderExtensions.PlayAsync(IAudioDataProvider, AudioSender, Boolean, Boolean, CancellationToken)"
  },
  "api/Strade.Voice.Providers.IAudioFilter.html": {
    "href": "api/Strade.Voice.Providers.IAudioFilter.html",
    "title": "Interface IAudioFilter | Strade Developer Documentation",
    "keywords": "Interface IAudioFilter Namespace : Strade.Voice.Providers Assembly : Strade.Voice.Connection.dll Syntax public interface IAudioFilter Methods | Improve this Doc View Source Process(Span<Single>) Declaration void Process(Span<float> samples) Parameters Type Name Description Span < Single > samples"
  },
  "api/Strade.Voice.Providers.IAudioProvider.html": {
    "href": "api/Strade.Voice.Providers.IAudioProvider.html",
    "title": "Interface IAudioProvider | Strade Developer Documentation",
    "keywords": "Interface IAudioProvider Inherited Members IAudioDataProvider.TryProvide(Byte[], Int32) IDisposable.Dispose() Namespace : Strade.Voice.Providers Assembly : Strade.Voice.Connection.dll Syntax public interface IAudioProvider : IAudioDataProvider, IDisposable Properties | Improve this Doc View Source CanSeek Gets a value indicating whether the provider can seek in tracks. Declaration bool CanSeek { get; } Property Value Type Description Boolean a value indicating whether the provider can seek in tracks. | Improve this Doc View Source Duration Gets the duration of the current track. Declaration TimeSpan Duration { get; } Property Value Type Description TimeSpan the duration of the current track; or Zero if no track is playing. | Improve this Doc View Source Filters Gets or sets the filters for the audio. Declaration IEnumerable<IAudioFilter> Filters { get; set; } Property Value Type Description IEnumerable < IAudioFilter > | Improve this Doc View Source Position Gets the position of the current track. Declaration TimeSpan Position { get; } Property Value Type Description TimeSpan the position of the current track; or Zero if no track is playing. | Improve this Doc View Source PreferredBitrate Gets or sets the preferred bitrate for encoding OPUS data. Declaration int? PreferredBitrate { get; set; } Property Value Type Description Nullable < Int32 > the preferred bitrate for encoding OPUS data. | Improve this Doc View Source Volume Gets or sets the output signal volume. Declaration float Volume { get; set; } Property Value Type Description Single the output signal volume. Methods | Improve this Doc View Source Seek(TimeSpan, SeekOrigin) Seeks a position in the track. Declaration TimeSpan Seek(TimeSpan offset, SeekOrigin origin = SeekOrigin.Begin) Parameters Type Name Description TimeSpan offset the relative offset, relative to the specified origin . SeekOrigin origin the seek origin. Returns Type Description TimeSpan the new duration. Extension Methods AudioProviderExtensions.PlayAsync(IAudioDataProvider, AudioSender, Boolean, Boolean, CancellationToken)"
  },
  "api/Strade.Voice.Providers.Native.AudioProvider.html": {
    "href": "api/Strade.Voice.Providers.Native.AudioProvider.html",
    "title": "Class AudioProvider | Strade Developer Documentation",
    "keywords": "Class AudioProvider Inheritance Object AudioProvider Implements IAudioProvider IAudioDataProvider IDisposable Namespace : Strade.Voice.Providers.Native Assembly : Strade.Voice.Providers.Native.dll Syntax public class AudioProvider : object, IAudioProvider, IAudioDataProvider, IDisposable Constructors | Improve this Doc View Source AudioProvider(IAudioStreamAdapter, AudioOptions, Boolean, ILogger) Declaration public AudioProvider(IAudioStreamAdapter streamAdapter, AudioOptions options, bool leaveOpen = false, ILogger logger = null) Parameters Type Name Description IAudioStreamAdapter streamAdapter AudioOptions options Boolean leaveOpen ILogger logger | Improve this Doc View Source AudioProvider(Stream, AudioOptions, Boolean, ILogger) Declaration public AudioProvider(Stream stream, AudioOptions options, bool leaveOpen = false, ILogger logger = null) Parameters Type Name Description Stream stream AudioOptions options Boolean leaveOpen ILogger logger Fields | Improve this Doc View Source SupportedVersion Declaration public static readonly Version SupportedVersion Field Value Type Description Version Properties | Improve this Doc View Source CanSeek Declaration public bool CanSeek { get; } Property Value Type Description Boolean | Improve this Doc View Source Duration Declaration public TimeSpan Duration { get; } Property Value Type Description TimeSpan | Improve this Doc View Source Filters Declaration public IEnumerable<IAudioFilter> Filters { get; set; } Property Value Type Description IEnumerable < IAudioFilter > | Improve this Doc View Source IsHandleCreated Declaration protected bool IsHandleCreated { get; } Property Value Type Description Boolean | Improve this Doc View Source LibraryVersion Declaration public static Version LibraryVersion { get; } Property Value Type Description Version | Improve this Doc View Source OpusEncoder Declaration public OpusEncoder OpusEncoder { get; } Property Value Type Description OpusEncoder | Improve this Doc View Source Position Declaration public TimeSpan Position { get; } Property Value Type Description TimeSpan | Improve this Doc View Source PreferredBitrate Declaration public int? PreferredBitrate { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source Volume Declaration public float Volume { get; set; } Property Value Type Description Single Methods | Improve this Doc View Source CreateHandle() Declaration protected IntPtr CreateHandle() Returns Type Description IntPtr | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source Finalize() Finalizes an instance of the AudioProvider class. Declaration protected void Finalize() | Improve this Doc View Source Seek(TimeSpan, SeekOrigin) Declaration public TimeSpan Seek(TimeSpan offset, SeekOrigin origin = null) Parameters Type Name Description TimeSpan offset SeekOrigin origin Returns Type Description TimeSpan | Improve this Doc View Source TryProvide(Byte[], out Int32) Declaration public bool TryProvide(byte[] buffer, out int length) Parameters Type Name Description Byte [] buffer Int32 length Returns Type Description Boolean Implements IAudioProvider IAudioDataProvider System.IDisposable"
  },
  "api/Strade.Voice.Providers.Native.AudioProviderError.html": {
    "href": "api/Strade.Voice.Providers.Native.AudioProviderError.html",
    "title": "Enum AudioProviderError | Strade Developer Documentation",
    "keywords": "Enum AudioProviderError A set of error codes returned by the native audio provider API. Namespace : Strade.Voice.Providers.Native Assembly : Strade.Voice.Providers.Native.dll Syntax public enum AudioProviderError : int Remarks This file shadows the constants in errors.h . Keep this in made when changing the values here!. Fields Name Description BadArgument Denotes that a bad argument was passed. CodecError Denotes that an error occurred while initializing the codec. EndOfAudioStream Denotes that the end of the audio stream was reached. NoAudioStream Denotes that the resource did not contain a supported audio stream. NoMemory Denotes that no memory is available for the operation. ResamplerError Denotes that an error occurred while resampling / initializing the resampler. ResourceError Denotes that an error occurred while opening the resource. SeekBeyondStream Denotes that it was tried to seek beyond the stream. SeekError Denotes that an error occurred while seeking. StreamCorrupt Denotes that the audio stream was corrupt. Success Denotes that the operation completed successfully. UnsupportedCodec Denotes that the stream's codec is unsupported."
  },
  "api/Strade.Voice.Providers.Native.AudioStreamAdapter.html": {
    "href": "api/Strade.Voice.Providers.Native.AudioStreamAdapter.html",
    "title": "Class AudioStreamAdapter | Strade Developer Documentation",
    "keywords": "Class AudioStreamAdapter Inheritance Object AudioStreamAdapter Implements IAudioStreamAdapter IDisposable Namespace : Strade.Voice.Providers.Native Assembly : Strade.Voice.Providers.Native.dll Syntax public sealed class AudioStreamAdapter : object, IAudioStreamAdapter, IDisposable Constructors | Improve this Doc View Source AudioStreamAdapter(Stream, Boolean) Declaration public AudioStreamAdapter(Stream stream, bool leaveOpen = false) Parameters Type Name Description Stream stream Boolean leaveOpen Properties | Improve this Doc View Source Stream Declaration public Stream Stream { get; } Property Value Type Description Stream Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Read(Byte*, Int32) Declaration public int Read(byte *buffer, int count) Parameters Type Name Description Byte * buffer Int32 count Returns Type Description Int32 | Improve this Doc View Source Seek(Int64, SeekMode) Declaration public long Seek(long offset, SeekMode mode = default(SeekMode)) Parameters Type Name Description Int64 offset SeekMode mode Returns Type Description Int64 Implements IAudioStreamAdapter IDisposable"
  },
  "api/Strade.Voice.Providers.Native.html": {
    "href": "api/Strade.Voice.Providers.Native.html",
    "title": "Namespace Strade.Voice.Providers.Native | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Providers.Native Classes AudioProvider AudioStreamAdapter Interfaces IAudioStreamAdapter Enums AudioProviderError A set of error codes returned by the native audio provider API."
  },
  "api/Strade.Voice.Providers.Native.IAudioStreamAdapter.html": {
    "href": "api/Strade.Voice.Providers.Native.IAudioStreamAdapter.html",
    "title": "Interface IAudioStreamAdapter | Strade Developer Documentation",
    "keywords": "Interface IAudioStreamAdapter Namespace : Strade.Voice.Providers.Native Assembly : Strade.Voice.Providers.Native.dll Syntax public interface IAudioStreamAdapter : IDisposable Methods | Improve this Doc View Source Read(Byte*, Int32) Declaration int Read(byte *buffer, int count) Parameters Type Name Description Byte * buffer Int32 count Returns Type Description Int32 | Improve this Doc View Source Seek(Int64, SeekMode) Declaration long Seek(long offset, SeekMode mode = default(SeekMode)) Parameters Type Name Description Int64 offset SeekMode mode Returns Type Description Int64"
  },
  "api/Strade.Voice.Providers.Native.Streams.html": {
    "href": "api/Strade.Voice.Providers.Native.Streams.html",
    "title": "Namespace Strade.Voice.Providers.Native.Streams | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Providers.Native.Streams Enums SeekMode An enumeration holding different seek modes."
  },
  "api/Strade.Voice.Providers.Native.Streams.SeekMode.html": {
    "href": "api/Strade.Voice.Providers.Native.Streams.SeekMode.html",
    "title": "Enum SeekMode | Strade Developer Documentation",
    "keywords": "Enum SeekMode An enumeration holding different seek modes. Namespace : Strade.Voice.Providers.Native.Streams Assembly : Strade.Voice.Providers.Native.dll Syntax public enum SeekMode : long Fields Name Description Begin Denotes that the stream should be seeked relative to the beginning of the stream. Current Denotes that the stream should be seeked relative to the current position in the stream. End Denotes that the stream should be seeked relative to the end of the stream. Length Denotes that the total length of the stream is requested. If the length of the stream is not known to the adapter, -1L should be returned."
  },
  "api/Strade.Voice.Providers.SoundCloud.html": {
    "href": "api/Strade.Voice.Providers.SoundCloud.html",
    "title": "Namespace Strade.Voice.Providers.SoundCloud | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Providers.SoundCloud Classes SoundCloudAudioTrackProvider An IAudioTrackProvider used to load and search SoundCloud tracks or playlists. SoundCloudClientIdFetcher A class used to fetch SoundCloud client identifiers."
  },
  "api/Strade.Voice.Providers.SoundCloud.SoundCloudAudioTrackProvider.html": {
    "href": "api/Strade.Voice.Providers.SoundCloud.SoundCloudAudioTrackProvider.html",
    "title": "Class SoundCloudAudioTrackProvider | Strade Developer Documentation",
    "keywords": "Class SoundCloudAudioTrackProvider An IAudioTrackProvider used to load and search SoundCloud tracks or playlists. Inheritance Object BaseAudioTrackProvider BaseHttpAudioTrackProvider SoundCloudAudioTrackProvider Implements IAudioTrackProvider IDisposable Inherited Members BaseHttpAudioTrackProvider.HttpClient BaseHttpAudioTrackProvider.Dispose(Boolean) BaseAudioTrackProvider.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Providers.SoundCloud Assembly : Strade.Voice.dll Syntax public sealed class SoundCloudAudioTrackProvider : BaseHttpAudioTrackProvider, IAudioTrackProvider, IDisposable Constructors | Improve this Doc View Source SoundCloudAudioTrackProvider() Initializes a new instance of the SoundCloudAudioTrackProvider class. Declaration public SoundCloudAudioTrackProvider() Fields | Improve this Doc View Source BaseAddress Gets the base address. Declaration public static readonly Uri BaseAddress Field Value Type Description Uri Properties | Improve this Doc View Source IdFetcher Gets the client ID fetcher. Declaration public SoundCloudClientIdFetcher IdFetcher { get; } Property Value Type Description SoundCloudClientIdFetcher | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseAudioTrackProvider.Name Methods | Improve this Doc View Source LoadAsync(String, AudioTrackProviderOptions, CancellationToken) Declaration public override Task<IAudioTrack> LoadAsync(string query, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query AudioTrackProviderOptions options CancellationToken cancellationToken Returns Type Description Task < IAudioTrack > Overrides BaseAudioTrackProvider.LoadAsync(String, AudioTrackProviderOptions, CancellationToken) | Improve this Doc View Source LoadPlaylistAsync(String, Int32, AudioTrackProviderOptions, CancellationToken) Declaration public override Task<Playlist> LoadPlaylistAsync(string query, int count, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query Int32 count AudioTrackProviderOptions options CancellationToken cancellationToken Returns Type Description Task < Playlist > Overrides BaseAudioTrackProvider.LoadPlaylistAsync(String, Int32, AudioTrackProviderOptions, CancellationToken) | Improve this Doc View Source SearchAsync(String, Int32, AudioTrackProviderOptions, CancellationToken) Declaration public override Task<IEnumerable<IAudioTrack>> SearchAsync(string query, int count, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query Int32 count AudioTrackProviderOptions options CancellationToken cancellationToken Returns Type Description Task < IEnumerable < IAudioTrack >> Overrides BaseAudioTrackProvider.SearchAsync(String, Int32, AudioTrackProviderOptions, CancellationToken) Implements IAudioTrackProvider System.IDisposable"
  },
  "api/Strade.Voice.Providers.SoundCloud.SoundCloudClientIdFetcher.html": {
    "href": "api/Strade.Voice.Providers.SoundCloud.SoundCloudClientIdFetcher.html",
    "title": "Class SoundCloudClientIdFetcher | Strade Developer Documentation",
    "keywords": "Class SoundCloudClientIdFetcher A class used to fetch SoundCloud client identifiers. Inheritance Object SoundCloudClientIdFetcher Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Providers.SoundCloud Assembly : Strade.Voice.dll Syntax public sealed class SoundCloudClientIdFetcher Constructors | Improve this Doc View Source SoundCloudClientIdFetcher(HttpClient) Initializes a new instance of the SoundCloudClientIdFetcher class. Declaration public SoundCloudClientIdFetcher(HttpClient httpClient) Parameters Type Name Description HttpClient httpClient the HTTP client. Exceptions Type Condition ArgumentNullException thrown if the specified httpClient is null . Methods | Improve this Doc View Source FetchAsync(Boolean, CancellationToken) Fetches the client identifier asynchronously. Declaration public Task<string> FetchAsync(bool force = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Boolean force a value indicating whether the fetch should be forced. CancellationToken cancellationToken Returns Type Description Task < String > a task that represents the asynchronous operation. The task result is the client identifier."
  },
  "api/Strade.Voice.Providers.Vimeo.html": {
    "href": "api/Strade.Voice.Providers.Vimeo.html",
    "title": "Namespace Strade.Voice.Providers.Vimeo | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Providers.Vimeo Classes VimeoAudioTrackProvider A track provider that provides audio tracks from https://vimeo.com/ . VimeoUtility An utility class used to parse and create Vimeo URIs."
  },
  "api/Strade.Voice.Providers.Vimeo.VimeoAudioTrackProvider.html": {
    "href": "api/Strade.Voice.Providers.Vimeo.VimeoAudioTrackProvider.html",
    "title": "Class VimeoAudioTrackProvider | Strade Developer Documentation",
    "keywords": "Class VimeoAudioTrackProvider A track provider that provides audio tracks from https://vimeo.com/ . Inheritance Object BaseAudioTrackProvider BaseHttpAudioTrackProvider VimeoAudioTrackProvider Implements IAudioTrackProvider IDisposable Inherited Members BaseHttpAudioTrackProvider.HttpClient BaseHttpAudioTrackProvider.Dispose(Boolean) BaseAudioTrackProvider.Dispose() BaseAudioTrackProvider.LoadPlaylistAsync(String, Int32, AudioTrackProviderOptions, CancellationToken) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Providers.Vimeo Assembly : Strade.Voice.dll Syntax public sealed class VimeoAudioTrackProvider : BaseHttpAudioTrackProvider, IAudioTrackProvider, IDisposable Constructors | Improve this Doc View Source VimeoAudioTrackProvider() Initializes a new instance of the VimeoAudioTrackProvider class. Declaration public VimeoAudioTrackProvider() Fields | Improve this Doc View Source BaseAddress Gets the base address. Declaration public static readonly Uri BaseAddress Field Value Type Description Uri Properties | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseAudioTrackProvider.Name Methods | Improve this Doc View Source LoadAsync(String, AudioTrackProviderOptions, CancellationToken) Declaration public override Task<IAudioTrack> LoadAsync(string query, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query AudioTrackProviderOptions options CancellationToken cancellationToken Returns Type Description Task < IAudioTrack > Overrides BaseAudioTrackProvider.LoadAsync(String, AudioTrackProviderOptions, CancellationToken) | Improve this Doc View Source SearchAsync(String, Int32, AudioTrackProviderOptions, CancellationToken) Declaration public override Task<IEnumerable<IAudioTrack>> SearchAsync(string query, int count, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query Int32 count AudioTrackProviderOptions options CancellationToken cancellationToken Returns Type Description Task < IEnumerable < IAudioTrack >> Overrides BaseAudioTrackProvider.SearchAsync(String, Int32, AudioTrackProviderOptions, CancellationToken) Implements IAudioTrackProvider System.IDisposable"
  },
  "api/Strade.Voice.Providers.Vimeo.VimeoUtility.html": {
    "href": "api/Strade.Voice.Providers.Vimeo.VimeoUtility.html",
    "title": "Class VimeoUtility | Strade Developer Documentation",
    "keywords": "Class VimeoUtility An utility class used to parse and create Vimeo URIs. Inheritance Object VimeoUtility Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Providers.Vimeo Assembly : Strade.Voice.dll Syntax public static class VimeoUtility Methods | Improve this Doc View Source BuildSearchUri(String, QueryParameterCollection) Builds the search page URI for the specified query . Declaration public static Uri BuildSearchUri(string query, QueryParameterCollection additionalParameters = null) Parameters Type Name Description String query the search query. QueryParameterCollection additionalParameters additional query parameters for the request. Returns Type Description Uri the search page URI for the specified query . Exceptions Type Condition ArgumentNullException thrown if the specified query is null . | Improve this Doc View Source TryExtractVideoIdentifier(String, out UInt64) Tries to extract the video identifier from the specified uri . Declaration public static bool TryExtractVideoIdentifier(string uri, out ulong videoIdentifier) Parameters Type Name Description String uri the URI to extract the video identifier from. UInt64 videoIdentifier ( out ) the video identifier. Returns Type Description Boolean a value indicating whether the video identifier could be extracted. Exceptions Type Condition ArgumentNullException thrown if the specified uri is null . | Improve this Doc View Source TryExtractVideoIdentifier(Uri, out UInt64) Tries to extract the video identifier from the specified uri . Declaration public static bool TryExtractVideoIdentifier(Uri uri, out ulong videoIdentifier) Parameters Type Name Description Uri uri the URI to extract the video identifier from. UInt64 videoIdentifier ( out ) the video identifier. Returns Type Description Boolean a value indicating whether the video identifier could be extracted. Exceptions Type Condition ArgumentNullException thrown if the specified uri is null ."
  },
  "api/Strade.Voice.Providers.YouTube.Cipher.CipherOperationDescriptor.html": {
    "href": "api/Strade.Voice.Providers.YouTube.Cipher.CipherOperationDescriptor.html",
    "title": "Struct CipherOperationDescriptor | Strade Developer Documentation",
    "keywords": "Struct CipherOperationDescriptor Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Voice.Providers.YouTube.Cipher Assembly : Strade.Voice.dll Syntax public struct CipherOperationDescriptor Constructors | Improve this Doc View Source CipherOperationDescriptor(Int32, CipherOperationKind) Declaration public CipherOperationDescriptor(int argument, CipherOperationKind kind) Parameters Type Name Description Int32 argument CipherOperationKind kind Properties | Improve this Doc View Source Argument Declaration public int Argument { get; } Property Value Type Description Int32 | Improve this Doc View Source Kind Declaration public CipherOperationKind Kind { get; } Property Value Type Description CipherOperationKind Methods | Improve this Doc View Source Apply(ref Char[]) Applies the cipher operation on the specified content . Declaration public void Apply(ref char[] content) Parameters Type Name Description Char [] content the content to apply the cipher operation on."
  },
  "api/Strade.Voice.Providers.YouTube.Cipher.CipherOperationKind.html": {
    "href": "api/Strade.Voice.Providers.YouTube.Cipher.CipherOperationKind.html",
    "title": "Enum CipherOperationKind | Strade Developer Documentation",
    "keywords": "Enum CipherOperationKind Namespace : Strade.Voice.Providers.YouTube.Cipher Assembly : Strade.Voice.dll Syntax public enum CipherOperationKind : byte Fields Name Description Noop Reverse Slice Swap Extension Methods EnumExtensions.GetName<CipherOperationKind>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Voice.Providers.YouTube.Cipher.html": {
    "href": "api/Strade.Voice.Providers.YouTube.Cipher.html",
    "title": "Namespace Strade.Voice.Providers.YouTube.Cipher | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Providers.YouTube.Cipher Classes YouTubeCipherCache YouTubeCipherParameters YouTubeSignatureCipher An utility class that helps with decoding YouTube video signatures. Structs CipherOperationDescriptor Enums CipherOperationKind"
  },
  "api/Strade.Voice.Providers.YouTube.Cipher.YouTubeCipherCache.html": {
    "href": "api/Strade.Voice.Providers.YouTube.Cipher.YouTubeCipherCache.html",
    "title": "Class YouTubeCipherCache | Strade Developer Documentation",
    "keywords": "Class YouTubeCipherCache Inheritance Object YouTubeCipherCache Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Providers.YouTube.Cipher Assembly : Strade.Voice.dll Syntax public static class YouTubeCipherCache Methods | Improve this Doc View Source GetAssetId(Uri) Declaration public static string GetAssetId(Uri playerAssetUri) Parameters Type Name Description Uri playerAssetUri Returns Type Description String | Improve this Doc View Source GetCipherOperationsAsync(HttpClient, Uri, CancellationToken) Declaration public static ValueTask<IReadOnlyList<CipherOperationDescriptor>> GetCipherOperationsAsync(HttpClient httpClient, Uri assetUri, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description HttpClient httpClient Uri assetUri CancellationToken cancellationToken Returns Type Description ValueTask < IReadOnlyList < CipherOperationDescriptor >>"
  },
  "api/Strade.Voice.Providers.YouTube.Cipher.YouTubeCipherParameters.html": {
    "href": "api/Strade.Voice.Providers.YouTube.Cipher.YouTubeCipherParameters.html",
    "title": "Class YouTubeCipherParameters | Strade Developer Documentation",
    "keywords": "Class YouTubeCipherParameters Inheritance Object YouTubeCipherParameters Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Providers.YouTube.Cipher Assembly : Strade.Voice.dll Syntax public sealed class YouTubeCipherParameters Constructors | Improve this Doc View Source YouTubeCipherParameters(Uri, String, String) Declaration public YouTubeCipherParameters(Uri uri, string signature, string signatureParameter) Parameters Type Name Description Uri uri String signature String signatureParameter Properties | Improve this Doc View Source Signature Declaration public string Signature { get; } Property Value Type Description String | Improve this Doc View Source SignatureParameter Declaration public string SignatureParameter { get; } Property Value Type Description String | Improve this Doc View Source Uri Declaration public Uri Uri { get; } Property Value Type Description Uri"
  },
  "api/Strade.Voice.Providers.YouTube.Cipher.YouTubeSignatureCipher.html": {
    "href": "api/Strade.Voice.Providers.YouTube.Cipher.YouTubeSignatureCipher.html",
    "title": "Class YouTubeSignatureCipher | Strade Developer Documentation",
    "keywords": "Class YouTubeSignatureCipher An utility class that helps with decoding YouTube video signatures. Inheritance Object YouTubeSignatureCipher Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Providers.YouTube.Cipher Assembly : Strade.Voice.dll Syntax public static class YouTubeSignatureCipher Methods | Improve this Doc View Source Apply(String, IEnumerable<CipherOperationDescriptor>) Applies the specified cipherOperations on the specified text . Declaration public static string Apply(string text, IEnumerable<CipherOperationDescriptor> cipherOperations) Parameters Type Name Description String text the text to apply the cipher operations on. IEnumerable < CipherOperationDescriptor > cipherOperations a list of cipher operations. Returns Type Description String the decoded string. Exceptions Type Condition ArgumentNullException thrown if the specified text is null or empty. ArgumentNullException thrown if the specified cipherOperations enumerable is null . | Improve this Doc View Source DecipherUrlAsync(HttpClient, Uri, YouTubeCipherParameters, CancellationToken) Deciphers the a ciphered URI from the specified cipherParameters . Declaration public static Task<Uri> DecipherUrlAsync(HttpClient httpClient, Uri playerAssetUri, YouTubeCipherParameters cipherParameters, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description HttpClient httpClient the HTTP client. Uri playerAssetUri the player asset URI. YouTubeCipherParameters cipherParameters the cipher parameters. CancellationToken cancellationToken Returns Type Description Task < Uri > a task that represents the asynchronous operation. The task result is the decipher URI. Exceptions Type Condition ArgumentNullException thrown if the specified playerAssetUri is null . ArgumentNullException thrown if the specified cipherParameters is null . | Improve this Doc View Source ParseOperations(String) Parses a list of CipherOperationDescriptor structs from the specified content . Declaration public static IEnumerable<CipherOperationDescriptor> ParseOperations(string content) Parameters Type Name Description String content the JavaScript function content. Returns Type Description IEnumerable < CipherOperationDescriptor > a list of CipherOperationDescriptor structs parsed from the specified content . Exceptions Type Condition ArgumentNullException thrown if the specified content is null ."
  },
  "api/Strade.Voice.Providers.YouTube.html": {
    "href": "api/Strade.Voice.Providers.YouTube.html",
    "title": "Namespace Strade.Voice.Providers.YouTube | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Providers.YouTube Classes YouTubeAudioTrackProvider An IAudioTrackProvider used to load and search YouTube tracks or playlists. YouTubeStreamInformation A structure that contains information about a YouTube stream. YouTubeUtility An utility class used to build URIs. Enums YouTubeAdaptiveStreamType A set of different adaptive stream types."
  },
  "api/Strade.Voice.Providers.YouTube.Metadata.EmbedPageMetadataProvider.html": {
    "href": "api/Strade.Voice.Providers.YouTube.Metadata.EmbedPageMetadataProvider.html",
    "title": "Class EmbedPageMetadataProvider | Strade Developer Documentation",
    "keywords": "Class EmbedPageMetadataProvider Inheritance Object EmbedPageMetadataProvider Implements IYouTubeMetadataProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Providers.YouTube.Metadata Assembly : Strade.Voice.dll Syntax public sealed class EmbedPageMetadataProvider : IYouTubeMetadataProvider Properties | Improve this Doc View Source Instance Gets a shared instance of the EmbedPageMetadataProvider class. Declaration public static EmbedPageMetadataProvider Instance { get; } Property Value Type Description EmbedPageMetadataProvider a shared instance of the EmbedPageMetadataProvider class. Methods | Improve this Doc View Source ProvideVideoMetadataAsync(HttpClient, String, Boolean, Boolean, CancellationToken) Declaration public Task<YouTubeMetadataContext?> ProvideVideoMetadataAsync(HttpClient httpClient, string videoIdentifier, bool resolveAssetUri = false, bool resolvePlayerResponse = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description HttpClient httpClient String videoIdentifier Boolean resolveAssetUri Boolean resolvePlayerResponse CancellationToken cancellationToken Returns Type Description Task < Nullable < YouTubeMetadataContext >> Implements IYouTubeMetadataProvider"
  },
  "api/Strade.Voice.Providers.YouTube.Metadata.html": {
    "href": "api/Strade.Voice.Providers.YouTube.Metadata.html",
    "title": "Namespace Strade.Voice.Providers.YouTube.Metadata | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Providers.YouTube.Metadata Classes EmbedPageMetadataProvider WatchPageMetadataProvider Structs YouTubeMetadataContext Interfaces IYouTubeMetadataProvider Enums YouTubeMetadataStatus"
  },
  "api/Strade.Voice.Providers.YouTube.Metadata.IYouTubeMetadataProvider.html": {
    "href": "api/Strade.Voice.Providers.YouTube.Metadata.IYouTubeMetadataProvider.html",
    "title": "Interface IYouTubeMetadataProvider | Strade Developer Documentation",
    "keywords": "Interface IYouTubeMetadataProvider Namespace : Strade.Voice.Providers.YouTube.Metadata Assembly : Strade.Voice.dll Syntax public interface IYouTubeMetadataProvider Methods | Improve this Doc View Source ProvideVideoMetadataAsync(HttpClient, String, Boolean, Boolean, CancellationToken) Declaration Task<YouTubeMetadataContext?> ProvideVideoMetadataAsync(HttpClient httpClient, string videoIdentifier, bool resolveAssetUri = false, bool resolvePlayerResponse = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description HttpClient httpClient String videoIdentifier Boolean resolveAssetUri Boolean resolvePlayerResponse CancellationToken cancellationToken Returns Type Description Task < Nullable < YouTubeMetadataContext >>"
  },
  "api/Strade.Voice.Providers.YouTube.Metadata.WatchPageMetadataProvider.html": {
    "href": "api/Strade.Voice.Providers.YouTube.Metadata.WatchPageMetadataProvider.html",
    "title": "Class WatchPageMetadataProvider | Strade Developer Documentation",
    "keywords": "Class WatchPageMetadataProvider Inheritance Object WatchPageMetadataProvider Implements IYouTubeMetadataProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Providers.YouTube.Metadata Assembly : Strade.Voice.dll Syntax public sealed class WatchPageMetadataProvider : IYouTubeMetadataProvider Properties | Improve this Doc View Source Instance Gets a shared instance of the WatchPageMetadataProvider class. Declaration public static WatchPageMetadataProvider Instance { get; } Property Value Type Description WatchPageMetadataProvider a shared instance of the WatchPageMetadataProvider class. Methods | Improve this Doc View Source ProvideVideoMetadataAsync(HttpClient, String, Boolean, Boolean, CancellationToken) Declaration public Task<YouTubeMetadataContext?> ProvideVideoMetadataAsync(HttpClient httpClient, string videoIdentifier, bool resolveAssetUri = false, bool resolvePlayerResponse = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description HttpClient httpClient String videoIdentifier Boolean resolveAssetUri Boolean resolvePlayerResponse CancellationToken cancellationToken Returns Type Description Task < Nullable < YouTubeMetadataContext >> Implements IYouTubeMetadataProvider"
  },
  "api/Strade.Voice.Providers.YouTube.Metadata.YouTubeMetadataContext.html": {
    "href": "api/Strade.Voice.Providers.YouTube.Metadata.YouTubeMetadataContext.html",
    "title": "Struct YouTubeMetadataContext | Strade Developer Documentation",
    "keywords": "Struct YouTubeMetadataContext Implements IDisposable Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Voice.Providers.YouTube.Metadata Assembly : Strade.Voice.dll Syntax public struct YouTubeMetadataContext : IDisposable Constructors | Improve this Doc View Source YouTubeMetadataContext(JsonDocument, Uri) Declaration public YouTubeMetadataContext(JsonDocument playerResponse, Uri playerAssetUri) Parameters Type Name Description JsonDocument playerResponse Uri playerAssetUri Properties | Improve this Doc View Source PlayerAssetUri Declaration public Uri PlayerAssetUri { get; } Property Value Type Description Uri | Improve this Doc View Source PlayerResponse Declaration public JsonDocument PlayerResponse { get; } Property Value Type Description JsonDocument | Improve this Doc View Source Status Declaration public YouTubeMetadataStatus Status { get; } Property Value Type Description YouTubeMetadataStatus Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements System.IDisposable"
  },
  "api/Strade.Voice.Providers.YouTube.Metadata.YouTubeMetadataStatus.html": {
    "href": "api/Strade.Voice.Providers.YouTube.Metadata.YouTubeMetadataStatus.html",
    "title": "Enum YouTubeMetadataStatus | Strade Developer Documentation",
    "keywords": "Enum YouTubeMetadataStatus Namespace : Strade.Voice.Providers.YouTube.Metadata Assembly : Strade.Voice.dll Syntax public enum YouTubeMetadataStatus : byte Fields Name Description Playable Unknown Unplayable Unspecified Extension Methods EnumExtensions.GetName<YouTubeMetadataStatus>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Voice.Providers.YouTube.YouTubeAdaptiveStreamType.html": {
    "href": "api/Strade.Voice.Providers.YouTube.YouTubeAdaptiveStreamType.html",
    "title": "Enum YouTubeAdaptiveStreamType | Strade Developer Documentation",
    "keywords": "Enum YouTubeAdaptiveStreamType A set of different adaptive stream types. Namespace : Strade.Voice.Providers.YouTube Assembly : Strade.Voice.dll Syntax public enum YouTubeAdaptiveStreamType : byte Fields Name Description AudioOnly Denotes that the stream only contains audio. VideoOnly Denotes that the stream only contains video. Extension Methods EnumExtensions.GetName<YouTubeAdaptiveStreamType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Voice.Providers.YouTube.YouTubeAudioTrackProvider.html": {
    "href": "api/Strade.Voice.Providers.YouTube.YouTubeAudioTrackProvider.html",
    "title": "Class YouTubeAudioTrackProvider | Strade Developer Documentation",
    "keywords": "Class YouTubeAudioTrackProvider An IAudioTrackProvider used to load and search YouTube tracks or playlists. Inheritance Object BaseAudioTrackProvider BaseHttpAudioTrackProvider YouTubeAudioTrackProvider Implements IAudioTrackProvider IDisposable Inherited Members BaseHttpAudioTrackProvider.HttpClient BaseHttpAudioTrackProvider.Dispose(Boolean) BaseAudioTrackProvider.Dispose() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Providers.YouTube Assembly : Strade.Voice.dll Syntax public class YouTubeAudioTrackProvider : BaseHttpAudioTrackProvider, IAudioTrackProvider, IDisposable Constructors | Improve this Doc View Source YouTubeAudioTrackProvider() Initializes a new instance of the YouTubeAudioTrackProvider class. Declaration public YouTubeAudioTrackProvider() | Improve this Doc View Source YouTubeAudioTrackProvider(IEnumerable<IYouTubeMetadataProvider>) Initializes a new instance of the YouTubeAudioTrackProvider class. Declaration public YouTubeAudioTrackProvider(IEnumerable<IYouTubeMetadataProvider> metadataProviders) Parameters Type Name Description IEnumerable < IYouTubeMetadataProvider > metadataProviders Fields | Improve this Doc View Source BaseAddress Gets the base address. Declaration public static readonly Uri BaseAddress Field Value Type Description Uri Properties | Improve this Doc View Source MetadataProviders Declaration public IEnumerable<IYouTubeMetadataProvider> MetadataProviders { get; } Property Value Type Description IEnumerable < IYouTubeMetadataProvider > | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseAudioTrackProvider.Name Methods | Improve this Doc View Source GetStreams(JsonDocument) Gets all streams for the specified playerResponse . Declaration protected static IEnumerable<YouTubeStreamInformation> GetStreams(JsonDocument playerResponse) Parameters Type Name Description JsonDocument playerResponse the player response information from the metadata. Returns Type Description IEnumerable < YouTubeStreamInformation > an enumerable that yields through all streams fetched. Exceptions Type Condition ArgumentNullException thrown if the specified playerResponse is null . | Improve this Doc View Source LoadAsync(String, AudioTrackProviderOptions, CancellationToken) Declaration public override Task<IAudioTrack> LoadAsync(string query, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query AudioTrackProviderOptions options CancellationToken cancellationToken Returns Type Description Task < IAudioTrack > Overrides BaseAudioTrackProvider.LoadAsync(String, AudioTrackProviderOptions, CancellationToken) | Improve this Doc View Source LoadPlaylistAsync(String, Int32, AudioTrackProviderOptions, CancellationToken) Declaration public override Task<Playlist> LoadPlaylistAsync(string query, int count, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query Int32 count AudioTrackProviderOptions options CancellationToken cancellationToken Returns Type Description Task < Playlist > Overrides BaseAudioTrackProvider.LoadPlaylistAsync(String, Int32, AudioTrackProviderOptions, CancellationToken) | Improve this Doc View Source ResolveMetadataAsync(String, Boolean, Boolean, Boolean, CancellationToken) Declaration protected Task<YouTubeMetadataContext> ResolveMetadataAsync(string videoIdentifier, bool resolveAssetUri = false, bool resolvePlayerResponse = false, bool allowPartial = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String videoIdentifier Boolean resolveAssetUri Boolean resolvePlayerResponse Boolean allowPartial CancellationToken cancellationToken Returns Type Description Task < YouTubeMetadataContext > | Improve this Doc View Source SearchAsync(String, Int32, AudioTrackProviderOptions, CancellationToken) Declaration public override Task<IEnumerable<IAudioTrack>> SearchAsync(string query, int count, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query Int32 count AudioTrackProviderOptions options CancellationToken cancellationToken Returns Type Description Task < IEnumerable < IAudioTrack >> Overrides BaseAudioTrackProvider.SearchAsync(String, Int32, AudioTrackProviderOptions, CancellationToken) | Improve this Doc View Source SelectBestStream(IEnumerable<YouTubeStreamInformation>) Selects the best stream from the specified streams enumerable. Declaration protected virtual YouTubeStreamInformation SelectBestStream(IEnumerable<YouTubeStreamInformation> streams) Parameters Type Name Description IEnumerable < YouTubeStreamInformation > streams the streams to select the best from. Returns Type Description YouTubeStreamInformation the best stream from the specified streams enumerable. Exceptions Type Condition ArgumentNullException thrown if the specified streams enumerable is null . Implements IAudioTrackProvider System.IDisposable"
  },
  "api/Strade.Voice.Providers.YouTube.YouTubeStreamInformation.html": {
    "href": "api/Strade.Voice.Providers.YouTube.YouTubeStreamInformation.html",
    "title": "Class YouTubeStreamInformation | Strade Developer Documentation",
    "keywords": "Class YouTubeStreamInformation A structure that contains information about a YouTube stream. Inheritance Object YouTubeStreamInformation Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Providers.YouTube Assembly : Strade.Voice.dll Syntax public class YouTubeStreamInformation Constructors | Improve this Doc View Source YouTubeStreamInformation(YouTubeCipherParameters, String, Nullable<Int64>, YouTubeAdaptiveStreamType, Int32, Int32) Initializes a new instance of the YouTubeStreamInformation class. Declaration public YouTubeStreamInformation(YouTubeCipherParameters cipherParameters, string mimeType, long? contentLength, YouTubeAdaptiveStreamType streamType, int bitrate, int itag) Parameters Type Name Description YouTubeCipherParameters cipherParameters the parameters for the cipher. String mimeType the mime type of the stream. Nullable < Int64 > contentLength the number of total bytes in the stream. YouTubeAdaptiveStreamType streamType the type of the YouTube stream. Int32 bitrate the average bitrate of the stream. Int32 itag Exceptions Type Condition ArgumentNullException thrown if the specified mimeType is null . | Improve this Doc View Source YouTubeStreamInformation(Uri, String, Nullable<Int64>, YouTubeAdaptiveStreamType, Int32, Int32) Initializes a new instance of the YouTubeStreamInformation class. Declaration public YouTubeStreamInformation(Uri uri, string mimeType, long? contentLength, YouTubeAdaptiveStreamType streamType, int bitrate, int itag) Parameters Type Name Description Uri uri the URI to the stream. String mimeType the mime type of the stream. Nullable < Int64 > contentLength the number of total bytes in the stream. YouTubeAdaptiveStreamType streamType the type of the YouTube stream. Int32 bitrate the average bitrate of the stream. Int32 itag Exceptions Type Condition ArgumentNullException thrown if the specified mimeType is null . Properties | Improve this Doc View Source Bitrate Gets the average bitrate of the stream. Declaration public int Bitrate { get; } Property Value Type Description Int32 the average bitrate of the stream. | Improve this Doc View Source CipherParameters Declaration public YouTubeCipherParameters CipherParameters { get; } Property Value Type Description YouTubeCipherParameters | Improve this Doc View Source ContentLength Gets the number of total bytes in the stream. Declaration public long? ContentLength { get; } Property Value Type Description Nullable < Int64 > the number of total bytes in the stream. | Improve this Doc View Source ITag Declaration public int ITag { get; } Property Value Type Description Int32 | Improve this Doc View Source MimeType Gets the mime type of the stream. Declaration public string MimeType { get; } Property Value Type Description String the mime type of the stream. | Improve this Doc View Source StreamType Gets the type of the YouTube stream. Declaration public YouTubeAdaptiveStreamType StreamType { get; } Property Value Type Description YouTubeAdaptiveStreamType the type of the YouTube stream. | Improve this Doc View Source Uri Gets the URI for the stream (if null then the URI must be deciphered). Declaration public Uri Uri { get; } Property Value Type Description Uri the URI for the stream (if null then the URI must be deciphered)."
  },
  "api/Strade.Voice.Providers.YouTube.YouTubeUtility.html": {
    "href": "api/Strade.Voice.Providers.YouTube.YouTubeUtility.html",
    "title": "Class YouTubeUtility | Strade Developer Documentation",
    "keywords": "Class YouTubeUtility An utility class used to build URIs. Inheritance Object YouTubeUtility Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Providers.YouTube Assembly : Strade.Voice.dll Syntax public static class YouTubeUtility Methods | Improve this Doc View Source GetPlaylistUri(String, Int32) Gets the playlist URI for the specified playlistId and videoIndex . Declaration public static string GetPlaylistUri(string playlistId, int videoIndex) Parameters Type Name Description String playlistId the playlist identifier. Int32 videoIndex the video offset. Returns Type Description String the playlist URI for the specified playlistId and videoIndex . Exceptions Type Condition ArgumentNullException thrown if the specified playlistId is null . | Improve this Doc View Source GetSearchUri(String, Int32) Gets the AJAX search URI for the specified searchQuery and page . Declaration public static string GetSearchUri(string searchQuery, int page) Parameters Type Name Description String searchQuery the search query. Int32 page the page index for the search. Returns Type Description String the AJAX search URI for the specified searchQuery and page . Exceptions Type Condition ArgumentException thrown if the specified searchQuery is null or empty. | Improve this Doc View Source GetThumbnailUri(String) Gets the thumbnail for the specified videoIdentifier . Declaration public static string GetThumbnailUri(string videoIdentifier) Parameters Type Name Description String videoIdentifier the YouTube video identifier. Returns Type Description String the thumbnail for the specified videoIdentifier . Exceptions Type Condition ArgumentException thrown if the specified videoIdentifier is null . | Improve this Doc View Source GetUserUri(String) Gets the user URI for the specified username . Declaration public static string GetUserUri(string username) Parameters Type Name Description String username the user's username. Returns Type Description String the user URI for the specified username . Exceptions Type Condition ArgumentException thrown if the specified username is null . | Improve this Doc View Source GetVideoUri(String) Gets the video URI for the specified videoIdentifier . Declaration public static string GetVideoUri(string videoIdentifier) Parameters Type Name Description String videoIdentifier the YouTube video identifier. Returns Type Description String the video URI for the specified videoIdentifier . Exceptions Type Condition ArgumentException thrown if the specified videoIdentifier is null . | Improve this Doc View Source TryExtractPlaylistIdentifier(Uri, out String) Tries to extract the playlist identifier from the specified uri . Declaration public static bool TryExtractPlaylistIdentifier(Uri uri, out string playlistIdentifier) Parameters Type Name Description Uri uri the URI to try to extract the playlist identifier from. String playlistIdentifier (out) the playlist identifier. Returns Type Description Boolean a value indicating whether the playlist identifier could be extracted from the specified uri . | Improve this Doc View Source TryExtractVideoIdentifier(Uri, out String) Tries to extract the video identifier from the specified uri . Declaration public static bool TryExtractVideoIdentifier(Uri uri, out string videoIdentifier) Parameters Type Name Description Uri uri the URI to try to extract the video identifier from. String videoIdentifier (out) the video identifier. Returns Type Description Boolean a value indicating whether the video identifier could be extracted from the specified uri ."
  },
  "api/Strade.Voice.Queue.html": {
    "href": "api/Strade.Voice.Queue.html",
    "title": "Namespace Strade.Voice.Queue | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Queue Classes TrackQueue A thread-safe implementation of a track queue with high-level features like shuffling or distinct. TrackQueueItem The base implementation of the ITrackQueueItem interface. Interfaces ITrackQueue Represents the base abstractions for a track queue. ITrackQueueItem Represents an item in the track queue."
  },
  "api/Strade.Voice.Queue.ITrackQueue.html": {
    "href": "api/Strade.Voice.Queue.ITrackQueue.html",
    "title": "Interface ITrackQueue | Strade Developer Documentation",
    "keywords": "Interface ITrackQueue Represents the base abstractions for a track queue. Namespace : Strade.Voice.Queue Assembly : Strade.Voice.Abstractions.dll Syntax public interface ITrackQueue Properties | Improve this Doc View Source Count Gets the number of items enqueued in the track queue. Declaration int Count { get; } Property Value Type Description Int32 the number of items enqueued in the track queue. Methods | Improve this Doc View Source Clear() Clears the track queue. Declaration void Clear() | Improve this Doc View Source Enqueue(ITrackQueueItem) Enqueues the specified item to the queue. Declaration int Enqueue(ITrackQueueItem item) Parameters Type Name Description ITrackQueueItem item the item to enqueue. Returns Type Description Int32 the position. Exceptions Type Condition ArgumentNullException thrown if the specified item is null . | Improve this Doc View Source TryDequeue(out ITrackQueueItem) Tries to dequeue a track from the queue. Declaration bool TryDequeue(out ITrackQueueItem item) Parameters Type Name Description ITrackQueueItem item ( out ) the item dequeued. Returns Type Description Boolean a value indicating whether a track was dequeued."
  },
  "api/Strade.Voice.Queue.ITrackQueueItem.html": {
    "href": "api/Strade.Voice.Queue.ITrackQueueItem.html",
    "title": "Interface ITrackQueueItem | Strade Developer Documentation",
    "keywords": "Interface ITrackQueueItem Represents an item in the track queue. Namespace : Strade.Voice.Queue Assembly : Strade.Voice.Abstractions.dll Syntax public interface ITrackQueueItem Properties | Improve this Doc View Source Track Gets the enqueued track. Declaration IAudioTrack Track { get; } Property Value Type Description IAudioTrack the enqueued track."
  },
  "api/Strade.Voice.Queue.TrackQueue.html": {
    "href": "api/Strade.Voice.Queue.TrackQueue.html",
    "title": "Class TrackQueue | Strade Developer Documentation",
    "keywords": "Class TrackQueue A thread-safe implementation of a track queue with high-level features like shuffling or distinct. Inheritance Object TrackQueue Implements ITrackQueue IList < ITrackQueueItem > ICollection < ITrackQueueItem > IReadOnlyList < ITrackQueueItem > IReadOnlyCollection < ITrackQueueItem > IEnumerable < ITrackQueueItem > IEnumerable ICloneable < TrackQueue > ICloneable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Queue Assembly : Strade.Voice.Abstractions.dll Syntax public class TrackQueue : ITrackQueue, IList<ITrackQueueItem>, ICollection<ITrackQueueItem>, IReadOnlyList<ITrackQueueItem>, IReadOnlyCollection<ITrackQueueItem>, IEnumerable<ITrackQueueItem>, IEnumerable, ICloneable<TrackQueue>, ICloneable Constructors | Improve this Doc View Source TrackQueue(TrackQueue) Initializes a new instance of the TrackQueue class with copying the queue and history contents from the specified queue . Declaration public TrackQueue(TrackQueue queue) Parameters Type Name Description TrackQueue queue the queue to copy the history and queue contents from. Exceptions Type Condition ArgumentNullException thrown if the specified queue is null . | Improve this Doc View Source TrackQueue(Int32, Int32) Initializes a new instance of the TrackQueue class. Declaration public TrackQueue(int initialCapacity = 5, int historyCapacity = 8) Parameters Type Name Description Int32 initialCapacity the initial capacity. Int32 historyCapacity the capacity of the history; or 0 to disable the queue history. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified initial capacity ( initialCapacity ) is negative. ArgumentOutOfRangeException thrown if the specified history capacity ( historyCapacity ) is negative. Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source HasHistory Gets a value indicating whether the track queue remembers past tracks. Declaration public bool HasHistory { get; } Property Value Type Description Boolean a value indicating whether the track queue remembers past tracks. | Improve this Doc View Source History Gets a read-only list containing the tracks dequeued in the past. Declaration public IReadOnlyList<ITrackQueueItem> History { get; } Property Value Type Description IReadOnlyList < ITrackQueueItem > a read-only list containing the tracks dequeued in the past. Remarks If the queue does not remember any past tracks an empty array is returned. | Improve this Doc View Source HistoryCapacity Gets the capacity if the history. Declaration public int HistoryCapacity { get; } Property Value Type Description Int32 the capacity if the history. | Improve this Doc View Source HistorySize Gets the number of elements stored in the track history. Declaration public int HistorySize { get; } Property Value Type Description Int32 the number of elements stored in the track history. Remarks If the queue does not remember any past tracks zero ( 0 ) is returned. | Improve this Doc View Source IsEmpty Gets a value indicating whether the track queue is empty. Declaration public bool IsEmpty { get; } Property Value Type Description Boolean a value indicating whether the track queue is empty. | Improve this Doc View Source Item[Int32] Declaration public ITrackQueueItem this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description ITrackQueueItem Methods | Improve this Doc View Source Clear() Clears the track queue. Declaration public int Clear() Returns Type Description Int32 the number of tracks cleared. | Improve this Doc View Source ClearHistory() Clears the track history. Declaration public int ClearHistory() Returns Type Description Int32 the number of tracks cleared from the history. | Improve this Doc View Source Clone() Declaration public TrackQueue Clone() Returns Type Description TrackQueue | Improve this Doc View Source Contains(ITrackQueueItem) Declaration public bool Contains(ITrackQueueItem item) Parameters Type Name Description ITrackQueueItem item Returns Type Description Boolean | Improve this Doc View Source CopyTo(ITrackQueueItem[]) Copies the elements in the track queue to the specified array . Declaration public void CopyTo(ITrackQueueItem[] array) Parameters Type Name Description ITrackQueueItem [] array the array to copy to. Exceptions Type Condition ArgumentNullException thrown if the specified array is null . ArgumentException thrown if the specified array has not enough space to the store the queue items. | Improve this Doc View Source CopyTo(ITrackQueueItem[], Int32) Declaration public void CopyTo(ITrackQueueItem[] array, int arrayIndex) Parameters Type Name Description ITrackQueueItem [] array Int32 arrayIndex | Improve this Doc View Source Dequeue() Dequeues a track item from the queue. Declaration public ITrackQueueItem Dequeue() Returns Type Description ITrackQueueItem the track item dequeued from the queue. | Improve this Doc View Source Dequeue(Boolean) Dequeues a track item from the queue. Declaration public ITrackQueueItem Dequeue(bool shuffle) Parameters Type Name Description Boolean shuffle a value indicating whether to shuffle tracks, if true a a random track is dequeued from the queue, if false the first track in the queue is dequeued. Returns Type Description ITrackQueueItem the track item dequeued from the queue. | Improve this Doc View Source Distinct() Purges all duplicate elements in the queue. Declaration public int Distinct() Returns Type Description Int32 the number of elements removed. | Improve this Doc View Source Enqueue(ITrackQueueItem) Declaration public int Enqueue(ITrackQueueItem item) Parameters Type Name Description ITrackQueueItem item Returns Type Description Int32 | Improve this Doc View Source EnqueueRange(ITrackQueueItem[]) Adds the items of the specified array ( items ) to the track queue. Declaration public void EnqueueRange(params ITrackQueueItem[] items) Parameters Type Name Description ITrackQueueItem [] items an enumerable that yields through the items to add. Exceptions Type Condition ArgumentNullException thrown if the specified array ( items ) is null . InvalidOperationException thrown if an item in the specified array ( items ) is null . | Improve this Doc View Source EnqueueRange(IEnumerable<ITrackQueueItem>) Adds the enumerable of the specified array ( items ) to the track queue. Declaration public void EnqueueRange(IEnumerable<ITrackQueueItem> items) Parameters Type Name Description IEnumerable < ITrackQueueItem > items an enumerable that yields through the items to add. Exceptions Type Condition ArgumentNullException thrown if the specified array ( items ) is null . InvalidOperationException thrown if an item in the specified enumerable ( items ) is null . | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<ITrackQueueItem> GetEnumerator() Returns Type Description IEnumerator < ITrackQueueItem > | Improve this Doc View Source IndexOf(ITrackQueueItem) Declaration public int IndexOf(ITrackQueueItem item) Parameters Type Name Description ITrackQueueItem item Returns Type Description Int32 | Improve this Doc View Source Insert(Int32, ITrackQueueItem) Declaration public void Insert(int index, ITrackQueueItem item) Parameters Type Name Description Int32 index ITrackQueueItem item | Improve this Doc View Source InsertRange(Int32, ITrackQueueItem[]) Inserts the items of the specified array ( items ) into the track queue at the specified index . Declaration public void InsertRange(int index, params ITrackQueueItem[] items) Parameters Type Name Description Int32 index the zero-based index at which the new items should be inserted. ITrackQueueItem [] items an enumerable that yields through the items to add. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified index is less than 0 (zero). ArgumentOutOfRangeException thrown if the specified index is greater than Count . ArgumentNullException thrown if the specified array ( items ) is null . InvalidOperationException thrown if an item in the specified array ( items ) is null . | Improve this Doc View Source InsertRange(Int32, IEnumerable<ITrackQueueItem>) Inserts the items of the specified enumerable ( items ) into the track queue at the specified index . Declaration public void InsertRange(int index, IEnumerable<ITrackQueueItem> items) Parameters Type Name Description Int32 index the zero-based index at which the new items should be inserted. IEnumerable < ITrackQueueItem > items an enumerable that yields through the items to add. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified index is less than 0 (zero). ArgumentOutOfRangeException thrown if the specified index is greater than Count . ArgumentNullException thrown if the specified enumerable ( items ) is null . InvalidOperationException thrown if an item in the specified enumerable ( items ) is null . | Improve this Doc View Source Remove(ITrackQueueItem) Declaration public bool Remove(ITrackQueueItem item) Parameters Type Name Description ITrackQueueItem item Returns Type Description Boolean | Improve this Doc View Source RemoveAll(Predicate<ITrackQueueItem>) Removes all elements in the queue that match the specified predicate . Declaration public int RemoveAll(Predicate<ITrackQueueItem> predicate) Parameters Type Name Description Predicate < ITrackQueueItem > predicate the predicate. Returns Type Description Int32 the number of total items removed from the queue. Exceptions Type Condition ArgumentNullException thrown if the specified predicate is null . | Improve this Doc View Source RemoveAt(Int32) Declaration public void RemoveAt(int index) Parameters Type Name Description Int32 index | Improve this Doc View Source RemoveRange(Int32, Int32) Removes a range of items from the track queue. Declaration public void RemoveRange(int index, int count) Parameters Type Name Description Int32 index the zero-based starting index of the range of items to remove. Int32 count the number of items to remove. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified index is less than 0 (zero). ArgumentOutOfRangeException thrown if the specified count is less than 0 (zero). ArgumentException thrown if the specified index and the specified count do not denote a valid range of items in the queue. | Improve this Doc View Source Shuffle() Shuffles the whole queue. Declaration public void Shuffle() | Improve this Doc View Source Shuffle(Int32, Int32) Shuffles the queue the specified range in the queue. Declaration public void Shuffle(int index, int count) Parameters Type Name Description Int32 index the index to start shuffling items at. Int32 count the number of items to shuffle. Exceptions Type Condition ArgumentOutOfRangeException thrown if the specified index and count is out of bounds. ArgumentOutOfRangeException thrown if the specified index is less than 0 (zero). ArgumentOutOfRangeException thrown if the specified count is less than 0 (zero). ArgumentException thrown if the specified index and the specified count do not denote a valid range of items in the queue. | Improve this Doc View Source TryDequeue(out ITrackQueueItem) Tries to dequeue a track from the queue. Declaration public bool TryDequeue(out ITrackQueueItem item) Parameters Type Name Description ITrackQueueItem item ( out ) the item dequeued. Returns Type Description Boolean a value indicating whether a track was dequeued. | Improve this Doc View Source TryDequeue(Boolean, out ITrackQueueItem) Tries to dequeue a track from the queue. Declaration public bool TryDequeue(bool shuffle, out ITrackQueueItem item) Parameters Type Name Description Boolean shuffle a value indicating whether to shuffle tracks, if true a a random track is dequeued from the queue, if false the first track in the queue is dequeued. ITrackQueueItem item ( out ) the item dequeued. Returns Type Description Boolean a value indicating whether a track was dequeued. Explicit Interface Implementations | Improve this Doc View Source ITrackQueue.Clear() Declaration void ITrackQueue.Clear() | Improve this Doc View Source ICollection<ITrackQueueItem>.Add(ITrackQueueItem) Declaration void ICollection<ITrackQueueItem>.Add(ITrackQueueItem item) Parameters Type Name Description ITrackQueueItem item | Improve this Doc View Source ICollection<ITrackQueueItem>.Clear() Declaration void ICollection<ITrackQueueItem>.Clear() | Improve this Doc View Source ICollection<ITrackQueueItem>.IsReadOnly Declaration bool ICollection<ITrackQueueItem>.IsReadOnly { get; } Returns Type Description Boolean | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator | Improve this Doc View Source ICloneable.Clone() Declaration object ICloneable.Clone() Returns Type Description Object Implements ITrackQueue System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable ICloneable<TSelf> System.ICloneable"
  },
  "api/Strade.Voice.Queue.TrackQueueItem.html": {
    "href": "api/Strade.Voice.Queue.TrackQueueItem.html",
    "title": "Class TrackQueueItem | Strade Developer Documentation",
    "keywords": "Class TrackQueueItem The base implementation of the ITrackQueueItem interface. Inheritance Object TrackQueueItem Implements ITrackQueueItem Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Queue Assembly : Strade.Voice.Abstractions.dll Syntax public class TrackQueueItem : ITrackQueueItem Constructors | Improve this Doc View Source TrackQueueItem(IAudioTrack) Initializes a new instance of the TrackQueueItem class. Declaration public TrackQueueItem(IAudioTrack track) Parameters Type Name Description IAudioTrack track the track enqueued. Exceptions Type Condition ArgumentNullException thrown if the specified track is null . Properties | Improve this Doc View Source Track Declaration public IAudioTrack Track { get; } Property Value Type Description IAudioTrack Implements ITrackQueueItem"
  },
  "api/Strade.Voice.Tracks.AudioTrackInformation.html": {
    "href": "api/Strade.Voice.Tracks.AudioTrackInformation.html",
    "title": "Class AudioTrackInformation | Strade Developer Documentation",
    "keywords": "Class AudioTrackInformation A structure containing information about audio tracks. Inheritance Object AudioTrackInformation Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Strade.Voice.Tracks Assembly : Strade.Voice.Abstractions.dll Syntax public sealed class AudioTrackInformation Constructors | Improve this Doc View Source AudioTrackInformation(String, String, MediaAuthorInformation, Nullable<TimeSpan>, String, Boolean) Initializes a new instance of the AudioTrackInformation class. Declaration public AudioTrackInformation(string sourceUri, string title, MediaAuthorInformation author = null, TimeSpan? duration = default(TimeSpan? ), string thumbnailUri = null, bool live = false) Parameters Type Name Description String sourceUri the source URI of the track. String title the title of the track. MediaAuthorInformation author the author of the track. Nullable < TimeSpan > duration the track duration, if present. String thumbnailUri the thumbnail URI of the track, if present. Boolean live a value indicating whether the track is a live stream. Exceptions Type Condition ArgumentNullException thrown if the specified sourceUri is null . ArgumentNullException thrown if the specified title is null . Properties | Improve this Doc View Source Author Gets the author of the track. Declaration public MediaAuthorInformation Author { get; } Property Value Type Description MediaAuthorInformation the author of the track. | Improve this Doc View Source Duration Gets the track duration, if present. Declaration public TimeSpan? Duration { get; } Property Value Type Description Nullable < TimeSpan > the track duration, if present. | Improve this Doc View Source IsLive Gets a value indicating whether the track is a live stream. Declaration public bool IsLive { get; } Property Value Type Description Boolean a value indicating whether the track is a live stream. | Improve this Doc View Source SourceUri Gets the source URI of the track. Declaration public string SourceUri { get; } Property Value Type Description String the source URI of the track. | Improve this Doc View Source ThumbnailUri Gets the thumbnail URI of the track, if present. Declaration public string ThumbnailUri { get; } Property Value Type Description String the thumbnail URI of the track, if present. | Improve this Doc View Source Title Gets the title of the track. Declaration public string Title { get; } Property Value Type Description String the title of the track. Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Strade.Voice.Tracks.AudioTrackProviderOption.html": {
    "href": "api/Strade.Voice.Tracks.AudioTrackProviderOption.html",
    "title": "Enum AudioTrackProviderOption | Strade Developer Documentation",
    "keywords": "Enum AudioTrackProviderOption A set of audio track provider options. Namespace : Strade.Voice.Tracks Assembly : Strade.Voice.Abstractions.dll Syntax [Flags] public enum AudioTrackProviderOption : byte Fields Name Description AllowPlaylists Denotes that playlists are allowed to be returned. AllowSearch Denotes that searching is allowed. None Denotes that no options are specified. Unrestricted Denotes that restricted content is allowed to be returned. Extension Methods EnumExtensions.GetName<AudioTrackProviderOption>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Voice.Tracks.AudioTrackProviderOptions.html": {
    "href": "api/Strade.Voice.Tracks.AudioTrackProviderOptions.html",
    "title": "Struct AudioTrackProviderOptions | Strade Developer Documentation",
    "keywords": "Struct AudioTrackProviderOptions Represents audio track provider options. Implements IEquatable < AudioTrackProviderOptions > Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.Voice.Tracks Assembly : Strade.Voice.Abstractions.dll Syntax public struct AudioTrackProviderOptions : IEquatable<AudioTrackProviderOptions> Constructors | Improve this Doc View Source AudioTrackProviderOptions(AudioTrackProviderOption) Initializes a new instance of the AudioTrackProviderOptions struct. Declaration public AudioTrackProviderOptions(AudioTrackProviderOption flags) Parameters Type Name Description AudioTrackProviderOption flags the audio track provider option flags. | Improve this Doc View Source AudioTrackProviderOptions(Boolean, Boolean, Boolean) Initializes a new instance of the AudioTrackProviderOptions struct. Declaration public AudioTrackProviderOptions(bool allowSearch = false, bool allowPlaylist = false, bool unrestricted = false) Parameters Type Name Description Boolean allowSearch a value indicating whether searching is allowed. Boolean allowPlaylist a value indicating whether playlists are allowed to be returned. Boolean unrestricted a value indicating whether restricted content is allowed to be returned. Properties | Improve this Doc View Source AllowPlaylists Gets a value indicating whether playlists are allowed to be returned. Declaration public bool AllowPlaylists { get; } Property Value Type Description Boolean a value indicating whether playlists are allowed to be returned. Remarks Note this option is only respected when resolving using LoadTrackAsync(String, AudioTrackProviderOptions, CancellationToken) , LoadTrackAsync(String, String, AudioTrackProviderOptions, CancellationToken) , LoadTracksAsync(String, AudioTrackProviderOptions, Int32, CancellationToken) or LoadTracksAsync(String, String, AudioTrackProviderOptions, Int32, CancellationToken) . When explicitly searching for tracks (e.g. using LoadPlaylistAsync(String, Int32, AudioTrackProviderOptions, CancellationToken) then playlists are allowed to be returned. | Improve this Doc View Source AllowSearch Gets a value indicating whether searching is allowed. Declaration public bool AllowSearch { get; } Property Value Type Description Boolean a value indicating whether searching is allowed. Remarks Note this option is only respected when resolving using LoadTrackAsync(String, AudioTrackProviderOptions, CancellationToken) , LoadTrackAsync(String, String, AudioTrackProviderOptions, CancellationToken) , LoadTracksAsync(String, AudioTrackProviderOptions, Int32, CancellationToken) or LoadTracksAsync(String, String, AudioTrackProviderOptions, Int32, CancellationToken) . When explicitly searching for tracks (e.g. using SearchAsync(String, Int32, AudioTrackProviderOptions, CancellationToken) then search results are allowed to be returned. | Improve this Doc View Source IsUnrestricted Gets a value indicating whether restricted content is allowed to be returned. Declaration public bool IsUnrestricted { get; } Property Value Type Description Boolean a value indicating whether restricted content is allowed to be returned. Methods | Improve this Doc View Source Equals(AudioTrackProviderOptions) Declaration public bool Equals(AudioTrackProviderOptions other) Parameters Type Name Description AudioTrackProviderOptions other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(AudioTrackProviderOptions, AudioTrackProviderOptions) Checks the equality of the first audio track providers options ( left ) and the second audio track providers options ( right ). Declaration public static bool operator ==(AudioTrackProviderOptions left, AudioTrackProviderOptions right) Parameters Type Name Description AudioTrackProviderOptions left the first audio track providers options. AudioTrackProviderOptions right the second audio track providers options. Returns Type Description Boolean a value indicating whether the first audio track providers options ( left ) and the second audio track providers options ( right ) are equal to each other. | Improve this Doc View Source Inequality(AudioTrackProviderOptions, AudioTrackProviderOptions) Checks the in-equality of the first audio track providers options ( left ) and the second audio track providers options ( right ). Declaration public static bool operator !=(AudioTrackProviderOptions left, AudioTrackProviderOptions right) Parameters Type Name Description AudioTrackProviderOptions left the first audio track providers options. AudioTrackProviderOptions right the second audio track providers options. Returns Type Description Boolean a value indicating whether the first audio track providers options ( left ) and the second audio track providers options ( right ) are not equal to each other. Implements System.IEquatable<T>"
  },
  "api/Strade.Voice.Tracks.html": {
    "href": "api/Strade.Voice.Tracks.html",
    "title": "Namespace Strade.Voice.Tracks | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Tracks Classes AudioTrackInformation A structure containing information about audio tracks. MediaAuthorInformation A structure holding information about a media author. Structs AudioTrackProviderOptions Represents audio track provider options. Interfaces IAudioTrack An interface used to represent an audio track. IAudioTrackManager An interface used to implement audio track managers. IAudioTrackProvider An interface used to implement audio track providers. Enums AudioTrackProviderOption A set of audio track provider options."
  },
  "api/Strade.Voice.Tracks.IAudioTrack.html": {
    "href": "api/Strade.Voice.Tracks.IAudioTrack.html",
    "title": "Interface IAudioTrack | Strade Developer Documentation",
    "keywords": "Interface IAudioTrack An interface used to represent an audio track. Namespace : Strade.Voice.Tracks Assembly : Strade.Voice.Abstractions.dll Syntax public interface IAudioTrack Properties | Improve this Doc View Source Information Gets the associated audio track information. Declaration AudioTrackInformation Information { get; } Property Value Type Description AudioTrackInformation the associated audio track information. | Improve this Doc View Source Provider Gets the provider that provided the track. Declaration IAudioTrackProvider Provider { get; } Property Value Type Description IAudioTrackProvider the provider that provided the track. Methods | Improve this Doc View Source CreateStreamAsync(CancellationToken) Creates the stream for the audio track asynchronously. Declaration ValueTask<Stream> CreateStreamAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask < Stream > a task that represents the asynchronous operation. The task result is the stream."
  },
  "api/Strade.Voice.Tracks.IAudioTrackManager.html": {
    "href": "api/Strade.Voice.Tracks.IAudioTrackManager.html",
    "title": "Interface IAudioTrackManager | Strade Developer Documentation",
    "keywords": "Interface IAudioTrackManager An interface used to implement audio track managers. Inherited Members IDisposable.Dispose() Namespace : Strade.Voice.Tracks Assembly : Strade.Voice.Abstractions.dll Syntax public interface IAudioTrackManager : IDisposable Properties | Improve this Doc View Source Providers Gets an enumerable that yields through the registered audio track providers. Declaration IEnumerable<IAudioTrackProvider> Providers { get; } Property Value Type Description IEnumerable < IAudioTrackProvider > an enumerable that yields through the registered audio track providers. Methods | Improve this Doc View Source FindProviders(String) Finds audio track providers by the specified name . Declaration IEnumerable<IAudioTrackProvider> FindProviders(string name) Parameters Type Name Description String name the name of the provider. Returns Type Description IEnumerable < IAudioTrackProvider > an enumerable that enumerates through the providers found by name . Exceptions Type Condition ArgumentNullException thrown if the specified name parameter is null . | Improve this Doc View Source LoadTrackAsync(String, AudioTrackProviderOptions, CancellationToken) Loads a track asynchronously. Declaration Task<IAudioTrack> LoadTrackAsync(string query, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query the query. AudioTrackProviderOptions options the options for providing the audio tracks. CancellationToken cancellationToken Returns Type Description Task < IAudioTrack > a task that represents the asynchronous operation. The task result is the track loaded; or null if no track was found. | Improve this Doc View Source LoadTrackAsync(String, String, AudioTrackProviderOptions, CancellationToken) Loads a track from the provider specified by provider asynchronously. Declaration Task<IAudioTrack> LoadTrackAsync(string query, string provider, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query the query. String provider the explicit provider set used to resolve the tracks; or null to allow all providers. AudioTrackProviderOptions options the options for providing the audio tracks. CancellationToken cancellationToken Returns Type Description Task < IAudioTrack > a task that represents the asynchronous operation. The task result is the track loaded; or null if no track was found. | Improve this Doc View Source LoadTracksAsync(String, AudioTrackProviderOptions, Int32, CancellationToken) Loads tracks asynchronously. Declaration Task<ITrackLoadResult> LoadTracksAsync(string query, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), int count = 100, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query the query. AudioTrackProviderOptions options the options for providing the audio tracks. Int32 count the number of items to return. CancellationToken cancellationToken Returns Type Description Task < ITrackLoadResult > a task that represents the asynchronous operation. The task result is the track load result. | Improve this Doc View Source LoadTracksAsync(String, String, AudioTrackProviderOptions, Int32, CancellationToken) Loads tracks from the provider specified by provider asynchronously. Declaration Task<ITrackLoadResult> LoadTracksAsync(string query, string provider, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), int count = 100, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query the query. String provider the explicit provider set used to resolve the tracks; or null to allow all providers. AudioTrackProviderOptions options the options for providing the audio tracks. Int32 count the number of items to return. CancellationToken cancellationToken Returns Type Description Task < ITrackLoadResult > a task that represents the asynchronous operation. The task result is the track load result."
  },
  "api/Strade.Voice.Tracks.IAudioTrackProvider.html": {
    "href": "api/Strade.Voice.Tracks.IAudioTrackProvider.html",
    "title": "Interface IAudioTrackProvider | Strade Developer Documentation",
    "keywords": "Interface IAudioTrackProvider An interface used to implement audio track providers. Inherited Members IDisposable.Dispose() Namespace : Strade.Voice.Tracks Assembly : Strade.Voice.Abstractions.dll Syntax public interface IAudioTrackProvider : IDisposable Properties | Improve this Doc View Source Name Gets the human-friendly name of the track provider. Declaration string Name { get; } Property Value Type Description String the human-friendly name of the track provider. Methods | Improve this Doc View Source LoadAsync(String, AudioTrackProviderOptions, CancellationToken) Loads an audio track using the provider asynchronously. Declaration Task<IAudioTrack> LoadAsync(string query, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query the query. AudioTrackProviderOptions options the options for the track provider. CancellationToken cancellationToken Returns Type Description Task < IAudioTrack > a task that represents the asynchronous operation. The task result is the audio track found; or null if the audio track could not be resolved using the provider. | Improve this Doc View Source LoadPlaylistAsync(String, Int32, AudioTrackProviderOptions, CancellationToken) Loads a playlist using the provider asynchronously. Declaration Task<Playlist> LoadPlaylistAsync(string query, int count, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query the query. Int32 count the number of tracks to return. AudioTrackProviderOptions options the options for the track provider. CancellationToken cancellationToken Returns Type Description Task < Playlist > a task that represents the asynchronous operation. The task result is the playlist found; or null if the playlist could not be resolved using the provider. | Improve this Doc View Source SearchAsync(String, Int32, AudioTrackProviderOptions, CancellationToken) Searches tracks using the provider asynchronously. Declaration Task<IEnumerable<IAudioTrack>> SearchAsync(string query, int count, AudioTrackProviderOptions options = default(AudioTrackProviderOptions), CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String query the query. Int32 count the number of tracks to return. AudioTrackProviderOptions options the options for the track provider. CancellationToken cancellationToken Returns Type Description Task < IEnumerable < IAudioTrack >> a task that represents the asynchronous operation. The task result is an enumerable that yields through the search results."
  },
  "api/Strade.Voice.Tracks.MediaAuthorInformation.html": {
    "href": "api/Strade.Voice.Tracks.MediaAuthorInformation.html",
    "title": "Class MediaAuthorInformation | Strade Developer Documentation",
    "keywords": "Class MediaAuthorInformation A structure holding information about a media author. Inheritance Object MediaAuthorInformation Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Tracks Assembly : Strade.Voice.Abstractions.dll Syntax public sealed class MediaAuthorInformation Constructors | Improve this Doc View Source MediaAuthorInformation(String, String, String) Initializes a new instance of the MediaAuthorInformation class. Declaration public MediaAuthorInformation(string name, string uri = null, string avatarUri = null) Parameters Type Name Description String name the name of the author. String uri the URI of the author, if present. String avatarUri the avatar URI of the author, if present. Exceptions Type Condition ArgumentNullException thrown if the specified name is null . Properties | Improve this Doc View Source AvatarUri Gets the avatar URI of the author, if present. Declaration public string AvatarUri { get; } Property Value Type Description String the avatar URI of the author, if present. | Improve this Doc View Source Name Gets the name of the author. Declaration public string Name { get; } Property Value Type Description String the name of the author. | Improve this Doc View Source Uri Gets the URI of the author, if present. Declaration public string Uri { get; } Property Value Type Description String the URI of the author, if present."
  },
  "api/Strade.Voice.Tracks.Playlists.html": {
    "href": "api/Strade.Voice.Tracks.Playlists.html",
    "title": "Namespace Strade.Voice.Tracks.Playlists | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Tracks.Playlists Classes Playlist Represents a playlist. PlaylistInformation A structure containing information about a playlist."
  },
  "api/Strade.Voice.Tracks.Playlists.Playlist.html": {
    "href": "api/Strade.Voice.Tracks.Playlists.Playlist.html",
    "title": "Class Playlist | Strade Developer Documentation",
    "keywords": "Class Playlist Represents a playlist. Inheritance Object Playlist Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Tracks.Playlists Assembly : Strade.Voice.Abstractions.dll Syntax public sealed class Playlist Constructors | Improve this Doc View Source Playlist(PlaylistInformation, IEnumerable<IAudioTrack>) Initializes a new instance of the Playlist class. Declaration public Playlist(PlaylistInformation information, IEnumerable<IAudioTrack> tracks) Parameters Type Name Description PlaylistInformation information the playlist information. IEnumerable < IAudioTrack > tracks an enumerable that yields through the tracks contained in the playlist. Exceptions Type Condition ArgumentNullException thrown if the specified information is null . ArgumentNullException thrown if the specified tracks enumerable is null . Properties | Improve this Doc View Source Information Gets the playlist information. Declaration public PlaylistInformation Information { get; } Property Value Type Description PlaylistInformation the playlist information. | Improve this Doc View Source Tracks Gets an enumerable that yields through the tracks contained in the playlist. Declaration public IEnumerable<IAudioTrack> Tracks { get; } Property Value Type Description IEnumerable < IAudioTrack > an enumerable that yields through the tracks contained in the playlist."
  },
  "api/Strade.Voice.Tracks.Playlists.PlaylistInformation.html": {
    "href": "api/Strade.Voice.Tracks.Playlists.PlaylistInformation.html",
    "title": "Class PlaylistInformation | Strade Developer Documentation",
    "keywords": "Class PlaylistInformation A structure containing information about a playlist. Inheritance Object PlaylistInformation Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Tracks.Playlists Assembly : Strade.Voice.Abstractions.dll Syntax public sealed class PlaylistInformation Constructors | Improve this Doc View Source PlaylistInformation(String, MediaAuthorInformation) Initializes a new instance of the PlaylistInformation class. Declaration public PlaylistInformation(string name, MediaAuthorInformation author = null) Parameters Type Name Description String name the name of the playlist. MediaAuthorInformation author the playlist author information, if present. Exceptions Type Condition ArgumentNullException thrown if the specified name is null . Properties | Improve this Doc View Source Author Gets the playlist author information, if present. Declaration public MediaAuthorInformation Author { get; } Property Value Type Description MediaAuthorInformation the playlist author information, if present. | Improve this Doc View Source Name Gets the name of the playlist. Declaration public string Name { get; } Property Value Type Description String the name of the playlist."
  },
  "api/Strade.Voice.Tracks.Results.ExplicitTrackLoadResult.html": {
    "href": "api/Strade.Voice.Tracks.Results.ExplicitTrackLoadResult.html",
    "title": "Class ExplicitTrackLoadResult | Strade Developer Documentation",
    "keywords": "Class ExplicitTrackLoadResult Represents an explicit track load result. Inheritance Object ExplicitTrackLoadResult Implements ITrackLoadResult Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Tracks.Results Assembly : Strade.Voice.Abstractions.dll Syntax public sealed class ExplicitTrackLoadResult : ITrackLoadResult Constructors | Improve this Doc View Source ExplicitTrackLoadResult(IAudioTrackProvider, IAudioTrack) Initializes a new instance of the ExplicitTrackLoadResult class. Declaration public ExplicitTrackLoadResult(IAudioTrackProvider provider, IAudioTrack track) Parameters Type Name Description IAudioTrackProvider provider the provider that was used to resolve the track. IAudioTrack track the track resolved. Exceptions Type Condition ArgumentNullException thrown if the specified provider is null . ArgumentNullException thrown if the specified track is null . Properties | Improve this Doc View Source IsSuccess Declaration public bool IsSuccess { get; } Property Value Type Description Boolean | Improve this Doc View Source Provider Declaration public IAudioTrackProvider Provider { get; } Property Value Type Description IAudioTrackProvider | Improve this Doc View Source Track Gets the track resolved. Declaration public IAudioTrack Track { get; } Property Value Type Description IAudioTrack the track resolved. | Improve this Doc View Source Type Declaration public TrackLoadResultType Type { get; } Property Value Type Description TrackLoadResultType Explicit Interface Implementations | Improve this Doc View Source ITrackLoadResult.Tracks Declaration IEnumerable<IAudioTrack> ITrackLoadResult.Tracks { get; } Returns Type Description IEnumerable < IAudioTrack > Implements ITrackLoadResult"
  },
  "api/Strade.Voice.Tracks.Results.FailedTrackLoadResult.html": {
    "href": "api/Strade.Voice.Tracks.Results.FailedTrackLoadResult.html",
    "title": "Class FailedTrackLoadResult | Strade Developer Documentation",
    "keywords": "Class FailedTrackLoadResult Represents a failed track load result. Inheritance Object FailedTrackLoadResult Implements ITrackLoadResult Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Tracks.Results Assembly : Strade.Voice.Abstractions.dll Syntax public sealed class FailedTrackLoadResult : ITrackLoadResult Constructors | Improve this Doc View Source FailedTrackLoadResult(IAudioTrackProvider, Exception) Initializes a new instance of the FailedTrackLoadResult class. Declaration public FailedTrackLoadResult(IAudioTrackProvider provider, Exception exception = null) Parameters Type Name Description IAudioTrackProvider provider the provider that provided the result. Exception exception the exception that occurred. Exceptions Type Condition ArgumentNullException thrown if the specified provider is null . Properties | Improve this Doc View Source Exception Gets the exception that occurred. Declaration public Exception Exception { get; } Property Value Type Description Exception the exception that occurred. | Improve this Doc View Source IsSuccess Declaration public bool IsSuccess { get; } Property Value Type Description Boolean | Improve this Doc View Source Provider Declaration public IAudioTrackProvider Provider { get; } Property Value Type Description IAudioTrackProvider | Improve this Doc View Source Tracks Declaration public IEnumerable<IAudioTrack> Tracks { get; } Property Value Type Description IEnumerable < IAudioTrack > | Improve this Doc View Source Type Declaration public TrackLoadResultType Type { get; } Property Value Type Description TrackLoadResultType Implements ITrackLoadResult"
  },
  "api/Strade.Voice.Tracks.Results.html": {
    "href": "api/Strade.Voice.Tracks.Results.html",
    "title": "Namespace Strade.Voice.Tracks.Results | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Tracks.Results Classes ExplicitTrackLoadResult Represents an explicit track load result. FailedTrackLoadResult Represents a failed track load result. PlaylistTrackLoadResult Represents a playlist track load result. SearchTrackLoadResult Represents a search track load result. Interfaces ITrackLoadResult An interface for track load results. Enums TrackLoadResultType A set of possible track load result types."
  },
  "api/Strade.Voice.Tracks.Results.ITrackLoadResult.html": {
    "href": "api/Strade.Voice.Tracks.Results.ITrackLoadResult.html",
    "title": "Interface ITrackLoadResult | Strade Developer Documentation",
    "keywords": "Interface ITrackLoadResult An interface for track load results. Namespace : Strade.Voice.Tracks.Results Assembly : Strade.Voice.Abstractions.dll Syntax public interface ITrackLoadResult Properties | Improve this Doc View Source IsSuccess Gets a value indicating whether the track load succeed. Declaration bool IsSuccess { get; } Property Value Type Description Boolean a value indicating whether the track load succeed. | Improve this Doc View Source Provider Gets the provider that was used to resolve the tracks, if present. Declaration IAudioTrackProvider Provider { get; } Property Value Type Description IAudioTrackProvider the provider that was used to resolve the tracks, if present. | Improve this Doc View Source Tracks Gets an enumerable that yields through the tracks resolved. Declaration IEnumerable<IAudioTrack> Tracks { get; } Property Value Type Description IEnumerable < IAudioTrack > an enumerable that yields through the tracks resolved. | Improve this Doc View Source Type Gets the track load result type. Declaration TrackLoadResultType Type { get; } Property Value Type Description TrackLoadResultType the track load result type."
  },
  "api/Strade.Voice.Tracks.Results.PlaylistTrackLoadResult.html": {
    "href": "api/Strade.Voice.Tracks.Results.PlaylistTrackLoadResult.html",
    "title": "Class PlaylistTrackLoadResult | Strade Developer Documentation",
    "keywords": "Class PlaylistTrackLoadResult Represents a playlist track load result. Inheritance Object PlaylistTrackLoadResult Implements ITrackLoadResult Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Tracks.Results Assembly : Strade.Voice.Abstractions.dll Syntax public sealed class PlaylistTrackLoadResult : ITrackLoadResult Constructors | Improve this Doc View Source PlaylistTrackLoadResult(IAudioTrackProvider, PlaylistInformation, IEnumerable<IAudioTrack>) Initializes a new instance of the PlaylistTrackLoadResult class. Declaration public PlaylistTrackLoadResult(IAudioTrackProvider provider, PlaylistInformation playlist, IEnumerable<IAudioTrack> tracks) Parameters Type Name Description IAudioTrackProvider provider the provider that was used to resolve the track. PlaylistInformation playlist the playlist resolved. IEnumerable < IAudioTrack > tracks the tracks resolved. Exceptions Type Condition ArgumentNullException thrown if the specified provider is null . ArgumentNullException thrown if the specified playlist is null . ArgumentNullException thrown if the specified tracks enumerable is null . Properties | Improve this Doc View Source IsSuccess Declaration public bool IsSuccess { get; } Property Value Type Description Boolean | Improve this Doc View Source Playlist Gets the playlist resolved. Declaration public PlaylistInformation Playlist { get; } Property Value Type Description PlaylistInformation the playlist resolved. | Improve this Doc View Source Provider Declaration public IAudioTrackProvider Provider { get; } Property Value Type Description IAudioTrackProvider | Improve this Doc View Source Tracks Declaration public IEnumerable<IAudioTrack> Tracks { get; } Property Value Type Description IEnumerable < IAudioTrack > | Improve this Doc View Source Type Declaration public TrackLoadResultType Type { get; } Property Value Type Description TrackLoadResultType Implements ITrackLoadResult"
  },
  "api/Strade.Voice.Tracks.Results.SearchTrackLoadResult.html": {
    "href": "api/Strade.Voice.Tracks.Results.SearchTrackLoadResult.html",
    "title": "Class SearchTrackLoadResult | Strade Developer Documentation",
    "keywords": "Class SearchTrackLoadResult Represents a search track load result. Inheritance Object SearchTrackLoadResult Implements ITrackLoadResult Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Tracks.Results Assembly : Strade.Voice.Abstractions.dll Syntax public sealed class SearchTrackLoadResult : ITrackLoadResult Constructors | Improve this Doc View Source SearchTrackLoadResult(IAudioTrackProvider, String, IEnumerable<IAudioTrack>) Initializes a new instance of the SearchTrackLoadResult class. Declaration public SearchTrackLoadResult(IAudioTrackProvider provider, string query, IEnumerable<IAudioTrack> tracks) Parameters Type Name Description IAudioTrackProvider provider the provider that provided the result. String query the search query. IEnumerable < IAudioTrack > tracks the tracks. Exceptions Type Condition ArgumentNullException thrown if the specified provider is null . ArgumentNullException thrown if the specified query is null . ArgumentNullException thrown if the specified tracks is null . Properties | Improve this Doc View Source IsSuccess Declaration public bool IsSuccess { get; } Property Value Type Description Boolean | Improve this Doc View Source Provider Declaration public IAudioTrackProvider Provider { get; } Property Value Type Description IAudioTrackProvider | Improve this Doc View Source Query Gets the search query. Declaration public string Query { get; } Property Value Type Description String the search query. | Improve this Doc View Source Tracks Declaration public IEnumerable<IAudioTrack> Tracks { get; } Property Value Type Description IEnumerable < IAudioTrack > | Improve this Doc View Source Type Declaration public TrackLoadResultType Type { get; } Property Value Type Description TrackLoadResultType Implements ITrackLoadResult"
  },
  "api/Strade.Voice.Tracks.Results.TrackLoadResultType.html": {
    "href": "api/Strade.Voice.Tracks.Results.TrackLoadResultType.html",
    "title": "Enum TrackLoadResultType | Strade Developer Documentation",
    "keywords": "Enum TrackLoadResultType A set of possible track load result types. Namespace : Strade.Voice.Tracks.Results Assembly : Strade.Voice.Abstractions.dll Syntax public enum TrackLoadResultType : byte Fields Name Description Empty Denotes that the track load returned an empty result. Failed Denotes that the track load is faulted and returned an error. Playlist Denotes that a tracks were returned from a playlist. Search Denotes that a tracks were returned from a search. Track Denotes that a single track was returned. Extension Methods EnumExtensions.GetName<TrackLoadResultType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.Voice.Util.AudioHelper.html": {
    "href": "api/Strade.Voice.Util.AudioHelper.html",
    "title": "Class AudioHelper | Strade Developer Documentation",
    "keywords": "Class AudioHelper Inheritance Object AudioHelper Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Util Assembly : Strade.Voice.Connection.dll Syntax public static class AudioHelper Methods | Improve this Doc View Source ApplyVolume(Byte*, Int32, Single) Applies a volume transform. Declaration public static void ApplyVolume(byte *samples, int sampleCount, float volume) Parameters Type Name Description Byte * samples the sample buffer of 32-bit RAW float PCM audio samples. Int32 sampleCount the number of samples in the buffer (not the buffer length). Single volume the volume change. | Improve this Doc View Source ApplyVolume(Single*, Int32, Single) Declaration public static void ApplyVolume(float *samples, int sampleCount, float volume) Parameters Type Name Description Single * samples Int32 sampleCount Single volume | Improve this Doc View Source ApplyVolume(Span<Single>, Single) Declaration public static void ApplyVolume(Span<float> samples, float volume) Parameters Type Name Description Span < Single > samples Single volume | Improve this Doc View Source Clip(Single) Declaration public static float Clip(float sample) Parameters Type Name Description Single sample Returns Type Description Single | Improve this Doc View Source MixAudio(Byte[], Byte*, Int32, Single) Declaration public static void MixAudio(byte[] pcmDataBuffer, byte *outputBufferPtr, int duration, float volume = 1F) Parameters Type Name Description Byte [] pcmDataBuffer Byte * outputBufferPtr Int32 duration Single volume"
  },
  "api/Strade.Voice.Util.html": {
    "href": "api/Strade.Voice.Util.html",
    "title": "Namespace Strade.Voice.Util | Strade Developer Documentation",
    "keywords": "Namespace Strade.Voice.Util Classes AudioHelper IpDiscovery An utility class to run IP discoveries to query the external IP endpoint used to receive voice messages."
  },
  "api/Strade.Voice.Util.IpDiscovery.html": {
    "href": "api/Strade.Voice.Util.IpDiscovery.html",
    "title": "Class IpDiscovery | Strade Developer Documentation",
    "keywords": "Class IpDiscovery An utility class to run IP discoveries to query the external IP endpoint used to receive voice messages. Inheritance Object IpDiscovery Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.Voice.Util Assembly : Strade.Voice.Connection.dll Syntax public static class IpDiscovery Methods | Improve this Doc View Source DiscoverExternalAddressAsync(UdpClient, UInt32, IPEndPoint, TimeSpan, Int32, CancellationToken) Discovers the external IP endpoint asynchronously with multiple attempts on fail. Declaration public static Task<IPEndPoint> DiscoverExternalAddressAsync(UdpClient udpClient, uint ssrc, IPEndPoint remoteEndpoint, TimeSpan timeout, int attempts, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description UdpClient udpClient the UDP client used to query. UInt32 ssrc the Synchronization source identifier (SSRC) of the client. IPEndPoint remoteEndpoint the remote endpoint to discovery the IP with. TimeSpan timeout the timeout after which a new UDP IP discovery should be send. Int32 attempts the number of maximum attempts to discover the external IP endpoint. CancellationToken cancellationToken Returns Type Description Task < IPEndPoint > a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified udpClient is null . ArgumentNullException thrown if the specified remoteEndpoint is null . | Improve this Doc View Source DiscoverExternalAddressAsync(UdpClient, UInt32, IPEndPoint, TimeSpan, CancellationToken) Discovers the external IP endpoint asynchronously. Declaration public static Task<IPEndPoint> DiscoverExternalAddressAsync(UdpClient udpClient, uint ssrc, IPEndPoint remoteEndpoint, TimeSpan timeout, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description UdpClient udpClient the UDP client used to query. UInt32 ssrc the Synchronization source identifier (SSRC) of the client. IPEndPoint remoteEndpoint the remote endpoint to discovery the IP with. TimeSpan timeout the timeout after which a new UDP IP discovery should be send. CancellationToken cancellationToken Returns Type Description Task < IPEndPoint > a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified udpClient is null . ArgumentNullException thrown if the specified remoteEndpoint is null ."
  },
  "api/Strade.VoiceChannelExtensions.html": {
    "href": "api/Strade.VoiceChannelExtensions.html",
    "title": "Class VoiceChannelExtensions | Strade Developer Documentation",
    "keywords": "Class VoiceChannelExtensions Provides extension methods for the IVoiceChannel interface. Inheritance Object VoiceChannelExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade Assembly : Strade.dll Syntax public static class VoiceChannelExtensions Methods | Improve this Doc View Source ConnectAsync(IVoiceChannel, Boolean, Boolean, CancellationToken) Connects to the specified voiceChannel asynchronously. Declaration public static Task ConnectAsync(this IVoiceChannel voiceChannel, bool selfMute = false, bool selfDeaf = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IVoiceChannel voiceChannel the voice channel to connect to. Boolean selfMute a value indicating whether the client should be self-muted. Boolean selfDeaf a value indicating whether the client should be self-deafened. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified voiceChannel is null . NotSupportedException thrown if the current client is not a gateway client ( DiscordClient ). | Improve this Doc View Source DisconnectAsync(IVoiceChannel, CancellationToken) Disconnects from the specified voiceChannel asynchronously. Declaration public static Task DisconnectAsync(this IVoiceChannel voiceChannel, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IVoiceChannel voiceChannel the voice channel to disconnect from. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. Exceptions Type Condition ArgumentNullException thrown if the specified voiceChannel is null . NotSupportedException thrown if the current client is not a gateway client ( DiscordClient ). | Improve this Doc View Source GetMembers(IVoiceChannel) Gets an enumerable that enumerates through the members in the specified voiceChannel asynchronously. Declaration public static IEnumerable<Member> GetMembers(this IVoiceChannel voiceChannel) Parameters Type Name Description IVoiceChannel voiceChannel the voice channel to get a member list for. Returns Type Description IEnumerable < Member > an enumerable that enumerates through the voice channel members. Exceptions Type Condition ArgumentNullException thrown if the specified voiceChannel is null . NotSupportedException thrown if the current client is not a gateway client ( DiscordClient ). | Improve this Doc View Source GetVoiceStates(IVoiceChannel) Gets a list of voice states in the specified voiceChannel . Declaration public static IEnumerable<VoiceState> GetVoiceStates(this IVoiceChannel voiceChannel) Parameters Type Name Description IVoiceChannel voiceChannel the voice channel to get the voice states list for. Returns Type Description IEnumerable < VoiceState > a list of the voice states. Exceptions Type Condition ArgumentNullException thrown if the specified voiceChannel is null . NotSupportedException thrown if the current client is not a gateway client ( DiscordClient ). | Improve this Doc View Source IsEmpty(IVoiceChannel) Gets a value indicating whether any users are in the specified voiceChannel . Declaration public static bool IsEmpty(this IVoiceChannel voiceChannel) Parameters Type Name Description IVoiceChannel voiceChannel the voice channel. Returns Type Description Boolean a value indicating whether any users are in the specified voiceChannel ."
  },
  "api/Strade.WebhookClient.html": {
    "href": "api/Strade.WebhookClient.html",
    "title": "Class WebhookClient | Strade Developer Documentation",
    "keywords": "Class WebhookClient Inheritance Object WebhookClient Implements IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade Assembly : Strade.Rest.dll Syntax public class WebhookClient : IDisposable Constructors | Improve this Doc View Source WebhookClient(DiscordRestApiClient, Snowflake, String) Declaration public WebhookClient(DiscordRestApiClient client, Snowflake webhookId, string token) Parameters Type Name Description DiscordRestApiClient client Snowflake webhookId String token | Improve this Doc View Source WebhookClient(DiscordRestApiClient, Snowflake, String, Boolean) Declaration protected WebhookClient(DiscordRestApiClient client, Snowflake webhookId, string token, bool isOwnClient) Parameters Type Name Description DiscordRestApiClient client Snowflake webhookId String token Boolean isOwnClient | Improve this Doc View Source WebhookClient(DiscordRestApiClient, Uri) Declaration public WebhookClient(DiscordRestApiClient client, Uri webhookUri) Parameters Type Name Description DiscordRestApiClient client Uri webhookUri | Improve this Doc View Source WebhookClient(DiscordRestApiClient, Uri, Boolean) Declaration protected WebhookClient(DiscordRestApiClient client, Uri webhookUri, bool isOwnClient) Parameters Type Name Description DiscordRestApiClient client Uri webhookUri Boolean isOwnClient | Improve this Doc View Source WebhookClient(Snowflake, String, ILogger) Declaration public WebhookClient(Snowflake webhookId, string token, ILogger logger = null) Parameters Type Name Description Snowflake webhookId String token ILogger logger | Improve this Doc View Source WebhookClient(IDiscordRestClient, Snowflake, String) Declaration public WebhookClient(IDiscordRestClient client, Snowflake webhookId, string token) Parameters Type Name Description IDiscordRestClient client Snowflake webhookId String token | Improve this Doc View Source WebhookClient(IDiscordRestClient, Uri) Declaration public WebhookClient(IDiscordRestClient client, Uri webhookUri) Parameters Type Name Description IDiscordRestClient client Uri webhookUri | Improve this Doc View Source WebhookClient(Uri, ILogger) Declaration public WebhookClient(Uri webhookUri, ILogger logger = null) Parameters Type Name Description Uri webhookUri ILogger logger Properties | Improve this Doc View Source Token Declaration public string Token { get; } Property Value Type Description String | Improve this Doc View Source WebhookId Declaration public Snowflake WebhookId { get; } Property Value Type Description Snowflake Methods | Improve this Doc View Source DeleteAsync(CancellationToken) Deletes the webhook asynchronously. Declaration public Task DeleteAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source ModifyAsync(WebhookModifyProperties, CancellationToken) Modifies the webhook asynchronously. Declaration public Task ModifyAsync(WebhookModifyProperties properties, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description WebhookModifyProperties properties the properties used to modify the webhook. CancellationToken cancellationToken Returns Type Description Task a task that represents the asynchronous operation. | Improve this Doc View Source PushAsync(EmbedMessage, Boolean, Boolean, CancellationToken) Sends a message asynchronously. Declaration public Task<IWebhookMessage> PushAsync(EmbedMessage embed, bool textToSpeech = false, bool pushOnly = true, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description EmbedMessage embed the attached message embed. Boolean textToSpeech a value indicating whether the message should be a TTS (Text-To-Speech) message. Boolean pushOnly a value indicating whether the server should await the creation of the webhook message ( true ) or should only push the message ( false ). If pushes then null if returned. CancellationToken cancellationToken Returns Type Description Task < IWebhookMessage > a task that represents the asynchronous operation. The task result is the message send; or if pushOnly is true null . | Improve this Doc View Source PushAsync(WebhookMessageCreationProperties, Boolean, CancellationToken) Pushes a webhook message asynchronously. Declaration public Task<IWebhookMessage> PushAsync(WebhookMessageCreationProperties properties, bool pushOnly = true, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description WebhookMessageCreationProperties properties the message creation properties. Boolean pushOnly a value indicating whether the server should await the creation of the webhook message ( true ) or should only push the message ( false ). If pushes then null if returned. CancellationToken cancellationToken Returns Type Description Task < IWebhookMessage > a task that represents the asynchronous operation. The task result is the message send; or if pushOnly is true null . | Improve this Doc View Source PushAsync(IReadOnlyList<EmbedMessage>, Boolean, Boolean, CancellationToken) Sends a message asynchronously. Declaration public Task<IWebhookMessage> PushAsync(IReadOnlyList<EmbedMessage> embeds, bool textToSpeech = false, bool pushOnly = true, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description IReadOnlyList < EmbedMessage > embeds the attached message embeds. Boolean textToSpeech a value indicating whether the message should be a TTS (Text-To-Speech) message. Boolean pushOnly a value indicating whether the server should await the creation of the webhook message ( true ) or should only push the message ( false ). If pushes then null if returned. CancellationToken cancellationToken Returns Type Description Task < IWebhookMessage > a task that represents the asynchronous operation. The task result is the message send; or if pushOnly is true null . | Improve this Doc View Source PushAsync(String, IReadOnlyList<EmbedMessage>, Boolean, Boolean, CancellationToken) Sends a message asynchronously. Declaration public Task<IWebhookMessage> PushAsync(string content, IReadOnlyList<EmbedMessage> embeds = null, bool textToSpeech = false, bool pushOnly = true, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String content the message content. IReadOnlyList < EmbedMessage > embeds the attached message embeds. Boolean textToSpeech a value indicating whether the message should be a TTS (Text-To-Speech) message. Boolean pushOnly a value indicating whether the server should await the creation of the webhook message ( true ) or should only push the message ( false ). If pushes then null if returned. CancellationToken cancellationToken Returns Type Description Task < IWebhookMessage > a task that represents the asynchronous operation. The task result is the message send; or if pushOnly is true null . Exceptions Type Condition ArgumentNullException thrown if the specified content is null . | Improve this Doc View Source PushFileAsync(ArraySegment<Byte>, String, String, IReadOnlyList<EmbedMessage>, Boolean, Boolean, CancellationToken) Sends a message with a file attachment asynchronously. Declaration public Task<IWebhookMessage> PushFileAsync(ArraySegment<byte> data, string filename, string content = null, IReadOnlyList<EmbedMessage> embeds = null, bool textToSpeech = false, bool pushOnly = true, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description ArraySegment < Byte > data the file data. String filename the filename for the file. String content the message content. IReadOnlyList < EmbedMessage > embeds the attached message embeds. Boolean textToSpeech a value indicating whether the message should be a TTS (Text-To-Speech) message. Boolean pushOnly a value indicating whether the server should await the creation of the webhook message ( true ) or should only push the message ( false ). If pushes then null if returned. CancellationToken cancellationToken Returns Type Description Task < IWebhookMessage > a task that represents the asynchronous operation. The task result is the message send; or if pushOnly is true null . | Improve this Doc View Source PushFileAsync(FileInfo, String, String, IReadOnlyList<EmbedMessage>, Boolean, Boolean, CancellationToken) Sends a message with a file attachment asynchronously. Declaration public Task<IWebhookMessage> PushFileAsync(FileInfo fileInfo, string filename = null, string content = null, IReadOnlyList<EmbedMessage> embeds = null, bool textToSpeech = false, bool pushOnly = true, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description FileInfo fileInfo the file to send. String filename the filename for the file, if null is specified then the file name of the specified fileInfo is used. String content the message content. IReadOnlyList < EmbedMessage > embeds the attached message embeds. Boolean textToSpeech a value indicating whether the message should be a TTS (Text-To-Speech) message. Boolean pushOnly a value indicating whether the server should await the creation of the webhook message ( true ) or should only push the message ( false ). If pushes then null if returned. CancellationToken cancellationToken Returns Type Description Task < IWebhookMessage > a task that represents the asynchronous operation. The task result is the message send; or if pushOnly is true null . Exceptions Type Condition ArgumentNullException thrown if the specified fileInfo is null. | Improve this Doc View Source PushFileAsync(Stream, String, String, IReadOnlyList<EmbedMessage>, Boolean, Boolean, Boolean, CancellationToken) Sends a message with a file attachment asynchronously. Declaration public Task<IWebhookMessage> PushFileAsync(Stream stream, string filename, string content = null, IReadOnlyList<EmbedMessage> embeds = null, bool textToSpeech = false, bool leaveOpen = false, bool pushOnly = true, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Stream stream the stream to read the file data from to send. String filename the filename for the file. String content the message content. IReadOnlyList < EmbedMessage > embeds the attached message embeds. Boolean textToSpeech a value indicating whether the message should be a TTS (Text-To-Speech) message. Boolean leaveOpen a value indicating whether the specified stream should be left open after the file was send. Boolean pushOnly a value indicating whether the server should await the creation of the webhook message ( true ) or should only push the message ( false ). If pushes then null if returned. CancellationToken cancellationToken Returns Type Description Task < IWebhookMessage > a task that represents the asynchronous operation. The task result is the message send; or if pushOnly is true null . Exceptions Type Condition ArgumentNullException thrown if the specified stream is null . ArgumentException thrown if the specified filename is null or empty. | Improve this Doc View Source PushFileAsync(String, String, String, IReadOnlyList<EmbedMessage>, Boolean, Boolean, CancellationToken) Sends a message with a file attachment asynchronously. Declaration public Task<IWebhookMessage> PushFileAsync(string path, string filename = null, string content = null, IReadOnlyList<EmbedMessage> embeds = null, bool textToSpeech = false, bool pushOnly = true, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String path the path to the file to send. String filename the filename for the file, if null is specified then the file name of the specified path is used. String content the message content. IReadOnlyList < EmbedMessage > embeds the attached message embeds. Boolean textToSpeech a value indicating whether the message should be a TTS (Text-To-Speech) message. Boolean pushOnly a value indicating whether the server should await the creation of the webhook message ( true ) or should only push the message ( false ). If pushes then null if returned. CancellationToken cancellationToken Returns Type Description Task < IWebhookMessage > a task that represents the asynchronous operation. The task result is the message send; or if pushOnly is true null . Implements System.IDisposable"
  },
  "api/Strade.WebhookUtil.html": {
    "href": "api/Strade.WebhookUtil.html",
    "title": "Class WebhookUtil | Strade Developer Documentation",
    "keywords": "Class WebhookUtil An utility class used for parsing Webhook URIs. Inheritance Object WebhookUtil Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade Assembly : Strade.Rest.dll Syntax public static class WebhookUtil Methods | Improve this Doc View Source TryParseInformation(String, out String, out Snowflake) Tries to parse the Webhook token and id from the specified uri . Declaration public static bool TryParseInformation(string uri, out string token, out Snowflake id) Parameters Type Name Description String uri the URI to parse. String token the parsed token; or default if parsing failed. Snowflake id the parsed Webhook id; or default if parsing failed. Returns Type Description Boolean a value indicating whether the parse was successful. | Improve this Doc View Source TryParseInformation(Uri, out String, out Snowflake) Tries to parse the Webhook token and id from the specified uri . Declaration public static bool TryParseInformation(Uri uri, out string token, out Snowflake id) Parameters Type Name Description Uri uri the URI to parse. String token the parsed token; or default if parsing failed. Snowflake id the parsed Webhook id; or default if parsing failed. Returns Type Description Boolean a value indicating whether the parse was successful."
  },
  "api/Strade.WebSockets.Default.DefaultWebSocket.html": {
    "href": "api/Strade.WebSockets.Default.DefaultWebSocket.html",
    "title": "Class DefaultWebSocket | Strade Developer Documentation",
    "keywords": "Class DefaultWebSocket Default WebSocket implementation. Inheritance Object DefaultWebSocket Implements IWebSocket IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.WebSockets.Default Assembly : Strade.WebSockets.Default.dll Syntax public class DefaultWebSocket : IWebSocket, IDisposable Constructors | Improve this Doc View Source DefaultWebSocket() Initializes a new instance of the DefaultWebSocket class. Declaration public DefaultWebSocket() Properties | Improve this Doc View Source CloseCode Declaration public WebSocketCloseCode? CloseCode { get; } Property Value Type Description Nullable < WebSocketCloseCode > | Improve this Doc View Source Factory Gets a factory used to create WebSocket instances. Declaration public static WebSocketFactory Factory { get; } Property Value Type Description WebSocketFactory a factory used to create WebSocket instances. | Improve this Doc View Source IsConnected Declaration public bool IsConnected { get; } Property Value Type Description Boolean | Improve this Doc View Source StatusDescription Declaration public string StatusDescription { get; } Property Value Type Description String Methods | Improve this Doc View Source CloseAsync(WebSocketCloseCode, String, CancellationToken) Declaration public Task CloseAsync(WebSocketCloseCode closeStatus, string statusDescription, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description WebSocketCloseCode closeStatus String statusDescription CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source CloseAsync(UInt16, String, CancellationToken) Declaration public Task CloseAsync(ushort closeStatus, string statusDescription, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description UInt16 closeStatus String statusDescription CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ConnectAsync(Uri, CancellationToken) Declaration public Task ConnectAsync(Uri uri, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Uri uri CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source Create() Creates a new WebSocket. Declaration public static IWebSocket Create() Returns Type Description IWebSocket the WebSocket. | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source ReceiveAsync(CancellationToken) Declaration public Task<WebSocketReceiveResult> ReceiveAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < WebSocketReceiveResult > | Improve this Doc View Source SendAsync(ArraySegment<Byte>, Boolean, Boolean, CancellationToken) Declaration public Task SendAsync(ArraySegment<byte> data, bool binary = false, bool endOfMessage = true, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description ArraySegment < Byte > data Boolean binary Boolean endOfMessage CancellationToken cancellationToken Returns Type Description Task Implements IWebSocket System.IDisposable"
  },
  "api/Strade.WebSockets.Default.html": {
    "href": "api/Strade.WebSockets.Default.html",
    "title": "Namespace Strade.WebSockets.Default | Strade Developer Documentation",
    "keywords": "Namespace Strade.WebSockets.Default Classes DefaultWebSocket Default WebSocket implementation."
  },
  "api/Strade.WebSockets.html": {
    "href": "api/Strade.WebSockets.html",
    "title": "Namespace Strade.WebSockets | Strade Developer Documentation",
    "keywords": "Namespace Strade.WebSockets Structs WebSocketReceiveResult A structure that contains WebSocket data. Interfaces IWebSocket Enums WebSocketCloseCode A set of well-known WebSocket close codes as specified in RFC 6455 Section 7.4. WebSocketResultType A set of WebSocket result types. Delegates WebSocketFactory"
  },
  "api/Strade.WebSockets.IWebSocket.html": {
    "href": "api/Strade.WebSockets.IWebSocket.html",
    "title": "Interface IWebSocket | Strade Developer Documentation",
    "keywords": "Interface IWebSocket Inherited Members IDisposable.Dispose() Namespace : Strade.WebSockets Assembly : Strade.WebSockets.dll Syntax public interface IWebSocket : IDisposable Properties | Improve this Doc View Source CloseCode Declaration WebSocketCloseCode? CloseCode { get; } Property Value Type Description Nullable < WebSocketCloseCode > | Improve this Doc View Source IsConnected Declaration bool IsConnected { get; } Property Value Type Description Boolean | Improve this Doc View Source StatusDescription Declaration string StatusDescription { get; } Property Value Type Description String Methods | Improve this Doc View Source CloseAsync(WebSocketCloseCode, String, CancellationToken) Declaration Task CloseAsync(WebSocketCloseCode closeStatus, string statusDescription, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description WebSocketCloseCode closeStatus String statusDescription CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source CloseAsync(UInt16, String, CancellationToken) Declaration Task CloseAsync(ushort closeStatus, string statusDescription, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description UInt16 closeStatus String statusDescription CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ConnectAsync(Uri, CancellationToken) Declaration Task ConnectAsync(Uri uri, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Uri uri CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ReceiveAsync(CancellationToken) Declaration Task<WebSocketReceiveResult> ReceiveAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < WebSocketReceiveResult > | Improve this Doc View Source SendAsync(ArraySegment<Byte>, Boolean, Boolean, CancellationToken) Declaration Task SendAsync(ArraySegment<byte> data, bool binary = false, bool endOfMessage = true, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description ArraySegment < Byte > data Boolean binary Boolean endOfMessage CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/Strade.WebSockets.WebSocket4Net.html": {
    "href": "api/Strade.WebSockets.WebSocket4Net.html",
    "title": "Namespace Strade.WebSockets.WebSocket4Net | Strade Developer Documentation",
    "keywords": "Namespace Strade.WebSockets.WebSocket4Net Classes WebSocket4NetWebSocket An IWebSocket implementation for the WebSocket4Net library."
  },
  "api/Strade.WebSockets.WebSocket4Net.WebSocket4NetWebSocket.html": {
    "href": "api/Strade.WebSockets.WebSocket4Net.WebSocket4NetWebSocket.html",
    "title": "Class WebSocket4NetWebSocket | Strade Developer Documentation",
    "keywords": "Class WebSocket4NetWebSocket An IWebSocket implementation for the WebSocket4Net library. Inheritance Object WebSocket4NetWebSocket Implements IWebSocket IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.WebSockets.WebSocket4Net Assembly : Strade.WebSockets.WebSocket4Net.dll Syntax public sealed class WebSocket4NetWebSocket : IWebSocket, IDisposable Properties | Improve this Doc View Source CloseCode Declaration public WebSocketCloseCode? CloseCode { get; } Property Value Type Description Nullable < WebSocketCloseCode > | Improve this Doc View Source Factory Gets a factory used to create WebSocket instances. Declaration public static WebSocketFactory Factory { get; } Property Value Type Description WebSocketFactory a factory used to create WebSocket instances. | Improve this Doc View Source IsConnected Declaration public bool IsConnected { get; } Property Value Type Description Boolean | Improve this Doc View Source StatusDescription Declaration public string StatusDescription { get; } Property Value Type Description String Methods | Improve this Doc View Source CloseAsync(WebSocketCloseCode, String, CancellationToken) Declaration public Task CloseAsync(WebSocketCloseCode closeStatus, string statusDescription, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description WebSocketCloseCode closeStatus String statusDescription CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source CloseAsync(UInt16, String, CancellationToken) Declaration public Task CloseAsync(ushort closeStatus, string statusDescription, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description UInt16 closeStatus String statusDescription CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ConnectAsync(Uri, CancellationToken) Declaration public Task ConnectAsync(Uri uri, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Uri uri CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source Create() Creates a new WebSocket. Declaration public static IWebSocket Create() Returns Type Description IWebSocket the WebSocket. | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source ReceiveAsync(CancellationToken) Declaration public Task<WebSocketReceiveResult> ReceiveAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < WebSocketReceiveResult > | Improve this Doc View Source SendAsync(ArraySegment<Byte>, Boolean, Boolean, CancellationToken) Declaration public Task SendAsync(ArraySegment<byte> data, bool binary = false, bool endOfMessage = true, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description ArraySegment < Byte > data Boolean binary Boolean endOfMessage CancellationToken cancellationToken Returns Type Description Task Implements IWebSocket System.IDisposable"
  },
  "api/Strade.WebSockets.WebSocketCloseCode.html": {
    "href": "api/Strade.WebSockets.WebSocketCloseCode.html",
    "title": "Enum WebSocketCloseCode | Strade Developer Documentation",
    "keywords": "Enum WebSocketCloseCode A set of well-known WebSocket close codes as specified in RFC 6455 Section 7.4. Namespace : Strade.WebSockets Assembly : Strade.WebSockets.dll Syntax public enum WebSocketCloseCode : ushort Remarks See https://tools.ietf.org/html/rfc6455#section-7.4 for more details. Note that not all predefined close codes are defined here specified in RFC6455. Fields Name Description AbnormalClosure Denotes that the close is indicating that the connection was closed abnormally, e.g., without sending or receiving a Close control frame. Empty Denotes that the close is indicating that no status code was actually present. GoingAway Denotes that the close is indicating that an endpoint is \"going away\", such as a server going down or a browser having navigated away from a page. InternalServerError Denotes that the close is indicating that a server is terminating the connection because it encountered an unexpected condition that prevented it from fulfilling the request. InvalidPayloadData Denotes that the close is indicating that an endpoint is terminating the connection because it has received data within a message that was not consistent with the type of the message (e.g., non-UTF-8 [RFC3629] data within a text message). MandatoryExtension Denotes that the close is indicating that an endpoint (client) is terminating the connection because it has expected the server to negotiate one or more extension, but the server didn't return them in the response message of the WebSocket handshake. The list of extensions that are needed SHOULD appear in the /reason/ part of the Close frame. Note that this status code is not used by the server, because it can fail the WebSocket handshake instead. MessageTooBig Denotes that the close is indicating that an endpoint is terminating the connection because it has received a message that is too big for it to process. NormalClosure Denotes that the close is indicating a normal closure, meaning that the purpose for which the connection was established has been fulfilled. PolicyValidation Denotes that the close is indicating that an endpoint is terminating the connection because it has received a message that violates its policy. This is a generic status code that can be returned when there is no other more suitable status code (e.g., 1003 or 1009) or if there is a need to hide specific details about the policy. ProtocolError Denotes that the close is indicating that an endpoint is terminating the connection due to a protocol error. UnsupportedData Denotes that the close is indicating that an endpoint is terminating the connection because it has received a type of data it cannot accept (e.g., an endpoint that understands only text data MAY send this if it receives a binary message). Extension Methods EnumExtensions.GetName<WebSocketCloseCode>() EnumExtensions.IsDefined()"
  },
  "api/Strade.WebSockets.WebSocketFactory.html": {
    "href": "api/Strade.WebSockets.WebSocketFactory.html",
    "title": "Delegate WebSocketFactory | Strade Developer Documentation",
    "keywords": "Delegate WebSocketFactory Namespace : Strade.WebSockets Assembly : Strade.WebSockets.dll Syntax public delegate IWebSocket WebSocketFactory(); Returns Type Description IWebSocket"
  },
  "api/Strade.WebSockets.WebSocketReceiveResult.html": {
    "href": "api/Strade.WebSockets.WebSocketReceiveResult.html",
    "title": "Struct WebSocketReceiveResult | Strade Developer Documentation",
    "keywords": "Struct WebSocketReceiveResult A structure that contains WebSocket data. Implements IEquatable < WebSocketReceiveResult > Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Strade.WebSockets Assembly : Strade.WebSockets.dll Syntax public struct WebSocketReceiveResult : IEquatable<WebSocketReceiveResult> Constructors | Improve this Doc View Source WebSocketReceiveResult(WebSocketResultType) Initializes a new instance of the WebSocketReceiveResult struct with empty data. Declaration public WebSocketReceiveResult(WebSocketResultType type) Parameters Type Name Description WebSocketResultType type the type of the receive result. | Improve this Doc View Source WebSocketReceiveResult(ArraySegment<Byte>, Boolean) Initializes a new instance of the WebSocketReceiveResult struct. Declaration public WebSocketReceiveResult(ArraySegment<byte> data, bool binary = false) Parameters Type Name Description ArraySegment < Byte > data the data of the receive result. Boolean binary a value indicating whether the data contains binary data or text. Properties | Improve this Doc View Source Data Gets the array segment that represents the data contained in the WebSocket frame. Declaration public ArraySegment<byte> Data { get; } Property Value Type Description ArraySegment < Byte > the array segment that represents the data contained in the WebSocket frame. | Improve this Doc View Source MessageType Gets the type of the message. Declaration public WebSocketResultType MessageType { get; } Property Value Type Description WebSocketResultType the type of the message. Methods | Improve this Doc View Source Equals(WebSocketReceiveResult) Declaration public bool Equals(WebSocketReceiveResult other) Parameters Type Name Description WebSocketReceiveResult other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(WebSocketReceiveResult, WebSocketReceiveResult) Declaration public static bool operator ==(WebSocketReceiveResult left, WebSocketReceiveResult right) Parameters Type Name Description WebSocketReceiveResult left WebSocketReceiveResult right Returns Type Description Boolean | Improve this Doc View Source Inequality(WebSocketReceiveResult, WebSocketReceiveResult) Declaration public static bool operator !=(WebSocketReceiveResult left, WebSocketReceiveResult right) Parameters Type Name Description WebSocketReceiveResult left WebSocketReceiveResult right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Strade.WebSockets.WebSocketResultType.html": {
    "href": "api/Strade.WebSockets.WebSocketResultType.html",
    "title": "Enum WebSocketResultType | Strade Developer Documentation",
    "keywords": "Enum WebSocketResultType A set of WebSocket result types. Namespace : Strade.WebSockets Assembly : Strade.WebSockets.dll Syntax public enum WebSocketResultType : byte Fields Name Description Binary Denotes that the WebSocket result contains binary data. Close Denotes that the WebSocket result indicates that the connection to the remote endpoint was closed. Text Denotes that the WebSocket result contains text data. Extension Methods EnumExtensions.GetName<WebSocketResultType>() EnumExtensions.IsDefined()"
  },
  "api/Strade.WebSockets.WebSocketSharp.html": {
    "href": "api/Strade.WebSockets.WebSocketSharp.html",
    "title": "Namespace Strade.WebSockets.WebSocketSharp | Strade Developer Documentation",
    "keywords": "Namespace Strade.WebSockets.WebSocketSharp Classes WebSocketSharpWebSocket WebSocket wrapper for a WebSocketSharp socket."
  },
  "api/Strade.WebSockets.WebSocketSharp.WebSocketSharpWebSocket.html": {
    "href": "api/Strade.WebSockets.WebSocketSharp.WebSocketSharpWebSocket.html",
    "title": "Class WebSocketSharpWebSocket | Strade Developer Documentation",
    "keywords": "Class WebSocketSharpWebSocket WebSocket wrapper for a WebSocketSharp socket. Inheritance Object WebSocketSharpWebSocket Implements IWebSocket IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Strade.WebSockets.WebSocketSharp Assembly : Strade.WebSockets.WebSocketSharp.dll Syntax public sealed class WebSocketSharpWebSocket : IWebSocket, IDisposable Properties | Improve this Doc View Source CloseCode Declaration public WebSocketCloseCode? CloseCode { get; } Property Value Type Description Nullable < WebSocketCloseCode > | Improve this Doc View Source Factory Gets a factory used to create WebSocket instances. Declaration public static WebSocketFactory Factory { get; } Property Value Type Description WebSocketFactory a factory used to create WebSocket instances. | Improve this Doc View Source IsConnected Declaration public bool IsConnected { get; } Property Value Type Description Boolean | Improve this Doc View Source StatusDescription Declaration public string StatusDescription { get; } Property Value Type Description String Methods | Improve this Doc View Source CloseAsync(WebSocketCloseCode, String, CancellationToken) Declaration public Task CloseAsync(WebSocketCloseCode closeStatus, string statusDescription, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description WebSocketCloseCode closeStatus String statusDescription CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source CloseAsync(UInt16, String, CancellationToken) Declaration public Task CloseAsync(ushort closeStatus, string statusDescription, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description UInt16 closeStatus String statusDescription CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source ConnectAsync(Uri, CancellationToken) Declaration public Task ConnectAsync(Uri uri, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Uri uri CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source Create() Creates a new WebSocket. Declaration public static IWebSocket Create() Returns Type Description IWebSocket the WebSocket. | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source ReceiveAsync(CancellationToken) Declaration public Task<WebSocketReceiveResult> ReceiveAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < WebSocketReceiveResult > | Improve this Doc View Source SendAsync(ArraySegment<Byte>, Boolean, Boolean, CancellationToken) Declaration public Task SendAsync(ArraySegment<byte> data, bool binary = false, bool endOfMessage = true, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description ArraySegment < Byte > data Boolean binary Boolean endOfMessage CancellationToken cancellationToken Returns Type Description Task Implements IWebSocket System.IDisposable"
  },
  "articles/concepts/Compression.html": {
    "href": "articles/concepts/Compression.html",
    "title": "Compression | Strade Developer Documentation",
    "keywords": "Compression What is compression? The discord gateway allows the usage of compression at different layers to reduce the network bandwidth used by your bot. Compression modes Transport compression Transport compression compressed the entire communication between the gateway and your host. By default, Strade makes use of transport compression. Payload compression Additionally, Discord provides payload-compression, which compresses single payloads instead of the stream. Note there is no way to enable transport and payload compression at the same time. If you want to use payload compression, you can put the following into your client configuration: CompressionMode = GatewayCompressionMode.Payload No Compression You can also disable compression completely: CompressionMode = GatewayCompressionMode.None Comparison In general, it is hard to compare those compression modes, but in experience, the best compression mode is to use transport compression, as it does not need to re-instantiate the compression context. This is the reason why transport compression is the default behavior. Further reading • Encoding and Compression (Discord Developer Docs)"
  },
  "articles/concepts/Events.html": {
    "href": "articles/concepts/Events.html",
    "title": "Events | Strade Developer Documentation",
    "keywords": "Events Strade makes excessive use of Events to deliver you real-time events from the Discord gateway. All data that comes within the events are stored in their corresponding event arguments (EventArgs). The most calls in Strade follow the TPL pattern due that we use Tasks as return types for the event handlers. Subscribing to events In C#, it is kind of easy to subscribe to asynchronous event handles. You can either use lambda / anonymous functions or a named function to subscribe to events. For example, if you want to subscribe to the MessageReceived event, you can do the following: using var client = new DiscordClient([...]); client.MessageReceived += async (sender, args) => { // Do something with the event }; For example, the signature for the MessageReceived event is: Func<object, MessageReceivedEventArgs, Task> . The first parameter is the sender of the object. In most cases, you do not need to respect this parameter, but it may be useful as it holds a reference to the subject that invoked the event. The second parameter contains the data that is supplied by the event. The return type is a task which is useful if you have asynchronous code in your event handler. Long-running operations / Event queuing To protect the gateway task to Strade queues events up in an event queue. An event queue is useful to queue up long-running operations aside from the gateway. The default event queue implementation only processes only one event simultaneously; this may be bad because if you deadlock or run long-running operations, your events will queue up indefinitely. In this case, you can implement a queue that uses multiple workers, but for small bots, this should not be necessary."
  },
  "articles/concepts/Sharding.html": {
    "href": "articles/concepts/Sharding.html",
    "title": "Sharding | Strade Developer Documentation",
    "keywords": "Sharding It is useful for large bots to split the connection into multiple or even into separate processes. Discord calls this \"Sharding,\" which allows you to split up your bot's connections as you want. Automatic sharding By default, Strade does automatic sharding that scales up as your bot does. If you want to configure your shards manually, for example, if you want to separate your bot into multiple logical processes, see below. Manual sharding Configuring sharding in Strade is very easy because you do not have to change your code in most cases (except your bot configuration). Strade internally manages its connections to the gateway. You can configure how Strade makes use of connections, as shown below: var configuration = new DiscordClientConfiguration(AuthenticationCredentials.FromEnvironment()) { // Use for shards / connections for our bot ShardingConfiguration = new ShardingConfiguration(4) }; using var client = new DiscordClient(configuration); await client.RunAsync(); The above will tell Strade to use the shards 0-4 for your bot. Sharding behind the scenes So how does sharding work behind the scenes? If you use sharding, Strade informs the discord gateway how your shards are configured. This causes discord only to send events to the corresponding connection: The primary shard (Shard #0) receives direct message events. Shards receive events if a specific formula matches to the guild identifier ( shard_id = (guild_id >> 22) % num_shards ). Further Reading Do you need more information about sharding? You can continue reading here: Read how sharding works: https://discord.com/developers/docs/topics/gateway#sharding What should I consider on sharding for very large bots: https://discord.com/developers/docs/topics/gateway#sharding-for-very-large-bots"
  },
  "articles/getting-started/Basic Bot.html": {
    "href": "articles/getting-started/Basic Bot.html",
    "title": "Basic Bot | Strade Developer Documentation",
    "keywords": "Basic Bot Preparations (Visual Studio Code) In this example, we will create our first bot step-by-step using Visual Studio Code. Run the following commands in the Visual Studio Terminal, or your favorite shell: # Creates a new console project, make sure you are currently in a directory you want to create your bot in. dotnet new console # Add the Strade NuGet package dotnet add package Strade Preparations (Visual Studio) In this example, we will create our first bot step-by-step using Visual Studio. Create the project First, we create a new project/solution for the bot. We recommend using .NET Core to allow cross-platform compatibility. 1. Step Create new project Open Visual Studio. On the start window, choose Create a New Project . Create a new solution with clicking on File > New > Project . Search Console-App (.NET Core) and double-click it. 2. Step Configure Project Give your project a cool name (e.g. SuperBot ) . Adjust other settings (if needed). Click on Continue . 3. Step Install Strade package Right Click your Project (not the Solution) Click on Manage NuGet-Packages... Search \"Strade\" package Install the latest package version. Done! Now you can start with your first Bot! Connecting to Discord The class for creating bots is the DiscordClient class . Now we connect to the Discord Gateway : The Discord Gateway is a real-time WebSocket server which notifies over created messages, guilds the bot joined, etc. The bot will operate with the Gateway and execute your actions. using Strade; // Create the discord client, load authentication credentials from the environment variables; The // default environment variable is 'BOT_TOKEN'. The 'using' keyword ensures that the client is // disposed at the end. using var client = new DiscordClient(AuthenticationCredentials.FromEnvironment()); // Connect to the discord gateway. You can close the application or press [CTRL] + [C] to exit the bot await client.RunAsync(); NOTE The using-Statement around the DiscordClient is used to free resources by the DiscordClient. Now hit 'Run' or 'F5' to run your bot! Now your bot should come online. Adding some more functionality A bot that does nothing is not very productive. So let us add some basic functionality: NOTE Strade uses events to notify you of events that occur: For example when a message was sent, when a channel was created, and much more. You can subscribe to those events to add some code to handle them. using Strade; // Create the discord client, load authentication credentials from the environment variables; The // default environment variable is 'BOT_TOKEN'. The 'using' keyword ensures that the client is // disposed at the end. using var client = new DiscordClient(AuthenticationCredentials.FromEnvironment()); // Subscribe to the MessageReceived event of the DiscordClient. client.MessageReceived += async (sender, eventArgs) => { // Check if our message contains the term '!hello' if (eventArgs.Message.Content.Equals(\"!hello\")) { // retrieve the channel the message was sent in var channel = await eventArgs.Channel.GetAsync(); // greet the user that send the !hello 'command' await channel.SendMessageAsync($\"Hello, {eventArgs.Message.Author}!\"); } }; // Connect to the discord gateway. You can close the application or press [CTRL] + [C] to exit the bot await client.RunAsync();"
  },
  "articles/getting-started/Prerequisites.html": {
    "href": "articles/getting-started/Prerequisites.html",
    "title": "Prerequisites | Strade Developer Documentation",
    "keywords": "Prerequisites .NET Runtime In order to run your bot you need to have a valid installation of a .NET Runtime installed on your target system. Download .NET Runtime Bot Application You will need to obtain a secret bot token in order to create your bot. 1. Step Go to the following page: Discord Applications Click on \"New Application\" Enter the name of your bot (e.g. My First Bot, You can change it later) Click on the Create button 2. Step Fill out your bot information Check your bot name Enter a bot description that describes your bot Choose a cool avatar for your bot. (optional) Click on the Bot page 3. Step Get your bot token On the bot page click on \"Create new Bot\" Click on \"Yes\" if a dialog appears. Copy your bot token. WARNING - KEEP YOUR BOT TOKEN PRIVATE! You should treat your bot token as a password. Do NOT shared your bot token with anyone else! Anyone with your bot token can control your bot. Consider using an external source for your bot token (e.g. environment header, file, etc.). 4. Step Add your bot to a server Go to the OAuth2 page Select the bot scope Adjust bot permissions if wanted Copy the link and paste it in your browser Select a server you want the bot to join Click on Authorize Verify the captcha (if needed) 5. Step Add BOT_TOKEN environment variable You should treat your bot token like a password. Make sure nobody has access to it except yourself. We recommend using environment variables for storing your token: Linux Run the following in your favorite shell or command line; or if you want to store your bot token permanently, open your ~/.bashrc file and add the above line to it. export BOT_TOKEN=<Insert your bot token here> Windows setx BOT_TOKEN <Insert your bot token here> Your bot token should be similar to the following: NzU5MDgxOTg0NjIxODA1Njc4.X24UMA.tdSisrF3eor_i_mh9kakiG4ZpPA Further steps Making your bot private You may want to keep your bot private, then you can un-check the \"Public Bot\" checkbox. This will make your bot private and only the owner can add the bot to other servers. Revoke / Regenerate bot token In the worst case if your bot token gets to publicity you can revoke it when you click \"Regenerate\" . Your old bot token will not be valid anymore (so you have to update your bot token in your code, environment variable, etc.)."
  },
  "articles/getting-started/Project Setup.html": {
    "href": "articles/getting-started/Project Setup.html",
    "title": "Your First Bot | Strade Developer Documentation",
    "keywords": "Your First Bot In this example we will create our first bot step-by-step using Visual Studio. Note that you need at least basic programming skills for developing a bot. Create the project First, we create a new project / solution for the bot. We recommend using .NET Core to allow cross platform compatibility. 1. Step Create new project Open Visual Studio. On the start window, choose Create a new Project . C reate a new solution with clicking on File > New > Project . Search Console-App (.NET Core) and double-click it. 2. Step Configure Project Give your project a cool name (e.g. CoolBotProject ) . Adjust other settings (if needed). Click on Continue . 3. Step Install Strade package Right Click your Project (not the Solution) Click on Manage NuGet-Packages... Search \"Strade\" package Install the latest package version. Done! Now you can start with your first Bot!"
  },
  "articles/getting-started/WebSocket Implementations.html": {
    "href": "articles/getting-started/WebSocket Implementations.html",
    "title": "WebSocket Implementations | Strade Developer Documentation",
    "keywords": "WebSocket Implementations The default WebSocket implementation Strade.WebSockets.Default is supported on .NET Standard >= 2.0. You may want to change the WebSocket implementation due to platform or runtime limitations. Available implementations Strade provides 3 providers out-of-the-box: Strade.WebSockets.Default The default implementation which uses the ClientWebSocket class (which is available since .NET Standard >= 2.0). Strade.WebSockets.WebSocket4Net A WebSocket implementation using the WebSocket4Net Library . Strade.WebSockets.WebSocketSharp A WebSocket implementation using the websocket-sharp Library Using a different provider By default Strade uses the Strade.WebSockets.Default provider for all projects targeting .NET Standard >= 2.0. You can specify the WebSocket provider in the corresponding constructors that depend on WebSockets: /// an own API client. Implementing your own provider If there is no implementation for your needs then you can implement your own by implementing the IWebSocketProvider Interface and the IWebSocket Interface . For reference you can also see already existing implementations: Strade.WebSockets.Default Strade.WebSockets.WebSocket4Net Strade.WebSockets.WebSocketSharp"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Introduction | Strade Developer Documentation",
    "keywords": "Introduction Welcome! This is the documentation for the Strade Bot Library. Please note that you should have some basic knowledge of the language you want to use. Getting Started Before starting with the development of your own Discord Bot, install the library with NuGet or download the DLLs from the releases page . Code Samples Bot Samples A collection of example bots made with the Strade library. Bot Codebase A template repository for quick-start with bot development. Resources C# Programming Guide Strade API Documentation Additional help For additional help, visit our Discord Server:"
  },
  "index.html": {
    "href": "index.html",
    "title": "Strade Documentation | Strade Developer Documentation",
    "keywords": "Strade Documentation Welcome to the Strade Documentation page!"
  }
}